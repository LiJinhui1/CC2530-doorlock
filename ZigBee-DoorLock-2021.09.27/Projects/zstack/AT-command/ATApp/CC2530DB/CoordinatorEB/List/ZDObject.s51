///////////////////////////////////////////////////////////////////////////////
//
// IAR C/C++ Compiler V10.30.1.6000 for 8051              23/Nov/2021  10:55:08
// Copyright 2004-2018 IAR Systems AB.
// PC-locked license - IAR Embedded Workbench for 8051
//
//    Core               =  plain
//    Code model         =  banked
//    Data model         =  large
//    Calling convention =  xdata reentrant
//    Constant location  =  data_rom
//    Dptr setup         =  1,16
//                          
//    Source file        =  
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Components\stack\zdo\ZDObject.c
//    Command line       =  
//        -f C:\Users\ADMINI~1\AppData\Local\Temp\EWD53E.tmp
//        (F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Components\stack\zdo\ZDObject.c
//        -D ZIGBEEPRO -D INTER_PAN -D DISABLE_GREENPOWER_BASIC_PROXY -D
//        HAL_UART=TRUE -D HAL_UART_ISR=1 -D HAL_UART_DMA=0 -D
//        HAL_UART_ISR_RX_MAX=100 -D SECURE=1 -D TC_LINKKEY_JOIN -D NV_INIT -D
//        NV_RESTORE -D xZTOOL_P1 -D xMT_TASK -D xMT_APP_FUNC -D xMT_SYS_FUNC
//        -D xMT_ZDO_FUNC -D xMT_ZDO_MGMT -D xMT_APP_CNF_FUNC -D
//        LEGACY_LCD_DEBUG -D LCD_SUPPORTED=DEBUG -D MULTICAST_ENABLED=FALSE -D
//        ZCL_READ -D ZCL_WRITE -D ZCL_DISCOVER -D ZCL_BASIC -D ZCL_IDENTIFY -D
//        ZCL_SCENES -D ZCL_GROUPS -D ZCL_REPORT_CONFIGURING_DEVICE -D
//        ZCL_REPORT_DESTINATION_DEVICE -lC
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\CoordinatorEB\List
//        -lA
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\CoordinatorEB\List
//        --diag_suppress Pe001,Pa010 -o
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\CoordinatorEB\Obj
//        -e --debug --core=plain --dptr=16,1 --data_model=large
//        --code_model=banked --calling_convention=xdata_reentrant
//        --place_constants=data_rom --nr_virtual_regs 16 -f
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wCoord.cfg
//        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRUE
//        -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8 -DMAC_CFG_RX_MAX=5
//        -DZDO_COORDINATOR -DRTR_NWK) -f
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg
//        (-DZIGBEEPRO -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
//        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0xFFFF
//        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
//        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
//        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
//        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
//        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
//        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
//        -DAPS_MAX_GROUPS=10 -DMAX_RTG_ENTRIES=15 -DNWK_MAX_BINDING_ENTRIES=4
//        -DMAX_BINDING_CLUSTER_IDS=4 -DDEFAULT_KEY={0}
//        -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
//        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE
//        -DPOLL_RATE=300 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100
//        -DREJOIN_POLL_RATE=440 -DREJOIN_BACKOFF=900000 -DREJOIN_SCAN=900000)
//        -f
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cfg
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\Source\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\Source\ZCL\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\Source\UserAPI\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\Source\Controller\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\ZMain\TI2530DB\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\hal\include\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\mac\include\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\mac\high_level\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\mt\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\osal\include\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\services\saddr\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\services\sdata\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\stack\af\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\stack\bdb\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\stack\gp\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\stack\nwk\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\stack\sapi\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\stack\sec\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\stack\sys\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\stack\zcl\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\stack\zdo\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\zmac\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\zmac\f8w\
//        -Ohz --require_prototypes)
//    Locale             =  Chinese (Simplified)_CHN.936
//    List file          =  
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\CoordinatorEB\List\ZDObject.s51
//
///////////////////////////////////////////////////////////////////////////////

        NAME ZDObject

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__register_banks", "*"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?V0
        EXTERN ?V1
        EXTERN ?V2
        EXTERN ?V3
        EXTERN ?V4
        EXTERN ?V6
        EXTERN ?V7
        EXTERN ?V5
        EXTERN ?V8
        EXTERN ?V9
        EXTERN ?V10
        EXTERN ?V11
        EXTERN ?V12
        EXTERN ?V13
        EXTERN ?V14
        EXTERN ?V15
        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?CALL_IND
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?L_MOV_TO_X
        EXTERN ?PUSH_XSTACK8_X_FOUR
        EXTERN ?PUSH_XSTACK8_X_TWO
        EXTERN ?PUSH_XSTACK_I_ONE
        EXTERN ?PUSH_XSTACK_I_THREE
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?S_SHL
        EXTERN ?VB
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN ?XSTACK_DISP100_8
        EXTERN ?XSTACK_DISP101_8
        EXTERN ?XSTACK_DISP102_8
        EXTERN ?XSTORE_R0123
        EXTERN __INIT_XDATA_I
        EXTERN __INIT_XDATA_Z

        PUBLIC `??NLME_PermitJoiningTimeout::?relay`
        FUNCTION `??NLME_PermitJoiningTimeout::?relay`,0203H
        PUBLIC `??ZDMatchSendState::?relay`
        FUNCTION `??ZDMatchSendState::?relay`,0203H
        PUBLIC `??ZDO_AnyClusterMatches::?relay`
        FUNCTION `??ZDO_AnyClusterMatches::?relay`,0203H
        PUBLIC `??ZDO_BuildSimpleDescBuf::?relay`
        FUNCTION `??ZDO_BuildSimpleDescBuf::?relay`,0203H
        FUNCTION `??ZDO_CompareClusterLists::?relay`,0203H
        PUBLIC `??ZDO_ConvertOTAClusters::?relay`
        FUNCTION `??ZDO_ConvertOTAClusters::?relay`,0203H
        FUNCTION `??ZDO_CopyMatchInfo::?relay`,0203H
        FUNCTION `??ZDO_EndDeviceBindMatchTimeoutCB::?relay`,0203H
        PUBLIC `??ZDO_EndDeviceTimeoutCB::?relay`
        FUNCTION `??ZDO_EndDeviceTimeoutCB::?relay`,0203H
        PUBLIC `??ZDO_FinishProcessingMgmtNwkDiscReq::?relay`
        FUNCTION `??ZDO_FinishProcessingMgmtNwkDiscReq::?relay`,0203H
        PUBLIC `??ZDO_Init::?relay`
        FUNCTION `??ZDO_Init::?relay`,0203H
        PUBLIC `??ZDO_MatchEndDeviceBind::?relay`
        FUNCTION `??ZDO_MatchEndDeviceBind::?relay`,0203H
        PUBLIC `??ZDO_ParseAddrRsp::?relay`
        FUNCTION `??ZDO_ParseAddrRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseBindUnbindReq::?relay`
        FUNCTION `??ZDO_ParseBindUnbindReq::?relay`,0203H
        PUBLIC `??ZDO_ParseDeviceAnnce::?relay`
        FUNCTION `??ZDO_ParseDeviceAnnce::?relay`,0203H
        PUBLIC `??ZDO_ParseEPListRsp::?relay`
        FUNCTION `??ZDO_ParseEPListRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseEndDeviceBindReq::?relay`
        FUNCTION `??ZDO_ParseEndDeviceBindReq::?relay`,0203H
        PUBLIC `??ZDO_ParseMgmNwkDiscRsp::?relay`
        FUNCTION `??ZDO_ParseMgmNwkDiscRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseMgmtBindRsp::?relay`
        FUNCTION `??ZDO_ParseMgmtBindRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseMgmtLqiRsp::?relay`
        FUNCTION `??ZDO_ParseMgmtLqiRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseMgmtNwkUpdateNotify::?relay`
        FUNCTION `??ZDO_ParseMgmtNwkUpdateNotify::?relay`,0203H
        PUBLIC `??ZDO_ParseMgmtNwkUpdateReq::?relay`
        FUNCTION `??ZDO_ParseMgmtNwkUpdateReq::?relay`,0203H
        PUBLIC `??ZDO_ParseMgmtRtgRsp::?relay`
        FUNCTION `??ZDO_ParseMgmtRtgRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseNodeDescRsp::?relay`
        FUNCTION `??ZDO_ParseNodeDescRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseParentAnnce::?relay`
        FUNCTION `??ZDO_ParseParentAnnce::?relay`,0203H
        PUBLIC `??ZDO_ParsePowerDescRsp::?relay`
        FUNCTION `??ZDO_ParsePowerDescRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseServerDiscRsp::?relay`
        FUNCTION `??ZDO_ParseServerDiscRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseSimpleDescBuf::?relay`
        FUNCTION `??ZDO_ParseSimpleDescBuf::?relay`,0203H
        PUBLIC `??ZDO_ParseSimpleDescRsp::?relay`
        FUNCTION `??ZDO_ParseSimpleDescRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseUserDescRsp::?relay`
        FUNCTION `??ZDO_ParseUserDescRsp::?relay`,0203H
        PUBLIC `??ZDO_ProcessActiveEPReq::?relay`
        FUNCTION `??ZDO_ProcessActiveEPReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessBindUnbindReq::?relay`
        FUNCTION `??ZDO_ProcessBindUnbindReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessDeviceAnnce::?relay`
        FUNCTION `??ZDO_ProcessDeviceAnnce::?relay`,0203H
        PUBLIC `??ZDO_ProcessMatchDescReq::?relay`
        FUNCTION `??ZDO_ProcessMatchDescReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessMgmtBindReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtBindReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessMgmtDirectJoinReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtDirectJoinReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessMgmtLeaveReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtLeaveReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessMgmtLqiReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtLqiReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessMgmtNwkDiscReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtNwkDiscReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessMgmtPermitJoinReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtPermitJoinReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessMgmtRtgReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtRtgReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessNodeDescReq::?relay`
        FUNCTION `??ZDO_ProcessNodeDescReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessNodeDescRsp::?relay`
        FUNCTION `??ZDO_ProcessNodeDescRsp::?relay`,0203H
        PUBLIC `??ZDO_ProcessParentAnnce::?relay`
        FUNCTION `??ZDO_ProcessParentAnnce::?relay`,0203H
        PUBLIC `??ZDO_ProcessParentAnnceRsp::?relay`
        FUNCTION `??ZDO_ProcessParentAnnceRsp::?relay`,0203H
        PUBLIC `??ZDO_ProcessPowerDescReq::?relay`
        FUNCTION `??ZDO_ProcessPowerDescReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessServerDiscReq::?relay`
        FUNCTION `??ZDO_ProcessServerDiscReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessSimpleDescReq::?relay`
        FUNCTION `??ZDO_ProcessSimpleDescReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessSimpleDescRsp::?relay`
        FUNCTION `??ZDO_ProcessSimpleDescRsp::?relay`,0203H
        PUBLIC `??ZDO_ProcessUserDescReq::?relay`
        FUNCTION `??ZDO_ProcessUserDescReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessUserDescSet::?relay`
        FUNCTION `??ZDO_ProcessUserDescSet::?relay`,0203H
        FUNCTION `??ZDO_RemoveMatchMemory::?relay`,0203H
        PUBLIC `??ZDO_StartDevice::?relay`
        FUNCTION `??ZDO_StartDevice::?relay`,0203H
        PUBLIC `??ZDO_UpdateAddrManager::?relay`
        FUNCTION `??ZDO_UpdateAddrManager::?relay`,0203H
        PUBLIC `??ZDO_UpdateNwkStatus::?relay`
        FUNCTION `??ZDO_UpdateNwkStatus::?relay`,0203H
        FUNCTION `??zdoSendStateChangeMsg::?relay`,0203H
        PUBLIC NLME_PermitJoiningTimeout
        FUNCTION NLME_PermitJoiningTimeout,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC ZDMatchSendState
        FUNCTION ZDMatchSendState,0a1203H
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 45, STACK
        PUBLIC ZDO_AnyClusterMatches
        FUNCTION ZDO_AnyClusterMatches,080203H
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDO_BuildSimpleDescBuf
        FUNCTION ZDO_BuildSimpleDescBuf,080203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        FUNCTION ZDO_CompareClusterLists,080203H
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ConvertOTAClusters
        FUNCTION ZDO_ConvertOTAClusters,080203H
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 10, STACK
        FUNCTION ZDO_CopyMatchInfo,0a1203H
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 21, STACK
        FUNCTION ZDO_EndDeviceBindMatchTimeoutCB,021603H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC ZDO_EndDeviceTimeoutCB
        FUNCTION ZDO_EndDeviceTimeoutCB,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 17, STACK
        PUBLIC ZDO_FinishProcessingMgmtNwkDiscReq
        FUNCTION ZDO_FinishProcessingMgmtNwkDiscReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC ZDO_Init
        FUNCTION ZDO_Init,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC ZDO_MatchEndDeviceBind
        FUNCTION ZDO_MatchEndDeviceBind,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 35, STACK
        PUBLIC ZDO_ParseAddrRsp
        FUNCTION ZDO_ParseAddrRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ParseBindUnbindReq
        FUNCTION ZDO_ParseBindUnbindReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC ZDO_ParseDeviceAnnce
        FUNCTION ZDO_ParseDeviceAnnce,0a1203H
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC ZDO_ParseEPListRsp
        FUNCTION ZDO_ParseEPListRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 19, STACK
        PUBLIC ZDO_ParseEndDeviceBindReq
        FUNCTION ZDO_ParseEndDeviceBindReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBLIC ZDO_ParseMgmNwkDiscRsp
        FUNCTION ZDO_ParseMgmNwkDiscRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ParseMgmtBindRsp
        FUNCTION ZDO_ParseMgmtBindRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBLIC ZDO_ParseMgmtLqiRsp
        FUNCTION ZDO_ParseMgmtLqiRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ParseMgmtNwkUpdateNotify
        FUNCTION ZDO_ParseMgmtNwkUpdateNotify,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 27, STACK
        PUBLIC ZDO_ParseMgmtNwkUpdateReq
        FUNCTION ZDO_ParseMgmtNwkUpdateReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC ZDO_ParseMgmtRtgRsp
        FUNCTION ZDO_ParseMgmtRtgRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ParseNodeDescRsp
        FUNCTION ZDO_ParseNodeDescRsp,080203H
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC ZDO_ParseParentAnnce
        FUNCTION ZDO_ParseParentAnnce,0a1203H
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ParsePowerDescRsp
        FUNCTION ZDO_ParsePowerDescRsp,080203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDO_ParseServerDiscRsp
        FUNCTION ZDO_ParseServerDiscRsp,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC ZDO_ParseSimpleDescBuf
        FUNCTION ZDO_ParseSimpleDescBuf,0a1203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ParseSimpleDescRsp
        FUNCTION ZDO_ParseSimpleDescRsp,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC ZDO_ParseUserDescRsp
        FUNCTION ZDO_ParseUserDescRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 19, STACK
        PUBLIC ZDO_ProcessActiveEPReq
        FUNCTION ZDO_ProcessActiveEPReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        PUBLIC ZDO_ProcessBindUnbindReq
        FUNCTION ZDO_ProcessBindUnbindReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 34, STACK
        PUBLIC ZDO_ProcessDeviceAnnce
        FUNCTION ZDO_ProcessDeviceAnnce,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        PUBLIC ZDO_ProcessMatchDescReq
        FUNCTION ZDO_ProcessMatchDescReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 39, STACK
        PUBLIC ZDO_ProcessMgmtBindReq
        FUNCTION ZDO_ProcessMgmtBindReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        PUBLIC ZDO_ProcessMgmtDirectJoinReq
        FUNCTION ZDO_ProcessMgmtDirectJoinReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ProcessMgmtLeaveReq
        FUNCTION ZDO_ProcessMgmtLeaveReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC ZDO_ProcessMgmtLqiReq
        FUNCTION ZDO_ProcessMgmtLqiReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 66, STACK
        PUBLIC ZDO_ProcessMgmtNwkDiscReq
        FUNCTION ZDO_ProcessMgmtNwkDiscReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 17, STACK
        PUBLIC ZDO_ProcessMgmtPermitJoinReq
        FUNCTION ZDO_ProcessMgmtPermitJoinReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBLIC ZDO_ProcessMgmtRtgReq
        FUNCTION ZDO_ProcessMgmtRtgReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        PUBLIC ZDO_ProcessNodeDescReq
        FUNCTION ZDO_ProcessNodeDescReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ProcessNodeDescRsp
        FUNCTION ZDO_ProcessNodeDescRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        PUBLIC ZDO_ProcessParentAnnce
        FUNCTION ZDO_ProcessParentAnnce,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        PUBLIC ZDO_ProcessParentAnnceRsp
        FUNCTION ZDO_ProcessParentAnnceRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ProcessPowerDescReq
        FUNCTION ZDO_ProcessPowerDescReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ProcessServerDiscReq
        FUNCTION ZDO_ProcessServerDiscReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ProcessSimpleDescReq
        FUNCTION ZDO_ProcessSimpleDescReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDO_ProcessSimpleDescRsp
        FUNCTION ZDO_ProcessSimpleDescRsp,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC ZDO_ProcessUserDescReq
        FUNCTION ZDO_ProcessUserDescReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        PUBLIC ZDO_ProcessUserDescSet
        FUNCTION ZDO_ProcessUserDescSet,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 41, STACK
        FUNCTION ZDO_RemoveMatchMemory,021203H
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        PUBLIC ZDO_StartDevice
        FUNCTION ZDO_StartDevice,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        PUBLIC ZDO_UpdateAddrManager
        FUNCTION ZDO_UpdateAddrManager,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 13, STACK
        PUBLIC ZDO_UpdateNwkStatus
        FUNCTION ZDO_UpdateNwkStatus,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBWEAK __Constant_3e8
        PUBLIC apsChannelMask
        PUBLIC matchED
        FUNCTION zdoSendStateChangeMsg,0a1203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC zdpExternalStateTaskID
        
          CFI Names cfiNames0
          CFI StackFrame CFA_SP SP IDATA
          CFI StackFrame CFA_PSP16 PSP16 XDATA
          CFI StackFrame CFA_XSP16 XSP16 XDATA
          CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
          CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
          CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
          CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
          CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
          CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
          CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
          CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
          CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
          CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
          CFI VirtualResource ?RET:24
          CFI Resource ?BRET_EXT:8
          CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
          CFI ResourceParts PSP16 PSPH, PSPL
          CFI ResourceParts XSP16 XSPH, XSPL
          CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-3
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B Undefined
          CFI A Undefined
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 Undefined
          CFI R5 Undefined
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon0
        
        
          CFI Common cfiCommon1 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-2
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B SameValue
          CFI A SameValue
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 SameValue
          CFI R1 SameValue
          CFI R2 SameValue
          CFI R3 SameValue
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT SameValue
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon1
        
APSME_BindRequest   SYMBOL "APSME_BindRequest"
`??APSME_BindRequest::?relay` SYMBOL "?relay", APSME_BindRequest
APSME_GetRequest    SYMBOL "APSME_GetRequest"
`??APSME_GetRequest::?relay` SYMBOL "?relay", APSME_GetRequest
APSME_IsDistributedSecurity SYMBOL "APSME_IsDistributedSecurity"
`??APSME_IsDistributedSecurity::?relay` SYMBOL "?relay", APSME_IsDistributedSecurity
APSME_LookupNwkAddr SYMBOL "APSME_LookupNwkAddr"
`??APSME_LookupNwkAddr::?relay` SYMBOL "?relay", APSME_LookupNwkAddr
APSME_UnBindRequest SYMBOL "APSME_UnBindRequest"
`??APSME_UnBindRequest::?relay` SYMBOL "?relay", APSME_UnBindRequest
APS_ReflectorInit   SYMBOL "APS_ReflectorInit"
`??APS_ReflectorInit::?relay` SYMBOL "?relay", APS_ReflectorInit
APS_SetEndDeviceBindTimeout SYMBOL "APS_SetEndDeviceBindTimeout"
`??APS_SetEndDeviceBindTimeout::?relay` SYMBOL "?relay", APS_SetEndDeviceBindTimeout
AddrMgrEntryLookupExt SYMBOL "AddrMgrEntryLookupExt"
`??AddrMgrEntryLookupExt::?relay` SYMBOL "?relay", AddrMgrEntryLookupExt
AddrMgrEntryLookupNwk SYMBOL "AddrMgrEntryLookupNwk"
`??AddrMgrEntryLookupNwk::?relay` SYMBOL "?relay", AddrMgrEntryLookupNwk
AddrMgrEntryUpdate  SYMBOL "AddrMgrEntryUpdate"
`??AddrMgrEntryUpdate::?relay` SYMBOL "?relay", AddrMgrEntryUpdate
AddrMgrExtAddrSet   SYMBOL "AddrMgrExtAddrSet"
`??AddrMgrExtAddrSet::?relay` SYMBOL "?relay", AddrMgrExtAddrSet
AddrMgrExtAddrValid SYMBOL "AddrMgrExtAddrValid"
`??AddrMgrExtAddrValid::?relay` SYMBOL "?relay", AddrMgrExtAddrValid
AssocCount          SYMBOL "AssocCount"
`??AssocCount::?relay` SYMBOL "?relay", AssocCount
AssocFindDevice     SYMBOL "AssocFindDevice"
`??AssocFindDevice::?relay` SYMBOL "?relay", AssocFindDevice
AssocGetWithExt     SYMBOL "AssocGetWithExt"
`??AssocGetWithExt::?relay` SYMBOL "?relay", AssocGetWithExt
AssocIsChild        SYMBOL "AssocIsChild"
`??AssocIsChild::?relay` SYMBOL "?relay", AssocIsChild
AssocRemove         SYMBOL "AssocRemove"
`??AssocRemove::?relay` SYMBOL "?relay", AssocRemove
HalLcdWriteScreen   SYMBOL "HalLcdWriteScreen"
`??HalLcdWriteScreen::?relay` SYMBOL "?relay", HalLcdWriteScreen
HalLcdWriteString   SYMBOL "HalLcdWriteString"
`??HalLcdWriteString::?relay` SYMBOL "?relay", HalLcdWriteString
NLME_CheckNewAddrSet SYMBOL "NLME_CheckNewAddrSet"
`??NLME_CheckNewAddrSet::?relay` SYMBOL "?relay", NLME_CheckNewAddrSet
NLME_CoordinatorInit SYMBOL "NLME_CoordinatorInit"
`??NLME_CoordinatorInit::?relay` SYMBOL "?relay", NLME_CoordinatorInit
NLME_DirectJoinRequest SYMBOL "NLME_DirectJoinRequest"
`??NLME_DirectJoinRequest::?relay` SYMBOL "?relay", NLME_DirectJoinRequest
NLME_GetCoordExtAddr SYMBOL "NLME_GetCoordExtAddr"
`??NLME_GetCoordExtAddr::?relay` SYMBOL "?relay", NLME_GetCoordExtAddr
NLME_GetCoordShortAddr SYMBOL "NLME_GetCoordShortAddr"
`??NLME_GetCoordShortAddr::?relay` SYMBOL "?relay", NLME_GetCoordShortAddr
NLME_GetExtAddr     SYMBOL "NLME_GetExtAddr"
`??NLME_GetExtAddr::?relay` SYMBOL "?relay", NLME_GetExtAddr
NLME_GetProtocolVersion SYMBOL "NLME_GetProtocolVersion"
`??NLME_GetProtocolVersion::?relay` SYMBOL "?relay", NLME_GetProtocolVersion
NLME_GetRequest     SYMBOL "NLME_GetRequest"
`??NLME_GetRequest::?relay` SYMBOL "?relay", NLME_GetRequest
NLME_GetShortAddr   SYMBOL "NLME_GetShortAddr"
`??NLME_GetShortAddr::?relay` SYMBOL "?relay", NLME_GetShortAddr
NLME_IsAddressBroadcast SYMBOL "NLME_IsAddressBroadcast"
`??NLME_IsAddressBroadcast::?relay` SYMBOL "?relay", NLME_IsAddressBroadcast
NLME_LeaveReq       SYMBOL "NLME_LeaveReq"
`??NLME_LeaveReq::?relay` SYMBOL "?relay", NLME_LeaveReq
NLME_NetworkFormationRequest SYMBOL "NLME_NetworkFormationRequest"
`??NLME_NetworkFormationRequest::?relay` SYMBOL "?relay", NLME_NetworkFormationRequest
NLME_NwkDiscReq2    SYMBOL "NLME_NwkDiscReq2"
`??NLME_NwkDiscReq2::?relay` SYMBOL "?relay", NLME_NwkDiscReq2
NLME_NwkDiscTerm    SYMBOL "NLME_NwkDiscTerm"
`??NLME_NwkDiscTerm::?relay` SYMBOL "?relay", NLME_NwkDiscTerm
NLME_PermitJoiningRequest SYMBOL "NLME_PermitJoiningRequest"
`??NLME_PermitJoiningRequest::?relay` SYMBOL "?relay", NLME_PermitJoiningRequest
NLME_StartRouterRequest SYMBOL "NLME_StartRouterRequest"
`??NLME_StartRouterRequest::?relay` SYMBOL "?relay", NLME_StartRouterRequest
RTG_RemoveRtgEntry  SYMBOL "RTG_RemoveRtgEntry"
`??RTG_RemoveRtgEntry::?relay` SYMBOL "?relay", RTG_RemoveRtgEntry
ZDApp_ChangeState   SYMBOL "ZDApp_ChangeState"
`??ZDApp_ChangeState::?relay` SYMBOL "?relay", ZDApp_ChangeState
ZDApp_NVUpdate      SYMBOL "ZDApp_NVUpdate"
`??ZDApp_NVUpdate::?relay` SYMBOL "?relay", ZDApp_NVUpdate
ZDP_BindUnbindReq   SYMBOL "ZDP_BindUnbindReq"
`??ZDP_BindUnbindReq::?relay` SYMBOL "?relay", ZDP_BindUnbindReq
ZDP_EPRsp           SYMBOL "ZDP_EPRsp"
`??ZDP_EPRsp::?relay` SYMBOL "?relay", ZDP_EPRsp
ZDP_GenericRsp      SYMBOL "ZDP_GenericRsp"
`??ZDP_GenericRsp::?relay` SYMBOL "?relay", ZDP_GenericRsp
ZDP_MgmtBindRsp     SYMBOL "ZDP_MgmtBindRsp"
`??ZDP_MgmtBindRsp::?relay` SYMBOL "?relay", ZDP_MgmtBindRsp
ZDP_MgmtLqiRsp      SYMBOL "ZDP_MgmtLqiRsp"
`??ZDP_MgmtLqiRsp::?relay` SYMBOL "?relay", ZDP_MgmtLqiRsp
ZDP_MgmtNwkDiscRsp  SYMBOL "ZDP_MgmtNwkDiscRsp"
`??ZDP_MgmtNwkDiscRsp::?relay` SYMBOL "?relay", ZDP_MgmtNwkDiscRsp
ZDP_MgmtRtgRsp      SYMBOL "ZDP_MgmtRtgRsp"
`??ZDP_MgmtRtgRsp::?relay` SYMBOL "?relay", ZDP_MgmtRtgRsp
ZDP_NodeDescMsg     SYMBOL "ZDP_NodeDescMsg"
`??ZDP_NodeDescMsg::?relay` SYMBOL "?relay", ZDP_NodeDescMsg
ZDP_NwkAddrReq      SYMBOL "ZDP_NwkAddrReq"
`??ZDP_NwkAddrReq::?relay` SYMBOL "?relay", ZDP_NwkAddrReq
ZDP_ParentAnnce     SYMBOL "ZDP_ParentAnnce"
`??ZDP_ParentAnnce::?relay` SYMBOL "?relay", ZDP_ParentAnnce
ZDP_PowerDescMsg    SYMBOL "ZDP_PowerDescMsg"
`??ZDP_PowerDescMsg::?relay` SYMBOL "?relay", ZDP_PowerDescMsg
ZDP_SendData        SYMBOL "ZDP_SendData"
`??ZDP_SendData::?relay` SYMBOL "?relay", ZDP_SendData
ZDP_ServerDiscRsp   SYMBOL "ZDP_ServerDiscRsp"
`??ZDP_ServerDiscRsp::?relay` SYMBOL "?relay", ZDP_ServerDiscRsp
ZDP_SimpleDescMsg   SYMBOL "ZDP_SimpleDescMsg"
`??ZDP_SimpleDescMsg::?relay` SYMBOL "?relay", ZDP_SimpleDescMsg
ZDP_UserDescRsp     SYMBOL "ZDP_UserDescRsp"
`??ZDP_UserDescRsp::?relay` SYMBOL "?relay", ZDP_UserDescRsp
ZDSecMgrPermitJoining SYMBOL "ZDSecMgrPermitJoining"
`??ZDSecMgrPermitJoining::?relay` SYMBOL "?relay", ZDSecMgrPermitJoining
ZDSecMgrPermitJoiningTimeout SYMBOL "ZDSecMgrPermitJoiningTimeout"
`??ZDSecMgrPermitJoiningTimeout::?relay` SYMBOL "?relay", ZDSecMgrPermitJoiningTimeout
ZMacGetReq          SYMBOL "ZMacGetReq"
`??ZMacGetReq::?relay` SYMBOL "?relay", ZMacGetReq
ZMacSetReq          SYMBOL "ZMacSetReq"
`??ZMacSetReq::?relay` SYMBOL "?relay", ZMacSetReq
afEndPoints         SYMBOL "afEndPoints"
`??afEndPoints::?relay` SYMBOL "?relay", afEndPoints
afFindSimpleDesc    SYMBOL "afFindSimpleDesc"
`??afFindSimpleDesc::?relay` SYMBOL "?relay", afFindSimpleDesc
afNumEndPoints      SYMBOL "afNumEndPoints"
`??afNumEndPoints::?relay` SYMBOL "?relay", afNumEndPoints
bdb_setFN           SYMBOL "bdb_setFN"
`??bdb_setFN::?relay` SYMBOL "?relay", bdb_setFN
nwkNeighborRemove   SYMBOL "nwkNeighborRemove"
`??nwkNeighborRemove::?relay` SYMBOL "?relay", nwkNeighborRemove
nwkNeighborRemoveAllStranded SYMBOL "nwkNeighborRemoveAllStranded"
`??nwkNeighborRemoveAllStranded::?relay` SYMBOL "?relay", nwkNeighborRemoveAllStranded
nwk_getNwkDescList  SYMBOL "nwk_getNwkDescList"
`??nwk_getNwkDescList::?relay` SYMBOL "?relay", nwk_getNwkDescList
osal_build_uint32   SYMBOL "osal_build_uint32"
`??osal_build_uint32::?relay` SYMBOL "?relay", osal_build_uint32
osal_mem_alloc      SYMBOL "osal_mem_alloc"
`??osal_mem_alloc::?relay` SYMBOL "?relay", osal_mem_alloc
osal_mem_free       SYMBOL "osal_mem_free"
`??osal_mem_free::?relay` SYMBOL "?relay", osal_mem_free
osal_memcpy         SYMBOL "osal_memcpy"
`??osal_memcpy::?relay` SYMBOL "?relay", osal_memcpy
osal_memset         SYMBOL "osal_memset"
`??osal_memset::?relay` SYMBOL "?relay", osal_memset
osal_msg_allocate   SYMBOL "osal_msg_allocate"
`??osal_msg_allocate::?relay` SYMBOL "?relay", osal_msg_allocate
osal_msg_find       SYMBOL "osal_msg_find"
`??osal_msg_find::?relay` SYMBOL "?relay", osal_msg_find
osal_msg_send       SYMBOL "osal_msg_send"
`??osal_msg_send::?relay` SYMBOL "?relay", osal_msg_send
osal_nv_read        SYMBOL "osal_nv_read"
`??osal_nv_read::?relay` SYMBOL "?relay", osal_nv_read
osal_nv_write       SYMBOL "osal_nv_write"
`??osal_nv_write::?relay` SYMBOL "?relay", osal_nv_write
osal_set_event      SYMBOL "osal_set_event"
`??osal_set_event::?relay` SYMBOL "?relay", osal_set_event
osal_start_timerEx  SYMBOL "osal_start_timerEx"
`??osal_start_timerEx::?relay` SYMBOL "?relay", osal_start_timerEx
printf              SYMBOL "printf"
`??printf::?relay`  SYMBOL "?relay", printf
sAddrExtCmp         SYMBOL "sAddrExtCmp"
`??sAddrExtCmp::?relay` SYMBOL "?relay", sAddrExtCmp
sAddrExtCpy         SYMBOL "sAddrExtCpy"
`??sAddrExtCpy::?relay` SYMBOL "?relay", sAddrExtCpy
NLME_PermitJoiningTimeout SYMBOL "NLME_PermitJoiningTimeout"
`??NLME_PermitJoiningTimeout::?relay` SYMBOL "?relay", NLME_PermitJoiningTimeout
ZDMatchSendState    SYMBOL "ZDMatchSendState"
`??ZDMatchSendState::?relay` SYMBOL "?relay", ZDMatchSendState
ZDO_AnyClusterMatches SYMBOL "ZDO_AnyClusterMatches"
`??ZDO_AnyClusterMatches::?relay` SYMBOL "?relay", ZDO_AnyClusterMatches
ZDO_BuildSimpleDescBuf SYMBOL "ZDO_BuildSimpleDescBuf"
`??ZDO_BuildSimpleDescBuf::?relay` SYMBOL "?relay", ZDO_BuildSimpleDescBuf
ZDO_ConvertOTAClusters SYMBOL "ZDO_ConvertOTAClusters"
`??ZDO_ConvertOTAClusters::?relay` SYMBOL "?relay", ZDO_ConvertOTAClusters
ZDO_EndDeviceTimeoutCB SYMBOL "ZDO_EndDeviceTimeoutCB"
`??ZDO_EndDeviceTimeoutCB::?relay` SYMBOL "?relay", ZDO_EndDeviceTimeoutCB
ZDO_FinishProcessingMgmtNwkDiscReq SYMBOL "ZDO_FinishProcessingMgmtNwkDiscReq"
`??ZDO_FinishProcessingMgmtNwkDiscReq::?relay` SYMBOL "?relay", ZDO_FinishProcessingMgmtNwkDiscReq
ZDO_Init            SYMBOL "ZDO_Init"
`??ZDO_Init::?relay` SYMBOL "?relay", ZDO_Init
ZDO_MatchEndDeviceBind SYMBOL "ZDO_MatchEndDeviceBind"
`??ZDO_MatchEndDeviceBind::?relay` SYMBOL "?relay", ZDO_MatchEndDeviceBind
ZDO_ParseAddrRsp    SYMBOL "ZDO_ParseAddrRsp"
`??ZDO_ParseAddrRsp::?relay` SYMBOL "?relay", ZDO_ParseAddrRsp
ZDO_ParseBindUnbindReq SYMBOL "ZDO_ParseBindUnbindReq"
`??ZDO_ParseBindUnbindReq::?relay` SYMBOL "?relay", ZDO_ParseBindUnbindReq
ZDO_ParseDeviceAnnce SYMBOL "ZDO_ParseDeviceAnnce"
`??ZDO_ParseDeviceAnnce::?relay` SYMBOL "?relay", ZDO_ParseDeviceAnnce
ZDO_ParseEPListRsp  SYMBOL "ZDO_ParseEPListRsp"
`??ZDO_ParseEPListRsp::?relay` SYMBOL "?relay", ZDO_ParseEPListRsp
ZDO_ParseEndDeviceBindReq SYMBOL "ZDO_ParseEndDeviceBindReq"
`??ZDO_ParseEndDeviceBindReq::?relay` SYMBOL "?relay", ZDO_ParseEndDeviceBindReq
ZDO_ParseMgmNwkDiscRsp SYMBOL "ZDO_ParseMgmNwkDiscRsp"
`??ZDO_ParseMgmNwkDiscRsp::?relay` SYMBOL "?relay", ZDO_ParseMgmNwkDiscRsp
ZDO_ParseMgmtBindRsp SYMBOL "ZDO_ParseMgmtBindRsp"
`??ZDO_ParseMgmtBindRsp::?relay` SYMBOL "?relay", ZDO_ParseMgmtBindRsp
ZDO_ParseMgmtLqiRsp SYMBOL "ZDO_ParseMgmtLqiRsp"
`??ZDO_ParseMgmtLqiRsp::?relay` SYMBOL "?relay", ZDO_ParseMgmtLqiRsp
ZDO_ParseMgmtNwkUpdateNotify SYMBOL "ZDO_ParseMgmtNwkUpdateNotify"
`??ZDO_ParseMgmtNwkUpdateNotify::?relay` SYMBOL "?relay", ZDO_ParseMgmtNwkUpdateNotify
ZDO_ParseMgmtNwkUpdateReq SYMBOL "ZDO_ParseMgmtNwkUpdateReq"
`??ZDO_ParseMgmtNwkUpdateReq::?relay` SYMBOL "?relay", ZDO_ParseMgmtNwkUpdateReq
ZDO_ParseMgmtRtgRsp SYMBOL "ZDO_ParseMgmtRtgRsp"
`??ZDO_ParseMgmtRtgRsp::?relay` SYMBOL "?relay", ZDO_ParseMgmtRtgRsp
ZDO_ParseNodeDescRsp SYMBOL "ZDO_ParseNodeDescRsp"
`??ZDO_ParseNodeDescRsp::?relay` SYMBOL "?relay", ZDO_ParseNodeDescRsp
ZDO_ParseParentAnnce SYMBOL "ZDO_ParseParentAnnce"
`??ZDO_ParseParentAnnce::?relay` SYMBOL "?relay", ZDO_ParseParentAnnce
ZDO_ParsePowerDescRsp SYMBOL "ZDO_ParsePowerDescRsp"
`??ZDO_ParsePowerDescRsp::?relay` SYMBOL "?relay", ZDO_ParsePowerDescRsp
ZDO_ParseServerDiscRsp SYMBOL "ZDO_ParseServerDiscRsp"
`??ZDO_ParseServerDiscRsp::?relay` SYMBOL "?relay", ZDO_ParseServerDiscRsp
ZDO_ParseSimpleDescBuf SYMBOL "ZDO_ParseSimpleDescBuf"
`??ZDO_ParseSimpleDescBuf::?relay` SYMBOL "?relay", ZDO_ParseSimpleDescBuf
ZDO_ParseSimpleDescRsp SYMBOL "ZDO_ParseSimpleDescRsp"
`??ZDO_ParseSimpleDescRsp::?relay` SYMBOL "?relay", ZDO_ParseSimpleDescRsp
ZDO_ParseUserDescRsp SYMBOL "ZDO_ParseUserDescRsp"
`??ZDO_ParseUserDescRsp::?relay` SYMBOL "?relay", ZDO_ParseUserDescRsp
ZDO_ProcessActiveEPReq SYMBOL "ZDO_ProcessActiveEPReq"
`??ZDO_ProcessActiveEPReq::?relay` SYMBOL "?relay", ZDO_ProcessActiveEPReq
ZDO_ProcessBindUnbindReq SYMBOL "ZDO_ProcessBindUnbindReq"
`??ZDO_ProcessBindUnbindReq::?relay` SYMBOL "?relay", ZDO_ProcessBindUnbindReq
ZDO_ProcessDeviceAnnce SYMBOL "ZDO_ProcessDeviceAnnce"
`??ZDO_ProcessDeviceAnnce::?relay` SYMBOL "?relay", ZDO_ProcessDeviceAnnce
ZDO_ProcessMatchDescReq SYMBOL "ZDO_ProcessMatchDescReq"
`??ZDO_ProcessMatchDescReq::?relay` SYMBOL "?relay", ZDO_ProcessMatchDescReq
ZDO_ProcessMgmtBindReq SYMBOL "ZDO_ProcessMgmtBindReq"
`??ZDO_ProcessMgmtBindReq::?relay` SYMBOL "?relay", ZDO_ProcessMgmtBindReq
ZDO_ProcessMgmtDirectJoinReq SYMBOL "ZDO_ProcessMgmtDirectJoinReq"
`??ZDO_ProcessMgmtDirectJoinReq::?relay` SYMBOL "?relay", ZDO_ProcessMgmtDirectJoinReq
ZDO_ProcessMgmtLeaveReq SYMBOL "ZDO_ProcessMgmtLeaveReq"
`??ZDO_ProcessMgmtLeaveReq::?relay` SYMBOL "?relay", ZDO_ProcessMgmtLeaveReq
ZDO_ProcessMgmtLqiReq SYMBOL "ZDO_ProcessMgmtLqiReq"
`??ZDO_ProcessMgmtLqiReq::?relay` SYMBOL "?relay", ZDO_ProcessMgmtLqiReq
ZDO_ProcessMgmtNwkDiscReq SYMBOL "ZDO_ProcessMgmtNwkDiscReq"
`??ZDO_ProcessMgmtNwkDiscReq::?relay` SYMBOL "?relay", ZDO_ProcessMgmtNwkDiscReq
ZDO_ProcessMgmtPermitJoinReq SYMBOL "ZDO_ProcessMgmtPermitJoinReq"
`??ZDO_ProcessMgmtPermitJoinReq::?relay` SYMBOL "?relay", ZDO_ProcessMgmtPermitJoinReq
ZDO_ProcessMgmtRtgReq SYMBOL "ZDO_ProcessMgmtRtgReq"
`??ZDO_ProcessMgmtRtgReq::?relay` SYMBOL "?relay", ZDO_ProcessMgmtRtgReq
ZDO_ProcessNodeDescReq SYMBOL "ZDO_ProcessNodeDescReq"
`??ZDO_ProcessNodeDescReq::?relay` SYMBOL "?relay", ZDO_ProcessNodeDescReq
ZDO_ProcessNodeDescRsp SYMBOL "ZDO_ProcessNodeDescRsp"
`??ZDO_ProcessNodeDescRsp::?relay` SYMBOL "?relay", ZDO_ProcessNodeDescRsp
ZDO_ProcessParentAnnce SYMBOL "ZDO_ProcessParentAnnce"
`??ZDO_ProcessParentAnnce::?relay` SYMBOL "?relay", ZDO_ProcessParentAnnce
ZDO_ProcessParentAnnceRsp SYMBOL "ZDO_ProcessParentAnnceRsp"
`??ZDO_ProcessParentAnnceRsp::?relay` SYMBOL "?relay", ZDO_ProcessParentAnnceRsp
ZDO_ProcessPowerDescReq SYMBOL "ZDO_ProcessPowerDescReq"
`??ZDO_ProcessPowerDescReq::?relay` SYMBOL "?relay", ZDO_ProcessPowerDescReq
ZDO_ProcessServerDiscReq SYMBOL "ZDO_ProcessServerDiscReq"
`??ZDO_ProcessServerDiscReq::?relay` SYMBOL "?relay", ZDO_ProcessServerDiscReq
ZDO_ProcessSimpleDescReq SYMBOL "ZDO_ProcessSimpleDescReq"
`??ZDO_ProcessSimpleDescReq::?relay` SYMBOL "?relay", ZDO_ProcessSimpleDescReq
ZDO_ProcessSimpleDescRsp SYMBOL "ZDO_ProcessSimpleDescRsp"
`??ZDO_ProcessSimpleDescRsp::?relay` SYMBOL "?relay", ZDO_ProcessSimpleDescRsp
ZDO_ProcessUserDescReq SYMBOL "ZDO_ProcessUserDescReq"
`??ZDO_ProcessUserDescReq::?relay` SYMBOL "?relay", ZDO_ProcessUserDescReq
ZDO_ProcessUserDescSet SYMBOL "ZDO_ProcessUserDescSet"
`??ZDO_ProcessUserDescSet::?relay` SYMBOL "?relay", ZDO_ProcessUserDescSet
ZDO_StartDevice     SYMBOL "ZDO_StartDevice"
`??ZDO_StartDevice::?relay` SYMBOL "?relay", ZDO_StartDevice
ZDO_UpdateAddrManager SYMBOL "ZDO_UpdateAddrManager"
`??ZDO_UpdateAddrManager::?relay` SYMBOL "?relay", ZDO_UpdateAddrManager
ZDO_UpdateNwkStatus SYMBOL "ZDO_UpdateNwkStatus"
`??ZDO_UpdateNwkStatus::?relay` SYMBOL "?relay", ZDO_UpdateNwkStatus

        EXTERN `??APSME_BindRequest::?relay`
        FUNCTION `??APSME_BindRequest::?relay`,00H
        EXTERN `??APSME_GetRequest::?relay`
        FUNCTION `??APSME_GetRequest::?relay`,00H
        EXTERN `??APSME_IsDistributedSecurity::?relay`
        FUNCTION `??APSME_IsDistributedSecurity::?relay`,00H
        EXTERN `??APSME_LookupNwkAddr::?relay`
        FUNCTION `??APSME_LookupNwkAddr::?relay`,00H
        EXTERN `??APSME_UnBindRequest::?relay`
        FUNCTION `??APSME_UnBindRequest::?relay`,00H
        EXTERN `??APS_ReflectorInit::?relay`
        FUNCTION `??APS_ReflectorInit::?relay`,00H
        EXTERN `??APS_SetEndDeviceBindTimeout::?relay`
        FUNCTION `??APS_SetEndDeviceBindTimeout::?relay`,00H
        EXTERN `??AddrMgrEntryLookupExt::?relay`
        FUNCTION `??AddrMgrEntryLookupExt::?relay`,00H
        EXTERN `??AddrMgrEntryLookupNwk::?relay`
        FUNCTION `??AddrMgrEntryLookupNwk::?relay`,00H
        EXTERN `??AddrMgrEntryUpdate::?relay`
        FUNCTION `??AddrMgrEntryUpdate::?relay`,00H
        EXTERN `??AddrMgrExtAddrSet::?relay`
        FUNCTION `??AddrMgrExtAddrSet::?relay`,00H
        EXTERN `??AddrMgrExtAddrValid::?relay`
        FUNCTION `??AddrMgrExtAddrValid::?relay`,00H
        EXTERN `??AssocCount::?relay`
        FUNCTION `??AssocCount::?relay`,00H
        EXTERN `??AssocFindDevice::?relay`
        FUNCTION `??AssocFindDevice::?relay`,00H
        EXTERN `??AssocGetWithExt::?relay`
        FUNCTION `??AssocGetWithExt::?relay`,00H
        EXTERN `??AssocIsChild::?relay`
        FUNCTION `??AssocIsChild::?relay`,00H
        EXTERN `??AssocRemove::?relay`
        FUNCTION `??AssocRemove::?relay`,00H
        EXTERN `??HalLcdWriteScreen::?relay`
        FUNCTION `??HalLcdWriteScreen::?relay`,00H
        EXTERN `??HalLcdWriteString::?relay`
        FUNCTION `??HalLcdWriteString::?relay`,00H
        EXTERN `??NLME_CheckNewAddrSet::?relay`
        FUNCTION `??NLME_CheckNewAddrSet::?relay`,00H
        EXTERN `??NLME_CoordinatorInit::?relay`
        FUNCTION `??NLME_CoordinatorInit::?relay`,00H
        EXTERN `??NLME_DirectJoinRequest::?relay`
        FUNCTION `??NLME_DirectJoinRequest::?relay`,00H
        EXTERN `??NLME_GetCoordExtAddr::?relay`
        FUNCTION `??NLME_GetCoordExtAddr::?relay`,00H
        EXTERN `??NLME_GetCoordShortAddr::?relay`
        FUNCTION `??NLME_GetCoordShortAddr::?relay`,00H
        EXTERN `??NLME_GetExtAddr::?relay`
        FUNCTION `??NLME_GetExtAddr::?relay`,00H
        EXTERN `??NLME_GetProtocolVersion::?relay`
        FUNCTION `??NLME_GetProtocolVersion::?relay`,00H
        EXTERN `??NLME_GetRequest::?relay`
        FUNCTION `??NLME_GetRequest::?relay`,00H
        EXTERN `??NLME_GetShortAddr::?relay`
        FUNCTION `??NLME_GetShortAddr::?relay`,00H
        EXTERN `??NLME_IsAddressBroadcast::?relay`
        FUNCTION `??NLME_IsAddressBroadcast::?relay`,00H
        EXTERN `??NLME_LeaveReq::?relay`
        FUNCTION `??NLME_LeaveReq::?relay`,00H
        EXTERN `??NLME_NetworkFormationRequest::?relay`
        FUNCTION `??NLME_NetworkFormationRequest::?relay`,00H
        EXTERN `??NLME_NwkDiscReq2::?relay`
        FUNCTION `??NLME_NwkDiscReq2::?relay`,00H
        EXTERN `??NLME_NwkDiscTerm::?relay`
        FUNCTION `??NLME_NwkDiscTerm::?relay`,00H
        EXTERN `??NLME_PermitJoiningRequest::?relay`
        FUNCTION `??NLME_PermitJoiningRequest::?relay`,00H
        EXTERN `??NLME_StartRouterRequest::?relay`
        FUNCTION `??NLME_StartRouterRequest::?relay`,00H
        EXTERN `??RTG_RemoveRtgEntry::?relay`
        FUNCTION `??RTG_RemoveRtgEntry::?relay`,00H
        EXTERN `??ZDApp_ChangeState::?relay`
        FUNCTION `??ZDApp_ChangeState::?relay`,00H
        EXTERN `??ZDApp_NVUpdate::?relay`
        FUNCTION `??ZDApp_NVUpdate::?relay`,00H
        EXTERN `??ZDP_BindUnbindReq::?relay`
        FUNCTION `??ZDP_BindUnbindReq::?relay`,00H
        EXTERN `??ZDP_EPRsp::?relay`
        FUNCTION `??ZDP_EPRsp::?relay`,00H
        EXTERN `??ZDP_GenericRsp::?relay`
        FUNCTION `??ZDP_GenericRsp::?relay`,00H
        EXTERN `??ZDP_MgmtBindRsp::?relay`
        FUNCTION `??ZDP_MgmtBindRsp::?relay`,00H
        EXTERN `??ZDP_MgmtLqiRsp::?relay`
        FUNCTION `??ZDP_MgmtLqiRsp::?relay`,00H
        EXTERN `??ZDP_MgmtNwkDiscRsp::?relay`
        FUNCTION `??ZDP_MgmtNwkDiscRsp::?relay`,00H
        EXTERN `??ZDP_MgmtRtgRsp::?relay`
        FUNCTION `??ZDP_MgmtRtgRsp::?relay`,00H
        EXTERN `??ZDP_NodeDescMsg::?relay`
        FUNCTION `??ZDP_NodeDescMsg::?relay`,00H
        EXTERN `??ZDP_NwkAddrReq::?relay`
        FUNCTION `??ZDP_NwkAddrReq::?relay`,00H
        EXTERN `??ZDP_ParentAnnce::?relay`
        FUNCTION `??ZDP_ParentAnnce::?relay`,00H
        EXTERN `??ZDP_PowerDescMsg::?relay`
        FUNCTION `??ZDP_PowerDescMsg::?relay`,00H
        EXTERN `??ZDP_SendData::?relay`
        FUNCTION `??ZDP_SendData::?relay`,00H
        EXTERN `??ZDP_ServerDiscRsp::?relay`
        FUNCTION `??ZDP_ServerDiscRsp::?relay`,00H
        EXTERN `??ZDP_SimpleDescMsg::?relay`
        FUNCTION `??ZDP_SimpleDescMsg::?relay`,00H
        EXTERN `??ZDP_UserDescRsp::?relay`
        FUNCTION `??ZDP_UserDescRsp::?relay`,00H
        EXTERN `??ZDSecMgrPermitJoining::?relay`
        FUNCTION `??ZDSecMgrPermitJoining::?relay`,00H
        EXTERN `??ZDSecMgrPermitJoiningTimeout::?relay`
        FUNCTION `??ZDSecMgrPermitJoiningTimeout::?relay`,00H
        EXTERN `??ZMacGetReq::?relay`
        FUNCTION `??ZMacGetReq::?relay`,00H
        EXTERN `??ZMacSetReq::?relay`
        FUNCTION `??ZMacSetReq::?relay`,00H
        EXTERN `??afEndPoints::?relay`
        FUNCTION `??afEndPoints::?relay`,00H
        EXTERN `??afFindSimpleDesc::?relay`
        FUNCTION `??afFindSimpleDesc::?relay`,00H
        EXTERN `??afNumEndPoints::?relay`
        FUNCTION `??afNumEndPoints::?relay`,00H
        EXTERN `??bdb_setFN::?relay`
        FUNCTION `??bdb_setFN::?relay`,00H
        EXTERN `??nwkNeighborRemove::?relay`
        FUNCTION `??nwkNeighborRemove::?relay`,00H
        EXTERN `??nwkNeighborRemoveAllStranded::?relay`
        FUNCTION `??nwkNeighborRemoveAllStranded::?relay`,00H
        EXTERN `??nwk_getNwkDescList::?relay`
        FUNCTION `??nwk_getNwkDescList::?relay`,00H
        EXTERN `??osal_build_uint32::?relay`
        FUNCTION `??osal_build_uint32::?relay`,00H
        EXTERN `??osal_mem_alloc::?relay`
        FUNCTION `??osal_mem_alloc::?relay`,00H
        EXTERN `??osal_mem_free::?relay`
        FUNCTION `??osal_mem_free::?relay`,00H
        EXTERN `??osal_memcpy::?relay`
        FUNCTION `??osal_memcpy::?relay`,00H
        EXTERN `??osal_memset::?relay`
        FUNCTION `??osal_memset::?relay`,00H
        EXTERN `??osal_msg_allocate::?relay`
        FUNCTION `??osal_msg_allocate::?relay`,00H
        EXTERN `??osal_msg_find::?relay`
        FUNCTION `??osal_msg_find::?relay`,00H
        EXTERN `??osal_msg_send::?relay`
        FUNCTION `??osal_msg_send::?relay`,00H
        EXTERN `??osal_nv_read::?relay`
        FUNCTION `??osal_nv_read::?relay`,00H
        EXTERN `??osal_nv_write::?relay`
        FUNCTION `??osal_nv_write::?relay`,00H
        EXTERN `??osal_set_event::?relay`
        FUNCTION `??osal_set_event::?relay`,00H
        EXTERN `??osal_start_timerEx::?relay`
        FUNCTION `??osal_start_timerEx::?relay`,00H
        EXTERN `??printf::?relay`
        FUNCTION `??printf::?relay`,00H
        EXTERN `??sAddrExtCmp::?relay`
        FUNCTION `??sAddrExtCmp::?relay`,00H
        EXTERN `??sAddrExtCpy::?relay`
        FUNCTION `??sAddrExtCpy::?relay`,00H
        EXTERN AIB_MaxBindingTime
        EXTERN AIB_apsUseExtendedPANID
        EXTERN APSME_BindRequest
        FUNCTION APSME_BindRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APSME_GetRequest
        FUNCTION APSME_GetRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APSME_IsDistributedSecurity
        FUNCTION APSME_IsDistributedSecurity,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APSME_LookupNwkAddr
        FUNCTION APSME_LookupNwkAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APSME_UnBindRequest
        FUNCTION APSME_UnBindRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APS_ReflectorInit
        FUNCTION APS_ReflectorInit,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APS_SetEndDeviceBindTimeout
        FUNCTION APS_SetEndDeviceBindTimeout,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AddrMgrEntryLookupExt
        FUNCTION AddrMgrEntryLookupExt,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AddrMgrEntryLookupNwk
        FUNCTION AddrMgrEntryLookupNwk,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AddrMgrEntryUpdate
        FUNCTION AddrMgrEntryUpdate,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AddrMgrExtAddrSet
        FUNCTION AddrMgrExtAddrSet,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AddrMgrExtAddrValid
        FUNCTION AddrMgrExtAddrValid,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AssocCount
        FUNCTION AssocCount,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AssocFindDevice
        FUNCTION AssocFindDevice,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AssocGetWithExt
        FUNCTION AssocGetWithExt,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AssocIsChild
        FUNCTION AssocIsChild,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AssocRemove
        FUNCTION AssocRemove,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalLcdWriteScreen
        FUNCTION HalLcdWriteScreen,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN HalLcdWriteString
        FUNCTION HalLcdWriteString,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_CheckNewAddrSet
        FUNCTION NLME_CheckNewAddrSet,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_CoordinatorInit
        FUNCTION NLME_CoordinatorInit,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_DirectJoinRequest
        FUNCTION NLME_DirectJoinRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetCoordExtAddr
        FUNCTION NLME_GetCoordExtAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetCoordShortAddr
        FUNCTION NLME_GetCoordShortAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetExtAddr
        FUNCTION NLME_GetExtAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetProtocolVersion
        FUNCTION NLME_GetProtocolVersion,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetRequest
        FUNCTION NLME_GetRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetShortAddr
        FUNCTION NLME_GetShortAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_IsAddressBroadcast
        FUNCTION NLME_IsAddressBroadcast,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_LeaveReq
        FUNCTION NLME_LeaveReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_NetworkFormationRequest
        FUNCTION NLME_NetworkFormationRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_NwkDiscReq2
        FUNCTION NLME_NwkDiscReq2,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_NwkDiscTerm
        FUNCTION NLME_NwkDiscTerm,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_PermitJoiningRequest
        FUNCTION NLME_PermitJoiningRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_StartRouterRequest
        FUNCTION NLME_StartRouterRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN RTG_RemoveRtgEntry
        FUNCTION RTG_RemoveRtgEntry,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDAppNwkAddr
        EXTERN ZDAppTaskID
        EXTERN ZDApp_ChangeState
        FUNCTION ZDApp_ChangeState,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDApp_NVUpdate
        FUNCTION ZDApp_NVUpdate,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDO_Config_Node_Descriptor
        EXTERN ZDO_Config_Power_Descriptor
        EXTERN ZDO_UseExtendedPANID
        EXTERN ZDP_BindUnbindReq
        FUNCTION ZDP_BindUnbindReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 45, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_EPRsp
        FUNCTION ZDP_EPRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 39, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_GenericRsp
        FUNCTION ZDP_GenericRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_MgmtBindRsp
        FUNCTION ZDP_MgmtBindRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_MgmtLqiRsp
        FUNCTION ZDP_MgmtLqiRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 66, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_MgmtNwkDiscRsp
        FUNCTION ZDP_MgmtNwkDiscRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_MgmtRtgRsp
        FUNCTION ZDP_MgmtRtgRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_NodeDescMsg
        FUNCTION ZDP_NodeDescMsg,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_NwkAddrReq
        FUNCTION ZDP_NwkAddrReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_ParentAnnce
        FUNCTION ZDP_ParentAnnce,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_PowerDescMsg
        FUNCTION ZDP_PowerDescMsg,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_SendData
        FUNCTION ZDP_SendData,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_ServerDiscRsp
        FUNCTION ZDP_ServerDiscRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_SimpleDescMsg
        FUNCTION ZDP_SimpleDescMsg,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_TransID
        EXTERN ZDP_UserDescRsp
        FUNCTION ZDP_UserDescRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDSecMgrPermitJoining
        FUNCTION ZDSecMgrPermitJoining,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDSecMgrPermitJoiningTimeout
        FUNCTION ZDSecMgrPermitJoiningTimeout,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZMacGetReq
        FUNCTION ZMacGetReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZMacSetReq
        FUNCTION ZMacSetReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN _NIB
        EXTERN afEndPoints
        FUNCTION afEndPoints,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN afFindSimpleDesc
        FUNCTION afFindSimpleDesc,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN afNumEndPoints
        FUNCTION afNumEndPoints,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN bdbAttributes
        EXTERN bdb_setFN
        FUNCTION bdb_setFN,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN epList
        EXTERN notdoNODEDESEcmd
        EXTERN notdoSCANCmd
        EXTERN nwkNeighborRemove
        FUNCTION nwkNeighborRemove,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN nwkNeighborRemoveAllStranded
        FUNCTION nwkNeighborRemoveAllStranded,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN nwk_getNwkDescList
        FUNCTION nwk_getNwkDescList,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_build_uint32
        FUNCTION osal_build_uint32,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_alloc
        FUNCTION osal_mem_alloc,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_free
        FUNCTION osal_mem_free,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memcpy
        FUNCTION osal_memcpy,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 39, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memset
        FUNCTION osal_memset,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_allocate
        FUNCTION osal_msg_allocate,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_find
        FUNCTION osal_msg_find,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_send
        FUNCTION osal_msg_send,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_nv_read
        FUNCTION osal_nv_read,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_nv_write
        FUNCTION osal_nv_write,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 40, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_set_event
        FUNCTION osal_set_event,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_start_timerEx
        FUNCTION osal_start_timerEx,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN pNwkNotMyChildListDelete
        EXTERN printf
        FUNCTION printf,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN runtimeChannel
        EXTERN sAddrExtCmp
        FUNCTION sAddrExtCmp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN sAddrExtCpy
        FUNCTION sAddrExtCpy,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN zdappMgmtNwkDiscReqInProgress
        EXTERN zdappMgmtNwkDiscRspAddr
        EXTERN zdappMgmtNwkDiscRspTransSeq
        EXTERN zdappMgmtNwkDiscStartIndex
        EXTERN zgAllowRemoteTCPolicyChange
        EXTERN zgApsUseExtendedPANID
        EXTERN zgChildAgingEnable
        EXTERN zgConfigPANID
        EXTERN zgDeviceLogicalType
        EXTERN zgStackProfile

// F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Components\stack\zdo\ZDObject.c
//    1 /**************************************************************************************************
//    2   Filename:       ZDObject.c
//    3   Revised:        $Date: 2015-10-01 15:01:50 -0700 (Thu, 01 Oct 2015) $
//    4   Revision:       $Revision: 44513 $
//    5 
//    6   Description:    This is the Zigbee Device Object.
//    7 
//    8 
//    9   Copyright 2004-2015 Texas Instruments Incorporated. All rights reserved.
//   10 
//   11   IMPORTANT: Your use of this Software is limited to those specific rights
//   12   granted under the terms of a software license agreement between the user
//   13   who downloaded the software, his/her employer (which must be your employer)
//   14   and Texas Instruments Incorporated (the "License"). You may not use this
//   15   Software unless you agree to abide by the terms of the License. The License
//   16   limits your use, and you acknowledge, that the Software may not be modified,
//   17   copied or distributed unless embedded on a Texas Instruments microcontroller
//   18   or used solely and exclusively in conjunction with a Texas Instruments radio
//   19   frequency transceiver, which is integrated into your product. Other than for
//   20   the foregoing purpose, you may not use, reproduce, copy, prepare derivative
//   21   works of, modify, distribute, perform, display or sell this Software and/or
//   22   its documentation for any purpose.
//   23 
//   24   YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
//   25   PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
//   26   INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
//   27   NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
//   28   TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
//   29   NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
//   30   LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
//   31   INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
//   32   OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
//   33   OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
//   34   (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
//   35 
//   36   Should you have any questions regarding your right to use this Software,
//   37   contact Texas Instruments Incorporated at www.TI.com.
//   38 **************************************************************************************************/
//   39 
//   40 /*********************************************************************
//   41  * INCLUDES
//   42  */
//   43 #include "ZComDef.h"
//   44 #include "OSAL.h"
//   45 #include "OSAL_Nv.h"
//   46 #include "rtg.h"
//   47 #include "NLMEDE.h"
//   48 #include "nwk_globals.h"
//   49 #include "APS.h"
//   50 #include "APSMEDE.h"
//   51 #include "AssocList.h"
//   52 #include "BindingTable.h"
//   53 #include "AddrMgr.h"
//   54 #include "AF.h"
//   55 #include "ZDObject.h"
//   56 #include "ZDProfile.h"
//   57 #include "ZDConfig.h"
//   58 #include "ZDSecMgr.h"
//   59 #include "ZDApp.h"
//   60 #include "nwk_util.h"   // NLME_IsAddressBroadcast()
//   61 #include "ZGlobals.h"
//   62 #if defined MT_ZDO_CB_FUNC
//   63 #include "MT.h"
//   64 #endif
//   65 
//   66 #include "bdb.h"
//   67 
//   68 #if !defined (DISABLE_GREENPOWER_BASIC_PROXY) && (ZG_BUILD_RTR_TYPE)
//   69 #include "gp_common.h"
//   70 #endif
//   71  
//   72 #if defined( LCD_SUPPORTED )
//   73   #include "OnBoard.h"
//   74 #endif
//   75 
//   76 /* HAL */
//   77 #include "hal_lcd.h"
//   78 
//   79 /* User Defined */
//   80 #include "AT_printf.h"
//   81 #include "AT_uart.h"
//   82 
//   83 /*********************************************************************
//   84  * MACROS
//   85  */
//   86 
//   87 /*********************************************************************
//   88  * CONSTANTS
//   89  */
//   90 // NLME Stub Implementations
//   91 #define ZDO_ProcessMgmtPermitJoinTimeout NLME_PermitJoiningTimeout
//   92 
//   93 /*********************************************************************
//   94  * TYPEDEFS
//   95  */
//   96 #if defined ( REFLECTOR )
//   97 typedef struct
//   98 {
//   99   byte SrcTransSeq;
//  100   zAddrType_t SrcAddr;
//  101   uint16 LocalCoordinator;
//  102   byte epIntf;
//  103   uint16 ProfileID;
//  104   byte numInClusters;
//  105   uint16 *inClusters;
//  106   byte numOutClusters;
//  107   uint16 *outClusters;
//  108   byte SecurityUse;
//  109   byte status;
//  110 } ZDO_EDBind_t;
//  111 #endif // defined ( REFLECTOR )
//  112 
//  113 enum
//  114 {
//  115   ZDMATCH_INIT,           // Initialized
//  116   ZDMATCH_WAIT_REQ,       // Received first request, waiting for second
//  117   ZDMATCH_SENDING_BINDS   // Received both requests, sending unbind/binds
//  118 };
//  119 
//  120 enum
//  121 {
//  122   ZDMATCH_SENDING_NOT,
//  123   ZDMATCH_SENDING_UNBIND,
//  124   ZDMATCH_SENDING_BIND
//  125 };
//  126 
//  127 /*********************************************************************
//  128  * GLOBAL VARIABLES
//  129  */
//  130 
//  131 /*********************************************************************
//  132  * EXTERNAL VARIABLES
//  133  */
//  134 
//  135 extern bool  requestNewTrustCenterLinkKey;   
//  136    
//  137 /*********************************************************************
//  138  * EXTERNAL FUNCTIONS
//  139  */
//  140 
//  141 /*********************************************************************
//  142  * LOCAL VARIABLES
//  143  */

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  144 static uint16 ZDOBuildBuf[26];  // temp area to build data without allocation
ZDOBuildBuf:
        DS 52
        REQUIRE __INIT_XDATA_Z
//  145 
//  146 #if defined ( REFLECTOR )

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  147 static ZDO_EDBind_t *ZDO_EDBind;     // Null when not used
ZDO_EDBind:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  148 #endif
//  149 
//  150 #if defined ( MANAGED_SCAN )
//  151   uint32 managedScanNextChannel = 0;
//  152   uint32 managedScanChannelMask = 0;
//  153   uint8  managedScanTimesPerChannel = 0;
//  154 #endif
//  155 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  156 ZDMatchEndDeviceBind_t *matchED = (ZDMatchEndDeviceBind_t *)NULL;
matchED:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  157 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA32
//  158 uint32 apsChannelMask = 0;
apsChannelMask:
        DS 4
        REQUIRE __INIT_XDATA_Z
//  159 

        RSEG XDATA_I:XDATA:NOROOT(0)
//  160 int16 zdpExternalStateTaskID = -1;
zdpExternalStateTaskID:
        DATA16
        DS 2
        REQUIRE `?<Initializer for zdpExternalStateTaskID>`
        REQUIRE __INIT_XDATA_I
//  161 
//  162 /*********************************************************************
//  163  * LOCAL FUNCTIONS
//  164  */
//  165 static void ZDODeviceSetup( void );
//  166 #if defined ( MANAGED_SCAN )
//  167   static void ZDOManagedScan_Next( void );
//  168 #endif
//  169 #if defined ( REFLECTOR )
//  170   static void ZDO_RemoveEndDeviceBind( void );
//  171   static void ZDO_SendEDBindRsp( byte TransSeq, zAddrType_t *dstAddr, byte Status, byte secUse );
//  172 #endif
//  173 #if ( ZG_BUILD_COORDINATOR_TYPE )
//  174   static byte ZDO_CompareClusterLists( byte numList1, uint16 *list1,
//  175                                        byte numList2, uint16 *list2, uint16 *pMatches );
//  176   static void ZDO_RemoveMatchMemory( void );
//  177   static uint8 ZDO_CopyMatchInfo( ZDEndDeviceBind_t *destReq, ZDEndDeviceBind_t *srcReq );
//  178   static void ZDO_EndDeviceBindMatchTimeoutCB( void );
//  179 #endif
//  180 uint8 *ZDO_ConvertOTAClusters( uint8 cnt, uint8 *inBuf, uint16 *outList );
//  181 static void zdoSendStateChangeMsg(uint8 state, uint8 taskId);
//  182 
//  183 /*********************************************************************
//  184  * @fn          ZDO_Init
//  185  *
//  186  * @brief       ZDObject and ZDProfile initialization.
//  187  *
//  188  * @param       none
//  189  *
//  190  * @return      none
//  191  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  192 void ZDO_Init( void )
ZDO_Init:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function ZDO_Init
        CODE
//  193 {
        FUNCALL ZDO_Init, sAddrExtCpy
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_Init, NLME_CoordinatorInit
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_Init, APS_ReflectorInit
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH      DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH      DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  194   // Initialize ZD items
//  195   #if defined ( REFLECTOR )
//  196   ZDO_EDBind = NULL;
        MOV       DPTR,#ZDO_EDBind
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
//  197   #endif
//  198 
//  199   // Initialize default ZDO_UseExtendedPANID to the APS one.
//  200   osal_cpyExtAddr( ZDO_UseExtendedPANID, AIB_apsUseExtendedPANID );
        ; Setup parameters for call to function sAddrExtCpy
        MOV       R4,#AIB_apsUseExtendedPANID & 0xff
        MOV       R5,#(AIB_apsUseExtendedPANID >> 8) & 0xff
        MOV       R2,#ZDO_UseExtendedPANID & 0xff
        MOV       R3,#(ZDO_UseExtendedPANID >> 8) & 0xff
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
//  201 
//  202   // Setup the device - type of device to create.
//  203   ZDODeviceSetup();
        ; Setup parameters for call to function NLME_CoordinatorInit
        LCALL     `??NLME_CoordinatorInit::?relay`; Banked call to: NLME_CoordinatorInit
        ; Setup parameters for call to function APS_ReflectorInit
        LCALL     `??APS_ReflectorInit::?relay`; Banked call to: APS_ReflectorInit
//  204 }
        LJMP      ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock0
//  205 
//  206 #if defined ( MANAGED_SCAN )
//  207 /*********************************************************************
//  208  * @fn      ZDOManagedScan_Next()
//  209  *
//  210  * @brief   Setup a managed scan.
//  211  *
//  212  * @param   none
//  213  *
//  214  * @return  none
//  215  */
//  216 static void ZDOManagedScan_Next( void )
//  217 {
//  218   // Is it the first time
//  219   if ( managedScanNextChannel == 0 && managedScanTimesPerChannel == 0 )
//  220   {
//  221     // Setup the defaults
//  222     managedScanNextChannel  = 1;
//  223 
//  224     while( managedScanNextChannel && (runtimeChannel & managedScanNextChannel) == 0 )
//  225       managedScanNextChannel <<= 1;
//  226 
//  227     managedScanChannelMask = managedScanNextChannel;
//  228     managedScanTimesPerChannel = MANAGEDSCAN_TIMES_PRE_CHANNEL;
//  229   }
//  230   else
//  231   {
//  232     // Do we need to go to the next channel
//  233     if ( managedScanTimesPerChannel == 0 )
//  234     {
//  235       // Find next active channel
//  236       managedScanChannelMask  = managedScanNextChannel;
//  237       managedScanTimesPerChannel = MANAGEDSCAN_TIMES_PRE_CHANNEL;
//  238     }
//  239     else
//  240     {
//  241       managedScanTimesPerChannel--;
//  242 
//  243       if ( managedScanTimesPerChannel == 0 )
//  244       {
//  245         managedScanNextChannel  <<= 1;
//  246         while( managedScanNextChannel && (runtimeChannel & managedScanNextChannel) == 0 )
//  247           managedScanNextChannel <<= 1;
//  248 
//  249         if ( managedScanNextChannel == 0 )
//  250           zdoDiscCounter  = NUM_DISC_ATTEMPTS + 1; // Stop
//  251       }
//  252     }
//  253   }
//  254 }
//  255 #endif // MANAGED_SCAN
//  256 
//  257 /*********************************************************************
//  258  * @fn      ZDODeviceSetup()
//  259  *
//  260  * @brief   Call set functions depending on the type of device compiled.
//  261  *
//  262  * @param   none
//  263  *
//  264  * @return  none
//  265  */
//  266 static void ZDODeviceSetup( void )
//  267 {
//  268   if ( ZG_BUILD_COORDINATOR_TYPE )
//  269   {
//  270     NLME_CoordinatorInit();
//  271   }
//  272 
//  273 #if defined ( REFLECTOR )
//  274   APS_ReflectorInit();
//  275 #endif
//  276 
//  277   if ( ZG_BUILD_JOINING_TYPE )
//  278   {
//  279     NLME_DeviceJoiningInit();
//  280   }
//  281 }
//  282 
//  283 
//  284 
//  285 
//  286 /*********************************************************************
//  287  * @fn          ZDO_StartDevice
//  288  *
//  289  * @brief       This function starts a device in a network. Added distributed network for router devices
//  290  *
//  291  * @param       logicalType     - Device type to start
//  292  *              startMode       - indicates mode of device startup
//  293  *              beaconOrder     - indicates time betwen beacons
//  294  *              superframeOrder - indicates length of active superframe
//  295  *              distributed     - indicates if the network will be formed
//  296  *
//  297  * @return      none
//  298  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  299 void ZDO_StartDevice( byte logicalType, devStartModes_t startMode, byte beaconOrder, byte superframeOrder )
ZDO_StartDevice:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function ZDO_StartDevice
        CODE
//  300 {
        FUNCALL ZDO_StartDevice, ZDApp_ChangeState
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_StartDevice, NLME_NetworkFormationRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_StartDevice, ZDApp_ChangeState
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_StartDevice, NLME_StartRouterRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_StartDevice, HalLcdWriteScreen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_StartDevice, osal_start_timerEx
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV       A,R3
        MOV       R6,A
        MOV       ?V1,R4
//  301   ZStatus_t ret;
//  302 #if defined ( ZIGBEE_FREQ_AGILITY )
//  303   static uint8 discRetries = 0;
//  304 #endif
//  305 #if defined ( ZIGBEE_COMMISSIONING )
//  306   static uint8 scanCnt = 0;
//  307 #endif
//  308 
//  309   ret = ZUnsupportedMode;
//  310 
//  311   if ( ZG_BUILD_COORDINATOR_TYPE && logicalType == NODETYPE_COORDINATOR )
        MOV       A,R1
        JNZ       ??ZDO_StartDevice_0
//  312   {
//  313     if ( startMode == MODE_HARD )
        MOV       A,#0x2
        XRL       A,R2
        JNZ       ??ZDO_StartDevice_1
//  314     {
//  315       ZDApp_ChangeState( DEV_COORD_STARTING );
        ; Setup parameters for call to function ZDApp_ChangeState
        MOV       R1,#0x8
        LCALL     `??ZDApp_ChangeState::?relay`; Banked call to: ZDApp_ChangeState
//  316       ret = NLME_NetworkFormationRequest( zgConfigPANID, zgApsUseExtendedPANID, runtimeChannel,
//  317                                           zgDefaultStartingScanDuration, beaconOrder,
//  318                                           superframeOrder, false, false, 0 );
        ; Setup parameters for call to function NLME_NetworkFormationRequest
        CLR       A
        MOV       ?V2,A
        MOV       ?V3,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 15)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 16)
        MOV       A,?V1
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 17)
        MOV       A,R6
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 18)
        MOV       DPTR,#runtimeChannel
        LCALL     ?PUSH_XSTACK8_X_FOUR
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       DPTR,#bdbAttributes + 13
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       R4,#zgApsUseExtendedPANID & 0xff
        MOV       R5,#(zgApsUseExtendedPANID >> 8) & 0xff
        MOV       DPTR,#zgConfigPANID
        LCALL     ??Subroutine206_0 & 0xFFFF
//  319     }
??CrossCallReturnLabel_395:
        LCALL     `??NLME_NetworkFormationRequest::?relay`; Banked call to: NLME_NetworkFormationRequest
        MOV       A,#0xa
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        SJMP      ??ZDO_StartDevice_2
//  320     else if ( startMode == MODE_RESUME )
??ZDO_StartDevice_1:
        MOV       A,#0x1
        XRL       A,R2
        JNZ       ??ZDO_StartDevice_3
//  321     {
//  322       // Just start the coordinator
//  323       ZDApp_ChangeState( DEV_COORD_STARTING );
        ; Setup parameters for call to function ZDApp_ChangeState
        MOV       R1,#0x8
        LCALL     `??ZDApp_ChangeState::?relay`; Banked call to: ZDApp_ChangeState
//  324       ret = NLME_StartRouterRequest( beaconOrder, beaconOrder, false );
        ; Setup parameters for call to function NLME_StartRouterRequest
        MOV       R3,#0x0
        MOV       A,R6
        MOV       R2,A
        MOV       R1,A
        LCALL     `??NLME_StartRouterRequest::?relay`; Banked call to: NLME_StartRouterRequest
??ZDO_StartDevice_2:
        MOV       A,R1
//  325     }
//  326     else
//  327     {
//  328 #if defined( LCD_SUPPORTED )
//  329       HalLcdWriteScreen( "StartDevice ERR", "MODE unknown" );
//  330 #endif
//  331     }
//  332   }
//  333 
//  334   if ( ZG_BUILD_JOINING_TYPE && (logicalType == NODETYPE_ROUTER || logicalType == NODETYPE_DEVICE) )
//  335   {
//  336     if ( (startMode == MODE_JOIN) || (startMode == MODE_REJOIN) )
//  337     {
//  338       if(APSME_IsDistributedSecurity() && (startMode != MODE_REJOIN))
//  339       {
//  340               ret = NLME_NetworkFormationRequest( zgConfigPANID, zgApsUseExtendedPANID, runtimeChannel,
//  341                                           zgDefaultStartingScanDuration, beaconOrder,
//  342                                           superframeOrder, false, true, osal_rand() );
//  343         
//  344       }
//  345       else
//  346       {
//  347         ZDApp_ChangeState( DEV_NWK_DISC );
//  348 
//  349       #if defined( MANAGED_SCAN )
//  350         ZDOManagedScan_Next();
//  351         ret = NLME_NetworkDiscoveryRequest( managedScanChannelMask, BEACON_ORDER_15_MSEC );
//  352       #else
//  353         ret = NLME_NetworkDiscoveryRequest( runtimeChannel, zgDefaultStartingScanDuration );
//  354         #if defined ( ZIGBEE_FREQ_AGILITY )
//  355         if ( !( ZDO_Config_Node_Descriptor.CapabilityFlags & CAPINFO_RCVR_ON_IDLE ) &&
//  356             ( ret == ZSuccess ) && ( ++discRetries == 4 ) )
//  357         {
//  358           // For devices with RxOnWhenIdle equals to FALSE, any network channel
//  359           // change will not be recieved. On these devices or routers that have
//  360           // lost the network, an active scan shall be conducted on the Default
//  361           // Channel list using the extended PANID to find the network. If the
//  362           // extended PANID isn't found using the Default Channel list, an scan
//  363           // should be completed using all channels.
//  364           runtimeChannel = MAX_CHANNELS_24GHZ;
//  365         }
//  366         #endif // ZIGBEE_FREQ_AGILITY
//  367         #if defined ( ZIGBEE_COMMISSIONING )
//  368         if (startMode == MODE_REJOIN && scanCnt++ >= 5 )
//  369         {
//  370           // When ApsUseExtendedPanID is commissioned to a non zero value via
//  371           // application specific means, the device shall conduct an active scan
//  372           // on the Default Channel list and join the PAN with the same
//  373           // ExtendedPanID. If the PAN is not found, an scan should be completed
//  374           // on all channels.
//  375           // When devices rejoin the network and the PAN is not found from
//  376           runtimeChannel = MAX_CHANNELS_24GHZ;
//  377         }
//  378         #endif // ZIGBEE_COMMISSIONING
//  379       #endif
//  380       }
//  381     }
//  382     else if ( startMode == MODE_RESUME )
//  383     {
//  384       if ( logicalType == NODETYPE_ROUTER )
//  385       {
//  386         uint16 panID;
//  387         
//  388         ZDApp_ChangeState( DEV_NWK_ORPHAN );
//  389         
//  390         // Stop the rejoin timeout
//  391         osal_stop_timerEx( NWK_TaskID, NWK_REJOIN_TIMEOUT_EVT );
//  392         ZMacGetReq( ZMacPanId, (uint8 *)&( panID ) );
//  393         
//  394         _NIB.nwkPanId = panID;
//  395         NLME_JoinConfirm(  _NIB.nwkPanId, ZSuccess );
//  396 
//  397         ret = ZSuccess;
//  398       }
//  399       else
//  400       {
//  401         ZDApp_ChangeState( DEV_NWK_ORPHAN );
//  402         //set timer for scan and rejoin
//  403         osal_start_timerEx( ZDAppTaskID, ZDO_REJOIN_BACKOFF, zgDefaultRejoinScan );
//  404         ret = NLME_OrphanJoinRequest( runtimeChannel,
//  405                                       zgDefaultStartingScanDuration );
//  406       }
//  407     }
//  408     else
//  409     {
//  410 #if defined( LCD_SUPPORTED )
//  411       HalLcdWriteScreen( "StartDevice ERR", "MODE unknown" );
//  412 #endif
//  413     }
//  414   }
//  415 
//  416   if ( ret != ZSuccess )
        JNZ       ??ZDO_StartDevice_0
        SJMP      ??ZDO_StartDevice_4
??ZDO_StartDevice_3:
        ; Setup parameters for call to function HalLcdWriteScreen
        MOV       R4,#`?<Constant "MODE unknown">` & 0xff
        MOV       R5,#(`?<Constant "MODE unknown">` >> 8) & 0xff
        MOV       R2,#`?<Constant "StartDevice ERR">` & 0xff
        MOV       R3,#(`?<Constant "StartDevice ERR">` >> 8) & 0xff
        LCALL     `??HalLcdWriteScreen::?relay`; Banked call to: HalLcdWriteScreen
//  417   {
//  418     osal_start_timerEx(ZDAppTaskID, ZDO_NETWORK_INIT, NWK_RETRY_DELAY );
??ZDO_StartDevice_0:
        ; Setup parameters for call to function osal_start_timerEx
        MOV       DPTR,#__Constant_3e8
        LCALL     ?PUSH_XSTACK8_X_FOUR
          CFI CFA_XSP16 add(XSP16, 16)
        MOV       R2,#0x1
        MOV       R3,#0x0
        MOV       DPTR,#ZDAppTaskID
        MOVX      A,@DPTR
        MOV       R1,A
        LCALL     `??osal_start_timerEx::?relay`; Banked call to: osal_start_timerEx
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
//  419   }
//  420 }
??ZDO_StartDevice_4:
        SJMP      ??Subroutine185_0
          CFI EndBlock cfiBlock1

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine1:
          CFI Block cfiBlock2 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock2
        REQUIRE ??Subroutine185_0
        ; // Fall through to label ??Subroutine185_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine185_0:
          CFI Block cfiBlock3 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0x4
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock3
//  421 
//  422 /**************************************************************************************************
//  423  * @fn          zdoSendStateChangeMsg
//  424  *
//  425  * @brief       Helper function for ZDO_UpdateNwkStatus.
//  426  *
//  427  * input parameters
//  428  *
//  429  * @param       taskId - The OSAL task identifier to which to send the ZDO_STATE_CHANGE_EVT.
//  430  * @param       state - The current device state.
//  431  *
//  432  * output parameters
//  433  *
//  434  * None.
//  435  *
//  436  * @return      None.
//  437  **************************************************************************************************
//  438  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  439 static void zdoSendStateChangeMsg(uint8 state, uint8 taskId)
zdoSendStateChangeMsg:
          CFI Block cfiBlock4 Using cfiCommon0
          CFI Function zdoSendStateChangeMsg
        CODE
//  440 {
        FUNCALL zdoSendStateChangeMsg, osal_msg_find
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zdoSendStateChangeMsg, osal_msg_allocate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zdoSendStateChangeMsg, osal_set_event
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zdoSendStateChangeMsg, osal_msg_send
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV       A,R1
        MOV       R7,A
        MOV       A,R2
        MOV       R6,A
//  441   osal_event_hdr_t *pMsg = (osal_event_hdr_t *)osal_msg_find(taskId, ZDO_STATE_CHANGE);
        ; Setup parameters for call to function osal_msg_find
        MOV       R2,#-0x2f
        MOV       R1,A
        LCALL     `??osal_msg_find::?relay`; Banked call to: osal_msg_find
        MOV       DPL,R2
        MOV       DPH,R3
//  442 
//  443   if (NULL == pMsg)
        MOV       A,DPL
        ORL       A,DPH
        JNZ       ??zdoSendStateChangeMsg_0
//  444   {
//  445     if (NULL == (pMsg = (osal_event_hdr_t *)osal_msg_allocate(sizeof(osal_event_hdr_t))))
        ; Setup parameters for call to function osal_msg_allocate
        MOV       R2,#0x2
        MOV       R3,#0x0
        LCALL     `??osal_msg_allocate::?relay`; Banked call to: osal_msg_allocate
        MOV       A,R2
        ORL       A,R3
        JNZ       ??zdoSendStateChangeMsg_1
//  446     {
//  447       // Upon failure to notify any EndPoint of the state change, re-set the ZDO event to
//  448       // try again later when more Heap may be available.
//  449       osal_set_event(ZDAppTaskID, ZDO_STATE_CHANGE_EVT);
        ; Setup parameters for call to function osal_set_event
        MOV       R2,#0x10
        MOV       R3,#0x0
        MOV       DPTR,#ZDAppTaskID
        MOVX      A,@DPTR
        MOV       R1,A
        LCALL     `??osal_set_event::?relay`; Banked call to: osal_set_event
        SJMP      ??zdoSendStateChangeMsg_2
//  450     }
//  451     else
//  452     {
//  453       pMsg->event = ZDO_STATE_CHANGE;
??zdoSendStateChangeMsg_1:
        MOV       DPL,R2
        MOV       DPH,R3
        MOV       A,#-0x2f
        MOVX      @DPTR,A
//  454       pMsg->status = state;
        MOV       A,R7
        INC       DPTR
        MOVX      @DPTR,A
//  455 
//  456       (void)osal_msg_send(taskId, (uint8 *)pMsg);
        ; Setup parameters for call to function osal_msg_send
        MOV       A,R6
        MOV       R1,A
        LCALL     `??osal_msg_send::?relay`; Banked call to: osal_msg_send
        SJMP      ??zdoSendStateChangeMsg_2
//  457     }
//  458   }
//  459   else
//  460   {
//  461     // Modify in place the status of an existing ZDO_STATE_CHANGE message to the EndPoint.
//  462     pMsg->status = state;
??zdoSendStateChangeMsg_0:
        MOV       A,R7
        INC       DPTR
        MOVX      @DPTR,A
//  463   }
//  464 }
??zdoSendStateChangeMsg_2:
        LJMP      ??Subroutine189_0 & 0xFFFF
          CFI EndBlock cfiBlock4
//  465 
//  466 /**************************************************************************************************
//  467  * @fn          ZDO_UpdateNwkStatus
//  468  *
//  469  * @brief       This function sends a ZDO_STATE_CHANGE message to the task of every EndPoint
//  470  *              registered with AF (except, of course, the ZDO_EP). Even if a single task has more
//  471  *              than one registered EndPoint, it will only receive one notification per state
//  472  *              change. Although the device may go through a sequence of state changes, the
//  473  *              Application task may only receive notification of the final, steady-state state
//  474  *              because it has the lowest priority and never even runs to receive the intermediate
//  475  *              state change notifications.
//  476  *
//  477  * input parameters
//  478  *
//  479  * @param       state - The current device state.
//  480  *
//  481  * output parameters
//  482  *
//  483  * None.
//  484  *
//  485  * @return      None.
//  486  **************************************************************************************************
//  487  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  488 void ZDO_UpdateNwkStatus(devStates_t state)
ZDO_UpdateNwkStatus:
          CFI Block cfiBlock5 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
        CODE
//  489 {
        FUNCALL ZDO_UpdateNwkStatus, zdoSendStateChangeMsg
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_UpdateNwkStatus, zdoSendStateChangeMsg
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_UpdateNwkStatus, NLME_GetShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_UpdateNwkStatus, NLME_GetExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        MOV       A,#-0x9
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV       ?V0,R1
//  490   epList_t *pItem = epList;
        MOV       DPTR,#epList
        LCALL     ??Subroutine231_0 & 0xFFFF
??CrossCallReturnLabel_538:
        SJMP      ??ZDO_UpdateNwkStatus_0
//  491 
//  492 #if defined MT_ZDO_CB_FUNC
//  493   if ( zdpExternalStateTaskID == -1 )
//  494   {
//  495     zdpExternalStateTaskID = MT_TaskID;
//  496   }
//  497 #endif
//  498 
//  499   while (pItem != NULL)
//  500   {
//  501     if (pItem->epDesc->endPoint != ZDO_EP)
??ZDO_UpdateNwkStatus_1:
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ?Subroutine108 & 0xFFFF
??CrossCallReturnLabel_176:
        MOVX      A,@DPTR
        JZ        ??ZDO_UpdateNwkStatus_2
//  502     {
//  503       zdoSendStateChangeMsg(state, *(pItem->epDesc->task_id));
        ; Setup parameters for call to function zdoSendStateChangeMsg
        LCALL     ?Subroutine84 & 0xFFFF
//  504     }
??CrossCallReturnLabel_314:
        MOV       R2,A
        MOV       R1,?V0
        LCALL     `??zdoSendStateChangeMsg::?relay`; Banked call to: zdoSendStateChangeMsg
//  505 
//  506     pItem = pItem->nextDesc;
??ZDO_UpdateNwkStatus_2:
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ??Subroutine201_0 & 0xFFFF
//  507   }
??CrossCallReturnLabel_367:
        MOV       A,R0
        MOV       R6,A
        MOV       A,R1
??ZDO_UpdateNwkStatus_0:
        MOV       R7,A
        MOV       A,R6
        ORL       A,R7
        JNZ       ??ZDO_UpdateNwkStatus_1
//  508 
//  509   if ( zdpExternalStateTaskID != -1 )
        MOV       DPTR,#zdpExternalStateTaskID
        MOVX      A,@DPTR
        CPL       A
        JNZ       ??ZDO_UpdateNwkStatus_3
        INC       DPTR
        MOVX      A,@DPTR
        CPL       A
??ZDO_UpdateNwkStatus_3:
        JZ        ??ZDO_UpdateNwkStatus_4
//  510   {
//  511     zdoSendStateChangeMsg( state, zdpExternalStateTaskID );
        ; Setup parameters for call to function zdoSendStateChangeMsg
        MOV       DPTR,#zdpExternalStateTaskID
        MOVX      A,@DPTR
        MOV       R2,A
        MOV       R1,?V0
        LCALL     `??zdoSendStateChangeMsg::?relay`; Banked call to: zdoSendStateChangeMsg
//  512   }
//  513 
//  514   ZDAppNwkAddr.addr.shortAddr = NLME_GetShortAddr();
??ZDO_UpdateNwkStatus_4:
        ; Setup parameters for call to function NLME_GetShortAddr
        LCALL     `??NLME_GetShortAddr::?relay`; Banked call to: NLME_GetShortAddr
        MOV       DPTR,#ZDAppNwkAddr
        LCALL     ??Subroutine196_0 & 0xFFFF
//  515   (void)NLME_GetExtAddr();  // Load the saveExtAddr pointer.
??CrossCallReturnLabel_342:
        ; Setup parameters for call to function NLME_GetExtAddr
        LCALL     `??NLME_GetExtAddr::?relay`; Banked call to: NLME_GetExtAddr
//  516 }
          CFI EndBlock cfiBlock5
        REQUIRE ?Subroutine3
        ; // Fall through to label ?Subroutine3

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine3:
          CFI Block cfiBlock6 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0x1
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock6

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine84:
          CFI Block cfiCond7 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_314
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond8 Using cfiCommon0
          CFI (cfiCond8) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond8) Conditional ??CrossCallReturnLabel_315
          CFI (cfiCond8) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond8) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond8) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond8) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond8) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond8) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond8) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond8) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond8) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond8) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond8) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond8) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond8) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond8) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond8) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond8) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond8) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond8) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond8) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond8) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond8) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond8) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond8) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond8) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond8) CFA_SP SP+-2
          CFI (cfiCond8) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiPicker9 Using cfiCommon1
          CFI (cfiPicker9) NoFunction
          CFI (cfiPicker9) Picker
        INC       DPTR
        INC       DPTR
          CFI EndBlock cfiCond7
          CFI EndBlock cfiCond8
          CFI EndBlock cfiPicker9
        REQUIRE ??Subroutine186_0
        ; // Fall through to label ??Subroutine186_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine186_0:
          CFI Block cfiCond10 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_312
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond11 Using cfiCommon0
          CFI (cfiCond11) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond11) Conditional ??CrossCallReturnLabel_313
          CFI (cfiCond11) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond11) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond11) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond11) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond11) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond11) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond11) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond11) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond11) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond11) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond11) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond11) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond11) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond11) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond11) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond11) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond11) CFA_SP SP+-2
          CFI (cfiCond11) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond12 Using cfiCommon0
          CFI (cfiCond12) Function ZDO_UpdateNwkStatus
          CFI (cfiCond12) Conditional ??CrossCallReturnLabel_314
          CFI (cfiCond12) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond12) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond12) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond12) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond12) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond12) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond12) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond12) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond12) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond12) CFA_SP SP+-2
          CFI (cfiCond12) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond13 Using cfiCommon0
          CFI (cfiCond13) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond13) Conditional ??CrossCallReturnLabel_315
          CFI (cfiCond13) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond13) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond13) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond13) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond13) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond13) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond13) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond13) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond13) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond13) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond13) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond13) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond13) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond13) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond13) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond13) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond13) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond13) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond13) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond13) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond13) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond13) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond13) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond13) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond13) CFA_SP SP+-2
          CFI (cfiCond13) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiPicker14 Using cfiCommon1
          CFI (cfiPicker14) NoFunction
          CFI (cfiPicker14) Picker
        LCALL     ?Subroutine159 & 0xFFFF
??CrossCallReturnLabel_319:
        RET
          CFI EndBlock cfiCond10
          CFI EndBlock cfiCond11
          CFI EndBlock cfiCond12
          CFI EndBlock cfiCond13
          CFI EndBlock cfiPicker14

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine159:
          CFI Block cfiCond15 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_319, ??CrossCallReturnLabel_314
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond16 Using cfiCommon0
          CFI (cfiCond16) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond16) Conditional ??CrossCallReturnLabel_319, ??CrossCallReturnLabel_315
          CFI (cfiCond16) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond16) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond16) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond16) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond16) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond16) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond16) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond16) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond16) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond16) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond16) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond16) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond16) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond16) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond16) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond16) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond16) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond16) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond16) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond16) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond16) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond16) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond16) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond16) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond16) CFA_SP SP+-4
          CFI (cfiCond16) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond17 Using cfiCommon0
          CFI (cfiCond17) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond17) Conditional ??CrossCallReturnLabel_319, ??CrossCallReturnLabel_312
          CFI (cfiCond17) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond17) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond17) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond17) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond17) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond17) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond17) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond17) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond17) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond17) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond17) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond17) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond17) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond17) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond17) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond17) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond17) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond17) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond17) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond17) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond17) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond17) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond17) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond17) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond17) CFA_SP SP+-4
          CFI (cfiCond17) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond18 Using cfiCommon0
          CFI (cfiCond18) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond18) Conditional ??CrossCallReturnLabel_319, ??CrossCallReturnLabel_313
          CFI (cfiCond18) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond18) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond18) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond18) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond18) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond18) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond18) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond18) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond18) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond18) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond18) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond18) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond18) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond18) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond18) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond18) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond18) CFA_SP SP+-4
          CFI (cfiCond18) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond19 Using cfiCommon0
          CFI (cfiCond19) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond19) Conditional ??CrossCallReturnLabel_317, ??CrossCallReturnLabel_88
          CFI (cfiCond19) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond19) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond19) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond19) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond19) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond19) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond19) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond19) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond19) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond19) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond19) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond19) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond19) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond19) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond19) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond19) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond19) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond19) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond19) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond19) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond19) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond19) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond19) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond19) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond19) CFA_SP SP+-4
          CFI (cfiCond19) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond20 Using cfiCommon0
          CFI (cfiCond20) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond20) Conditional ??CrossCallReturnLabel_317, ??CrossCallReturnLabel_89
          CFI (cfiCond20) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond20) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond20) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond20) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond20) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond20) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond20) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond20) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond20) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond20) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond20) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond20) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond20) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond20) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond20) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond20) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond20) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond20) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond20) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond20) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond20) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond20) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond20) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond20) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond20) CFA_SP SP+-4
          CFI (cfiCond20) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond21 Using cfiCommon0
          CFI (cfiCond21) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond21) Conditional ??CrossCallReturnLabel_317, ??CrossCallReturnLabel_90
          CFI (cfiCond21) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond21) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond21) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond21) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond21) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond21) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond21) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond21) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond21) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond21) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond21) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond21) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond21) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond21) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond21) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond21) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond21) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond21) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond21) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond21) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond21) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond21) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond21) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond21) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond21) CFA_SP SP+-4
          CFI (cfiCond21) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond22 Using cfiCommon0
          CFI (cfiCond22) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond22) Conditional ??CrossCallReturnLabel_317, ??CrossCallReturnLabel_91
          CFI (cfiCond22) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond22) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond22) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond22) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond22) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond22) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond22) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond22) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond22) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond22) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond22) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond22) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond22) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond22) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond22) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond22) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond22) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond22) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond22) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond22) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond22) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond22) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond22) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond22) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond22) CFA_SP SP+-4
          CFI (cfiCond22) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond23 Using cfiCommon0
          CFI (cfiCond23) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond23) Conditional ??CrossCallReturnLabel_316, ??CrossCallReturnLabel_84
          CFI (cfiCond23) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond23) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond23) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond23) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond23) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond23) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond23) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond23) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond23) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond23) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond23) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond23) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond23) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond23) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond23) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond23) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond23) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond23) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond23) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond23) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond23) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond23) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond23) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond23) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond23) CFA_SP SP+-4
          CFI (cfiCond23) CFA_XSP16 add(XSP16, 39)
          CFI Block cfiCond24 Using cfiCommon0
          CFI (cfiCond24) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond24) Conditional ??CrossCallReturnLabel_316, ??CrossCallReturnLabel_85
          CFI (cfiCond24) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond24) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond24) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond24) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond24) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond24) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond24) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond24) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond24) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond24) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond24) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond24) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond24) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond24) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond24) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond24) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond24) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond24) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond24) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond24) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond24) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond24) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond24) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond24) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond24) CFA_SP SP+-4
          CFI (cfiCond24) CFA_XSP16 add(XSP16, 39)
          CFI Block cfiCond25 Using cfiCommon0
          CFI (cfiCond25) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond25) Conditional ??CrossCallReturnLabel_316, ??CrossCallReturnLabel_86
          CFI (cfiCond25) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond25) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond25) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond25) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond25) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond25) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond25) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond25) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond25) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond25) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond25) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond25) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond25) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond25) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond25) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond25) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond25) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond25) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond25) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond25) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond25) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond25) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond25) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond25) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond25) CFA_SP SP+-4
          CFI (cfiCond25) CFA_XSP16 add(XSP16, 39)
          CFI Block cfiCond26 Using cfiCommon0
          CFI (cfiCond26) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond26) Conditional ??CrossCallReturnLabel_316, ??CrossCallReturnLabel_87
          CFI (cfiCond26) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond26) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond26) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond26) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond26) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond26) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond26) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond26) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond26) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond26) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond26) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond26) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond26) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond26) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond26) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond26) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond26) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond26) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond26) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond26) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond26) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond26) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond26) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond26) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond26) CFA_SP SP+-4
          CFI (cfiCond26) CFA_XSP16 add(XSP16, 39)
          CFI Block cfiCond27 Using cfiCommon0
          CFI (cfiCond27) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond27) Conditional ??CrossCallReturnLabel_318, ??CrossCallReturnLabel_145
          CFI (cfiCond27) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond27) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond27) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond27) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond27) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond27) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond27) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond27) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond27) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond27) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond27) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond27) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond27) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond27) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond27) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond27) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond27) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond27) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond27) CFA_SP SP+-4
          CFI (cfiCond27) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond28 Using cfiCommon0
          CFI (cfiCond28) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond28) Conditional ??CrossCallReturnLabel_318, ??CrossCallReturnLabel_146
          CFI (cfiCond28) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond28) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond28) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond28) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond28) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond28) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond28) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond28) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond28) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond28) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond28) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond28) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond28) CFA_SP SP+-4
          CFI (cfiCond28) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiPicker29 Using cfiCommon1
          CFI (cfiPicker29) NoFunction
          CFI (cfiPicker29) Picker
        LCALL     ?Subroutine181 & 0xFFFF
??CrossCallReturnLabel_528:
        MOV       DPH,A
        MOV       DPL,R0
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond15
          CFI EndBlock cfiCond16
          CFI EndBlock cfiCond17
          CFI EndBlock cfiCond18
          CFI EndBlock cfiCond19
          CFI EndBlock cfiCond20
          CFI EndBlock cfiCond21
          CFI EndBlock cfiCond22
          CFI EndBlock cfiCond23
          CFI EndBlock cfiCond24
          CFI EndBlock cfiCond25
          CFI EndBlock cfiCond26
          CFI EndBlock cfiCond27
          CFI EndBlock cfiCond28
          CFI EndBlock cfiPicker29
//  517 
//  518 #if defined ( REFLECTOR )
//  519 /*********************************************************************
//  520  * @fn          ZDO_RemoveEndDeviceBind
//  521  *
//  522  * @brief       Remove the end device bind
//  523  *
//  524  * @param  none
//  525  *
//  526  * @return      none
//  527  */
//  528 static void ZDO_RemoveEndDeviceBind( void )
//  529 {
//  530   if ( ZDO_EDBind != NULL )
//  531   {
//  532     // Free the RAM
//  533     if ( ZDO_EDBind->inClusters != NULL )
//  534     {
//  535       osal_mem_free( ZDO_EDBind->inClusters );
//  536     }
//  537     if ( ZDO_EDBind->outClusters != NULL )
//  538     {
//  539       osal_mem_free( ZDO_EDBind->outClusters );
//  540     }
//  541     osal_mem_free( ZDO_EDBind );
//  542     ZDO_EDBind = NULL;
//  543   }
//  544 }
//  545 #endif // REFLECTOR
//  546 
//  547 #if defined ( REFLECTOR )
//  548 /*********************************************************************
//  549  * @fn          ZDO_SendEDBindRsp
//  550  *
//  551  * @brief       Send the end device bind response
//  552  *
//  553  * @param  none
//  554  *
//  555  * @return      none
//  556  */
//  557 static void ZDO_SendEDBindRsp( byte TransSeq, zAddrType_t *dstAddr, byte Status, byte secUse )
//  558 {
//  559   ZDP_EndDeviceBindRsp( TransSeq, dstAddr, Status, secUse );
//  560 
//  561 #if defined( LCD_SUPPORTED )
//  562   HalLcdWriteString( "End Device Bind", HAL_LCD_LINE_1 );
//  563   if ( Status == ZDP_SUCCESS )
//  564   {
//  565     HalLcdWriteString( "Success Sent", HAL_LCD_LINE_2 );
//  566   }
//  567   else
//  568   {
//  569     HalLcdWriteString( "Timeout", HAL_LCD_LINE_2 );
//  570   }
//  571 #endif
//  572 
//  573 }
//  574 #endif // REFLECTOR
//  575 
//  576 #if ( ZG_BUILD_COORDINATOR_TYPE )
//  577 /*********************************************************************
//  578  * @fn          ZDO_CompareClusterLists
//  579  *
//  580  * @brief       Compare one list to another list
//  581  *
//  582  * @param       numList1 - number of items in list 1
//  583  * @param       list1 - first list of cluster IDs
//  584  * @param       numList2 - number of items in list 2
//  585  * @param       list2 - second list of cluster IDs
//  586  * @param       pMatches - buffer to put matches
//  587  *
//  588  * @return      number of matches
//  589  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  590 static byte ZDO_CompareClusterLists( byte numList1, uint16 *list1,
ZDO_CompareClusterLists:
          CFI Block cfiBlock30 Using cfiCommon0
          CFI Function ZDO_CompareClusterLists
        CODE
//  591                           byte numList2, uint16 *list2, uint16 *pMatches )
//  592 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
        MOV       ?V3,R1
        MOV       ?V4,R4
//  593   byte x, y;
//  594   uint16 z;
//  595   byte numMatches = 0;
        MOV       ?V1,#0x0
//  596 
//  597   // Check the first in against the seconds out
//  598   for ( x = 0; x < numList1; x++ )
        MOV       ?V0,#0x0
        MOV       A,#0x10
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine201_0 & 0xFFFF
??CrossCallReturnLabel_368:
        MOV       A,#0x12
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine204_0 & 0xFFFF
??CrossCallReturnLabel_388:
        SJMP      ??ZDO_CompareClusterLists_0
//  599   {
//  600     for ( y = 0; y < numList2; y++ )
//  601     {
//  602       z = list2[y];
??ZDO_CompareClusterLists_1:
        LCALL     ?Subroutine111 & 0xFFFF
??CrossCallReturnLabel_178:
        LCALL     ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_164:
        MOV       ?V7,A
//  603       if ( list1[x] == z )
        MOV       R6,?V0
        MOV       A,R6
        ADD       A,R6
        MOV       R6,A
        CLR       A
        RLC       A
        MOV       R7,A
        MOV       A,R2
        ADD       A,R6
        MOV       DPL,A
        MOV       A,R3
        LCALL     ??Subroutine209_0 & 0xFFFF
??CrossCallReturnLabel_416:
        XRL       A,?V6
        JNZ       ??ZDO_CompareClusterLists_2
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,?V7
??ZDO_CompareClusterLists_2:
        JNZ       ??ZDO_CompareClusterLists_3
//  604       {
//  605         pMatches[numMatches++] = z;
        MOV       R6,?V1
        MOV       A,R6
        ADD       A,R6
        MOV       R6,A
        CLR       A
        RLC       A
        MOV       R7,A
        MOV       A,R4
        ADD       A,R6
        MOV       DPL,A
        MOV       A,R5
        ADDC      A,R7
        MOV       DPH,A
        MOV       A,?V6
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V7
        MOVX      @DPTR,A
        INC       ?V1
//  606       }
//  607     }
??ZDO_CompareClusterLists_3:
        INC       ?V2
??ZDO_CompareClusterLists_4:
        MOV       A,?V2
        CLR       C
        SUBB      A,?V4
        JC        ??ZDO_CompareClusterLists_1
        INC       ?V0
??ZDO_CompareClusterLists_0:
        MOV       A,?V0
        CLR       C
        SUBB      A,?V3
        JNC       ??ZDO_CompareClusterLists_5
        MOV       ?V2,#0x0
        SJMP      ??ZDO_CompareClusterLists_4
//  608   }
//  609 
//  610   return ( numMatches );
??ZDO_CompareClusterLists_5:
        MOV       R1,?V1
        LJMP      ??Subroutine210_0 & 0xFFFF
//  611 }
          CFI EndBlock cfiBlock30
//  612 #endif // ZG_BUILD_COORDINATOR_TYPE
//  613 
//  614 /*********************************************************************
//  615  * Utility functions
//  616  */
//  617 
//  618 /*********************************************************************
//  619  * @fn          ZDO_CompareByteLists
//  620  *
//  621  * @brief       Compares two lists for matches.
//  622  *
//  623  * @param       ACnt  - number of entries in list A
//  624  * @param       AList  - List A
//  625  * @param       BCnt  - number of entries in list B
//  626  * @param       BList  - List B
//  627  *
//  628  * @return      true if a match is found
//  629  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  630 byte ZDO_AnyClusterMatches( byte ACnt, uint16 *AList, byte BCnt, uint16 *BList )
ZDO_AnyClusterMatches:
          CFI Block cfiBlock31 Using cfiCommon0
          CFI Function ZDO_AnyClusterMatches
        CODE
//  631 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV       ?V3,R1
//  632   byte x, y;
//  633 
//  634   for ( x = 0; x < ACnt; x++ )
        MOV       R5,#0x0
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine201_0 & 0xFFFF
??CrossCallReturnLabel_369:
        SJMP      ??ZDO_AnyClusterMatches_0
??ZDO_AnyClusterMatches_1:
        INC       R5
??ZDO_AnyClusterMatches_0:
        MOV       A,R5
        CLR       C
        SUBB      A,?V3
        JNC       ??ZDO_AnyClusterMatches_2
//  635   {
//  636     for ( y = 0; y < BCnt; y++ )
        MOV       ?V2,#0x0
        SJMP      ??ZDO_AnyClusterMatches_3
??ZDO_AnyClusterMatches_4:
        INC       ?V2
??ZDO_AnyClusterMatches_3:
        MOV       A,?V2
        CLR       C
        SUBB      A,R4
        JNC       ??ZDO_AnyClusterMatches_1
//  637     {
//  638       if ( AList[x] == BList[y] )
        MOV       A,R5
        ADD       A,0xE0 /* A   */
        MOV       R6,A
        CLR       A
        RLC       A
        MOV       R7,A
        MOV       A,R2
        ADD       A,R6
        MOV       DPL,A
        MOV       A,R3
        ADDC      A,R7
        LCALL     ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_321:
        LCALL     ?Subroutine111 & 0xFFFF
??CrossCallReturnLabel_179:
        MOVX      A,@DPTR
        XRL       A,?V0
        JNZ       ??ZDO_AnyClusterMatches_5
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,?V1
??ZDO_AnyClusterMatches_5:
        JNZ       ??ZDO_AnyClusterMatches_4
//  639       {
//  640         return true;
        MOV       R1,#0x1
        SJMP      ??ZDO_AnyClusterMatches_6
//  641       }
//  642     }
//  643   }
//  644 
//  645   return false;
??ZDO_AnyClusterMatches_2:
        MOV       R1,#0x0
??ZDO_AnyClusterMatches_6:
        LJMP      ??Subroutine185_0 & 0xFFFF
//  646 }
          CFI EndBlock cfiBlock31

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine111:
          CFI Block cfiCond32 Using cfiCommon0
          CFI Function ZDO_CompareClusterLists
          CFI Conditional ??CrossCallReturnLabel_178
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond33 Using cfiCommon0
          CFI (cfiCond33) Function ZDO_AnyClusterMatches
          CFI (cfiCond33) Conditional ??CrossCallReturnLabel_179
          CFI (cfiCond33) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond33) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond33) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond33) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond33) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond33) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond33) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond33) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond33) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond33) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond33) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond33) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond33) CFA_SP SP+-2
          CFI (cfiCond33) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker34 Using cfiCommon1
          CFI (cfiPicker34) NoFunction
          CFI (cfiPicker34) Picker
        MOV       R6,?V2
        MOV       A,R6
        ADD       A,R6
        MOV       R6,A
        CLR       A
        RLC       A
        MOV       R7,A
        MOV       A,R0
        ADD       A,R6
        MOV       DPL,A
        MOV       A,R1
        ADDC      A,R7
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond32
          CFI EndBlock cfiCond33
          CFI EndBlock cfiPicker34

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine85:
          CFI Block cfiCond35 Using cfiCommon0
          CFI Function ZDO_AnyClusterMatches
          CFI Conditional ??CrossCallReturnLabel_321
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond36 Using cfiCommon0
          CFI (cfiCond36) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond36) Conditional ??CrossCallReturnLabel_322
          CFI (cfiCond36) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond36) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond36) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond36) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond36) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond36) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond36) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond36) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond36) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond36) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond36) CFA_SP SP+-2
          CFI (cfiCond36) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker37 Using cfiCommon1
          CFI (cfiPicker37) NoFunction
          CFI (cfiPicker37) Picker
        MOV       DPH,A
          CFI EndBlock cfiCond35
          CFI EndBlock cfiCond36
          CFI EndBlock cfiPicker37
        REQUIRE ??Subroutine187_0
        ; // Fall through to label ??Subroutine187_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine187_0:
          CFI Block cfiCond38 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_320
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond39 Using cfiCommon0
          CFI (cfiCond39) Function ZDO_AnyClusterMatches
          CFI (cfiCond39) Conditional ??CrossCallReturnLabel_321
          CFI (cfiCond39) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond39) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond39) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond39) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond39) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond39) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond39) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond39) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond39) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond39) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond39) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond39) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond39) CFA_SP SP+-2
          CFI (cfiCond39) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond40 Using cfiCommon0
          CFI (cfiCond40) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond40) Conditional ??CrossCallReturnLabel_322
          CFI (cfiCond40) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond40) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond40) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond40) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond40) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond40) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond40) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond40) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond40) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond40) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond40) CFA_SP SP+-2
          CFI (cfiCond40) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker41 Using cfiCommon1
          CFI (cfiPicker41) NoFunction
          CFI (cfiPicker41) Picker
        LCALL     ?Subroutine169 & 0xFFFF
??CrossCallReturnLabel_326:
        MOV       ?V1,A
        RET
          CFI EndBlock cfiCond38
          CFI EndBlock cfiCond39
          CFI EndBlock cfiCond40
          CFI EndBlock cfiPicker41
//  647 
//  648 /*********************************************************************
//  649  * Callback functions from ZDProfile
//  650  */
//  651 
//  652 
//  653 /*********************************************************************
//  654  * @fn          ZDO_ProcessNodeDescRsp
//  655  *
//  656  * @brief       This function processes the Node_Desc_rsp and request
//  657  *              Update the TC Link key if the TC supports it.
//  658  *
//  659  * @param       inMsg - incoming message
//  660  *
//  661  * @return      none
//  662  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  663 void ZDO_ProcessNodeDescRsp ( zdoIncomingMsg_t *inMsg )
ZDO_ProcessNodeDescRsp:
          CFI Block cfiBlock42 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescRsp
        CODE
//  664 {
        FUNCALL ZDO_ProcessNodeDescRsp, ZDO_ParseNodeDescRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessNodeDescRsp, printf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessNodeDescRsp, printf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessNodeDescRsp, printf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessNodeDescRsp, printf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessNodeDescRsp, printf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessNodeDescRsp, printf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessNodeDescRsp, printf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessNodeDescRsp, printf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessNodeDescRsp, printf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessNodeDescRsp, printf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessNodeDescRsp, printf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessNodeDescRsp, printf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessNodeDescRsp, printf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessNodeDescRsp, printf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 16
        MOV       A,#-0x10
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
//  665   if (!notdoNODEDESEcmd) {
        MOV       DPTR,#notdoNODEDESEcmd
        MOVX      A,@DPTR
        JZ        $+5
        LJMP      ??ZDO_ProcessNodeDescRsp_0 & 0xFFFF
//  666   	ZDO_NodeDescRsp_t Rsp;
//  667   	ZDO_ParseNodeDescRsp( inMsg, &Rsp );
        ; Setup parameters for call to function ZDO_ParseNodeDescRsp
        MOV       R4,?XSP + 0
        MOV       R5,?XSP + 1
        LCALL     `??ZDO_ParseNodeDescRsp::?relay`; Banked call to: ZDO_ParseNodeDescRsp
//  668 
//  669   	printf("\r\nNodeDesc:%04X,%02X", Rsp.nwkAddr, Rsp.status);
        ; Setup parameters for call to function printf
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      A,@DPTR
        MOV       ?V0,A
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       R2,#`?<Constant "\\r\\nNodeDesc:%04X,%02X">` & 0xff
        MOV       R3,#(`?<Constant "\\r\\nNodeDesc:%04X,%02X">` >> 8) & 0xff
        LCALL     `??printf::?relay`; Banked call to: printf
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
//  670   	if (Rsp.status == ZDP_SUCCESS) {
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      A,@DPTR
        JZ        $+5
        LJMP      ??ZDO_ProcessNodeDescRsp_1 & 0xFFFF
//  671     	printf("\r\nType:%s", NODETYPE_COORDINATOR==Rsp.nodeDesc.LogicalType ? "COOR" :
//  672             	NODETYPE_ROUTER==Rsp.nodeDesc.LogicalType ? "ROUTER" : "ENDDEV");
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        ANL       A,#0x7
        MOV       R0,A
        JNZ       ??ZDO_ProcessNodeDescRsp_2
        MOV       ?V0,#`?<Constant "COOR">` & 0xff
        MOV       ?V1,#(`?<Constant "COOR">` >> 8) & 0xff
        SJMP      ??ZDO_ProcessNodeDescRsp_3
??ZDO_ProcessNodeDescRsp_2:
        MOV       A,#0x1
        XRL       A,R0
        JNZ       ??ZDO_ProcessNodeDescRsp_4
        MOV       ?V0,#`?<Constant "ROUTER">` & 0xff
        MOV       ?V1,#(`?<Constant "ROUTER">` >> 8) & 0xff
        SJMP      ??ZDO_ProcessNodeDescRsp_3
??ZDO_ProcessNodeDescRsp_4:
        MOV       ?V0,#`?<Constant "ENDDEV">` & 0xff
        MOV       ?V1,#(`?<Constant "ENDDEV">` >> 8) & 0xff
??ZDO_ProcessNodeDescRsp_3:
        ; Setup parameters for call to function printf
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       R2,#`?<Constant "\\r\\nType:%s">` & 0xff
        MOV       R3,#(`?<Constant "\\r\\nType:%s">` >> 8) & 0xff
        LCALL     ?Subroutine115 & 0xFFFF
??CrossCallReturnLabel_184:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
//  673     	printf("\r\nComplexDesc:%s", Rsp.nodeDesc.ComplexDescAvail ? "Yes" : "No");
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       C,0xE0 /* A   */.3
        JNC       ??ZDO_ProcessNodeDescRsp_5
        MOV       ?V0,#`?<Constant "Yes">` & 0xff
        MOV       ?V1,#(`?<Constant "Yes">` >> 8) & 0xff
        SJMP      ??ZDO_ProcessNodeDescRsp_6
??ZDO_ProcessNodeDescRsp_5:
        MOV       ?V0,#`?<Constant "No">` & 0xff
        MOV       ?V1,#(`?<Constant "No">` >> 8) & 0xff
??ZDO_ProcessNodeDescRsp_6:
        ; Setup parameters for call to function printf
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       R2,#`?<Constant "\\r\\nComplexDesc:%s">` & 0xff
        MOV       R3,#(`?<Constant "\\r\\nComplexDesc:%s">` >> 8) & 0xff
        LCALL     ?Subroutine115 & 0xFFFF
??CrossCallReturnLabel_185:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
//  674     	printf("\r\nUserDesc:%s", Rsp.nodeDesc.UserDescAvail ? "Yes" : "No");
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       C,0xE0 /* A   */.4
        JNC       ??ZDO_ProcessNodeDescRsp_7
        MOV       ?V0,#`?<Constant "Yes">` & 0xff
        MOV       ?V1,#(`?<Constant "Yes">` >> 8) & 0xff
        SJMP      ??ZDO_ProcessNodeDescRsp_8
??ZDO_ProcessNodeDescRsp_7:
        MOV       ?V0,#`?<Constant "No">` & 0xff
        MOV       ?V1,#(`?<Constant "No">` >> 8) & 0xff
??ZDO_ProcessNodeDescRsp_8:
        ; Setup parameters for call to function printf
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       R2,#`?<Constant "\\r\\nUserDesc:%s">` & 0xff
        MOV       R3,#(`?<Constant "\\r\\nUserDesc:%s">` >> 8) & 0xff
        LCALL     ?Subroutine115 & 0xFFFF
??CrossCallReturnLabel_186:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
//  675     	printf("\r\nAPSFlags:%02X", Rsp.nodeDesc.APSFlags);
        ; Setup parameters for call to function printf
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        ANL       A,#0x7
        MOV       ?V0,A
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       R2,#`?<Constant "\\r\\nAPSFlags:%02X">` & 0xff
        MOV       R3,#(`?<Constant "\\r\\nAPSFlags:%02X">` >> 8) & 0xff
        LCALL     ?Subroutine115 & 0xFFFF
??CrossCallReturnLabel_187:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
//  676    	 	printf("\r\nFreqBand:%02X", Rsp.nodeDesc.FrequencyBand);
        ; Setup parameters for call to function printf
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        RRC       A
        RRC       A
        RRC       A
        ANL       A,#0x1f
        MOV       ?V0,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       R2,#`?<Constant "\\r\\nFreqBand:%02X">` & 0xff
        MOV       R3,#(`?<Constant "\\r\\nFreqBand:%02X">` >> 8) & 0xff
        LCALL     ?Subroutine115 & 0xFFFF
??CrossCallReturnLabel_188:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
//  677     	printf("\r\nMacCap:%02x", Rsp.nodeDesc.CapabilityFlags);
        ; Setup parameters for call to function printf
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine198_0 & 0xFFFF
??CrossCallReturnLabel_350:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       R2,#`?<Constant "\\r\\nMacCap:%02x">` & 0xff
        MOV       R3,#(`?<Constant "\\r\\nMacCap:%02x">` >> 8) & 0xff
        LCALL     ?Subroutine115 & 0xFFFF
??CrossCallReturnLabel_189:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
//  678     	printf("\r\nManufCode:%04X", *(uint16*)Rsp.nodeDesc.ManufacturerCode);
        ; Setup parameters for call to function printf
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       R2,#`?<Constant "\\r\\nManufCode:%04X">` & 0xff
        MOV       R3,#(`?<Constant "\\r\\nManufCode:%04X">` >> 8) & 0xff
        LCALL     ?Subroutine115 & 0xFFFF
??CrossCallReturnLabel_190:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
//  679     	printf("\r\nMaxBufSize:%02X", Rsp.nodeDesc.MaxBufferSize);
        ; Setup parameters for call to function printf
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine198_0 & 0xFFFF
??CrossCallReturnLabel_351:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       R2,#`?<Constant "\\r\\nMaxBufSize:%02X">` & 0xff
        MOV       R3,#(`?<Constant "\\r\\nMaxBufSize:%02X">` >> 8) & 0xff
        LCALL     ?Subroutine115 & 0xFFFF
??CrossCallReturnLabel_191:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
//  680     	printf("\r\nMaxInSize:%04X", *(uint16*)Rsp.nodeDesc.MaxInTransferSize);
        ; Setup parameters for call to function printf
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       R2,#`?<Constant "\\r\\nMaxInSize:%04X">` & 0xff
        MOV       R3,#(`?<Constant "\\r\\nMaxInSize:%04X">` >> 8) & 0xff
        LCALL     ?Subroutine115 & 0xFFFF
??CrossCallReturnLabel_192:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
//  681     	printf("\r\nSrvMask:%02X", Rsp.nodeDesc.ServerMask);
        ; Setup parameters for call to function printf
        MOV       A,#0xb
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       R2,#`?<Constant "\\r\\nSrvMask:%02X">` & 0xff
        MOV       R3,#(`?<Constant "\\r\\nSrvMask:%02X">` >> 8) & 0xff
        LCALL     ?Subroutine115 & 0xFFFF
??CrossCallReturnLabel_193:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
//  682     	printf("\r\nMaxOutSize:%04X", *(uint16*)Rsp.nodeDesc.MaxOutTransferSize);
        ; Setup parameters for call to function printf
        MOV       A,#0xd
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       R2,#`?<Constant "\\r\\nMaxOutSize:%04X">` & 0xff
        MOV       R3,#(`?<Constant "\\r\\nMaxOutSize:%04X">` >> 8) & 0xff
        LCALL     ?Subroutine115 & 0xFFFF
??CrossCallReturnLabel_194:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
//  683     	printf("\r\nDescCap:%02X", Rsp.nodeDesc.DescriptorCapability);
        ; Setup parameters for call to function printf
        MOV       A,#0xf
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine198_0 & 0xFFFF
//  684   	}
??CrossCallReturnLabel_352:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       R2,#`?<Constant "\\r\\nDescCap:%02X">` & 0xff
        MOV       R3,#(`?<Constant "\\r\\nDescCap:%02X">` >> 8) & 0xff
        LCALL     ?Subroutine115 & 0xFFFF
??CrossCallReturnLabel_195:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
//  685   	printf("\r\n");
??ZDO_ProcessNodeDescRsp_1:
        ; Setup parameters for call to function printf
        MOV       R2,#`?<Constant "\\r\\n">` & 0xff
        MOV       R3,#(`?<Constant "\\r\\n">` >> 8) & 0xff
        LCALL     `??printf::?relay`; Banked call to: printf
//  686   	notdoNODEDESEcmd = TRUE;
        MOV       DPTR,#notdoNODEDESEcmd
        MOV       A,#0x1
        MOVX      @DPTR,A
//  687   }
//  688 }
??ZDO_ProcessNodeDescRsp_0:
        MOV       A,#0x10
        SJMP      ??Subroutine188_0
          CFI EndBlock cfiBlock42

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine115:
          CFI Block cfiCond43 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_184
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond44 Using cfiCommon0
          CFI (cfiCond44) Function ZDO_ProcessNodeDescRsp
          CFI (cfiCond44) Conditional ??CrossCallReturnLabel_185
          CFI (cfiCond44) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond44) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond44) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond44) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond44) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond44) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond44) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond44) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond44) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond44) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond44) CFA_SP SP+-2
          CFI (cfiCond44) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond45 Using cfiCommon0
          CFI (cfiCond45) Function ZDO_ProcessNodeDescRsp
          CFI (cfiCond45) Conditional ??CrossCallReturnLabel_186
          CFI (cfiCond45) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond45) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond45) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond45) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond45) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond45) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond45) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond45) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond45) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond45) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond45) CFA_SP SP+-2
          CFI (cfiCond45) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond46 Using cfiCommon0
          CFI (cfiCond46) Function ZDO_ProcessNodeDescRsp
          CFI (cfiCond46) Conditional ??CrossCallReturnLabel_187
          CFI (cfiCond46) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond46) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond46) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond46) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond46) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond46) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond46) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond46) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond46) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond46) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond46) CFA_SP SP+-2
          CFI (cfiCond46) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond47 Using cfiCommon0
          CFI (cfiCond47) Function ZDO_ProcessNodeDescRsp
          CFI (cfiCond47) Conditional ??CrossCallReturnLabel_188
          CFI (cfiCond47) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond47) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond47) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond47) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond47) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond47) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond47) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond47) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond47) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond47) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond47) CFA_SP SP+-2
          CFI (cfiCond47) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond48 Using cfiCommon0
          CFI (cfiCond48) Function ZDO_ProcessNodeDescRsp
          CFI (cfiCond48) Conditional ??CrossCallReturnLabel_189
          CFI (cfiCond48) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond48) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond48) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond48) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond48) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond48) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond48) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond48) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond48) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond48) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond48) CFA_SP SP+-2
          CFI (cfiCond48) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond49 Using cfiCommon0
          CFI (cfiCond49) Function ZDO_ProcessNodeDescRsp
          CFI (cfiCond49) Conditional ??CrossCallReturnLabel_190
          CFI (cfiCond49) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond49) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond49) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond49) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond49) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond49) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond49) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond49) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond49) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond49) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond49) CFA_SP SP+-2
          CFI (cfiCond49) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond50 Using cfiCommon0
          CFI (cfiCond50) Function ZDO_ProcessNodeDescRsp
          CFI (cfiCond50) Conditional ??CrossCallReturnLabel_191
          CFI (cfiCond50) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond50) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond50) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond50) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond50) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond50) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond50) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond50) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond50) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond50) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond50) CFA_SP SP+-2
          CFI (cfiCond50) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond51 Using cfiCommon0
          CFI (cfiCond51) Function ZDO_ProcessNodeDescRsp
          CFI (cfiCond51) Conditional ??CrossCallReturnLabel_192
          CFI (cfiCond51) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond51) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond51) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond51) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond51) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond51) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond51) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond51) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond51) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond51) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond51) CFA_SP SP+-2
          CFI (cfiCond51) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond52 Using cfiCommon0
          CFI (cfiCond52) Function ZDO_ProcessNodeDescRsp
          CFI (cfiCond52) Conditional ??CrossCallReturnLabel_193
          CFI (cfiCond52) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond52) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond52) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond52) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond52) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond52) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond52) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond52) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond52) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond52) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond52) CFA_SP SP+-2
          CFI (cfiCond52) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond53 Using cfiCommon0
          CFI (cfiCond53) Function ZDO_ProcessNodeDescRsp
          CFI (cfiCond53) Conditional ??CrossCallReturnLabel_194
          CFI (cfiCond53) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond53) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond53) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond53) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond53) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond53) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond53) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond53) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond53) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond53) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond53) CFA_SP SP+-2
          CFI (cfiCond53) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond54 Using cfiCommon0
          CFI (cfiCond54) Function ZDO_ProcessNodeDescRsp
          CFI (cfiCond54) Conditional ??CrossCallReturnLabel_195
          CFI (cfiCond54) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond54) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond54) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond54) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond54) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond54) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond54) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond54) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond54) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond54) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond54) CFA_SP SP+-2
          CFI (cfiCond54) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiPicker55 Using cfiCommon1
          CFI (cfiPicker55) NoFunction
          CFI (cfiPicker55) Picker
        LCALL     `??printf::?relay`; Banked call to: printf
        MOV       A,#0x2
        RET
          CFI EndBlock cfiCond43
          CFI EndBlock cfiCond44
          CFI EndBlock cfiCond45
          CFI EndBlock cfiCond46
          CFI EndBlock cfiCond47
          CFI EndBlock cfiCond48
          CFI EndBlock cfiCond49
          CFI EndBlock cfiCond50
          CFI EndBlock cfiCond51
          CFI EndBlock cfiCond52
          CFI EndBlock cfiCond53
          CFI EndBlock cfiCond54
          CFI EndBlock cfiPicker55
//  689 
//  690 
//  691 
//  692 /*********************************************************************
//  693  * @fn          ZDO_ProcessNodeDescReq
//  694  *
//  695  * @brief       This function processes and responds to the
//  696  *              Node_Desc_req message.
//  697  *
//  698  * @param       inMsg - incoming message
//  699  *
//  700  * @return      none
//  701  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  702 void ZDO_ProcessNodeDescReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessNodeDescReq:
          CFI Block cfiBlock56 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
        CODE
//  703 {
        FUNCALL ZDO_ProcessNodeDescReq, ZDP_NodeDescMsg
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessNodeDescReq, ZDP_GenericRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        LCALL     ?Subroutine59 & 0xFFFF
//  704   uint16 aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
//  705   NodeDescriptorFormat_t *desc = NULL;
//  706 
//  707   if ( aoi == ZDAppNwkAddr.addr.shortAddr )
??CrossCallReturnLabel_94:
        JNZ       ??ZDO_ProcessNodeDescReq_0
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R5
??ZDO_ProcessNodeDescReq_0:
        JNZ       ??ZDO_ProcessNodeDescReq_1
//  708   {
//  709     desc = &ZDO_Config_Node_Descriptor;
//  710   }
//  711 
//  712   if ( desc != NULL )
//  713   {
//  714     ZDP_NodeDescMsg( inMsg, aoi, desc );
        ; Setup parameters for call to function ZDP_NodeDescMsg
        MOV       ?V0,#ZDO_Config_Node_Descriptor & 0xff
        MOV       ?V1,#(ZDO_Config_Node_Descriptor >> 8) & 0xff
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       A,R6
        MOV       R2,A
        LCALL     `??ZDP_NodeDescMsg::?relay`; Banked call to: ZDP_NodeDescMsg
        MOV       A,#0x2
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
        SJMP      ??ZDO_ProcessNodeDescReq_2
//  715   }
//  716   else
//  717   {
//  718     ZDP_GenericRsp( inMsg->TransSeq, &(inMsg->srcAddr),
//  719               ZDP_INVALID_REQTYPE, aoi, Node_Desc_rsp, inMsg->SecurityUse );
??ZDO_ProcessNodeDescReq_1:
        ; Setup parameters for call to function ZDP_GenericRsp
        MOV       ?V0,#0x2
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       ?V0,R2
        MOV       ?V1,R1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        LCALL     ?Subroutine60 & 0xFFFF
//  720   }
??CrossCallReturnLabel_96:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
//  721 }
??ZDO_ProcessNodeDescReq_2:
        SJMP      ??Subroutine189_0
          CFI EndBlock cfiBlock56

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine2:
          CFI Block cfiBlock57 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       A,#0x2
          CFI EndBlock cfiBlock57
        REQUIRE ??Subroutine188_0
        ; // Fall through to label ??Subroutine188_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine188_0:
          CFI Block cfiBlock58 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 26)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock58
        REQUIRE ??Subroutine189_0
        ; // Fall through to label ??Subroutine189_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine189_0:
          CFI Block cfiBlock59 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0x2
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock59
//  722 
//  723 /*********************************************************************
//  724  * @fn          ZDO_ProcessPowerDescReq
//  725  *
//  726  * @brief       This function processes and responds to the
//  727  *              Node_Power_req message.
//  728  *
//  729  * @param       inMsg  - incoming request
//  730  *
//  731  * @return      none
//  732  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  733 void ZDO_ProcessPowerDescReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessPowerDescReq:
          CFI Block cfiBlock60 Using cfiCommon0
          CFI Function ZDO_ProcessPowerDescReq
        CODE
//  734 {
        FUNCALL ZDO_ProcessPowerDescReq, ZDP_PowerDescMsg
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessPowerDescReq, ZDP_GenericRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        LCALL     ?Subroutine59 & 0xFFFF
//  735   uint16 aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
//  736   NodePowerDescriptorFormat_t *desc = NULL;
//  737 
//  738   if ( aoi == ZDAppNwkAddr.addr.shortAddr )
??CrossCallReturnLabel_95:
        JNZ       ??ZDO_ProcessPowerDescReq_0
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R5
??ZDO_ProcessPowerDescReq_0:
        JNZ       ??ZDO_ProcessPowerDescReq_1
//  739   {
//  740     desc = &ZDO_Config_Power_Descriptor;
//  741   }
//  742 
//  743   if ( desc != NULL )
//  744   {
//  745     ZDP_PowerDescMsg( inMsg, aoi, desc );
        ; Setup parameters for call to function ZDP_PowerDescMsg
        MOV       ?V0,#ZDO_Config_Power_Descriptor & 0xff
        MOV       ?V1,#(ZDO_Config_Power_Descriptor >> 8) & 0xff
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       A,R6
        MOV       R2,A
        LCALL     `??ZDP_PowerDescMsg::?relay`; Banked call to: ZDP_PowerDescMsg
        MOV       A,#0x2
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
        SJMP      ??ZDO_ProcessPowerDescReq_2
//  746   }
//  747   else
//  748   {
//  749     ZDP_GenericRsp( inMsg->TransSeq, &(inMsg->srcAddr),
//  750               ZDP_INVALID_REQTYPE, aoi, Power_Desc_rsp, inMsg->SecurityUse );
??ZDO_ProcessPowerDescReq_1:
        ; Setup parameters for call to function ZDP_GenericRsp
        MOV       ?V0,#0x3
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       ?V0,R2
        MOV       ?V1,R1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        LCALL     ?Subroutine60 & 0xFFFF
//  751   }
??CrossCallReturnLabel_97:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
//  752 }
??ZDO_ProcessPowerDescReq_2:
        SJMP      ??Subroutine189_0
          CFI EndBlock cfiBlock60

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine60:
          CFI Block cfiCond61 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_96
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond62 Using cfiCommon0
          CFI (cfiCond62) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond62) Conditional ??CrossCallReturnLabel_97
          CFI (cfiCond62) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond62) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond62) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond62) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond62) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond62) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond62) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond62) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond62) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond62) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond62) CFA_SP SP+-2
          CFI (cfiCond62) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker63 Using cfiCommon1
          CFI (cfiPicker63) NoFunction
          CFI (cfiPicker63) Picker
        MOV       A,R6
        ADD       A,#0xe
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       R5,A
        MOV       R4,#-0x80
        MOV       A,R6
        ADD       A,#0x2
        MOV       R2,A
        CLR       A
        ADDC      A,R7
        MOV       R3,A
        MOV       A,R6
        ADD       A,#0xf
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       R1,A
        LCALL     `??ZDP_GenericRsp::?relay`; Banked call to: ZDP_GenericRsp
        MOV       A,#0x4
        RET
          CFI EndBlock cfiCond61
          CFI EndBlock cfiCond62
          CFI EndBlock cfiPicker63

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine59:
          CFI Block cfiCond64 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_94
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond65 Using cfiCommon0
          CFI (cfiCond65) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond65) Conditional ??CrossCallReturnLabel_95
          CFI (cfiCond65) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond65) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond65) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond65) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond65) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond65) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond65) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond65) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond65) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond65) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond65) CFA_SP SP+-2
          CFI (cfiCond65) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker66 Using cfiCommon1
          CFI (cfiPicker66) NoFunction
          CFI (cfiPicker66) Picker
        LCALL     ?Subroutine162 & 0xFFFF
??CrossCallReturnLabel_286:
        MOV       R0,A
        CLR       A
        XCH       A,R0
        MOV       R1,A
        MOV       A,R2
        ADD       A,R0
        MOV       R4,A
        CLR       A
        ADDC      A,R1
        MOV       R5,A
        MOV       DPTR,#ZDAppNwkAddr
        MOVX      A,@DPTR
        XRL       A,R4
        RET
          CFI EndBlock cfiCond64
          CFI EndBlock cfiCond65
          CFI EndBlock cfiPicker66
//  753 
//  754 /*********************************************************************
//  755  * @fn          ZDO_ProcessSimpleDescReq
//  756  *
//  757  * @brief       This function processes and responds to the
//  758  *              Simple_Desc_req message.
//  759  *
//  760  * @param       inMsg - incoming message (request)
//  761  *
//  762  * @return      none
//  763  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  764 void ZDO_ProcessSimpleDescReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessSimpleDescReq:
          CFI Block cfiBlock67 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
        CODE
//  765 {
        FUNCALL ZDO_ProcessSimpleDescReq, afFindSimpleDesc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessSimpleDescReq, AssocIsChild
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessSimpleDescReq, ZDP_SimpleDescMsg
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessSimpleDescReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 2
        MOV       A,#-0x2
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
//  766   SimpleDescriptionFormat_t *sDesc = NULL;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
//  767   uint16 aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
        LCALL     ?Subroutine119 & 0xFFFF
??CrossCallReturnLabel_206:
        LCALL     ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_133:
        MOV       R3,A
        MOV       A,R4
        MOV       R2,A
//  768   byte endPoint = inMsg->asdu[2];
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
//  769   byte free = false;
        MOV       ?V1,#0x0
//  770   byte stat = ZDP_SUCCESS;
        MOV       ?V0,#0x0
//  771 
//  772   if ( (endPoint == ZDO_EP) || (endPoint > MAX_ENDPOINTS) )
        JZ        ??ZDO_ProcessSimpleDescReq_0
        MOV       A,#-0x1
        XRL       A,R1
        JNZ       ??ZDO_ProcessSimpleDescReq_1
//  773   {
//  774     stat = ZDP_INVALID_EP;
??ZDO_ProcessSimpleDescReq_0:
        MOV       ?V0,#-0x7e
        SJMP      ??ZDO_ProcessSimpleDescReq_2
//  775   }
//  776   else if ( aoi == ZDAppNwkAddr.addr.shortAddr )
??ZDO_ProcessSimpleDescReq_1:
        MOV       DPTR,#ZDAppNwkAddr
        MOVX      A,@DPTR
        XRL       A,R2
        JNZ       ??ZDO_ProcessSimpleDescReq_3
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R3
??ZDO_ProcessSimpleDescReq_3:
        JNZ       ??ZDO_ProcessSimpleDescReq_4
//  777   {
//  778     free = afFindSimpleDesc( &sDesc, endPoint );
        ; Setup parameters for call to function afFindSimpleDesc
        MOV       R2,?XSP + 0
        MOV       R3,?XSP + 1
        LCALL     `??afFindSimpleDesc::?relay`; Banked call to: afFindSimpleDesc
        MOV       A,R1
        MOV       R2,A
//  779     if ( sDesc == NULL )
        LCALL     ?Subroutine54 & 0xFFFF
??CrossCallReturnLabel_439:
        JNZ       ??ZDO_ProcessSimpleDescReq_5
//  780     {
//  781       stat = ZDP_NOT_ACTIVE;
        MOV       ?V0,#-0x7d
??ZDO_ProcessSimpleDescReq_5:
        MOV       ?V1,R2
        SJMP      ??ZDO_ProcessSimpleDescReq_2
//  782     }
//  783   }
//  784   else
//  785   {
//  786     if ( ZSTACK_ROUTER_BUILD )
//  787     {
//  788       //If child found, then no descriptor
//  789       if(AssocIsChild(aoi))
??ZDO_ProcessSimpleDescReq_4:
        ; Setup parameters for call to function AssocIsChild
        LCALL     `??AssocIsChild::?relay`; Banked call to: AssocIsChild
        MOV       A,R1
        JZ        ??ZDO_ProcessSimpleDescReq_6
//  790       {
//  791         stat = ZDP_NO_DESCRIPTOR;
        MOV       ?V0,#-0x77
        SJMP      ??ZDO_ProcessSimpleDescReq_2
//  792       }
//  793       //Otherwise no device found
//  794       else
//  795       {
//  796         stat = ZDP_DEVICE_NOT_FOUND;
??ZDO_ProcessSimpleDescReq_6:
        MOV       ?V0,#-0x7f
//  797       }
//  798     }
//  799     else if ( ZSTACK_END_DEVICE_BUILD )
//  800     {
//  801       stat = ZDP_INVALID_REQTYPE;
//  802     }
//  803   }
//  804 
//  805   ZDP_SimpleDescMsg( inMsg, stat, sDesc );
??ZDO_ProcessSimpleDescReq_2:
        ; Setup parameters for call to function ZDP_SimpleDescMsg
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ??Subroutine204_0 & 0xFFFF
??CrossCallReturnLabel_389:
        MOV       R1,?V0
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        LCALL     `??ZDP_SimpleDescMsg::?relay`; Banked call to: ZDP_SimpleDescMsg
//  806 
//  807   if ( free && sDesc )
        MOV       A,?V1
        JZ        ??CrossCallReturnLabel_121
        LCALL     ?Subroutine54 & 0xFFFF
??CrossCallReturnLabel_440:
        JZ        ??CrossCallReturnLabel_121
//  808   {
//  809     osal_mem_free( sDesc );
        ; Setup parameters for call to function osal_mem_free
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ?Subroutine72 & 0xFFFF
//  810   }
//  811 }
??CrossCallReturnLabel_121:
        LJMP      ?Subroutine2 & 0xFFFF
          CFI EndBlock cfiBlock67
//  812 
//  813 /*********************************************************************
//  814  * @fn          ZDO_ProcessSimpleDescRsp
//  815  *
//  816  * @brief       This function processes and responds to the
//  817  *              Simple_Desc_rsp message.
//  818  *
//  819  * @param       inMsg - incoming message (request)
//  820  *
//  821  * @return      none
//  822  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  823 void ZDO_ProcessSimpleDescRsp( zdoIncomingMsg_t *inMsg )
ZDO_ProcessSimpleDescRsp:
          CFI Block cfiBlock68 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescRsp
        CODE
//  824 {
        ; Saved register size: 0
        ; Auto size: 0
//  825 
//  826 }
        LJMP      ?BRET
          CFI EndBlock cfiBlock68
//  827 
//  828 /*********************************************************************
//  829  * @fn          ZDO_ProcessActiveEPReq
//  830  *
//  831  * @brief       This function processes and responds to the
//  832  *              Active_EP_req message.
//  833  *
//  834  * @param       inMsg  - incoming message (request)
//  835  *
//  836  * @return      none
//  837  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  838 void ZDO_ProcessActiveEPReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessActiveEPReq:
          CFI Block cfiBlock69 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
        CODE
//  839 {
        FUNCALL ZDO_ProcessActiveEPReq, NLME_GetShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessActiveEPReq, afNumEndPoints
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessActiveEPReq, afEndPoints
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessActiveEPReq, ZDP_EPRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV       A,#-0xe
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
//  840   byte cnt = 0;
        MOV       ?V0,#0x0
//  841   uint16 aoi;
//  842   byte stat = ZDP_SUCCESS;
        MOV       ?V1,#0x0
//  843 
//  844   aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
        LCALL     ?Subroutine119 & 0xFFFF
??CrossCallReturnLabel_207:
        LCALL     ??Subroutine190_0 & 0xFFFF
??CrossCallReturnLabel_330:
        MOV       DPL,R0
        LCALL     ?Subroutine57 & 0xFFFF
//  845 
//  846   if ( aoi == NLME_GetShortAddr() )
??CrossCallReturnLabel_334:
        ; Setup parameters for call to function NLME_GetShortAddr
        LCALL     `??NLME_GetShortAddr::?relay`; Banked call to: NLME_GetShortAddr
        MOV       A,R2
        XRL       A,?V2
        JNZ       ??ZDO_ProcessActiveEPReq_0
        MOV       A,R3
        XRL       A,?V3
??ZDO_ProcessActiveEPReq_0:
        JNZ       ??ZDO_ProcessActiveEPReq_1
//  847   {
//  848     cnt = afNumEndPoints() - 1;  // -1 for ZDO endpoint descriptor
        ; Setup parameters for call to function afNumEndPoints
        LCALL     `??afNumEndPoints::?relay`; Banked call to: afNumEndPoints
        MOV       A,R1
        DEC       A
        MOV       ?V0,A
//  849     afEndPoints( (uint8 *)ZDOBuildBuf, true );
        ; Setup parameters for call to function afEndPoints
        MOV       R1,#0x1
        MOV       R2,#ZDOBuildBuf & 0xff
        MOV       R3,#(ZDOBuildBuf >> 8) & 0xff
        LCALL     `??afEndPoints::?relay`; Banked call to: afEndPoints
        SJMP      ??ZDO_ProcessActiveEPReq_2
//  850   }
//  851   else
//  852   {
//  853     if(ZG_BUILD_ENDDEVICE_TYPE)
//  854     {
//  855       stat = ZDP_INVALID_REQTYPE;
//  856     }
//  857     else
//  858     {
//  859       stat = ZDP_DEVICE_NOT_FOUND;
??ZDO_ProcessActiveEPReq_1:
        MOV       ?V1,#-0x7f
//  860     }
//  861   }
//  862 
//  863   ZDP_ActiveEPRsp( inMsg->TransSeq, &(inMsg->srcAddr), stat,
//  864                   aoi, cnt, (uint8 *)ZDOBuildBuf, inMsg->SecurityUse );
??ZDO_ProcessActiveEPReq_2:
        ; Setup parameters for call to function ZDP_EPRsp
        LCALL     ?Subroutine113 & 0xFFFF
??CrossCallReturnLabel_421:
        MOV       ?V4,A
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 15)
        MOV       ?V4,#ZDOBuildBuf & 0xff
        MOV       ?V5,#(ZDOBuildBuf >> 8) & 0xff
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 18)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       A,?V1
        MOV       ?V0,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       A,R6
        ADD       A,#0x2
        MOV       R4,A
        CLR       A
        ADDC      A,R7
        MOV       R5,A
        MOV       A,R6
        ADD       A,#0xf
        LCALL     ??Subroutine208_0 & 0xFFFF
??CrossCallReturnLabel_417:
        MOV       R1,A
        MOV       R2,#0x5
        MOV       R3,#-0x80
        LCALL     `??ZDP_EPRsp::?relay`; Banked call to: ZDP_EPRsp
        MOV       A,#0x7
        LJMP      ?Subroutine5 & 0xFFFF
//  865 }
          CFI EndBlock cfiBlock69

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine110:
          CFI Block cfiCond70 Using cfiCommon0
          CFI Function ZDO_ParseUserDescRsp
          CFI Conditional ??CrossCallReturnLabel_331
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond71 Using cfiCommon0
          CFI (cfiCond71) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond71) Conditional ??CrossCallReturnLabel_332
          CFI (cfiCond71) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond71) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond71) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond71) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond71) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond71) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond71) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond71) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond71) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond71) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond71) CFA_SP SP+-2
          CFI (cfiCond71) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker72 Using cfiCommon1
          CFI (cfiPicker72) NoFunction
          CFI (cfiPicker72) Picker
        LCALL     ?Subroutine174 & 0xFFFF
??CrossCallReturnLabel_513:
          CFI EndBlock cfiCond70
          CFI EndBlock cfiCond71
          CFI EndBlock cfiPicker72
        REQUIRE ??Subroutine190_0
        ; // Fall through to label ??Subroutine190_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine190_0:
          CFI Block cfiCond73 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
          CFI Conditional ??CrossCallReturnLabel_330
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond74 Using cfiCommon0
          CFI (cfiCond74) Function ZDO_ParseUserDescRsp
          CFI (cfiCond74) Conditional ??CrossCallReturnLabel_331
          CFI (cfiCond74) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond74) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond74) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond74) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond74) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond74) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond74) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond74) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond74) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond74) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond74) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond74) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond74) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond74) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond74) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond74) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond74) CFA_SP SP+-2
          CFI (cfiCond74) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond75 Using cfiCommon0
          CFI (cfiCond75) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond75) Conditional ??CrossCallReturnLabel_332
          CFI (cfiCond75) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond75) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond75) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond75) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond75) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond75) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond75) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond75) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond75) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond75) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond75) CFA_SP SP+-2
          CFI (cfiCond75) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker76 Using cfiCommon1
          CFI (cfiPicker76) NoFunction
          CFI (cfiPicker76) Picker
        MOV       DPH,A
          CFI EndBlock cfiCond73
          CFI EndBlock cfiCond74
          CFI EndBlock cfiCond75
          CFI EndBlock cfiPicker76
        REQUIRE ??Subroutine191_0
        ; // Fall through to label ??Subroutine191_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine191_0:
          CFI Block cfiCond77 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_327
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond78 Using cfiCommon0
          CFI (cfiCond78) Function ZDO_ProcessParentAnnce
          CFI (cfiCond78) Conditional ??CrossCallReturnLabel_328
          CFI (cfiCond78) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond78) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond78) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond78) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond78) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond78) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond78) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond78) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond78) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond78) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond78) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond78) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond78) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond78) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond78) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond78) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond78) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond78) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond78) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond78) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond78) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond78) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond78) CFA_SP SP+-2
          CFI (cfiCond78) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond79 Using cfiCommon0
          CFI (cfiCond79) Function ZDMatchSendState
          CFI (cfiCond79) Conditional ??CrossCallReturnLabel_329
          CFI (cfiCond79) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond79) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond79) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond79) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond79) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond79) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond79) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond79) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond79) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond79) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond79) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond79) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond79) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond79) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond79) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond79) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond79) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond79) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond79) CFA_SP SP+-2
          CFI (cfiCond79) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond80 Using cfiCommon0
          CFI (cfiCond80) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond80) Conditional ??CrossCallReturnLabel_330
          CFI (cfiCond80) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond80) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond80) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond80) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond80) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond80) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond80) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond80) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond80) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond80) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond80) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond80) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond80) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond80) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond80) CFA_SP SP+-2
          CFI (cfiCond80) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond81 Using cfiCommon0
          CFI (cfiCond81) Function ZDO_ParseUserDescRsp
          CFI (cfiCond81) Conditional ??CrossCallReturnLabel_331
          CFI (cfiCond81) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond81) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond81) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond81) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond81) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond81) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond81) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond81) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond81) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond81) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond81) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond81) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond81) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond81) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond81) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond81) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond81) CFA_SP SP+-2
          CFI (cfiCond81) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond82 Using cfiCommon0
          CFI (cfiCond82) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond82) Conditional ??CrossCallReturnLabel_332
          CFI (cfiCond82) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond82) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond82) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond82) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond82) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond82) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond82) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond82) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond82) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond82) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond82) CFA_SP SP+-2
          CFI (cfiCond82) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker83 Using cfiCommon1
          CFI (cfiPicker83) NoFunction
          CFI (cfiPicker83) Picker
        LCALL     ?Subroutine181 & 0xFFFF
??CrossCallReturnLabel_529:
        RET
          CFI EndBlock cfiCond77
          CFI EndBlock cfiCond78
          CFI EndBlock cfiCond79
          CFI EndBlock cfiCond80
          CFI EndBlock cfiCond81
          CFI EndBlock cfiCond82
          CFI EndBlock cfiPicker83

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine57:
          CFI Block cfiCond84 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
          CFI Conditional ??CrossCallReturnLabel_334
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond85 Using cfiCommon0
          CFI (cfiCond85) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond85) Conditional ??CrossCallReturnLabel_335
          CFI (cfiCond85) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond85) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond85) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond85) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond85) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond85) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond85) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond85) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond85) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond85) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond85) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond85) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond85) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond85) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond85) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond85) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond85) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond85) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond85) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond85) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond85) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond85) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond85) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond85) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond85) CFA_SP SP+-2
          CFI (cfiCond85) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiPicker86 Using cfiCommon1
          CFI (cfiPicker86) NoFunction
          CFI (cfiPicker86) Picker
        MOV       DPH,A
          CFI EndBlock cfiCond84
          CFI EndBlock cfiCond85
          CFI EndBlock cfiPicker86
        REQUIRE ??Subroutine192_0
        ; // Fall through to label ??Subroutine192_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine192_0:
          CFI Block cfiCond87 Using cfiCommon0
          CFI Function ZDO_ParseMgmtNwkUpdateNotify
          CFI Conditional ??CrossCallReturnLabel_333
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond88 Using cfiCommon0
          CFI (cfiCond88) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond88) Conditional ??CrossCallReturnLabel_334
          CFI (cfiCond88) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond88) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond88) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond88) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond88) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond88) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond88) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond88) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond88) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond88) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond88) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond88) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond88) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond88) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond88) CFA_SP SP+-2
          CFI (cfiCond88) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond89 Using cfiCommon0
          CFI (cfiCond89) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond89) Conditional ??CrossCallReturnLabel_335
          CFI (cfiCond89) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond89) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond89) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond89) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond89) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond89) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond89) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond89) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond89) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond89) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond89) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond89) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond89) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond89) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond89) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond89) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond89) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond89) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond89) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond89) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond89) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond89) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond89) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond89) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond89) CFA_SP SP+-2
          CFI (cfiCond89) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiPicker90 Using cfiCommon1
          CFI (cfiPicker90) NoFunction
          CFI (cfiPicker90) Picker
        MOVX      A,@DPTR
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R0,A
        CLR       A
        XCH       A,R0
        MOV       R1,A
        MOV       A,R2
        ADD       A,R0
        MOV       ?V2,A
        CLR       A
        ADDC      A,R1
        MOV       ?V3,A
        RET
          CFI EndBlock cfiCond87
          CFI EndBlock cfiCond88
          CFI EndBlock cfiCond89
          CFI EndBlock cfiPicker90
//  866 
//  867 /*********************************************************************
//  868  * @fn          ZDO_ConvertOTAClusters
//  869  *
//  870  * @brief       This function will convert the over-the-air cluster list
//  871  *              format to an internal format.
//  872  *
//  873  * @param       inMsg  - incoming message (request)
//  874  *
//  875  * @return      pointer to incremented inBuf
//  876  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  877 uint8 *ZDO_ConvertOTAClusters( uint8 cnt, uint8 *inBuf, uint16 *outList )
ZDO_ConvertOTAClusters:
          CFI Block cfiBlock91 Using cfiCommon0
          CFI Function ZDO_ConvertOTAClusters
        CODE
//  878 {
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV       A,R1
        MOV       R7,A
//  879   uint8 x;
//  880 
//  881   for ( x = 0; x < cnt; x++ )
        MOV       R6,#0x0
        SJMP      ??ZDO_ConvertOTAClusters_0
//  882   {
//  883     // convert ota format to internal
//  884     outList[x] = BUILD_UINT16( inBuf[0], inBuf[1] );
??ZDO_ConvertOTAClusters_1:
        MOV       DPL,R2
        MOV       DPH,R3
        LCALL     ?Subroutine169 & 0xFFFF
??CrossCallReturnLabel_323:
        MOV       R0,A
        CLR       A
        XCH       A,R0
        MOV       R1,A
        MOV       A,?V0
        ADD       A,R0
        CLR       A
        ADDC      A,R1
        MOV       ?V1,A
        MOV       A,R6
        ADD       A,0xE0 /* A   */
        MOV       R0,A
        CLR       A
        RLC       A
        MOV       R1,A
        MOV       A,R4
        ADD       A,R0
        MOV       DPL,A
        MOV       A,R5
        ADDC      A,R1
        MOV       DPH,A
        MOV       A,?V0
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V1
        MOVX      @DPTR,A
//  885     inBuf += sizeof( uint16 );
        MOV       A,R2
        ADD       A,#0x2
        MOV       R2,A
        JNC       ??ZDO_ConvertOTAClusters_2
        INC       R3
//  886   }
??ZDO_ConvertOTAClusters_2:
        INC       R6
??ZDO_ConvertOTAClusters_0:
        MOV       A,R6
        CLR       C
        SUBB      A,R7
        JC        ??ZDO_ConvertOTAClusters_1
//  887   return ( inBuf );
        LJMP      ??Subroutine189_0 & 0xFFFF
//  888 }
          CFI EndBlock cfiBlock91
//  889 
//  890 /*********************************************************************
//  891  * @fn          ZDO_ProcessMatchDescReq
//  892  *
//  893  * @brief       This function processes and responds to the
//  894  *              Match_Desc_req message.
//  895  *
//  896  * @param       inMsg  - incoming message (request)
//  897  *
//  898  * @return      none
//  899  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  900 void ZDO_ProcessMatchDescReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMatchDescReq:
          CFI Block cfiBlock92 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
        CODE
//  901 {
        FUNCALL ZDO_ProcessMatchDescReq, NLME_IsAddressBroadcast
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDP_EPRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 39, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 39, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, NLME_IsAddressBroadcast
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDP_EPRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 39, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 39, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDO_ConvertOTAClusters
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDO_ConvertOTAClusters
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_msg_send
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDO_AnyClusterMatches
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 34, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDO_AnyClusterMatches
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 34, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_msg_allocate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDP_EPRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 39, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 39, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, HalLcdWriteScreen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDP_EPRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 39, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 39, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, HalLcdWriteScreen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, HalLcdWriteScreen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        REQUIRE ?V14
        REQUIRE ?V15
        MOV       A,#-0x18
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 8
        MOV       A,#-0x8
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 32)
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine196_0 & 0xFFFF
//  902   uint8 epCnt = 0;
??CrossCallReturnLabel_343:
        MOV       ?V7,#0x0
//  903   uint8 numInClusters;
//  904   uint16 *inClusters = NULL;
        MOV       ?V14,#0x0
        MOV       ?V15,#0x0
//  905   uint8 numOutClusters;
//  906   uint16 *outClusters = NULL;
        MOV       ?V12,#0x0
        MOV       ?V13,#0x0
//  907   epList_t *epDesc;
//  908   SimpleDescriptionFormat_t *sDesc = NULL;
//  909   uint8 allocated;
//  910   uint8 *msg;
//  911   uint16 aoi;
//  912   uint16 profileID;
//  913 
//  914   // Parse the incoming message
//  915   msg = inMsg->asdu;
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        LCALL     ?Subroutine107 & 0xFFFF
//  916   aoi = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_338:
        MOV       DPL,R6
        LCALL     ?Subroutine57 & 0xFFFF
//  917   profileID = BUILD_UINT16( msg[2], msg[3] );
??CrossCallReturnLabel_335:
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R2,A
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       A,R2
        MOV       ?V0,A
        CLR       A
        ADDC      A,R1
        MOV       ?V1,A
//  918   msg += 4;
//  919 
//  920   if ( ADDR_BCAST_NOT_ME == NLME_IsAddressBroadcast(aoi) )
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        ADD       A,#0xf
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       R1,A
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine245_0 & 0xFFFF
??CrossCallReturnLabel_621:
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        ADD       A,#0x2
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        LCALL     ?Subroutine39 & 0xFFFF
??CrossCallReturnLabel_630:
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        ADD       A,#0xe
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       R1,A
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine245_0 & 0xFFFF
??CrossCallReturnLabel_622:
        ; Setup parameters for call to function NLME_IsAddressBroadcast
        MOV       R2,?V2
        MOV       R3,?V3
        LCALL     `??NLME_IsAddressBroadcast::?relay`; Banked call to: NLME_IsAddressBroadcast
        MOV       A,R1
        XRL       A,#0x1
        JNZ       ??ZDO_ProcessMatchDescReq_0
//  921   {
//  922     ZDP_MatchDescRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZDP_INVALID_REQTYPE,
//  923                           aoi, 0, NULL, inMsg->SecurityUse );
        ; Setup parameters for call to function ZDP_EPRsp
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine55 & 0xFFFF
??CrossCallReturnLabel_88:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 33)
        CLR       A
        MOV       ?V0,A
        MOV       ?V1,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 35)
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 36)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 38)
        MOV       ?V0,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 39)
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine70 & 0xFFFF
??CrossCallReturnLabel_115:
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine52 & 0xFFFF
??CrossCallReturnLabel_84:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 32)
//  924     return;
        LJMP      ??ZDO_ProcessMatchDescReq_1 & 0xFFFF
//  925   }
//  926   else if ( (ADDR_NOT_BCAST == NLME_IsAddressBroadcast(aoi)) && (aoi != ZDAppNwkAddr.addr.shortAddr) )
??ZDO_ProcessMatchDescReq_0:
        ; Setup parameters for call to function NLME_IsAddressBroadcast
        MOV       R2,?V2
        MOV       R3,?V3
        LCALL     `??NLME_IsAddressBroadcast::?relay`; Banked call to: NLME_IsAddressBroadcast
        MOV       A,R1
        JNZ       ??ZDO_ProcessMatchDescReq_2
        MOV       DPTR,#ZDAppNwkAddr
        MOVX      A,@DPTR
        XRL       A,?V2
        JNZ       ??ZDO_ProcessMatchDescReq_3
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,?V3
??ZDO_ProcessMatchDescReq_3:
        JZ        ??ZDO_ProcessMatchDescReq_2
//  927   {
//  928 #if (ZG_BUILD_ENDDEVICE_TYPE)
//  929     if(ZG_DEVICE_ENDDEVICE_TYPE)
//  930     {    
//  931     ZDP_MatchDescRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZDP_INVALID_REQTYPE,
//  932                              aoi, 0, NULL, inMsg->SecurityUse );
//  933     }
//  934 #else 
//  935     if (ZG_DEVICE_RTR_TYPE)
        MOV       DPTR,#zgDeviceLogicalType
        MOVX      A,@DPTR
        JZ        ??ZDO_ProcessMatchDescReq_4
        XRL       A,#0x1
        JNZ       ??ZDO_ProcessMatchDescReq_5
//  936     {
//  937     ZDP_MatchDescRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZDP_DEVICE_NOT_FOUND,
//  938                              aoi, 0, NULL, inMsg->SecurityUse );
??ZDO_ProcessMatchDescReq_4:
        ; Setup parameters for call to function ZDP_EPRsp
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine55 & 0xFFFF
//  939     }
??CrossCallReturnLabel_89:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 33)
        CLR       A
        MOV       ?V0,A
        MOV       ?V1,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 35)
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 36)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 38)
        MOV       ?V0,#-0x7f
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 39)
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine70 & 0xFFFF
??CrossCallReturnLabel_116:
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine52 & 0xFFFF
??CrossCallReturnLabel_85:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 32)
//  940 #endif
//  941     return;
??ZDO_ProcessMatchDescReq_5:
        LJMP      ??ZDO_ProcessMatchDescReq_1 & 0xFFFF
//  942   }
//  943 
//  944   if ((numInClusters = *msg++) &&
//  945       (inClusters = (uint16*)osal_mem_alloc( numInClusters * sizeof( uint16 ) )))
??ZDO_ProcessMatchDescReq_2:
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V3,A
        MOV       A,R6
        ADD       A,#0x5
        MOV       R6,A
        JNC       ??ZDO_ProcessMatchDescReq_6
        INC       R7
??ZDO_ProcessMatchDescReq_6:
        MOV       A,?V3
        JZ        ??ZDO_ProcessMatchDescReq_7
        ; Setup parameters for call to function osal_mem_alloc
        LCALL     ?Subroutine117 & 0xFFFF
??CrossCallReturnLabel_198:
        MOV       ?V14,R2
        MOV       ?V15,R3
        MOV       A,R2
        ORL       A,R3
        JZ        ??ZDO_ProcessMatchDescReq_7
//  946   {
//  947     msg = ZDO_ConvertOTAClusters( numInClusters, msg, inClusters );
        ; Setup parameters for call to function ZDO_ConvertOTAClusters
        MOV       R4,?V14
        MOV       R5,?V15
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        MOV       R1,?V3
        LCALL     `??ZDO_ConvertOTAClusters::?relay`; Banked call to: ZDO_ConvertOTAClusters
        MOV       ?V4,R2
        MOV       ?V5,R3
        MOV       R6,?V4
        MOV       R7,?V5
        SJMP      ??ZDO_ProcessMatchDescReq_8
//  948   }
//  949   else
//  950   {
//  951     numInClusters = 0;
??ZDO_ProcessMatchDescReq_7:
        MOV       ?V3,#0x0
//  952   }
//  953 
//  954   if ((numOutClusters = *msg++) &&
//  955       (outClusters = (uint16 *)osal_mem_alloc( numOutClusters * sizeof( uint16 ) )))
??ZDO_ProcessMatchDescReq_8:
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        MOV       ?V2,A
        INC       DPTR
        MOV       R6,DPL
        MOV       R7,DPH
        JZ        ??ZDO_ProcessMatchDescReq_9
        ; Setup parameters for call to function osal_mem_alloc
        LCALL     ?Subroutine117 & 0xFFFF
??CrossCallReturnLabel_199:
        MOV       ?V12,R2
        MOV       ?V13,R3
        MOV       A,R2
        ORL       A,R3
        JZ        ??ZDO_ProcessMatchDescReq_9
//  956   {
//  957     msg = ZDO_ConvertOTAClusters( numOutClusters, msg, outClusters );
        ; Setup parameters for call to function ZDO_ConvertOTAClusters
        MOV       R4,?V12
        MOV       R5,?V13
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        MOV       R1,?V2
        LCALL     `??ZDO_ConvertOTAClusters::?relay`; Banked call to: ZDO_ConvertOTAClusters
        SJMP      ??ZDO_ProcessMatchDescReq_10
//  958   }
//  959   else
//  960   {
//  961     numOutClusters = 0;
??ZDO_ProcessMatchDescReq_9:
        MOV       ?V2,#0x0
//  962   }
//  963 
//  964   // First count the number of endpoints that match.
//  965   epDesc = epList;
??ZDO_ProcessMatchDescReq_10:
        MOV       DPTR,#epList
        SJMP      ??ZDO_ProcessMatchDescReq_11
//  966   while ( epDesc )
//  967   {
//  968     // Don't search endpoint 0 and check if response is allowed
//  969     if ( epDesc->epDesc->endPoint != ZDO_EP && (epDesc->flags&eEP_AllowMatch) )
//  970     {
//  971       if ( epDesc->pfnDescCB )
//  972       {
//  973         sDesc = (SimpleDescriptionFormat_t *)epDesc->pfnDescCB( AF_DESCRIPTOR_SIMPLE, epDesc->epDesc->endPoint );
//  974         allocated = TRUE;
//  975       }
//  976       else
//  977       {
//  978         sDesc = epDesc->epDesc->simpleDesc;
//  979         allocated = FALSE;
//  980       }
//  981 
//  982       // Allow specific ProfileId or Wildcard ProfileID
//  983       if ( sDesc && ( ( sDesc->AppProfId == profileID ) || ( profileID == ZDO_WILDCARD_PROFILE_ID ) ) )
//  984       {
//  985         uint8 *uint8Buf = (uint8 *)ZDOBuildBuf;
//  986 
//  987         // Are there matching input clusters?
//  988         if ((ZDO_AnyClusterMatches( numInClusters, inClusters,
//  989                    sDesc->AppNumInClusters, sDesc->pAppInClusterList )) ||
//  990             // Are there matching output clusters?
//  991             (ZDO_AnyClusterMatches( numOutClusters, outClusters,
//  992                    sDesc->AppNumOutClusters, sDesc->pAppOutClusterList )))
//  993         {
//  994           // Notify the endpoint of the match.
//  995           uint8 bufLen = sizeof( ZDO_MatchDescRspSent_t ) + (numOutClusters + numInClusters) * sizeof(uint16);
//  996           ZDO_MatchDescRspSent_t *pRspSent = (ZDO_MatchDescRspSent_t *) osal_msg_allocate( bufLen );
//  997 
//  998           if (pRspSent)
//  999           {
// 1000             pRspSent->hdr.event = ZDO_MATCH_DESC_RSP_SENT;
// 1001             pRspSent->nwkAddr = inMsg->srcAddr.addr.shortAddr;
// 1002             pRspSent->numInClusters = numInClusters;
// 1003             pRspSent->numOutClusters = numOutClusters;
// 1004 
// 1005             if (numInClusters)
// 1006             {
// 1007               pRspSent->pInClusters = (uint16*) (pRspSent + 1);
// 1008               osal_memcpy(pRspSent->pInClusters, inClusters, numInClusters * sizeof(uint16));
// 1009             }
// 1010             else
// 1011             {
// 1012               pRspSent->pInClusters = NULL;
// 1013             }
// 1014 
// 1015             if (numOutClusters)
// 1016             {
// 1017               pRspSent->pOutClusters = (uint16*)(pRspSent + 1) + numInClusters;
// 1018               osal_memcpy(pRspSent->pOutClusters, outClusters, numOutClusters * sizeof(uint16));
// 1019             }
// 1020             else
// 1021             {
// 1022               pRspSent->pOutClusters = NULL;
??ZDO_ProcessMatchDescReq_12:
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
// 1023             }
// 1024 
// 1025             osal_msg_send( *epDesc->epDesc->task_id, (uint8 *)pRspSent );
??ZDO_ProcessMatchDescReq_13:
        ; Setup parameters for call to function osal_msg_send
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        MOV       DPL,?V10
        MOV       DPH,?V11
        INC       DPTR
        INC       DPTR
        LCALL     ??Subroutine191_0 & 0xFFFF
??CrossCallReturnLabel_327:
        MOV       DPH,A
        MOV       DPL,R0
        LCALL     ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_315:
        MOV       R1,A
        LCALL     `??osal_msg_send::?relay`; Banked call to: osal_msg_send
// 1026           }
// 1027 
// 1028           uint8Buf[epCnt++] = sDesc->EndPoint;
??ZDO_ProcessMatchDescReq_14:
        MOV       DPL,?V8
        MOV       DPH,?V9
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       R0,?V7
        MOV       A,#ZDOBuildBuf & 0xff
        ADD       A,R0
        MOV       DPL,A
        CLR       A
        ADDC      A,#(ZDOBuildBuf >> 8) & 0xff
        MOV       DPH,A
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        INC       ?V7
// 1029         }
// 1030       }
// 1031 
// 1032       if ( allocated )
??ZDO_ProcessMatchDescReq_15:
        MOV       C,?VB.0
        JNC       ??ZDO_ProcessMatchDescReq_16
// 1033       {
// 1034         osal_mem_free( sDesc );
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V8
        MOV       R3,?V9
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 1035       }
// 1036     }
// 1037     epDesc = epDesc->nextDesc;
??ZDO_ProcessMatchDescReq_16:
        MOV       DPL,?V10
        MOV       DPH,?V11
??ZDO_ProcessMatchDescReq_11:
        MOVX      A,@DPTR
        MOV       ?V10,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V11,A
        MOV       A,?V10
        ORL       A,?V11
        JNZ       $+5
        LJMP      ??ZDO_ProcessMatchDescReq_17 & 0xFFFF
        MOV       DPL,?V10
        MOV       DPH,?V11
        INC       DPTR
        INC       DPTR
        LCALL     ??Subroutine201_0 & 0xFFFF
??CrossCallReturnLabel_370:
        MOV       A,R0
        MOV       R2,A
        MOV       A,R1
        MOV       DPL,R0
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       R4,A
        JZ        ??ZDO_ProcessMatchDescReq_16
        MOV       DPL,?V10
        MOV       DPH,?V11
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       C,0xE0 /* A   */.0
        JNC       ??ZDO_ProcessMatchDescReq_16
        MOV       DPL,?V10
        MOV       DPH,?V11
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine108 & 0xFFFF
??CrossCallReturnLabel_177:
        MOV       A,DPL
        ORL       A,DPH
        JZ        ??ZDO_ProcessMatchDescReq_18
        ; Setup parameters for indirect call
        MOV       A,R4
        MOV       R2,A
        MOV       R1,#0x1
        LCALL     ?CALL_IND
        MOV       ?V8,R2
        MOV       ?V9,R3
        SETB      ?VB.0
        SJMP      ??ZDO_ProcessMatchDescReq_19
??ZDO_ProcessMatchDescReq_18:
        MOV       DPL,R2
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V8,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V9,A
        CLR       ?VB.0
??ZDO_ProcessMatchDescReq_19:
        MOV       A,?V8
        ORL       A,?V9
        JNZ       $+5
        LJMP      ??ZDO_ProcessMatchDescReq_15 & 0xFFFF
        MOV       DPL,?V8
        MOV       DPH,?V9
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,?V0
        JNZ       ??ZDO_ProcessMatchDescReq_20
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,?V1
??ZDO_ProcessMatchDescReq_20:
        JZ        ??ZDO_ProcessMatchDescReq_21
        MOV       A,#-0x1
        XRL       A,?V0
        JNZ       ??ZDO_ProcessMatchDescReq_22
        MOV       A,#-0x1
        XRL       A,?V1
??ZDO_ProcessMatchDescReq_22:
        JZ        $+5
        LJMP      ??ZDO_ProcessMatchDescReq_15 & 0xFFFF
??ZDO_ProcessMatchDescReq_21:
        ; Setup parameters for call to function ZDO_AnyClusterMatches
        MOV       DPL,?V8
        MOV       DPH,?V9
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 34)
        MOV       DPL,?V8
        MOV       DPH,?V9
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R4,A
        MOV       R2,?V14
        MOV       R3,?V15
        MOV       R1,?V3
        LCALL     `??ZDO_AnyClusterMatches::?relay`; Banked call to: ZDO_AnyClusterMatches
        MOV       A,#0x2
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 32)
        MOV       A,R1
        JNZ       ??ZDO_ProcessMatchDescReq_23
        ; Setup parameters for call to function ZDO_AnyClusterMatches
        MOV       DPL,?V8
        MOV       DPH,?V9
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 34)
        MOV       DPL,?V8
        MOV       DPH,?V9
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R4,A
        MOV       R2,?V12
        MOV       R3,?V13
        MOV       R1,?V2
        LCALL     `??ZDO_AnyClusterMatches::?relay`; Banked call to: ZDO_AnyClusterMatches
        MOV       A,#0x2
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 32)
        MOV       A,R1
        JNZ       $+5
        LJMP      ??ZDO_ProcessMatchDescReq_15 & 0xFFFF
??ZDO_ProcessMatchDescReq_23:
        ; Setup parameters for call to function osal_msg_allocate
        MOV       A,?V2
        ADD       A,?V3
        CLR       C
        RLC       A
        ADD       A,#0xa
        MOV       R2,A
        MOV       R3,#0x0
        LCALL     `??osal_msg_allocate::?relay`; Banked call to: osal_msg_allocate
        MOV       ?V4,R2
        MOV       ?V5,R3
        MOV       R6,?V4
        MOV       R7,?V5
        MOV       A,R2
        ORL       A,R7
        JNZ       $+5
        LJMP      ??ZDO_ProcessMatchDescReq_14 & 0xFFFF
        MOV       DPL,R2
        MOV       DPH,R3
        MOV       A,#-0x2e
        LCALL     ?Subroutine27 & 0xFFFF
??CrossCallReturnLabel_36:
        MOV       DPH,A
        MOV       DPL,R0
        LCALL     ?Subroutine95 & 0xFFFF
??CrossCallReturnLabel_160:
        INC       DPTR
        INC       DPTR
        LCALL     ??Subroutine245_0 & 0xFFFF
??CrossCallReturnLabel_623:
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOV       A,?V3
        LCALL     ?Subroutine15 & 0xFFFF
??CrossCallReturnLabel_14:
        MOV       A,R2
        ADD       A,#0x5
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        MOV       A,?V3
        JZ        ??ZDO_ProcessMatchDescReq_24
        MOV       A,R2
        ADD       A,#0xa
        MOV       R2,A
        CLR       A
        ADDC      A,R7
        LCALL     ?Subroutine37 & 0xFFFF
??CrossCallReturnLabel_348:
        ; Setup parameters for call to function osal_memcpy
        MOV       ?V4,?V14
        MOV       ?V5,?V15
        MOV       ?V6,#0x0
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 35)
        MOV       R4,?V3
        LCALL     ?Subroutine135 & 0xFFFF
??CrossCallReturnLabel_598:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 32)
        SJMP      ??ZDO_ProcessMatchDescReq_25
??ZDO_ProcessMatchDescReq_24:
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
??ZDO_ProcessMatchDescReq_25:
        MOV       A,R6
        ADD       A,#0x8
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        MOV       A,?V2
        JNZ       $+5
        LJMP      ??ZDO_ProcessMatchDescReq_12 & 0xFFFF
        MOV       R0,?V3
        MOV       A,R0
        ADD       A,R0
        MOV       R0,A
        CLR       A
        RLC       A
        MOV       R1,A
        MOV       A,R6
        ADD       A,R0
        MOV       R0,A
        MOV       A,R7
        ADDC      A,R1
        MOV       R1,A
        MOV       A,R0
        ADD       A,#0xa
        MOV       R2,A
        CLR       A
        ADDC      A,R1
        LCALL     ?Subroutine37 & 0xFFFF
??CrossCallReturnLabel_349:
        ; Setup parameters for call to function osal_memcpy
        MOV       ?V4,?V12
        MOV       ?V5,?V13
        MOV       ?V6,#0x0
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 35)
        MOV       R4,?V2
        LCALL     ?Subroutine135 & 0xFFFF
// 1038   }
??CrossCallReturnLabel_599:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 32)
        LJMP      ??ZDO_ProcessMatchDescReq_13 & 0xFFFF
// 1039 
// 1040   if ( epCnt )
??ZDO_ProcessMatchDescReq_17:
        MOV       A,?V7
        JZ        ??ZDO_ProcessMatchDescReq_26
// 1041   {
// 1042     // Send the message if at least one match found.
// 1043     if ( ZSuccess == ZDP_MatchDescRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZDP_SUCCESS,
// 1044               ZDAppNwkAddr.addr.shortAddr, epCnt, (uint8 *)ZDOBuildBuf, inMsg->SecurityUse ) )
        ; Setup parameters for call to function ZDP_EPRsp
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine55 & 0xFFFF
??CrossCallReturnLabel_90:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 33)
        MOV       ?V0,#ZDOBuildBuf & 0xff
        MOV       ?V1,#(ZDOBuildBuf >> 8) & 0xff
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 35)
        MOV       A,?V7
        MOV       ?V0,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 36)
        MOV       DPTR,#ZDAppNwkAddr
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 38)
        MOV       ?V0,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 39)
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine70 & 0xFFFF
??CrossCallReturnLabel_117:
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine52 & 0xFFFF
??CrossCallReturnLabel_86:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 32)
        MOV       A,R1
        JNZ       ??ZDO_ProcessMatchDescReq_27
// 1045     {
// 1046 #if defined( LCD_SUPPORTED )
// 1047       HalLcdWriteScreen( "Match Desc Req", "Rsp Sent" );
        ; Setup parameters for call to function HalLcdWriteScreen
        MOV       R4,#`?<Constant "Rsp Sent">` & 0xff
        MOV       R5,#(`?<Constant "Rsp Sent">` >> 8) & 0xff
        SJMP      ??ZDO_ProcessMatchDescReq_28
// 1048 #endif
// 1049     }
// 1050   }
// 1051   else
// 1052   {
// 1053     if (!inMsg->wasBroadcast)
??ZDO_ProcessMatchDescReq_26:
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine73 & 0xFFFF
??CrossCallReturnLabel_124:
        JNZ       ??ZDO_ProcessMatchDescReq_29
// 1054     {
// 1055       // send response message with match length = 0
// 1056       ZDP_MatchDescRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZDP_SUCCESS,
// 1057                         ZDAppNwkAddr.addr.shortAddr, 0, (uint8 *)ZDOBuildBuf, inMsg->SecurityUse );
        ; Setup parameters for call to function ZDP_EPRsp
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine55 & 0xFFFF
??CrossCallReturnLabel_91:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 33)
        MOV       ?V0,#ZDOBuildBuf & 0xff
        MOV       ?V1,#(ZDOBuildBuf >> 8) & 0xff
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 35)
        MOV       ?V0,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 36)
        MOV       DPTR,#ZDAppNwkAddr
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 38)
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 39)
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine70 & 0xFFFF
??CrossCallReturnLabel_118:
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine52 & 0xFFFF
??CrossCallReturnLabel_87:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 32)
// 1058 #if defined( LCD_SUPPORTED )
// 1059       HalLcdWriteScreen( "Match Desc Req", "Rsp Non Matched" );
        ; Setup parameters for call to function HalLcdWriteScreen
        MOV       R4,#`?<Constant "Rsp Non Matched">` & 0xff
        MOV       R5,#(`?<Constant "Rsp Non Matched">` >> 8) & 0xff
        SJMP      ??ZDO_ProcessMatchDescReq_28
// 1060 #endif
// 1061     }
// 1062     else
// 1063     {
// 1064       // no response mesage for broadcast message
// 1065 #if defined( LCD_SUPPORTED )
// 1066       HalLcdWriteScreen( "Match Desc Req", "Non Matched" );
??ZDO_ProcessMatchDescReq_29:
        ; Setup parameters for call to function HalLcdWriteScreen
        MOV       R4,#`?<Constant "Non Matched">` & 0xff
        MOV       R5,#(`?<Constant "Non Matched">` >> 8) & 0xff
??ZDO_ProcessMatchDescReq_28:
        MOV       R2,#`?<Constant "Match Desc Req">` & 0xff
        MOV       R3,#(`?<Constant "Match Desc Req">` >> 8) & 0xff
        LCALL     `??HalLcdWriteScreen::?relay`; Banked call to: HalLcdWriteScreen
// 1067 #endif
// 1068     }
// 1069   }
// 1070 
// 1071   if ( inClusters != NULL )
??ZDO_ProcessMatchDescReq_27:
        MOV       A,?V14
        ORL       A,?V15
        JZ        ??ZDO_ProcessMatchDescReq_30
// 1072   {
// 1073     osal_mem_free( inClusters );
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V14
        MOV       R3,?V15
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 1074   }
// 1075 
// 1076   if ( outClusters != NULL )
??ZDO_ProcessMatchDescReq_30:
        MOV       A,?V12
        ORL       A,?V13
        JZ        ??ZDO_ProcessMatchDescReq_1
// 1077   {
// 1078     osal_mem_free( outClusters );
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V12
        MOV       R3,?V13
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 1079   }
// 1080 }
??ZDO_ProcessMatchDescReq_1:
        MOV       A,#0x8
          CFI EndBlock cfiBlock92
        REQUIRE ?Subroutine6
        ; // Fall through to label ?Subroutine6

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine6:
          CFI Block cfiBlock93 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 32)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock93
        REQUIRE ??Subroutine193_0
        ; // Fall through to label ??Subroutine193_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine193_0:
          CFI Block cfiBlock94 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0x10
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock94

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine108:
          CFI Block cfiCond95 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_176
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond96 Using cfiCommon0
          CFI (cfiCond96) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond96) Conditional ??CrossCallReturnLabel_177
          CFI (cfiCond96) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond96) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond96) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond96) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond96) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond96) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond96) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond96) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond96) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond96) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond96) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond96) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond96) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond96) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond96) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond96) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond96) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond96) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond96) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond96) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond96) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond96) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond96) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond96) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond96) CFA_SP SP+-2
          CFI (cfiCond96) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiPicker97 Using cfiCommon1
          CFI (cfiPicker97) NoFunction
          CFI (cfiPicker97) Picker
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine180 & 0xFFFF
??CrossCallReturnLabel_306:
        RET
          CFI EndBlock cfiCond95
          CFI EndBlock cfiCond96
          CFI EndBlock cfiPicker97

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine180:
          CFI Block cfiCond98 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_306, ??CrossCallReturnLabel_176
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond99 Using cfiCommon0
          CFI (cfiCond99) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond99) Conditional ??CrossCallReturnLabel_306, ??CrossCallReturnLabel_177
          CFI (cfiCond99) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond99) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond99) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond99) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond99) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond99) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond99) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond99) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond99) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond99) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond99) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond99) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond99) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond99) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond99) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond99) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond99) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond99) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond99) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond99) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond99) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond99) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond99) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond99) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond99) CFA_SP SP+-4
          CFI (cfiCond99) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond100 Using cfiCommon0
          CFI (cfiCond100) Function ZDO_ProcessNodeDescReq
          CFI (cfiCond100) Conditional ??CrossCallReturnLabel_307, ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_94
          CFI (cfiCond100) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond100) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond100) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond100) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond100) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond100) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond100) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond100) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond100) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond100) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond100) CFA_SP SP+-6
          CFI (cfiCond100) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond101 Using cfiCommon0
          CFI (cfiCond101) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond101) Conditional ??CrossCallReturnLabel_307, ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_95
          CFI (cfiCond101) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond101) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond101) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond101) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond101) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond101) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond101) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond101) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond101) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond101) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond101) CFA_SP SP+-6
          CFI (cfiCond101) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond102 Using cfiCommon0
          CFI (cfiCond102) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond102) Conditional ??CrossCallReturnLabel_307, ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_137
          CFI (cfiCond102) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond102) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond102) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond102) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond102) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond102) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond102) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond102) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond102) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond102) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond102) CFA_SP SP+-6
          CFI (cfiCond102) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond103 Using cfiCommon0
          CFI (cfiCond103) Function ZDO_ProcessUserDescReq
          CFI (cfiCond103) Conditional ??CrossCallReturnLabel_307, ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_138
          CFI (cfiCond103) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond103) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond103) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond103) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond103) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond103) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond103) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond103) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond103) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond103) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond103) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond103) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond103) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond103) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond103) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond103) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond103) CFA_SP SP+-6
          CFI (cfiCond103) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker104 Using cfiCommon1
          CFI (cfiPicker104) NoFunction
          CFI (cfiPicker104) Picker
        MOVX      A,@DPTR
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       DPL,R0
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond98
          CFI EndBlock cfiCond99
          CFI EndBlock cfiCond100
          CFI EndBlock cfiCond101
          CFI EndBlock cfiCond102
          CFI EndBlock cfiCond103
          CFI EndBlock cfiPicker104

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine107:
          CFI Block cfiCond105 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_338
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond106 Using cfiCommon0
          CFI (cfiCond106) Function ZDO_ParseParentAnnce
          CFI (cfiCond106) Conditional ??CrossCallReturnLabel_339
          CFI (cfiCond106) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond106) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond106) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond106) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond106) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond106) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond106) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond106) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond106) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond106) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond106) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond106) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond106) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond106) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond106) CFA_SP SP+-2
          CFI (cfiCond106) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker107 Using cfiCommon1
          CFI (cfiPicker107) NoFunction
          CFI (cfiPicker107) Picker
        LCALL     ??Subroutine228_0 & 0xFFFF
??CrossCallReturnLabel_510:
          CFI EndBlock cfiCond105
          CFI EndBlock cfiCond106
          CFI EndBlock cfiPicker107
        REQUIRE ??Subroutine194_0
        ; // Fall through to label ??Subroutine194_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine194_0:
          CFI Block cfiCond108 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLeaveReq
          CFI Conditional ??CrossCallReturnLabel_337
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond109 Using cfiCommon0
          CFI (cfiCond109) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond109) Conditional ??CrossCallReturnLabel_338
          CFI (cfiCond109) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond109) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond109) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond109) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond109) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond109) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond109) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond109) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond109) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond109) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond109) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond109) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond109) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond109) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond109) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond109) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond109) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond109) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond109) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond109) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond109) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond109) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond109) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond109) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond109) CFA_SP SP+-2
          CFI (cfiCond109) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond110 Using cfiCommon0
          CFI (cfiCond110) Function ZDO_ParseParentAnnce
          CFI (cfiCond110) Conditional ??CrossCallReturnLabel_339
          CFI (cfiCond110) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond110) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond110) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond110) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond110) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond110) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond110) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond110) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond110) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond110) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond110) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond110) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond110) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond110) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond110) CFA_SP SP+-2
          CFI (cfiCond110) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker111 Using cfiCommon1
          CFI (cfiPicker111) NoFunction
          CFI (cfiPicker111) Picker
        MOV       DPH,A
          CFI EndBlock cfiCond108
          CFI EndBlock cfiCond109
          CFI EndBlock cfiCond110
          CFI EndBlock cfiPicker111
        REQUIRE ??Subroutine195_0
        ; // Fall through to label ??Subroutine195_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine195_0:
          CFI Block cfiCond112 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_336
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond113 Using cfiCommon0
          CFI (cfiCond113) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond113) Conditional ??CrossCallReturnLabel_337
          CFI (cfiCond113) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond113) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond113) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond113) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond113) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond113) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond113) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond113) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond113) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond113) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond113) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond113) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond113) CFA_SP SP+-2
          CFI (cfiCond113) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond114 Using cfiCommon0
          CFI (cfiCond114) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond114) Conditional ??CrossCallReturnLabel_338
          CFI (cfiCond114) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond114) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond114) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond114) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond114) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond114) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond114) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond114) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond114) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond114) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond114) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond114) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond114) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond114) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond114) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond114) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond114) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond114) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond114) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond114) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond114) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond114) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond114) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond114) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond114) CFA_SP SP+-2
          CFI (cfiCond114) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond115 Using cfiCommon0
          CFI (cfiCond115) Function ZDO_ParseParentAnnce
          CFI (cfiCond115) Conditional ??CrossCallReturnLabel_339
          CFI (cfiCond115) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond115) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond115) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond115) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond115) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond115) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond115) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond115) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond115) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond115) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond115) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond115) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond115) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond115) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond115) CFA_SP SP+-2
          CFI (cfiCond115) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker116 Using cfiCommon1
          CFI (cfiPicker116) NoFunction
          CFI (cfiPicker116) Picker
        LCALL     ??Subroutine231_0 & 0xFFFF
??CrossCallReturnLabel_545:
        MOV       R7,A
        RET
          CFI EndBlock cfiCond112
          CFI EndBlock cfiCond113
          CFI EndBlock cfiCond114
          CFI EndBlock cfiCond115
          CFI EndBlock cfiPicker116

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine70:
          CFI Block cfiCond117 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_115
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 39)
          CFI Block cfiCond118 Using cfiCommon0
          CFI (cfiCond118) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond118) Conditional ??CrossCallReturnLabel_116
          CFI (cfiCond118) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond118) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond118) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond118) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond118) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond118) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond118) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond118) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond118) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond118) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond118) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond118) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond118) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond118) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond118) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond118) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond118) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond118) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond118) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond118) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond118) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond118) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond118) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond118) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond118) CFA_SP SP+-2
          CFI (cfiCond118) CFA_XSP16 add(XSP16, 39)
          CFI Block cfiCond119 Using cfiCommon0
          CFI (cfiCond119) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond119) Conditional ??CrossCallReturnLabel_117
          CFI (cfiCond119) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond119) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond119) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond119) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond119) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond119) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond119) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond119) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond119) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond119) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond119) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond119) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond119) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond119) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond119) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond119) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond119) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond119) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond119) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond119) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond119) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond119) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond119) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond119) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond119) CFA_SP SP+-2
          CFI (cfiCond119) CFA_XSP16 add(XSP16, 39)
          CFI Block cfiCond120 Using cfiCommon0
          CFI (cfiCond120) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond120) Conditional ??CrossCallReturnLabel_118
          CFI (cfiCond120) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond120) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond120) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond120) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond120) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond120) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond120) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond120) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond120) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond120) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond120) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond120) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond120) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond120) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond120) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond120) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond120) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond120) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond120) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond120) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond120) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond120) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond120) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond120) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond120) CFA_SP SP+-2
          CFI (cfiCond120) CFA_XSP16 add(XSP16, 39)
          CFI Block cfiPicker121 Using cfiCommon1
          CFI (cfiPicker121) NoFunction
          CFI (cfiPicker121) Picker
        MOVX      A,@DPTR
        MOV       R4,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R5,A
        MOV       A,#0xd
        RET
          CFI EndBlock cfiCond117
          CFI EndBlock cfiCond118
          CFI EndBlock cfiCond119
          CFI EndBlock cfiCond120
          CFI EndBlock cfiPicker121

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine55:
          CFI Block cfiCond122 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_88
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond123 Using cfiCommon0
          CFI (cfiCond123) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond123) Conditional ??CrossCallReturnLabel_89
          CFI (cfiCond123) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond123) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond123) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond123) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond123) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond123) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond123) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond123) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond123) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond123) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond123) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond123) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond123) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond123) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond123) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond123) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond123) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond123) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond123) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond123) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond123) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond123) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond123) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond123) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond123) CFA_SP SP+-2
          CFI (cfiCond123) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond124 Using cfiCommon0
          CFI (cfiCond124) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond124) Conditional ??CrossCallReturnLabel_90
          CFI (cfiCond124) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond124) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond124) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond124) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond124) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond124) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond124) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond124) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond124) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond124) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond124) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond124) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond124) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond124) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond124) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond124) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond124) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond124) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond124) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond124) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond124) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond124) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond124) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond124) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond124) CFA_SP SP+-2
          CFI (cfiCond124) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond125 Using cfiCommon0
          CFI (cfiCond125) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond125) Conditional ??CrossCallReturnLabel_91
          CFI (cfiCond125) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond125) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond125) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond125) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond125) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond125) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond125) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond125) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond125) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond125) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond125) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond125) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond125) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond125) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond125) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond125) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond125) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond125) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond125) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond125) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond125) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond125) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond125) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond125) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond125) CFA_SP SP+-2
          CFI (cfiCond125) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiPicker126 Using cfiCommon1
          CFI (cfiPicker126) NoFunction
          CFI (cfiPicker126) Picker
        LCALL     ?Subroutine159 & 0xFFFF
??CrossCallReturnLabel_317:
        MOV       ?V0,A
        MOV       R0,#?V0
        RET
          CFI EndBlock cfiCond122
          CFI EndBlock cfiCond123
          CFI EndBlock cfiCond124
          CFI EndBlock cfiCond125
          CFI EndBlock cfiPicker126

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine52:
          CFI Block cfiCond127 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_84
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 39)
          CFI Block cfiCond128 Using cfiCommon0
          CFI (cfiCond128) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond128) Conditional ??CrossCallReturnLabel_85
          CFI (cfiCond128) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond128) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond128) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond128) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond128) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond128) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond128) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond128) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond128) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond128) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond128) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond128) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond128) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond128) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond128) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond128) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond128) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond128) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond128) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond128) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond128) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond128) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond128) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond128) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond128) CFA_SP SP+-2
          CFI (cfiCond128) CFA_XSP16 add(XSP16, 39)
          CFI Block cfiCond129 Using cfiCommon0
          CFI (cfiCond129) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond129) Conditional ??CrossCallReturnLabel_86
          CFI (cfiCond129) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond129) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond129) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond129) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond129) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond129) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond129) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond129) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond129) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond129) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond129) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond129) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond129) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond129) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond129) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond129) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond129) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond129) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond129) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond129) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond129) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond129) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond129) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond129) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond129) CFA_SP SP+-2
          CFI (cfiCond129) CFA_XSP16 add(XSP16, 39)
          CFI Block cfiCond130 Using cfiCommon0
          CFI (cfiCond130) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond130) Conditional ??CrossCallReturnLabel_87
          CFI (cfiCond130) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond130) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond130) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond130) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond130) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond130) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond130) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond130) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond130) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond130) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond130) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond130) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond130) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond130) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond130) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond130) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond130) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond130) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond130) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond130) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond130) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond130) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond130) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond130) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond130) CFA_SP SP+-2
          CFI (cfiCond130) CFA_XSP16 add(XSP16, 39)
          CFI Block cfiPicker131 Using cfiCommon1
          CFI (cfiPicker131) NoFunction
          CFI (cfiPicker131) Picker
        LCALL     ?Subroutine159 & 0xFFFF
??CrossCallReturnLabel_316:
        MOV       R1,A
        MOV       R2,#0x6
        MOV       R3,#-0x80
        LCALL     `??ZDP_EPRsp::?relay`; Banked call to: ZDP_EPRsp
        MOV       A,#0x7
        RET
          CFI EndBlock cfiCond127
          CFI EndBlock cfiCond128
          CFI EndBlock cfiCond129
          CFI EndBlock cfiCond130
          CFI EndBlock cfiPicker131
// 1081 
// 1082 #if defined ( REFLECTOR )
// 1083 /*********************************************************************
// 1084  * @fn      ZDO_ProcessBindUnbindReq()
// 1085  *
// 1086  * @brief   Called to process a Bind or Unbind Request message.
// 1087  *
// 1088  * @param   inMsg  - incoming message (request)
// 1089  * @param   pReq - place to put parsed information
// 1090  *
// 1091  * @return  none
// 1092  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1093 void ZDO_ProcessBindUnbindReq( zdoIncomingMsg_t *inMsg, ZDO_BindUnbindReq_t *pReq )
ZDO_ProcessBindUnbindReq:
          CFI Block cfiBlock132 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
        CODE
// 1094 {
        FUNCALL ZDO_ProcessBindUnbindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, NLME_GetExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, APSME_BindRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, ZDApp_NVUpdate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, APSME_LookupNwkAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, ZDP_NwkAddrReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, APSME_UnBindRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, ZDApp_NVUpdate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 34, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        MOV       A,#-0x11
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 17)
        ; Saved register size: 17
        ; Auto size: 12
        MOV       A,#-0xc
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       ?V0,R2
        MOV       ?V1,R3
        MOV       A,R4
        MOV       R6,A
        MOV       A,R5
        MOV       R7,A
// 1095   zAddrType_t SourceAddr;       // Binding Source addres
// 1096   byte bindStat;
// 1097 
// 1098   SourceAddr.addrMode = Addr64Bit;
        MOV       A,#0xb
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x3
        MOVX      @DPTR,A
// 1099   osal_cpyExtAddr( SourceAddr.addr.extAddr, pReq->srcAddress );
        ; Setup parameters for call to function sAddrExtCpy
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 1100 
// 1101   // If the local device is not the primary binding cache
// 1102   // check the src address of the bind request.
// 1103   // If it is not the local device's extended address
// 1104   // discard the request.
// 1105   if ( !osal_ExtAddrEqual( SourceAddr.addr.extAddr, NLME_GetExtAddr()) ||
// 1106         (pReq->dstAddress.addrMode != Addr64Bit &&
// 1107          pReq->dstAddress.addrMode != AddrGroup) )
        ; Setup parameters for call to function NLME_GetExtAddr
        LCALL     ?Subroutine112 & 0xFFFF
??CrossCallReturnLabel_180:
        MOV       A,?V0
        ADD       A,#0xc
        MOV       ?V4,A
        CLR       A
        ADDC      A,?V1
        MOV       ?V5,A
        ; Setup parameters for call to function sAddrExtCmp
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??sAddrExtCmp::?relay`; Banked call to: sAddrExtCmp
        MOV       A,R1
        JZ        ??ZDO_ProcessBindUnbindReq_0
        MOV       A,R6
        ADD       A,#0x13
        MOV       ?V2,A
        CLR       A
        ADDC      A,R7
        MOV       ?V3,A
        MOV       DPL,?V2
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       ?V8,A
        MOV       A,#0x3
        XRL       A,?V8
        JZ        ??ZDO_ProcessBindUnbindReq_1
        MOV       A,#0x1
        XRL       A,?V8
        JZ        ??ZDO_ProcessBindUnbindReq_1
// 1108   {
// 1109     bindStat = ZDP_NOT_SUPPORTED;
??ZDO_ProcessBindUnbindReq_0:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,#-0x7c
        LJMP      ??ZDO_ProcessBindUnbindReq_2 & 0xFFFF
// 1110   }
// 1111   else
// 1112   {
// 1113     // Check source & destination endpoints
// 1114     if ( (pReq->srcEndpoint == 0 || pReq->srcEndpoint > MAX_ENDPOINTS)
// 1115         || (( pReq->dstAddress.addrMode == Addr64Bit ) &&
// 1116             (pReq->dstEndpoint == 0 || pReq->dstEndpoint > MAX_ENDPOINTS)) )
??ZDO_ProcessBindUnbindReq_1:
        MOV       A,R6
        ADD       A,#0x8
        MOV       R0,A
        CLR       A
        ADDC      A,R7
        MOV       ?V6,R0
        MOV       ?V7,A
        MOV       DPL,R0
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       R1,A
        JZ        ??ZDO_ProcessBindUnbindReq_3
        MOV       A,#-0x1
        XRL       A,R1
        JZ        ??ZDO_ProcessBindUnbindReq_3
        MOV       A,R6
        ADD       A,#0x14
        MOV       R2,A
        CLR       A
        ADDC      A,R7
        MOV       R3,A
        MOV       A,R2
        MOV       R4,A
        MOV       A,R3
        MOV       R5,A
        MOV       A,#0x3
        XRL       A,?V8
        JNZ       ??ZDO_ProcessBindUnbindReq_4
        MOV       DPL,R2
        MOV       DPH,R3
        MOVX      A,@DPTR
        MOV       R0,A
        JZ        ??ZDO_ProcessBindUnbindReq_3
        MOV       A,#-0x1
        XRL       A,R0
        JNZ       ??ZDO_ProcessBindUnbindReq_4
// 1117     {
// 1118       bindStat = ZDP_INVALID_EP;
??ZDO_ProcessBindUnbindReq_3:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,#-0x7e
        LJMP      ??ZDO_ProcessBindUnbindReq_2 & 0xFFFF
// 1119     }
// 1120     else
// 1121     {
// 1122       if ( inMsg->clusterID == Bind_req )
??ZDO_ProcessBindUnbindReq_4:
        MOV       A,R6
        ADD       A,#0x9
        MOV       R2,A
        CLR       A
        ADDC      A,R7
        MOV       R3,A
        MOV       A,R6
        ADD       A,#0xb
        MOV       R6,A
        JNC       ??ZDO_ProcessBindUnbindReq_5
        INC       R7
??ZDO_ProcessBindUnbindReq_5:
        MOV       DPL,?V4
        MOV       DPH,?V5
        MOVX      A,@DPTR
        XRL       A,#0x21
        JNZ       ??ZDO_ProcessBindUnbindReq_6
        INC       DPTR
        MOVX      A,@DPTR
??ZDO_ProcessBindUnbindReq_6:
        JNZ       ??ZDO_ProcessBindUnbindReq_7
// 1123       {
// 1124         // Assume the table is full
// 1125         bindStat = ZDP_TABLE_FULL;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,#-0x74
        LCALL     ?Subroutine16 & 0xFFFF
// 1126 
// 1127 #if defined( APP_TP ) || defined( APP_TP2 )
// 1128         // For ZigBee Conformance Testing
// 1129         if ( bindNumOfEntries() < gNWK_MAX_BINDING_ENTRIES )
// 1130 #endif
// 1131         {
// 1132 #if defined ( ZDP_BIND_VALIDATION )
// 1133           uint16 nwkAddr;
// 1134 
// 1135           // Verifies that a valid NWK address exists for the device
// 1136           // before creating a Binding entry. If NWK address does not
// 1137           // exist the request is sent out and the BindReq is saved, to
// 1138           // create the Bind Entry once the NwkAddrRsp is received
// 1139           if ( ( pReq->dstAddress.addrMode == Addr64Bit ) &&
// 1140                ( APSME_LookupNwkAddr( pReq->dstAddress.addr.extAddr, &nwkAddr ) == FALSE ) )
// 1141           {
// 1142             // find an empty bind slot in the pending Bind Req list
// 1143             ZDO_PendingBindReq_t *pPendingBind;
// 1144 
// 1145             if ( ( pPendingBind = ZDApp_GetEmptyPendingBindReq() ) != NULL )
// 1146             {
// 1147               // copy the received request into the empty slot and all required info
// 1148               osal_memcpy( &(pPendingBind->bindReq), pReq, sizeof( ZDO_BindUnbindReq_t ) );
// 1149 
// 1150               pPendingBind->srcAddr = inMsg->srcAddr;
// 1151               pPendingBind->securityUse = inMsg->SecurityUse;
// 1152               pPendingBind->transSeq = inMsg->TransSeq;
// 1153               pPendingBind->age = MAX_TIME_ADDR_REQ;
// 1154 
// 1155               // create an entry in Address Manager
// 1156               ( void )bindAddrIndexGet( &(pReq->dstAddress) );
// 1157 
// 1158               ZDP_NwkAddrReq( pReq->dstAddress.addr.extAddr, ZDP_ADDR_REQTYPE_SINGLE, 0, 0 );
// 1159 
// 1160               osal_start_timerEx( ZDAppTaskID, ZDO_PENDING_BIND_REQ_EVT,
// 1161                                   AGE_OUT_PEND_BIND_REQ_DELAY );
// 1162               return;
// 1163             }
// 1164           }
// 1165           // Add Bind entry
// 1166           else if ( APSME_BindRequest( pReq->srcEndpoint, pReq->clusterID,
// 1167                                        &(pReq->dstAddress), pReq->dstEndpoint ) == ZSuccess )
// 1168           {
// 1169             // valid entry
// 1170             bindStat = ZDP_SUCCESS;
// 1171 
// 1172             // Notify to save info into NV
// 1173             ZDApp_NVUpdate();
// 1174           }
// 1175 #else // ZDP_BIND_VALIDATION  is not Defined
// 1176           // Create binding entry first independently of existance of  valid NWK addres
// 1177           // if NWK address does not exist a request is sent out
// 1178           if ( APSME_BindRequest( pReq->srcEndpoint, pReq->clusterID,
// 1179                          &(pReq->dstAddress), pReq->dstEndpoint ) == ZSuccess )
??CrossCallReturnLabel_16:
        MOVX      A,@DPTR
        MOV       ?V8,A
        MOV       R0,#?V8
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        MOV       DPL,R2
        MOV       DPH,R3
        LCALL     ??Subroutine206_0 & 0xFFFF
??CrossCallReturnLabel_396:
        MOV       DPL,?V6
        MOV       DPH,?V7
        MOVX      A,@DPTR
        MOV       R1,A
        LCALL     `??APSME_BindRequest::?relay`; Banked call to: APSME_BindRequest
        MOV       A,#0x1
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       A,R1
        JNZ       ??ZDO_ProcessBindUnbindReq_8
// 1180           {
// 1181             uint16 nwkAddr;
// 1182 
// 1183             // valid entry
// 1184             bindStat = ZDP_SUCCESS;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        CLR       A
        MOVX      @DPTR,A
// 1185 
// 1186             // Notify to save info into NV
// 1187             ZDApp_NVUpdate();
        ; Setup parameters for call to function ZDApp_NVUpdate
        LCALL     `??ZDApp_NVUpdate::?relay`; Banked call to: ZDApp_NVUpdate
// 1188 
// 1189             // Check for the destination address
// 1190             if ( pReq->dstAddress.addrMode == Addr64Bit )
        MOV       DPL,?V2
        MOV       DPH,?V3
        MOVX      A,@DPTR
        XRL       A,#0x3
        JNZ       ??ZDO_ProcessBindUnbindReq_8
// 1191             {
// 1192               if ( APSME_LookupNwkAddr( pReq->dstAddress.addr.extAddr, &nwkAddr ) == FALSE )
        ; Setup parameters for call to function APSME_LookupNwkAddr
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP102_8
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        LCALL     `??APSME_LookupNwkAddr::?relay`; Banked call to: APSME_LookupNwkAddr
        MOV       A,R1
        JNZ       ??ZDO_ProcessBindUnbindReq_8
// 1193               {
// 1194                 ZDP_NwkAddrReq( pReq->dstAddress.addr.extAddr, ZDP_ADDR_REQTYPE_SINGLE, 0, 0 );
        ; Setup parameters for call to function ZDP_NwkAddrReq
        MOV       R5,#0x0
        MOV       R4,#0x0
        MOV       R1,#0x0
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        LCALL     `??ZDP_NwkAddrReq::?relay`; Banked call to: ZDP_NwkAddrReq
        SJMP      ??ZDO_ProcessBindUnbindReq_8
// 1195               }
// 1196             }
// 1197           }
// 1198 #endif
// 1199         }
// 1200       }
// 1201       else // Unbind_req
// 1202       {
// 1203         if ( APSME_UnBindRequest( pReq->srcEndpoint, pReq->clusterID,
// 1204                        &(pReq->dstAddress), pReq->dstEndpoint ) == ZSuccess )
??ZDO_ProcessBindUnbindReq_7:
        ; Setup parameters for call to function APSME_UnBindRequest
        MOV       DPL,R4
        MOV       DPH,R5
        MOVX      A,@DPTR
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        MOV       DPL,R2
        MOV       DPH,R3
        LCALL     ??Subroutine206_0 & 0xFFFF
??CrossCallReturnLabel_397:
        LCALL     `??APSME_UnBindRequest::?relay`; Banked call to: APSME_UnBindRequest
        MOV       A,#0x1
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       A,R1
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        JNZ       ??ZDO_ProcessBindUnbindReq_9
// 1205         {
// 1206           bindStat = ZDP_SUCCESS;
        CLR       A
        MOVX      @DPTR,A
// 1207 
// 1208           // Notify to save info into NV
// 1209           ZDApp_NVUpdate();
        ; Setup parameters for call to function ZDApp_NVUpdate
        LCALL     `??ZDApp_NVUpdate::?relay`; Banked call to: ZDApp_NVUpdate
        SJMP      ??ZDO_ProcessBindUnbindReq_8
// 1210         }
// 1211         else
// 1212           bindStat = ZDP_NO_ENTRY;
??ZDO_ProcessBindUnbindReq_9:
        MOV       A,#-0x78
??ZDO_ProcessBindUnbindReq_2:
        MOVX      @DPTR,A
// 1213       }
// 1214     }
// 1215   }
// 1216 
// 1217   // Send back a response message
// 1218   ZDP_SendData( &(inMsg->TransSeq), &(inMsg->srcAddr),
// 1219                (inMsg->clusterID | ZDO_RESPONSE_BIT), 1, &bindStat,
// 1220                inMsg->SecurityUse );
??ZDO_ProcessBindUnbindReq_8:
        ; Setup parameters for call to function ZDP_SendData
        LCALL     ?Subroutine124 & 0xFFFF
??CrossCallReturnLabel_217:
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V2,R0
        MOV       ?V3,R1
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 32)
        MOV       DPL,?V4
        MOV       DPH,?V5
        LCALL     ??Subroutine203_0 & 0xFFFF
??CrossCallReturnLabel_385:
        ORL       A,#0x80
        MOV       ?V3,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 34)
        LCALL     ?Subroutine126 & 0xFFFF
??CrossCallReturnLabel_224:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
// 1221 }
        MOV       A,#0xc
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 17)
        MOV       R7,#0x9
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock132
// 1222 #endif // REFLECTOR
// 1223 
// 1224 /*********************************************************************
// 1225  * @fn      ZDO_UpdateAddrManager
// 1226  *
// 1227  * @brief   Update the Address Manager.
// 1228  *
// 1229  * @param   nwkAddr - network address
// 1230  * @param   extAddr - extended address
// 1231  *
// 1232  * @return  none
// 1233  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1234 void ZDO_UpdateAddrManager( uint16 nwkAddr, uint8 *extAddr )
ZDO_UpdateAddrManager:
          CFI Block cfiBlock133 Using cfiCommon0
          CFI Function ZDO_UpdateAddrManager
        CODE
// 1235 {
        FUNCALL ZDO_UpdateAddrManager, AddrMgrExtAddrSet
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_UpdateAddrManager, AddrMgrEntryUpdate
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH      DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH      DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 13
        MOV       A,#-0xd
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
// 1236   AddrMgrEntry_t addrEntry;
// 1237 
// 1238   // Update the address manager
// 1239   addrEntry.user = ADDRMGR_USER_DEFAULT;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        CLR       A
        MOVX      @DPTR,A
// 1240   addrEntry.nwkAddr = nwkAddr;
        INC       A
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine196_0 & 0xFFFF
// 1241   AddrMgrExtAddrSet( addrEntry.extAddr, extAddr );
??CrossCallReturnLabel_344:
        ; Setup parameters for call to function AddrMgrExtAddrSet
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        MOV       R2,DPL
        MOV       R3,DPH
        LCALL     `??AddrMgrExtAddrSet::?relay`; Banked call to: AddrMgrExtAddrSet
// 1242   AddrMgrEntryUpdate( &addrEntry );
        ; Setup parameters for call to function AddrMgrEntryUpdate
        MOV       R2,?XSP + 0
        MOV       R3,?XSP + 1
        LCALL     `??AddrMgrEntryUpdate::?relay`; Banked call to: AddrMgrEntryUpdate
// 1243 }
        MOV       A,#0xd
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 XSP16+0
        LJMP      ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock133

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine37:
          CFI Block cfiCond134 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_348
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond135 Using cfiCommon0
          CFI (cfiCond135) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond135) Conditional ??CrossCallReturnLabel_349
          CFI (cfiCond135) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond135) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond135) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond135) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond135) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond135) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond135) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond135) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond135) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond135) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond135) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond135) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond135) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond135) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond135) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond135) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond135) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond135) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond135) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond135) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond135) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond135) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond135) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond135) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond135) CFA_SP SP+-2
          CFI (cfiCond135) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiPicker136 Using cfiCommon1
          CFI (cfiPicker136) NoFunction
          CFI (cfiPicker136) Picker
        MOV       R3,A
          CFI EndBlock cfiCond134
          CFI EndBlock cfiCond135
          CFI EndBlock cfiPicker136
        REQUIRE ??Subroutine196_0
        ; // Fall through to label ??Subroutine196_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine196_0:
          CFI Block cfiCond137 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_342
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond138 Using cfiCommon0
          CFI (cfiCond138) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond138) Conditional ??CrossCallReturnLabel_343
          CFI (cfiCond138) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond138) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond138) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond138) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond138) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond138) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond138) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond138) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond138) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond138) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond138) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond138) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond138) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond138) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond138) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond138) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond138) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond138) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond138) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond138) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond138) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond138) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond138) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond138) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond138) CFA_SP SP+-2
          CFI (cfiCond138) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond139 Using cfiCommon0
          CFI (cfiCond139) Function ZDO_UpdateAddrManager
          CFI (cfiCond139) Conditional ??CrossCallReturnLabel_344
          CFI (cfiCond139) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond139) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond139) CFA_SP SP+-7
          CFI (cfiCond139) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond140 Using cfiCommon0
          CFI (cfiCond140) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond140) Conditional ??CrossCallReturnLabel_345
          CFI (cfiCond140) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond140) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond140) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond140) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond140) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond140) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond140) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond140) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond140) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond140) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond140) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond140) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond140) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond140) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond140) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond140) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond140) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond140) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond140) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond140) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond140) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond140) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond140) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond140) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond140) CFA_SP SP+-2
          CFI (cfiCond140) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond141 Using cfiCommon0
          CFI (cfiCond141) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond141) Conditional ??CrossCallReturnLabel_346
          CFI (cfiCond141) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond141) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond141) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond141) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond141) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond141) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond141) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond141) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond141) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond141) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond141) CFA_SP SP+-2
          CFI (cfiCond141) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond142 Using cfiCommon0
          CFI (cfiCond142) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond142) Conditional ??CrossCallReturnLabel_347
          CFI (cfiCond142) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond142) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond142) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond142) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond142) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond142) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond142) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond142) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond142) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond142) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond142) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond142) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond142) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond142) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond142) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond142) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond142) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond142) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond142) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond142) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond142) CFA_SP SP+-2
          CFI (cfiCond142) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond143 Using cfiCommon0
          CFI (cfiCond143) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond143) Conditional ??CrossCallReturnLabel_348
          CFI (cfiCond143) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond143) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond143) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond143) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond143) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond143) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond143) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond143) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond143) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond143) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond143) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond143) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond143) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond143) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond143) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond143) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond143) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond143) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond143) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond143) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond143) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond143) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond143) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond143) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond143) CFA_SP SP+-2
          CFI (cfiCond143) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond144 Using cfiCommon0
          CFI (cfiCond144) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond144) Conditional ??CrossCallReturnLabel_349
          CFI (cfiCond144) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond144) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond144) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond144) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond144) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond144) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond144) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond144) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond144) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond144) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond144) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond144) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond144) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond144) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond144) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond144) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond144) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond144) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond144) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond144) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond144) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond144) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond144) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond144) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond144) CFA_SP SP+-2
          CFI (cfiCond144) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiPicker145 Using cfiCommon1
          CFI (cfiPicker145) NoFunction
          CFI (cfiPicker145) Picker
        MOV       A,R2
          CFI EndBlock cfiCond137
          CFI EndBlock cfiCond138
          CFI EndBlock cfiCond139
          CFI EndBlock cfiCond140
          CFI EndBlock cfiCond141
          CFI EndBlock cfiCond142
          CFI EndBlock cfiCond143
          CFI EndBlock cfiCond144
          CFI EndBlock cfiPicker145
        REQUIRE ??Subroutine197_0
        ; // Fall through to label ??Subroutine197_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine197_0:
          CFI Block cfiCond146 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_340
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond147 Using cfiCommon0
          CFI (cfiCond147) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond147) Conditional ??CrossCallReturnLabel_341
          CFI (cfiCond147) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond147) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond147) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond147) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond147) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond147) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond147) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond147) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond147) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond147) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond147) CFA_SP SP+-2
          CFI (cfiCond147) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond148 Using cfiCommon0
          CFI (cfiCond148) Function ZDO_UpdateNwkStatus
          CFI (cfiCond148) Conditional ??CrossCallReturnLabel_342
          CFI (cfiCond148) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond148) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond148) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond148) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond148) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond148) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond148) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond148) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond148) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond148) CFA_SP SP+-2
          CFI (cfiCond148) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond149 Using cfiCommon0
          CFI (cfiCond149) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond149) Conditional ??CrossCallReturnLabel_343
          CFI (cfiCond149) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond149) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond149) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond149) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond149) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond149) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond149) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond149) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond149) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond149) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond149) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond149) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond149) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond149) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond149) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond149) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond149) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond149) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond149) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond149) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond149) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond149) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond149) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond149) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond149) CFA_SP SP+-2
          CFI (cfiCond149) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond150 Using cfiCommon0
          CFI (cfiCond150) Function ZDO_UpdateAddrManager
          CFI (cfiCond150) Conditional ??CrossCallReturnLabel_344
          CFI (cfiCond150) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond150) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond150) CFA_SP SP+-7
          CFI (cfiCond150) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond151 Using cfiCommon0
          CFI (cfiCond151) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond151) Conditional ??CrossCallReturnLabel_345
          CFI (cfiCond151) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond151) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond151) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond151) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond151) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond151) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond151) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond151) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond151) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond151) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond151) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond151) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond151) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond151) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond151) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond151) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond151) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond151) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond151) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond151) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond151) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond151) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond151) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond151) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond151) CFA_SP SP+-2
          CFI (cfiCond151) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond152 Using cfiCommon0
          CFI (cfiCond152) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond152) Conditional ??CrossCallReturnLabel_346
          CFI (cfiCond152) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond152) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond152) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond152) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond152) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond152) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond152) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond152) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond152) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond152) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond152) CFA_SP SP+-2
          CFI (cfiCond152) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond153 Using cfiCommon0
          CFI (cfiCond153) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond153) Conditional ??CrossCallReturnLabel_347
          CFI (cfiCond153) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond153) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond153) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond153) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond153) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond153) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond153) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond153) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond153) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond153) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond153) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond153) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond153) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond153) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond153) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond153) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond153) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond153) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond153) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond153) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond153) CFA_SP SP+-2
          CFI (cfiCond153) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond154 Using cfiCommon0
          CFI (cfiCond154) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond154) Conditional ??CrossCallReturnLabel_348
          CFI (cfiCond154) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond154) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond154) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond154) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond154) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond154) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond154) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond154) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond154) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond154) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond154) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond154) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond154) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond154) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond154) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond154) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond154) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond154) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond154) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond154) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond154) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond154) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond154) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond154) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond154) CFA_SP SP+-2
          CFI (cfiCond154) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond155 Using cfiCommon0
          CFI (cfiCond155) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond155) Conditional ??CrossCallReturnLabel_349
          CFI (cfiCond155) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond155) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond155) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond155) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond155) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond155) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond155) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond155) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond155) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond155) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond155) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond155) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond155) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond155) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond155) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond155) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond155) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond155) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond155) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond155) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond155) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond155) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond155) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond155) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond155) CFA_SP SP+-2
          CFI (cfiCond155) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiPicker156 Using cfiCommon1
          CFI (cfiPicker156) NoFunction
          CFI (cfiPicker156) Picker
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R3
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond146
          CFI EndBlock cfiCond147
          CFI EndBlock cfiCond148
          CFI EndBlock cfiCond149
          CFI EndBlock cfiCond150
          CFI EndBlock cfiCond151
          CFI EndBlock cfiCond152
          CFI EndBlock cfiCond153
          CFI EndBlock cfiCond154
          CFI EndBlock cfiCond155
          CFI EndBlock cfiPicker156
// 1244 
// 1245 /*********************************************************************
// 1246  * @fn      ZDO_ProcessServerDiscReq
// 1247  *
// 1248  * @brief   Process the Server_Discovery_req message.
// 1249  *
// 1250  * @param   inMsg  - incoming message (request)
// 1251  *
// 1252  * @return  none
// 1253  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1254 void ZDO_ProcessServerDiscReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessServerDiscReq:
          CFI Block cfiBlock157 Using cfiCommon0
          CFI Function ZDO_ProcessServerDiscReq
        CODE
// 1255 {
        FUNCALL ZDO_ProcessServerDiscReq, ZDP_ServerDiscRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        LCALL     ?Subroutine80 & 0xFFFF
// 1256   uint16 serverMask = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
// 1257   uint16 matchMask = serverMask & ZDO_Config_Node_Descriptor.ServerMask;
??CrossCallReturnLabel_137:
        MOV       R1,A
        MOV       A,R2
        MOV       R0,A
        MOV       DPTR,#ZDO_Config_Node_Descriptor + 8
        MOVX      A,@DPTR
        ANL       A,R0
        MOV       ?V0,A
        INC       DPTR
        MOVX      A,@DPTR
        ANL       A,R1
        MOV       ?V1,A
// 1258 
// 1259   if ( matchMask )
        MOV       A,?V0
        ORL       A,?V1
        JZ        ??ZDO_ProcessServerDiscReq_0
// 1260   {
// 1261     ZDP_ServerDiscRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZSUCCESS,
// 1262                 ZDAppNwkAddr.addr.shortAddr, matchMask, inMsg->SecurityUse );
        ; Setup parameters for call to function ZDP_ServerDiscRsp
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       DPTR,#ZDAppNwkAddr
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        LCALL     ?Subroutine113 & 0xFFFF
// 1263   }
??CrossCallReturnLabel_422:
        MOV       R5,A
        MOV       R4,#0x0
        MOV       A,R6
        LCALL     ?Subroutine130 & 0xFFFF
??CrossCallReturnLabel_236:
        ADDC      A,R7
        MOV       R3,A
        MOV       A,R6
        ADD       A,#0xf
        LCALL     ??Subroutine208_0 & 0xFFFF
??CrossCallReturnLabel_418:
        MOV       R1,A
        LCALL     `??ZDP_ServerDiscRsp::?relay`; Banked call to: ZDP_ServerDiscRsp
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
// 1264 }
??ZDO_ProcessServerDiscReq_0:
        LJMP      ??Subroutine189_0 & 0xFFFF
          CFI EndBlock cfiBlock157
// 1265 
// 1266 /*********************************************************************
// 1267  * Call Back Functions from APS  - API
// 1268  */
// 1269 
// 1270 /*********************************************************************
// 1271  * @fn          ZDO_EndDeviceTimeoutCB
// 1272  *
// 1273  * @brief       This function handles the binding timer for the End
// 1274  *              Device Bind command.
// 1275  *
// 1276  * @param       none
// 1277  *
// 1278  * @return      none
// 1279  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1280 void ZDO_EndDeviceTimeoutCB( void )
ZDO_EndDeviceTimeoutCB:
          CFI Block cfiBlock158 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
        CODE
// 1281 {
        FUNCALL ZDO_EndDeviceTimeoutCB, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_EndDeviceTimeoutCB, HalLcdWriteString
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_EndDeviceTimeoutCB, HalLcdWriteString
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_EndDeviceTimeoutCB, HalLcdWriteString
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_EndDeviceTimeoutCB, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_EndDeviceTimeoutCB, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_EndDeviceTimeoutCB, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 2
        MOV       A,#-0x2
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
// 1282 #if defined ( REFLECTOR )
// 1283   byte stat;
// 1284   if ( ZDO_EDBind )
        MOV       DPTR,#ZDO_EDBind
        LCALL     ??Subroutine213_0 & 0xFFFF
??CrossCallReturnLabel_430:
        JNZ       $+5
        LJMP      ??ZDO_EndDeviceTimeoutCB_0 & 0xFFFF
// 1285   {
// 1286     stat = ZDO_EDBind->status;
// 1287 
// 1288     // Send the response message to the first sent
// 1289     ZDO_SendEDBindRsp( ZDO_EDBind->SrcTransSeq, &(ZDO_EDBind->SrcAddr),
// 1290                         stat, ZDO_EDBind->SecurityUse );
        MOV       A,R0
        ADD       A,#0x16
        MOV       DPL,A
        CLR       A
        ADDC      A,R1
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ?Subroutine47 & 0xFFFF
??CrossCallReturnLabel_79:
        MOV       DPH,A
        MOV       DPL,R0
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine47 & 0xFFFF
??CrossCallReturnLabel_78:
        XCH       A,R0
        ADD       A,#0x15
        LCALL     ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_353:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 13)
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V0,R0
        MOV       ?V1,R1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 15)
        MOV       ?V0,#0x20
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV       R1,#0x1
        MOV       DPTR,#ZDO_EDBind
        MOVX      A,@DPTR
        ADD       A,R1
        MOV       R4,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       R5,A
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP101_8
        LCALL     ?Subroutine142 & 0xFFFF
??CrossCallReturnLabel_253:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        ; Setup parameters for call to function HalLcdWriteString
        MOV       R1,#0x1
        MOV       R2,#`?<Constant "End Device Bind">` & 0xff
        MOV       R3,#(`?<Constant "End Device Bind">` >> 8) & 0xff
        LCALL     `??HalLcdWriteString::?relay`; Banked call to: HalLcdWriteString
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      A,@DPTR
        MOV       R1,#0x2
        JNZ       ??ZDO_EndDeviceTimeoutCB_1
        ; Setup parameters for call to function HalLcdWriteString
        MOV       R2,#`?<Constant "Success Sent">` & 0xff
        MOV       R3,#(`?<Constant "Success Sent">` >> 8) & 0xff
        SJMP      ??ZDO_EndDeviceTimeoutCB_2
??ZDO_EndDeviceTimeoutCB_1:
        ; Setup parameters for call to function HalLcdWriteString
        MOV       R2,#`?<Constant "Timeout">` & 0xff
        MOV       R3,#(`?<Constant "Timeout">` >> 8) & 0xff
??ZDO_EndDeviceTimeoutCB_2:
        LCALL     `??HalLcdWriteString::?relay`; Banked call to: HalLcdWriteString
// 1291 
// 1292     ZDO_RemoveEndDeviceBind();
        MOV       DPTR,#ZDO_EDBind
        LCALL     ??Subroutine213_0 & 0xFFFF
??CrossCallReturnLabel_431:
        JZ        ??ZDO_EndDeviceTimeoutCB_0
        MOV       A,R0
        ADD       A,#0x10
        MOV       DPL,A
        CLR       A
        ADDC      A,R1
        LCALL     ??Subroutine199_0 & 0xFFFF
??CrossCallReturnLabel_358:
        JZ        ??ZDO_EndDeviceTimeoutCB_3
        ; Setup parameters for call to function osal_mem_free
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
??ZDO_EndDeviceTimeoutCB_3:
        MOV       DPTR,#ZDO_EDBind
        LCALL     ??Subroutine216_0 & 0xFFFF
??CrossCallReturnLabel_441:
        ADD       A,#0x13
        LCALL     ?Subroutine53 & 0xFFFF
??CrossCallReturnLabel_361:
        JZ        ??ZDO_EndDeviceTimeoutCB_4
        ; Setup parameters for call to function osal_mem_free
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
??ZDO_EndDeviceTimeoutCB_4:
        ; Setup parameters for call to function osal_mem_free
        MOV       DPTR,#ZDO_EDBind
        LCALL     ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_123:
        MOV       DPTR,#ZDO_EDBind
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
// 1293   }
// 1294 #endif  // REFLECTOR
// 1295 }
??ZDO_EndDeviceTimeoutCB_0:
        LJMP      ?Subroutine2 & 0xFFFF
          CFI EndBlock cfiBlock158

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine86:
          CFI Block cfiCond159 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
          CFI Conditional ??CrossCallReturnLabel_353
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond160 Using cfiCommon0
          CFI (cfiCond160) Function ZDMatchSendState
          CFI (cfiCond160) Conditional ??CrossCallReturnLabel_354
          CFI (cfiCond160) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond160) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond160) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond160) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond160) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond160) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond160) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond160) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond160) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond160) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond160) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond160) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond160) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond160) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond160) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond160) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond160) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond160) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond160) CFA_SP SP+-2
          CFI (cfiCond160) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker161 Using cfiCommon1
          CFI (cfiPicker161) NoFunction
          CFI (cfiPicker161) Picker
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
          CFI EndBlock cfiCond159
          CFI EndBlock cfiCond160
          CFI EndBlock cfiPicker161
        REQUIRE ??Subroutine198_0
        ; // Fall through to label ??Subroutine198_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine198_0:
          CFI Block cfiCond162 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_350
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond163 Using cfiCommon0
          CFI (cfiCond163) Function ZDO_ProcessNodeDescRsp
          CFI (cfiCond163) Conditional ??CrossCallReturnLabel_351
          CFI (cfiCond163) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond163) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond163) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond163) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond163) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond163) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond163) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond163) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond163) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond163) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond163) CFA_SP SP+-2
          CFI (cfiCond163) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond164 Using cfiCommon0
          CFI (cfiCond164) Function ZDO_ProcessNodeDescRsp
          CFI (cfiCond164) Conditional ??CrossCallReturnLabel_352
          CFI (cfiCond164) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond164) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond164) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond164) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond164) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond164) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond164) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond164) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond164) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond164) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond164) CFA_SP SP+-2
          CFI (cfiCond164) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond165 Using cfiCommon0
          CFI (cfiCond165) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond165) Conditional ??CrossCallReturnLabel_353
          CFI (cfiCond165) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond165) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond165) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond165) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond165) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond165) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond165) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond165) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond165) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond165) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond165) CFA_SP SP+-2
          CFI (cfiCond165) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond166 Using cfiCommon0
          CFI (cfiCond166) Function ZDMatchSendState
          CFI (cfiCond166) Conditional ??CrossCallReturnLabel_354
          CFI (cfiCond166) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond166) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond166) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond166) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond166) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond166) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond166) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond166) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond166) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond166) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond166) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond166) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond166) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond166) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond166) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond166) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond166) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond166) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond166) CFA_SP SP+-2
          CFI (cfiCond166) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker167 Using cfiCommon1
          CFI (cfiPicker167) NoFunction
          CFI (cfiPicker167) Picker
        MOVX      A,@DPTR
        MOV       ?V0,A
        MOV       R0,#?V0
        RET
          CFI EndBlock cfiCond162
          CFI EndBlock cfiCond163
          CFI EndBlock cfiCond164
          CFI EndBlock cfiCond165
          CFI EndBlock cfiCond166
          CFI EndBlock cfiPicker167

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine72:
          CFI Block cfiCond168 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_121
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond169 Using cfiCommon0
          CFI (cfiCond169) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond169) Conditional ??CrossCallReturnLabel_123
          CFI (cfiCond169) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond169) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond169) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond169) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond169) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond169) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond169) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond169) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond169) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond169) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond169) CFA_SP SP+-2
          CFI (cfiCond169) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond170 Using cfiCommon0
          CFI (cfiCond170) Function ZDO_RemoveMatchMemory
          CFI (cfiCond170) Conditional ??CrossCallReturnLabel_122
          CFI (cfiCond170) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond170) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond170) CFA_SP SP+-7
          CFI Block cfiPicker171 Using cfiCommon1
          CFI (cfiPicker171) NoFunction
          CFI (cfiPicker171) Picker
        LCALL     ?Subroutine160 & 0xFFFF
??CrossCallReturnLabel_406:
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        RET
          CFI EndBlock cfiCond168
          CFI EndBlock cfiCond169
          CFI EndBlock cfiCond170
          CFI EndBlock cfiPicker171

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine53:
          CFI Block cfiCond172 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
          CFI Conditional ??CrossCallReturnLabel_361
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond173 Using cfiCommon0
          CFI (cfiCond173) Function ZDO_RemoveMatchMemory
          CFI (cfiCond173) Conditional ??CrossCallReturnLabel_362
          CFI (cfiCond173) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond173) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond173) CFA_SP SP+-7
          CFI Block cfiCond174 Using cfiCommon0
          CFI (cfiCond174) Function ZDO_RemoveMatchMemory
          CFI (cfiCond174) Conditional ??CrossCallReturnLabel_363
          CFI (cfiCond174) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond174) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond174) CFA_SP SP+-7
          CFI Block cfiCond175 Using cfiCommon0
          CFI (cfiCond175) Function ZDO_RemoveMatchMemory
          CFI (cfiCond175) Conditional ??CrossCallReturnLabel_364
          CFI (cfiCond175) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond175) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond175) CFA_SP SP+-7
          CFI Block cfiCond176 Using cfiCommon0
          CFI (cfiCond176) Function ZDO_RemoveMatchMemory
          CFI (cfiCond176) Conditional ??CrossCallReturnLabel_365
          CFI (cfiCond176) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond176) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond176) CFA_SP SP+-7
          CFI Block cfiCond177 Using cfiCommon0
          CFI (cfiCond177) Function ZDO_RemoveMatchMemory
          CFI (cfiCond177) Conditional ??CrossCallReturnLabel_366
          CFI (cfiCond177) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond177) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond177) CFA_SP SP+-7
          CFI Block cfiPicker178 Using cfiCommon1
          CFI (cfiPicker178) NoFunction
          CFI (cfiPicker178) Picker
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
          CFI EndBlock cfiCond172
          CFI EndBlock cfiCond173
          CFI EndBlock cfiCond174
          CFI EndBlock cfiCond175
          CFI EndBlock cfiCond176
          CFI EndBlock cfiCond177
          CFI EndBlock cfiPicker178
        REQUIRE ??Subroutine199_0
        ; // Fall through to label ??Subroutine199_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine199_0:
          CFI Block cfiCond179 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
          CFI Conditional ??CrossCallReturnLabel_358
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond180 Using cfiCommon0
          CFI (cfiCond180) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond180) Conditional ??CrossCallReturnLabel_359
          CFI (cfiCond180) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond180) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond180) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond180) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond180) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond180) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond180) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond180) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond180) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond180) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond180) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond180) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond180) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond180) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond180) CFA_SP SP+-2
          CFI (cfiCond180) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond181 Using cfiCommon0
          CFI (cfiCond181) Function ZDO_RemoveMatchMemory
          CFI (cfiCond181) Conditional ??CrossCallReturnLabel_360
          CFI (cfiCond181) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond181) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond181) CFA_SP SP+-7
          CFI Block cfiCond182 Using cfiCommon0
          CFI (cfiCond182) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond182) Conditional ??CrossCallReturnLabel_361
          CFI (cfiCond182) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond182) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond182) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond182) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond182) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond182) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond182) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond182) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond182) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond182) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond182) CFA_SP SP+-2
          CFI (cfiCond182) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond183 Using cfiCommon0
          CFI (cfiCond183) Function ZDO_RemoveMatchMemory
          CFI (cfiCond183) Conditional ??CrossCallReturnLabel_362
          CFI (cfiCond183) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond183) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond183) CFA_SP SP+-7
          CFI Block cfiCond184 Using cfiCommon0
          CFI (cfiCond184) Function ZDO_RemoveMatchMemory
          CFI (cfiCond184) Conditional ??CrossCallReturnLabel_363
          CFI (cfiCond184) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond184) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond184) CFA_SP SP+-7
          CFI Block cfiCond185 Using cfiCommon0
          CFI (cfiCond185) Function ZDO_RemoveMatchMemory
          CFI (cfiCond185) Conditional ??CrossCallReturnLabel_364
          CFI (cfiCond185) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond185) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond185) CFA_SP SP+-7
          CFI Block cfiCond186 Using cfiCommon0
          CFI (cfiCond186) Function ZDO_RemoveMatchMemory
          CFI (cfiCond186) Conditional ??CrossCallReturnLabel_365
          CFI (cfiCond186) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond186) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond186) CFA_SP SP+-7
          CFI Block cfiCond187 Using cfiCommon0
          CFI (cfiCond187) Function ZDO_RemoveMatchMemory
          CFI (cfiCond187) Conditional ??CrossCallReturnLabel_366
          CFI (cfiCond187) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond187) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond187) CFA_SP SP+-7
          CFI Block cfiPicker188 Using cfiCommon1
          CFI (cfiPicker188) NoFunction
          CFI (cfiPicker188) Picker
        MOV       DPH,A
          CFI EndBlock cfiCond179
          CFI EndBlock cfiCond180
          CFI EndBlock cfiCond181
          CFI EndBlock cfiCond182
          CFI EndBlock cfiCond183
          CFI EndBlock cfiCond184
          CFI EndBlock cfiCond185
          CFI EndBlock cfiCond186
          CFI EndBlock cfiCond187
          CFI EndBlock cfiPicker188
        REQUIRE ??Subroutine200_0
        ; // Fall through to label ??Subroutine200_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine200_0:
          CFI Block cfiCond189 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
          CFI Conditional ??CrossCallReturnLabel_355
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond190 Using cfiCommon0
          CFI (cfiCond190) Function ZDO_CopyMatchInfo
          CFI (cfiCond190) Conditional ??CrossCallReturnLabel_356
          CFI (cfiCond190) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond190) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond190) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond190) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond190) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond190) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond190) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond190) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond190) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond190) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond190) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond190) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond190) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond190) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond190) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond190) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond190) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond190) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond190) CFA_SP SP+-2
          CFI (cfiCond190) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond191 Using cfiCommon0
          CFI (cfiCond191) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond191) Conditional ??CrossCallReturnLabel_357
          CFI (cfiCond191) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond191) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond191) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond191) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond191) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond191) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond191) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond191) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond191) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond191) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond191) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond191) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond191) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond191) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond191) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond191) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond191) CFA_SP SP+-2
          CFI (cfiCond191) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond192 Using cfiCommon0
          CFI (cfiCond192) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond192) Conditional ??CrossCallReturnLabel_358
          CFI (cfiCond192) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond192) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond192) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond192) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond192) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond192) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond192) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond192) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond192) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond192) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond192) CFA_SP SP+-2
          CFI (cfiCond192) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond193 Using cfiCommon0
          CFI (cfiCond193) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond193) Conditional ??CrossCallReturnLabel_359
          CFI (cfiCond193) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond193) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond193) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond193) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond193) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond193) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond193) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond193) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond193) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond193) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond193) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond193) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond193) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond193) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond193) CFA_SP SP+-2
          CFI (cfiCond193) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond194 Using cfiCommon0
          CFI (cfiCond194) Function ZDO_RemoveMatchMemory
          CFI (cfiCond194) Conditional ??CrossCallReturnLabel_360
          CFI (cfiCond194) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond194) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond194) CFA_SP SP+-7
          CFI Block cfiCond195 Using cfiCommon0
          CFI (cfiCond195) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond195) Conditional ??CrossCallReturnLabel_361
          CFI (cfiCond195) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond195) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond195) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond195) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond195) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond195) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond195) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond195) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond195) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond195) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond195) CFA_SP SP+-2
          CFI (cfiCond195) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond196 Using cfiCommon0
          CFI (cfiCond196) Function ZDO_RemoveMatchMemory
          CFI (cfiCond196) Conditional ??CrossCallReturnLabel_362
          CFI (cfiCond196) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond196) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond196) CFA_SP SP+-7
          CFI Block cfiCond197 Using cfiCommon0
          CFI (cfiCond197) Function ZDO_RemoveMatchMemory
          CFI (cfiCond197) Conditional ??CrossCallReturnLabel_363
          CFI (cfiCond197) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond197) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond197) CFA_SP SP+-7
          CFI Block cfiCond198 Using cfiCommon0
          CFI (cfiCond198) Function ZDO_RemoveMatchMemory
          CFI (cfiCond198) Conditional ??CrossCallReturnLabel_364
          CFI (cfiCond198) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond198) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond198) CFA_SP SP+-7
          CFI Block cfiCond199 Using cfiCommon0
          CFI (cfiCond199) Function ZDO_RemoveMatchMemory
          CFI (cfiCond199) Conditional ??CrossCallReturnLabel_365
          CFI (cfiCond199) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond199) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond199) CFA_SP SP+-7
          CFI Block cfiCond200 Using cfiCommon0
          CFI (cfiCond200) Function ZDO_RemoveMatchMemory
          CFI (cfiCond200) Conditional ??CrossCallReturnLabel_366
          CFI (cfiCond200) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond200) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond200) CFA_SP SP+-7
          CFI Block cfiPicker201 Using cfiCommon1
          CFI (cfiPicker201) NoFunction
          CFI (cfiPicker201) Picker
        LCALL     ?Subroutine160 & 0xFFFF
??CrossCallReturnLabel_410:
        MOV       A,R2
        ORL       A,R3
        RET
          CFI EndBlock cfiCond189
          CFI EndBlock cfiCond190
          CFI EndBlock cfiCond191
          CFI EndBlock cfiCond192
          CFI EndBlock cfiCond193
          CFI EndBlock cfiCond194
          CFI EndBlock cfiCond195
          CFI EndBlock cfiCond196
          CFI EndBlock cfiCond197
          CFI EndBlock cfiCond198
          CFI EndBlock cfiCond199
          CFI EndBlock cfiCond200
          CFI EndBlock cfiPicker201

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine47:
          CFI Block cfiCond202 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
          CFI Conditional ??CrossCallReturnLabel_79
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond203 Using cfiCommon0
          CFI (cfiCond203) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond203) Conditional ??CrossCallReturnLabel_78
          CFI (cfiCond203) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond203) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond203) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond203) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond203) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond203) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond203) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond203) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond203) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond203) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond203) CFA_SP SP+-2
          CFI (cfiCond203) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker204 Using cfiCommon1
          CFI (cfiPicker204) NoFunction
          CFI (cfiPicker204) Picker
        MOVX      @DPTR,A
        ; Setup parameters for call to function ZDP_SendData
        MOV       DPTR,#ZDO_EDBind
        LCALL     ?Subroutine181 & 0xFFFF
??CrossCallReturnLabel_525:
        RET
          CFI EndBlock cfiCond202
          CFI EndBlock cfiCond203
          CFI EndBlock cfiPicker204
// 1296 
// 1297 /*********************************************************************
// 1298  * Optional Management Messages
// 1299  */
// 1300 
// 1301 /*********************************************************************
// 1302  * @fn          ZDO_ProcessMgmtLqiReq
// 1303  *
// 1304  * @brief       This function handles parsing the incoming Management
// 1305  *              LQI request and generate the response.
// 1306  *
// 1307  *   Note:      This function will limit the number of items returned
// 1308  *              to ZDO_MAX_LQI_ITEMS items.
// 1309  *
// 1310  * @param       inMsg - incoming message (request)
// 1311  *
// 1312  * @return      none
// 1313  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1314 void ZDO_ProcessMgmtLqiReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtLqiReq:
          CFI Block cfiBlock205 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
        CODE
// 1315 {
        FUNCALL ZDO_ProcessMgmtLqiReq, NLME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 61, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, AssocCount
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 61, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 61, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 61, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, AssocFindDevice
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 61, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 61, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, AddrMgrEntryLookupNwk
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 61, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 61, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, NLME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 61, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 61, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 61, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, ZDP_MgmtLqiRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 66, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 66, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 61, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 61, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        REQUIRE ?V14
        REQUIRE ?V15
        MOV       A,#-0x18
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 37
        MOV       A,#-0x25
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 61)
        MOV       ?V14,R2
        MOV       ?V15,R3
// 1316   byte x;
// 1317   byte index;
// 1318   byte numItems;
// 1319   byte maxItems;
// 1320   ZDP_MgmtLqiItem_t* table = NULL;
        MOV       ?V12,#0x0
        MOV       ?V13,#0x0
// 1321   ZDP_MgmtLqiItem_t* item;
// 1322   neighborEntry_t    entry;
// 1323   byte aItems = 0;
        MOV       ?V2,#0x0
// 1324   associated_devices_t *aDevice;
// 1325   AddrMgrEntry_t  nwkEntry;
// 1326   uint8 StartIndex = inMsg->asdu[0];
        LCALL     ??Subroutine211_0 & 0xFFFF
??CrossCallReturnLabel_426:
        ADDC      A,?V15
        MOV       DPH,A
        LCALL     ??Subroutine186_0 & 0xFFFF
??CrossCallReturnLabel_312:
        MOV       ?V6,A
// 1327 
// 1328   // Get the number of neighbor items
// 1329   NLME_GetRequest( nwkNumNeighborTableEntries, 0, &maxItems );
        ; Setup parameters for call to function NLME_GetRequest
        MOV       R4,?XSP + 0
        MOV       R5,?XSP + 1
        MOV       R2,#0x0
        MOV       R3,#0x0
        MOV       R1,#-0x64
        LCALL     `??NLME_GetRequest::?relay`; Banked call to: NLME_GetRequest
// 1330 
// 1331   //Routing devices uses assoc table, end devices don't
// 1332   if ( ZG_DEVICE_RTR_TYPE )
        MOV       DPTR,#zgDeviceLogicalType
        MOVX      A,@DPTR
        JZ        ??ZDO_ProcessMgmtLqiReq_0
        XRL       A,#0x1
        JNZ       ??ZDO_ProcessMgmtLqiReq_1
// 1333   {
// 1334     // Get the number of associated items
// 1335     aItems = (uint8)AssocCount( PARENT, CHILD_FFD_RX_IDLE );
??ZDO_ProcessMgmtLqiReq_0:
        ; Setup parameters for call to function AssocCount
        MOV       R2,#0x4
        MOV       R1,#0x0
        LCALL     `??AssocCount::?relay`; Banked call to: AssocCount
        MOV       A,R2
        MOV       ?V2,A
// 1336     // Total number of items
// 1337     maxItems += aItems;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      A,@DPTR
        ADD       A,R2
        SJMP      ??ZDO_ProcessMgmtLqiReq_2
// 1338   }
// 1339   else
// 1340   {
// 1341     maxItems = 1;
??ZDO_ProcessMgmtLqiReq_1:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,#0x1
??ZDO_ProcessMgmtLqiReq_2:
        MOVX      @DPTR,A
// 1342   }
// 1343 
// 1344   // Start with the supplied index
// 1345   if ( maxItems > StartIndex )
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       A,?V6
        CLR       C
        SUBB      A,R0
        JC        $+5
        LJMP      ??ZDO_ProcessMgmtLqiReq_3 & 0xFFFF
// 1346   {
// 1347     numItems = maxItems - StartIndex;
        MOVX      A,@DPTR
        CLR       C
        SUBB      A,?V6
        MOV       ?V1,A
// 1348 
// 1349     // limit the size of the list
// 1350     if ( numItems > ZDO_MAX_LQI_ITEMS )
        CLR       C
        SUBB      A,#0x4
        JC        ??ZDO_ProcessMgmtLqiReq_4
// 1351     {
// 1352       numItems = ZDO_MAX_LQI_ITEMS;
        MOV       ?V1,#0x3
// 1353     }
// 1354     
// 1355     // Allocate the memory to build the table
// 1356     table = (ZDP_MgmtLqiItem_t*)osal_mem_alloc( (short)
// 1357               ( numItems * sizeof( ZDP_MgmtLqiItem_t ) ) );
??ZDO_ProcessMgmtLqiReq_4:
        ; Setup parameters for call to function osal_mem_alloc
        MOV       A,?V1
        MOV       B,#0x1a
        MUL       AB
        MOV       R2,A
        MOV       R3,B
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V12,R2
        MOV       ?V13,R3
// 1358 
// 1359     if ( table != NULL )
        MOV       A,R2
        ORL       A,R3
        JNZ       $+5
        LJMP      ??ZDO_ProcessMgmtLqiReq_5 & 0xFFFF
// 1360     {
// 1361       x = 0;
        MOV       ?V3,#0x0
// 1362       item = table;
        MOV       R6,?V12
        MOV       R7,?V13
// 1363       index = StartIndex;
        MOV       ?V0,?V6
        LJMP      ??ZDO_ProcessMgmtLqiReq_6 & 0xFFFF
// 1364 
// 1365       // Loop through associated items and build list
// 1366       for ( ; x < numItems; x++ )
// 1367       {
// 1368         if ( index < aItems )
// 1369         {
// 1370           // get next associated device
// 1371           aDevice = AssocFindDevice( index++ );
// 1372 
// 1373           // set basic fields
// 1374           item->panID   = _NIB.nwkPanId;
// 1375           osal_cpyExtAddr( item->extPanID, _NIB.extendedPANID );
// 1376           item->nwkAddr = aDevice->shortAddr;
// 1377           item->permit  = ZDP_MGMT_BOOL_UNKNOWN;
// 1378           item->depth   = 0xFF;
// 1379           item->lqi     = aDevice->linkInfo.rxLqi;
// 1380 
// 1381           // set extented address
// 1382           nwkEntry.user    = ADDRMGR_USER_DEFAULT;
// 1383           nwkEntry.nwkAddr = aDevice->shortAddr;
// 1384 
// 1385           if ( AddrMgrEntryLookupNwk( &nwkEntry ) == TRUE )
// 1386           {
// 1387             osal_cpyExtAddr( item->extAddr, nwkEntry.extAddr );
// 1388           }
// 1389           else
// 1390           {
// 1391             osal_memset( item->extAddr, 0xFF, Z_EXTADDR_LEN );
??ZDO_ProcessMgmtLqiReq_7:
        ; Setup parameters for call to function osal_memset
        MOV       R4,#0x8
        MOV       R5,#0x0
        MOV       R1,#-0x1
        MOV       R2,?V10
        MOV       R3,?V11
        LCALL     `??osal_memset::?relay`; Banked call to: osal_memset
// 1392           }
// 1393 
// 1394           // use association info to set other fields
// 1395           if ( aDevice->nodeRelation == PARENT )
??ZDO_ProcessMgmtLqiReq_8:
        MOV       A,?V4
        ADD       A,#0x4
        MOV       R0,A
        CLR       A
        ADDC      A,?V5
        MOV       R1,A
        MOV       A,R6
        ADD       A,#0x16
        MOV       R2,A
        CLR       A
        ADDC      A,R7
        MOV       R3,A
        MOV       A,R6
        ADD       A,#0x15
        MOV       R4,A
        CLR       A
        ADDC      A,R7
        MOV       R5,A
        MOV       A,R6
        ADD       A,#0x14
        MOV       ?V10,A
        CLR       A
        ADDC      A,R7
        MOV       ?V11,A
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      A,@DPTR
        JNZ       ??ZDO_ProcessMgmtLqiReq_9
// 1396           {
// 1397             if (  aDevice->shortAddr == 0 )
        MOV       DPL,?V4
        MOV       DPH,?V5
        LCALL     ??Subroutine213_0 & 0xFFFF
??CrossCallReturnLabel_432:
        MOV       DPL,?V10
        MOV       DPH,?V11
        JNZ       ??ZDO_ProcessMgmtLqiReq_10
// 1398             {
// 1399               item->devType = ZDP_MGMT_DT_COORD;
        CLR       A
        MOVX      @DPTR,A
// 1400               item->depth = 0;
        SJMP      ??ZDO_ProcessMgmtLqiReq_11
// 1401             }
// 1402             else
// 1403             {
// 1404               item->devType = ZDP_MGMT_DT_ROUTER;
??ZDO_ProcessMgmtLqiReq_10:
        MOV       A,#0x1
        MOVX      @DPTR,A
// 1405               item->depth = _NIB.nodeDepth - 1;
        MOV       DPTR,#_NIB + 52
        MOVX      A,@DPTR
        DEC       A
??ZDO_ProcessMgmtLqiReq_11:
        MOV       DPL,?V8
        MOV       DPH,?V9
// 1406             }
// 1407 
// 1408             item->rxOnIdle = ZDP_MGMT_BOOL_UNKNOWN;
// 1409             item->relation = ZDP_MGMT_REL_PARENT;
// 1410           }
        LCALL     ?Subroutine16 & 0xFFFF
??CrossCallReturnLabel_17:
        MOV       A,#0x2
        LCALL     ??Subroutine232_0 & 0xFFFF
??CrossCallReturnLabel_546:
        CLR       A
        SJMP      ??ZDO_ProcessMgmtLqiReq_12
// 1411           else
// 1412           {
// 1413             // If not parent, then it's a child
// 1414             item->depth = _NIB.nodeDepth + 1;
??ZDO_ProcessMgmtLqiReq_9:
        MOV       DPTR,#_NIB + 52
        MOVX      A,@DPTR
        INC       A
        MOV       DPL,?V8
        MOV       DPH,?V9
        LCALL     ?Subroutine45 & 0xFFFF
// 1415 
// 1416             if ( aDevice->nodeRelation < CHILD_FFD )
??CrossCallReturnLabel_72:
        CLR       C
        SUBB      A,#0x3
        MOV       DPL,?V10
        MOV       DPH,?V11
        JC        $+5
        LJMP      ??ZDO_ProcessMgmtLqiReq_13 & 0xFFFF
// 1417             {
// 1418               item->devType = ZDP_MGMT_DT_ENDDEV;
        MOV       A,#0x2
        LCALL     ?Subroutine45 & 0xFFFF
// 1419 
// 1420               if ( aDevice->nodeRelation == CHILD_RFD )
// 1421               {
// 1422                 item->rxOnIdle = FALSE;
// 1423               }
// 1424               else
// 1425               {
// 1426                 item->rxOnIdle = TRUE;
// 1427               }
// 1428             }
??CrossCallReturnLabel_73:
        XRL       A,#0x1
        JNZ       $+5
        LJMP      ??ZDO_ProcessMgmtLqiReq_14 & 0xFFFF
// 1429             else
// 1430             {
// 1431               item->devType = ZDP_MGMT_DT_ROUTER;
// 1432 
// 1433               if ( aDevice->nodeRelation == CHILD_FFD )
// 1434               {
// 1435                 item->rxOnIdle = FALSE;
// 1436               }
// 1437               else
// 1438               {
// 1439                 item->rxOnIdle = TRUE;
??ZDO_ProcessMgmtLqiReq_15:
        MOV       DPL,R4
        MOV       DPH,R5
        MOV       A,#0x1
// 1440               }
??ZDO_ProcessMgmtLqiReq_16:
        LCALL     ??Subroutine232_0 & 0xFFFF
// 1441             }
// 1442 
// 1443             item->relation = ZDP_MGMT_REL_CHILD;
??CrossCallReturnLabel_547:
        MOV       A,#0x1
??ZDO_ProcessMgmtLqiReq_12:
        MOVX      @DPTR,A
// 1444           }
// 1445 
// 1446           item++;
        MOV       A,R6
        ADD       A,#0x1a
        MOV       R6,A
        JNC       ??ZDO_ProcessMgmtLqiReq_17
        INC       R7
??ZDO_ProcessMgmtLqiReq_17:
        INC       ?V3
??ZDO_ProcessMgmtLqiReq_6:
        MOV       A,?V3
        CLR       C
        SUBB      A,?V1
        JC        $+5
        LJMP      ??ZDO_ProcessMgmtLqiReq_18 & 0xFFFF
        MOV       A,?V0
        CLR       C
        SUBB      A,?V2
        JC        $+5
        LJMP      ??ZDO_ProcessMgmtLqiReq_19 & 0xFFFF
        ; Setup parameters for call to function AssocFindDevice
        MOV       R2,?V0
        MOV       R3,#0x0
        LCALL     `??AssocFindDevice::?relay`; Banked call to: AssocFindDevice
        MOV       ?V4,R2
        MOV       ?V5,R3
        INC       ?V0
        MOV       DPTR,#_NIB + 33
        LCALL     ?Subroutine13 & 0xFFFF
??CrossCallReturnLabel_10:
        MOV       DPL,?V4
        MOV       DPH,?V5
        LCALL     ??Subroutine201_0 & 0xFFFF
??CrossCallReturnLabel_371:
        MOV       A,R6
        ADD       A,#0x12
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        MOV       A,R0
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
        LCALL     ?Subroutine19 & 0xFFFF
??CrossCallReturnLabel_25:
        MOV       A,R6
        ADD       A,#0x18
        LCALL     ?Subroutine114 & 0xFFFF
??CrossCallReturnLabel_182:
        MOV       A,#-0x1
        MOVX      @DPTR,A
        MOV       DPL,?V4
        MOV       DPH,?V5
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine145 & 0xFFFF
??CrossCallReturnLabel_262:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        CLR       A
        MOVX      @DPTR,A
        MOV       DPL,?V4
        MOV       DPH,?V5
        LCALL     ??Subroutine201_0 & 0xFFFF
??CrossCallReturnLabel_372:
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine38 & 0xFFFF
??CrossCallReturnLabel_380:
        ADD       A,#0xa
        MOV       ?V10,A
        CLR       A
        ADDC      A,R7
        MOV       ?V11,A
        ; Setup parameters for call to function AddrMgrEntryLookupNwk
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??AddrMgrEntryLookupNwk::?relay`; Banked call to: AddrMgrEntryLookupNwk
        MOV       A,R1
        XRL       A,#0x1
        JZ        $+5
        LJMP      ??ZDO_ProcessMgmtLqiReq_7 & 0xFFFF
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        MOV       R4,DPL
        MOV       R5,DPH
        MOV       R2,?V10
        MOV       R3,?V11
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        LJMP      ??ZDO_ProcessMgmtLqiReq_8 & 0xFFFF
??ZDO_ProcessMgmtLqiReq_13:
        MOV       A,#0x1
        LCALL     ?Subroutine45 & 0xFFFF
??CrossCallReturnLabel_74:
        XRL       A,#0x3
        JZ        $+5
        LJMP      ??ZDO_ProcessMgmtLqiReq_15 & 0xFFFF
??ZDO_ProcessMgmtLqiReq_14:
        MOV       DPL,R4
        MOV       DPH,R5
        CLR       A
        LJMP      ??ZDO_ProcessMgmtLqiReq_16 & 0xFFFF
// 1447         }
// 1448         else
// 1449         {
// 1450           if ( StartIndex <= aItems )
??ZDO_ProcessMgmtLqiReq_19:
        MOV       A,?V2
        CLR       C
        SUBB      A,?V6
        JC        ??ZDO_ProcessMgmtLqiReq_20
// 1451             // Start with 1st neighbor
// 1452             index = 0;
        MOV       ?V0,#0x0
        SJMP      ??ZDO_ProcessMgmtLqiReq_21
// 1453           else
// 1454             // Start with >1st neighbor
// 1455             index = StartIndex - aItems;
??ZDO_ProcessMgmtLqiReq_20:
        MOV       A,?V6
        CLR       C
        SUBB      A,?V2
        MOV       ?V0,A
        SJMP      ??ZDO_ProcessMgmtLqiReq_21
// 1456           break;
// 1457         }
// 1458       }
// 1459 
// 1460       // Loop through neighbor items and finish list
// 1461       for ( ; x < numItems; x++ )
// 1462       {
// 1463         // Add next neighbor table item
// 1464         NLME_GetRequest( nwkNeighborTable, index++, &entry );
// 1465 
// 1466         // set ZDP_MgmtLqiItem_t fields
// 1467         item->panID    = entry.panId;
// 1468         osal_cpyExtAddr( item->extPanID, _NIB.extendedPANID );
// 1469         osal_cpyExtAddr( item->extAddr, entry.neighborExtAddr);
// 1470         item->nwkAddr  = entry.neighborAddress;
// 1471 
// 1472         if ( ZG_DEVICE_RTR_TYPE )
// 1473         {
// 1474           item->rxOnIdle = ZDP_MGMT_BOOL_UNKNOWN;
// 1475           item->relation = ZDP_MGMT_REL_UNKNOWN;
// 1476           item->depth    = 0xFF;
// 1477         }
// 1478         else
// 1479         {
// 1480           //end devices knows this for sure
// 1481           item->rxOnIdle = ZDP_MGMT_BOOL_RECEIVER_ON;
??ZDO_ProcessMgmtLqiReq_22:
        MOV       DPL,?V4
        MOV       DPH,?V5
        CLR       A
        LCALL     ?Subroutine16 & 0xFFFF
// 1482           item->relation = ZDP_MGMT_REL_PARENT;
??CrossCallReturnLabel_18:
        MOVX      @DPTR,A
// 1483           item->depth = _NIB.nodeDepth - 1;
        MOV       DPTR,#_NIB + 52
        MOVX      A,@DPTR
        DEC       A
        MOV       DPL,R2
        MOV       DPH,R3
// 1484         }
??ZDO_ProcessMgmtLqiReq_23:
        LCALL     ?Subroutine19 & 0xFFFF
// 1485         item->permit   = ZDP_MGMT_BOOL_UNKNOWN;
// 1486         item->lqi      = entry.linkInfo.rxLqi;
??CrossCallReturnLabel_26:
        MOV       A,#0x1d
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine145 & 0xFFFF
??CrossCallReturnLabel_263:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 1487 
// 1488         if ( item->nwkAddr == 0 )
        MOV       A,R6
        ADD       A,#0x14
        MOV       R2,A
        CLR       A
        ADDC      A,R7
        MOV       R3,A
        MOV       DPL,R0
        MOV       DPH,R1
        LCALL     ??Subroutine213_0 & 0xFFFF
??CrossCallReturnLabel_433:
        MOV       DPL,R2
        MOV       DPH,R3
        JNZ       ??ZDO_ProcessMgmtLqiReq_24
// 1489         {
// 1490           item->devType = ZDP_MGMT_DT_COORD;
        CLR       A
        SJMP      ??ZDO_ProcessMgmtLqiReq_25
// 1491         }
// 1492         else
// 1493         {
// 1494           item->devType = ZDP_MGMT_DT_ROUTER;
??ZDO_ProcessMgmtLqiReq_24:
        MOV       A,#0x1
??ZDO_ProcessMgmtLqiReq_25:
        MOVX      @DPTR,A
// 1495         }
// 1496 
// 1497         item++;
        MOV       A,R6
        ADD       A,#0x1a
        MOV       R6,A
        JNC       ??ZDO_ProcessMgmtLqiReq_26
        INC       R7
??ZDO_ProcessMgmtLqiReq_26:
        INC       ?V3
??ZDO_ProcessMgmtLqiReq_18:
        MOV       A,?V3
        CLR       C
        SUBB      A,?V1
        JNC       ??ZDO_ProcessMgmtLqiReq_5
??ZDO_ProcessMgmtLqiReq_21:
        ; Setup parameters for call to function NLME_GetRequest
        MOV       A,#0xe
        LCALL     ?XSTACK_DISP102_8
        MOV       R2,?V0
        MOV       R3,#0x0
        MOV       R1,#-0x79
        LCALL     `??NLME_GetRequest::?relay`; Banked call to: NLME_GetRequest
        INC       ?V0
        MOV       A,#0x18
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine13 & 0xFFFF
??CrossCallReturnLabel_11:
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,#0x10
        LCALL     ?XSTACK_DISP0_8
        MOV       R4,DPL
        MOV       R5,DPH
        MOV       A,R6
        ADD       A,#0xa
        LCALL     ?Subroutine170 & 0xFFFF
??CrossCallReturnLabel_294:
        MOV       A,R6
        ADD       A,#0x12
        MOV       R0,A
        CLR       A
        ADDC      A,R7
        MOV       R1,A
        MOV       A,#0xe
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine206_0 & 0xFFFF
??CrossCallReturnLabel_398:
        MOV       DPL,R0
        MOV       DPH,R1
        LCALL     ??Subroutine196_0 & 0xFFFF
??CrossCallReturnLabel_345:
        MOV       A,R6
        ADD       A,#0x18
        MOV       R2,A
        CLR       A
        ADDC      A,R7
        MOV       R3,A
        MOV       A,R6
        ADD       A,#0x16
        MOV       R4,A
        CLR       A
        ADDC      A,R7
        MOV       R5,A
        MOV       A,R6
        ADD       A,#0x15
        MOV       ?V4,A
        CLR       A
        ADDC      A,R7
        MOV       ?V5,A
        MOV       DPTR,#zgDeviceLogicalType
        MOVX      A,@DPTR
        JZ        ??ZDO_ProcessMgmtLqiReq_27
        XRL       A,#0x1
        JZ        $+5
        LJMP      ??ZDO_ProcessMgmtLqiReq_22 & 0xFFFF
??ZDO_ProcessMgmtLqiReq_27:
        MOV       DPL,?V4
        MOV       DPH,?V5
        MOV       A,#0x2
        LCALL     ?Subroutine16 & 0xFFFF
// 1498       }
// 1499     }
// 1500   }
??CrossCallReturnLabel_19:
        INC       A
        LCALL     ??Subroutine232_0 & 0xFFFF
??CrossCallReturnLabel_548:
        MOV       A,#-0x1
        LJMP      ??ZDO_ProcessMgmtLqiReq_23 & 0xFFFF
// 1501   else
// 1502   {
// 1503     numItems = 0;
??ZDO_ProcessMgmtLqiReq_3:
        MOV       ?V1,#0x0
// 1504   }
// 1505 
// 1506   // Send response
// 1507   ZDP_MgmtLqiRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZSuccess, maxItems,
// 1508                   StartIndex, numItems, table, false );
??ZDO_ProcessMgmtLqiReq_5:
        ; Setup parameters for call to function ZDP_MgmtLqiRsp
        MOV       ?V2,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 62)
        MOV       R0,#?V12
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 64)
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 65)
        MOV       A,?V6
        MOV       ?V1,A
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 66)
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       R5,A
        MOV       R4,#0x0
        MOV       A,?V14
        LCALL     ?Subroutine130 & 0xFFFF
??CrossCallReturnLabel_237:
        ADDC      A,?V15
        MOV       R3,A
        MOV       A,?V14
        LCALL     ?Subroutine129 & 0xFFFF
??CrossCallReturnLabel_230:
        ADDC      A,?V15
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       R1,A
        LCALL     `??ZDP_MgmtLqiRsp::?relay`; Banked call to: ZDP_MgmtLqiRsp
        MOV       A,#0x5
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 61)
// 1509 
// 1510   if ( table )
        MOV       A,?V12
        ORL       A,?V13
        JZ        ??ZDO_ProcessMgmtLqiReq_28
// 1511   {
// 1512     osal_mem_free( table );
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V12
        MOV       R3,?V13
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 1513   }
// 1514 }
??ZDO_ProcessMgmtLqiReq_28:
        MOV       A,#0x25
        LJMP      ?Subroutine6 & 0xFFFF
          CFI EndBlock cfiBlock205

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine145:
          CFI Block cfiCond206 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_262
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond207 Using cfiCommon0
          CFI (cfiCond207) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond207) Conditional ??CrossCallReturnLabel_263
          CFI (cfiCond207) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond207) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond207) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond207) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond207) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond207) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond207) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond207) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond207) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond207) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond207) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond207) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond207) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond207) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond207) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond207) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond207) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond207) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond207) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond207) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond207) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond207) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond207) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond207) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond207) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiPicker208 Using cfiCommon1
          CFI (cfiPicker208) NoFunction
          CFI (cfiPicker208) Picker
        MOV       A,R6
        ADD       A,#0x19
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond206
          CFI EndBlock cfiCond207
          CFI EndBlock cfiPicker208

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine96:
          CFI Block cfiCond209 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtBindReq
          CFI Conditional ??CrossCallReturnLabel_377
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond210 Using cfiCommon0
          CFI (cfiCond210) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond210) Conditional ??CrossCallReturnLabel_378
          CFI (cfiCond210) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond210) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond210) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond210) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond210) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond210) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond210) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond210) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond210) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond210) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond210) CFA_SP SP+-2
          CFI (cfiCond210) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond211 Using cfiCommon0
          CFI (cfiCond211) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond211) Conditional ??CrossCallReturnLabel_379
          CFI (cfiCond211) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond211) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond211) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond211) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond211) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond211) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond211) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond211) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond211) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond211) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond211) CFA_SP SP+-2
          CFI (cfiCond211) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker212 Using cfiCommon1
          CFI (cfiPicker212) NoFunction
          CFI (cfiPicker212) Picker
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
          CFI EndBlock cfiCond209
          CFI EndBlock cfiCond210
          CFI EndBlock cfiCond211
          CFI EndBlock cfiPicker212
        REQUIRE ??Subroutine201_0
        ; // Fall through to label ??Subroutine201_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine201_0:
          CFI Block cfiCond213 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_367
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond214 Using cfiCommon0
          CFI (cfiCond214) Function ZDO_CompareClusterLists
          CFI (cfiCond214) Conditional ??CrossCallReturnLabel_368
          CFI (cfiCond214) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond214) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond214) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond214) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond214) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond214) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond214) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond214) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond214) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond214) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond214) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond214) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond214) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond214) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond214) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond214) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond214) CFA_SP SP+-2
          CFI (cfiCond214) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond215 Using cfiCommon0
          CFI (cfiCond215) Function ZDO_AnyClusterMatches
          CFI (cfiCond215) Conditional ??CrossCallReturnLabel_369
          CFI (cfiCond215) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond215) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond215) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond215) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond215) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond215) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond215) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond215) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond215) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond215) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond215) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond215) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond215) CFA_SP SP+-2
          CFI (cfiCond215) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond216 Using cfiCommon0
          CFI (cfiCond216) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond216) Conditional ??CrossCallReturnLabel_370
          CFI (cfiCond216) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond216) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond216) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond216) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond216) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond216) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond216) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond216) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond216) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond216) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond216) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond216) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond216) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond216) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond216) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond216) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond216) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond216) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond216) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond216) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond216) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond216) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond216) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond216) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond216) CFA_SP SP+-2
          CFI (cfiCond216) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond217 Using cfiCommon0
          CFI (cfiCond217) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond217) Conditional ??CrossCallReturnLabel_371
          CFI (cfiCond217) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond217) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond217) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond217) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond217) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond217) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond217) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond217) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond217) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond217) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond217) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond217) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond217) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond217) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond217) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond217) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond217) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond217) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond217) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond217) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond217) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond217) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond217) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond217) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond217) CFA_SP SP+-2
          CFI (cfiCond217) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond218 Using cfiCommon0
          CFI (cfiCond218) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond218) Conditional ??CrossCallReturnLabel_372
          CFI (cfiCond218) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond218) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond218) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond218) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond218) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond218) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond218) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond218) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond218) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond218) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond218) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond218) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond218) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond218) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond218) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond218) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond218) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond218) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond218) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond218) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond218) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond218) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond218) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond218) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond218) CFA_SP SP+-2
          CFI (cfiCond218) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond219 Using cfiCommon0
          CFI (cfiCond219) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond219) Conditional ??CrossCallReturnLabel_373
          CFI (cfiCond219) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond219) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond219) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond219) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond219) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond219) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond219) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond219) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond219) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond219) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond219) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond219) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond219) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond219) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond219) CFA_SP SP+-2
          CFI (cfiCond219) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond220 Using cfiCommon0
          CFI (cfiCond220) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond220) Conditional ??CrossCallReturnLabel_374
          CFI (cfiCond220) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond220) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond220) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond220) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond220) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond220) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond220) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond220) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond220) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond220) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond220) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond220) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond220) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond220) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond220) CFA_SP SP+-2
          CFI (cfiCond220) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond221 Using cfiCommon0
          CFI (cfiCond221) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond221) Conditional ??CrossCallReturnLabel_375
          CFI (cfiCond221) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond221) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond221) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond221) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond221) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond221) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond221) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond221) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond221) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond221) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond221) CFA_SP SP+-2
          CFI (cfiCond221) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond222 Using cfiCommon0
          CFI (cfiCond222) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond222) Conditional ??CrossCallReturnLabel_376
          CFI (cfiCond222) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond222) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond222) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond222) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond222) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond222) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond222) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond222) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond222) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond222) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond222) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond222) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond222) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond222) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond222) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond222) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond222) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond222) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond222) CFA_SP SP+-2
          CFI (cfiCond222) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond223 Using cfiCommon0
          CFI (cfiCond223) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond223) Conditional ??CrossCallReturnLabel_377
          CFI (cfiCond223) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond223) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond223) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond223) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond223) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond223) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond223) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond223) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond223) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond223) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond223) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond223) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond223) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond223) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond223) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond223) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond223) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond223) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond223) CFA_SP SP+-2
          CFI (cfiCond223) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond224 Using cfiCommon0
          CFI (cfiCond224) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond224) Conditional ??CrossCallReturnLabel_378
          CFI (cfiCond224) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond224) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond224) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond224) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond224) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond224) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond224) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond224) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond224) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond224) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond224) CFA_SP SP+-2
          CFI (cfiCond224) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond225 Using cfiCommon0
          CFI (cfiCond225) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond225) Conditional ??CrossCallReturnLabel_379
          CFI (cfiCond225) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond225) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond225) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond225) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond225) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond225) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond225) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond225) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond225) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond225) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond225) CFA_SP SP+-2
          CFI (cfiCond225) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker226 Using cfiCommon1
          CFI (cfiPicker226) NoFunction
          CFI (cfiPicker226) Picker
        LCALL     ?Subroutine168 & 0xFFFF
??CrossCallReturnLabel_472:
        RET
          CFI EndBlock cfiCond213
          CFI EndBlock cfiCond214
          CFI EndBlock cfiCond215
          CFI EndBlock cfiCond216
          CFI EndBlock cfiCond217
          CFI EndBlock cfiCond218
          CFI EndBlock cfiCond219
          CFI EndBlock cfiCond220
          CFI EndBlock cfiCond221
          CFI EndBlock cfiCond222
          CFI EndBlock cfiCond223
          CFI EndBlock cfiCond224
          CFI EndBlock cfiCond225
          CFI EndBlock cfiPicker226

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine168:
          CFI Block cfiCond227 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtBindReq
          CFI Conditional ??CrossCallReturnLabel_472, ??CrossCallReturnLabel_377
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond228 Using cfiCommon0
          CFI (cfiCond228) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond228) Conditional ??CrossCallReturnLabel_472, ??CrossCallReturnLabel_378
          CFI (cfiCond228) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond228) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond228) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond228) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond228) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond228) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond228) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond228) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond228) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond228) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond228) CFA_SP SP+-4
          CFI (cfiCond228) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond229 Using cfiCommon0
          CFI (cfiCond229) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond229) Conditional ??CrossCallReturnLabel_472, ??CrossCallReturnLabel_379
          CFI (cfiCond229) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond229) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond229) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond229) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond229) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond229) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond229) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond229) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond229) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond229) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond229) CFA_SP SP+-4
          CFI (cfiCond229) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond230 Using cfiCommon0
          CFI (cfiCond230) Function ZDO_UpdateNwkStatus
          CFI (cfiCond230) Conditional ??CrossCallReturnLabel_472, ??CrossCallReturnLabel_367
          CFI (cfiCond230) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond230) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond230) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond230) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond230) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond230) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond230) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond230) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond230) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond230) CFA_SP SP+-4
          CFI (cfiCond230) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond231 Using cfiCommon0
          CFI (cfiCond231) Function ZDO_CompareClusterLists
          CFI (cfiCond231) Conditional ??CrossCallReturnLabel_472, ??CrossCallReturnLabel_368
          CFI (cfiCond231) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond231) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond231) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond231) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond231) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond231) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond231) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond231) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond231) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond231) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond231) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond231) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond231) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond231) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond231) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond231) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond231) CFA_SP SP+-4
          CFI (cfiCond231) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond232 Using cfiCommon0
          CFI (cfiCond232) Function ZDO_AnyClusterMatches
          CFI (cfiCond232) Conditional ??CrossCallReturnLabel_472, ??CrossCallReturnLabel_369
          CFI (cfiCond232) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond232) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond232) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond232) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond232) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond232) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond232) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond232) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond232) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond232) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond232) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond232) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond232) CFA_SP SP+-4
          CFI (cfiCond232) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond233 Using cfiCommon0
          CFI (cfiCond233) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond233) Conditional ??CrossCallReturnLabel_472, ??CrossCallReturnLabel_370
          CFI (cfiCond233) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond233) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond233) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond233) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond233) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond233) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond233) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond233) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond233) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond233) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond233) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond233) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond233) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond233) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond233) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond233) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond233) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond233) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond233) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond233) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond233) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond233) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond233) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond233) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond233) CFA_SP SP+-4
          CFI (cfiCond233) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond234 Using cfiCommon0
          CFI (cfiCond234) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond234) Conditional ??CrossCallReturnLabel_472, ??CrossCallReturnLabel_371
          CFI (cfiCond234) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond234) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond234) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond234) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond234) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond234) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond234) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond234) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond234) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond234) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond234) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond234) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond234) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond234) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond234) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond234) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond234) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond234) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond234) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond234) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond234) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond234) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond234) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond234) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond234) CFA_SP SP+-4
          CFI (cfiCond234) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond235 Using cfiCommon0
          CFI (cfiCond235) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond235) Conditional ??CrossCallReturnLabel_472, ??CrossCallReturnLabel_372
          CFI (cfiCond235) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond235) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond235) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond235) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond235) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond235) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond235) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond235) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond235) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond235) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond235) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond235) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond235) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond235) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond235) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond235) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond235) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond235) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond235) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond235) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond235) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond235) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond235) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond235) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond235) CFA_SP SP+-4
          CFI (cfiCond235) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond236 Using cfiCommon0
          CFI (cfiCond236) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond236) Conditional ??CrossCallReturnLabel_472, ??CrossCallReturnLabel_373
          CFI (cfiCond236) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond236) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond236) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond236) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond236) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond236) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond236) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond236) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond236) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond236) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond236) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond236) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond236) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond236) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond236) CFA_SP SP+-4
          CFI (cfiCond236) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond237 Using cfiCommon0
          CFI (cfiCond237) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond237) Conditional ??CrossCallReturnLabel_472, ??CrossCallReturnLabel_374
          CFI (cfiCond237) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond237) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond237) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond237) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond237) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond237) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond237) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond237) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond237) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond237) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond237) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond237) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond237) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond237) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond237) CFA_SP SP+-4
          CFI (cfiCond237) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond238 Using cfiCommon0
          CFI (cfiCond238) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond238) Conditional ??CrossCallReturnLabel_472, ??CrossCallReturnLabel_375
          CFI (cfiCond238) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond238) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond238) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond238) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond238) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond238) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond238) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond238) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond238) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond238) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond238) CFA_SP SP+-4
          CFI (cfiCond238) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond239 Using cfiCommon0
          CFI (cfiCond239) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond239) Conditional ??CrossCallReturnLabel_472, ??CrossCallReturnLabel_376
          CFI (cfiCond239) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond239) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond239) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond239) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond239) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond239) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond239) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond239) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond239) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond239) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond239) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond239) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond239) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond239) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond239) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond239) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond239) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond239) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond239) CFA_SP SP+-4
          CFI (cfiCond239) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond240 Using cfiCommon0
          CFI (cfiCond240) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond240) Conditional ??CrossCallReturnLabel_469, ??CrossCallReturnLabel_10
          CFI (cfiCond240) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond240) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond240) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond240) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond240) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond240) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond240) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond240) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond240) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond240) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond240) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond240) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond240) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond240) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond240) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond240) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond240) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond240) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond240) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond240) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond240) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond240) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond240) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond240) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond240) CFA_SP SP+-4
          CFI (cfiCond240) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond241 Using cfiCommon0
          CFI (cfiCond241) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond241) Conditional ??CrossCallReturnLabel_469, ??CrossCallReturnLabel_11
          CFI (cfiCond241) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond241) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond241) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond241) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond241) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond241) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond241) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond241) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond241) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond241) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond241) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond241) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond241) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond241) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond241) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond241) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond241) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond241) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond241) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond241) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond241) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond241) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond241) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond241) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond241) CFA_SP SP+-4
          CFI (cfiCond241) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond242 Using cfiCommon0
          CFI (cfiCond242) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond242) Conditional ??CrossCallReturnLabel_471, ??CrossCallReturnLabel_160
          CFI (cfiCond242) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond242) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond242) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond242) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond242) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond242) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond242) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond242) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond242) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond242) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond242) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond242) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond242) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond242) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond242) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond242) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond242) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond242) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond242) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond242) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond242) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond242) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond242) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond242) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond242) CFA_SP SP+-4
          CFI (cfiCond242) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond243 Using cfiCommon0
          CFI (cfiCond243) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond243) Conditional ??CrossCallReturnLabel_471, ??CrossCallReturnLabel_161
          CFI (cfiCond243) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond243) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond243) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond243) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond243) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond243) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond243) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond243) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond243) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond243) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond243) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond243) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond243) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond243) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond243) CFA_SP SP+-4
          CFI (cfiCond243) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond244 Using cfiCommon0
          CFI (cfiCond244) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond244) Conditional ??CrossCallReturnLabel_473, ??CrossCallReturnLabel_439
          CFI (cfiCond244) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond244) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond244) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond244) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond244) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond244) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond244) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond244) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond244) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond244) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond244) CFA_SP SP+-4
          CFI (cfiCond244) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond245 Using cfiCommon0
          CFI (cfiCond245) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond245) Conditional ??CrossCallReturnLabel_473, ??CrossCallReturnLabel_440
          CFI (cfiCond245) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond245) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond245) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond245) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond245) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond245) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond245) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond245) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond245) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond245) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond245) CFA_SP SP+-4
          CFI (cfiCond245) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond246 Using cfiCommon0
          CFI (cfiCond246) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond246) Conditional ??CrossCallReturnLabel_473, ??CrossCallReturnLabel_430
          CFI (cfiCond246) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond246) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond246) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond246) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond246) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond246) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond246) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond246) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond246) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond246) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond246) CFA_SP SP+-4
          CFI (cfiCond246) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond247 Using cfiCommon0
          CFI (cfiCond247) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond247) Conditional ??CrossCallReturnLabel_473, ??CrossCallReturnLabel_431
          CFI (cfiCond247) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond247) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond247) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond247) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond247) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond247) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond247) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond247) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond247) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond247) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond247) CFA_SP SP+-4
          CFI (cfiCond247) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond248 Using cfiCommon0
          CFI (cfiCond248) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond248) Conditional ??CrossCallReturnLabel_473, ??CrossCallReturnLabel_432
          CFI (cfiCond248) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond248) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond248) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond248) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond248) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond248) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond248) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond248) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond248) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond248) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond248) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond248) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond248) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond248) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond248) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond248) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond248) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond248) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond248) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond248) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond248) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond248) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond248) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond248) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond248) CFA_SP SP+-4
          CFI (cfiCond248) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond249 Using cfiCommon0
          CFI (cfiCond249) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond249) Conditional ??CrossCallReturnLabel_473, ??CrossCallReturnLabel_433
          CFI (cfiCond249) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond249) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond249) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond249) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond249) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond249) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond249) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond249) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond249) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond249) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond249) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond249) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond249) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond249) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond249) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond249) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond249) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond249) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond249) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond249) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond249) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond249) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond249) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond249) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond249) CFA_SP SP+-4
          CFI (cfiCond249) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond250 Using cfiCommon0
          CFI (cfiCond250) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond250) Conditional ??CrossCallReturnLabel_473, ??CrossCallReturnLabel_434
          CFI (cfiCond250) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond250) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond250) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond250) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond250) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond250) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond250) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond250) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond250) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond250) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond250) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond250) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond250) CFA_SP SP+-4
          CFI (cfiCond250) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond251 Using cfiCommon0
          CFI (cfiCond251) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond251) Conditional ??CrossCallReturnLabel_473, ??CrossCallReturnLabel_435
          CFI (cfiCond251) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond251) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond251) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond251) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond251) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond251) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond251) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond251) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond251) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond251) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond251) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond251) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond251) CFA_SP SP+-4
          CFI (cfiCond251) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond252 Using cfiCommon0
          CFI (cfiCond252) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond252) Conditional ??CrossCallReturnLabel_473, ??CrossCallReturnLabel_436
          CFI (cfiCond252) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond252) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond252) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond252) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond252) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond252) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond252) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond252) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond252) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond252) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond252) CFA_SP SP+-4
          CFI (cfiCond252) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond253 Using cfiCommon0
          CFI (cfiCond253) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond253) Conditional ??CrossCallReturnLabel_473, ??CrossCallReturnLabel_437
          CFI (cfiCond253) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond253) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond253) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond253) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond253) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond253) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond253) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond253) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond253) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond253) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond253) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond253) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond253) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond253) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond253) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond253) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond253) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond253) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond253) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond253) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond253) CFA_SP SP+-4
          CFI (cfiCond253) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond254 Using cfiCommon0
          CFI (cfiCond254) Function ZDO_RemoveMatchMemory
          CFI (cfiCond254) Conditional ??CrossCallReturnLabel_473, ??CrossCallReturnLabel_438
          CFI (cfiCond254) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond254) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond254) CFA_SP SP+-9
          CFI Block cfiCond255 Using cfiCommon0
          CFI (cfiCond255) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond255) Conditional ??CrossCallReturnLabel_474, ??CrossCallReturnLabel_467
          CFI (cfiCond255) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond255) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond255) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond255) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond255) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond255) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond255) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond255) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond255) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond255) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond255) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond255) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond255) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond255) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond255) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond255) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond255) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond255) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond255) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond255) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond255) CFA_SP SP+-4
          CFI (cfiCond255) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond256 Using cfiCommon0
          CFI (cfiCond256) Function ZDMatchSendState
          CFI (cfiCond256) Conditional ??CrossCallReturnLabel_474, ??CrossCallReturnLabel_468
          CFI (cfiCond256) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond256) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond256) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond256) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond256) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond256) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond256) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond256) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond256) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond256) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond256) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond256) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond256) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond256) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond256) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond256) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond256) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond256) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond256) CFA_SP SP+-4
          CFI (cfiCond256) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond257 Using cfiCommon0
          CFI (cfiCond257) Function ZDMatchSendState
          CFI (cfiCond257) Conditional ??CrossCallReturnLabel_474, ??CrossCallReturnLabel_466
          CFI (cfiCond257) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond257) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond257) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond257) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond257) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond257) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond257) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond257) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond257) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond257) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond257) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond257) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond257) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond257) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond257) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond257) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond257) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond257) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond257) CFA_SP SP+-4
          CFI (cfiCond257) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond258 Using cfiCommon0
          CFI (cfiCond258) Function ZDMatchSendState
          CFI (cfiCond258) Conditional ??CrossCallReturnLabel_474, ??CrossCallReturnLabel_465
          CFI (cfiCond258) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond258) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond258) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond258) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond258) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond258) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond258) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond258) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond258) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond258) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond258) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond258) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond258) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond258) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond258) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond258) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond258) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond258) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond258) CFA_SP SP+-4
          CFI (cfiCond258) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond259 Using cfiCommon0
          CFI (cfiCond259) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond259) Conditional ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_23
          CFI (cfiCond259) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond259) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond259) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond259) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond259) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond259) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond259) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond259) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond259) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond259) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond259) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond259) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond259) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond259) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond259) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond259) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond259) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond259) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond259) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond259) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond259) CFA_SP SP+-4
          CFI (cfiCond259) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond260 Using cfiCommon0
          CFI (cfiCond260) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond260) Conditional ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_24
          CFI (cfiCond260) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond260) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond260) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond260) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond260) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond260) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond260) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond260) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond260) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond260) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond260) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond260) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond260) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond260) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond260) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond260) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond260) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond260) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond260) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond260) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond260) CFA_SP SP+-4
          CFI (cfiCond260) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker261 Using cfiCommon1
          CFI (cfiPicker261) NoFunction
          CFI (cfiPicker261) Picker
        LCALL     ?Subroutine181 & 0xFFFF
??CrossCallReturnLabel_530:
        MOV       R1,A
        RET
          CFI EndBlock cfiCond227
          CFI EndBlock cfiCond228
          CFI EndBlock cfiCond229
          CFI EndBlock cfiCond230
          CFI EndBlock cfiCond231
          CFI EndBlock cfiCond232
          CFI EndBlock cfiCond233
          CFI EndBlock cfiCond234
          CFI EndBlock cfiCond235
          CFI EndBlock cfiCond236
          CFI EndBlock cfiCond237
          CFI EndBlock cfiCond238
          CFI EndBlock cfiCond239
          CFI EndBlock cfiCond240
          CFI EndBlock cfiCond241
          CFI EndBlock cfiCond242
          CFI EndBlock cfiCond243
          CFI EndBlock cfiCond244
          CFI EndBlock cfiCond245
          CFI EndBlock cfiCond246
          CFI EndBlock cfiCond247
          CFI EndBlock cfiCond248
          CFI EndBlock cfiCond249
          CFI EndBlock cfiCond250
          CFI EndBlock cfiCond251
          CFI EndBlock cfiCond252
          CFI EndBlock cfiCond253
          CFI EndBlock cfiCond254
          CFI EndBlock cfiCond255
          CFI EndBlock cfiCond256
          CFI EndBlock cfiCond257
          CFI EndBlock cfiCond258
          CFI EndBlock cfiCond259
          CFI EndBlock cfiCond260
          CFI EndBlock cfiPicker261

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine38:
          CFI Block cfiCond262 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_380
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond263 Using cfiCommon0
          CFI (cfiCond263) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond263) Conditional ??CrossCallReturnLabel_381
          CFI (cfiCond263) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond263) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond263) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond263) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond263) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond263) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond263) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond263) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond263) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond263) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond263) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond263) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond263) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond263) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond263) CFA_SP SP+-2
          CFI (cfiCond263) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker264 Using cfiCommon1
          CFI (cfiPicker264) NoFunction
          CFI (cfiPicker264) Picker
        MOV       A,R0
          CFI EndBlock cfiCond262
          CFI EndBlock cfiCond263
          CFI EndBlock cfiPicker264
        REQUIRE ??Subroutine202_0
        ; // Fall through to label ??Subroutine202_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine202_0:
          CFI Block cfiCond265 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_382
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond266 Using cfiCommon0
          CFI (cfiCond266) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond266) Conditional ??CrossCallReturnLabel_383
          CFI (cfiCond266) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond266) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond266) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond266) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond266) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond266) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond266) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond266) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond266) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond266) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond266) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond266) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond266) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond266) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond266) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond266) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond266) CFA_SP SP+-2
          CFI (cfiCond266) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond267 Using cfiCommon0
          CFI (cfiCond267) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond267) Conditional ??CrossCallReturnLabel_380
          CFI (cfiCond267) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond267) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond267) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond267) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond267) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond267) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond267) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond267) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond267) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond267) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond267) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond267) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond267) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond267) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond267) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond267) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond267) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond267) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond267) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond267) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond267) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond267) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond267) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond267) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond267) CFA_SP SP+-2
          CFI (cfiCond267) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond268 Using cfiCommon0
          CFI (cfiCond268) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond268) Conditional ??CrossCallReturnLabel_381
          CFI (cfiCond268) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond268) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond268) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond268) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond268) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond268) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond268) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond268) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond268) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond268) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond268) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond268) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond268) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond268) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond268) CFA_SP SP+-2
          CFI (cfiCond268) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker269 Using cfiCommon1
          CFI (cfiPicker269) NoFunction
          CFI (cfiPicker269) Picker
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
        MOVX      @DPTR,A
        MOV       A,R6
        RET
          CFI EndBlock cfiCond265
          CFI EndBlock cfiCond266
          CFI EndBlock cfiCond267
          CFI EndBlock cfiCond268
          CFI EndBlock cfiPicker269

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine19:
          CFI Block cfiCond270 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_25
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond271 Using cfiCommon0
          CFI (cfiCond271) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond271) Conditional ??CrossCallReturnLabel_26
          CFI (cfiCond271) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond271) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond271) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond271) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond271) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond271) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond271) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond271) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond271) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond271) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond271) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond271) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond271) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond271) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond271) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond271) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond271) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond271) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond271) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond271) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond271) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond271) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond271) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond271) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond271) CFA_SP SP+-2
          CFI (cfiCond271) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiPicker272 Using cfiCommon1
          CFI (cfiPicker272) NoFunction
          CFI (cfiPicker272) Picker
        MOVX      @DPTR,A
        MOV       A,R6
        ADD       A,#0x17
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        MOV       A,#0x2
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond270
          CFI EndBlock cfiCond271
          CFI EndBlock cfiPicker272

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine13:
          CFI Block cfiCond273 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_10
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond274 Using cfiCommon0
          CFI (cfiCond274) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond274) Conditional ??CrossCallReturnLabel_11
          CFI (cfiCond274) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond274) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond274) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond274) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond274) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond274) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond274) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond274) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond274) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond274) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond274) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond274) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond274) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond274) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond274) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond274) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond274) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond274) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond274) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond274) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond274) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond274) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond274) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond274) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond274) CFA_SP SP+-2
          CFI (cfiCond274) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiPicker275 Using cfiCommon1
          CFI (cfiPicker275) NoFunction
          CFI (cfiPicker275) Picker
        LCALL     ?Subroutine168 & 0xFFFF
??CrossCallReturnLabel_469:
        MOV       DPL,R6
        MOV       DPH,R7
        MOV       A,R0
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
        MOVX      @DPTR,A
        ; Setup parameters for call to function sAddrExtCpy
        ; Setup parameters for call to function sAddrExtCpy
        MOV       R4,#(_NIB + 53) & 0xff
        MOV       R5,#((_NIB + 53) >> 8) & 0xff
        MOV       A,R6
        ADD       A,#0x2
        LCALL     ?Subroutine170 & 0xFFFF
??CrossCallReturnLabel_295:
        RET
          CFI EndBlock cfiCond273
          CFI EndBlock cfiCond274
          CFI EndBlock cfiPicker275

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine170:
          CFI Block cfiCond276 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_294
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond277 Using cfiCommon0
          CFI (cfiCond277) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond277) Conditional ??CrossCallReturnLabel_295, ??CrossCallReturnLabel_10
          CFI (cfiCond277) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond277) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond277) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond277) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond277) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond277) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond277) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond277) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond277) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond277) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond277) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond277) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond277) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond277) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond277) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond277) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond277) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond277) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond277) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond277) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond277) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond277) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond277) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond277) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond277) CFA_SP SP+-4
          CFI (cfiCond277) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond278 Using cfiCommon0
          CFI (cfiCond278) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond278) Conditional ??CrossCallReturnLabel_295, ??CrossCallReturnLabel_11
          CFI (cfiCond278) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond278) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond278) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond278) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond278) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond278) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond278) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond278) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond278) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond278) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond278) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond278) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond278) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond278) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond278) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond278) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond278) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond278) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond278) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond278) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond278) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond278) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond278) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond278) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond278) CFA_SP SP+-4
          CFI (cfiCond278) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond279 Using cfiCommon0
          CFI (cfiCond279) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond279) Conditional ??CrossCallReturnLabel_296
          CFI (cfiCond279) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond279) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond279) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond279) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond279) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond279) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond279) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond279) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond279) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond279) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond279) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond279) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond279) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond279) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond279) CFA_SP SP+-2
          CFI (cfiCond279) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker280 Using cfiCommon1
          CFI (cfiPicker280) NoFunction
          CFI (cfiPicker280) Picker
        MOV       R2,A
        CLR       A
        ADDC      A,R7
        MOV       R3,A
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        RET
          CFI EndBlock cfiCond276
          CFI EndBlock cfiCond277
          CFI EndBlock cfiCond278
          CFI EndBlock cfiCond279
          CFI EndBlock cfiPicker280
// 1515 
// 1516 /*********************************************************************
// 1517  * @fn          ZDO_ProcessMgmtNwkDiscReq
// 1518  *
// 1519  * @brief       This function handles parsing the incoming Management
// 1520  *              Network Discover request and starts the request.
// 1521  *
// 1522  * @param       inMsg - incoming message (request)
// 1523  *
// 1524  * @return      none
// 1525  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1526 void ZDO_ProcessMgmtNwkDiscReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtNwkDiscReq:
          CFI Block cfiBlock281 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
        CODE
// 1527 {
        FUNCALL ZDO_ProcessMgmtNwkDiscReq, osal_build_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtNwkDiscReq, NLME_NwkDiscReq2
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtNwkDiscReq, NLME_NwkDiscTerm
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 7
        MOV       A,#-0x7
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 17)
        LCALL     ?Subroutine122 & 0xFFFF
// 1528   NLME_ScanFields_t scan;
// 1529   uint8             index;
// 1530   uint8             *msg;
// 1531 
// 1532   msg = inMsg->asdu;
??CrossCallReturnLabel_424:
        ADDC      A,?V1
        LCALL     ?Subroutine62 & 0xFFFF
// 1533   scan.channels = osal_build_uint32( msg, 4 );
??CrossCallReturnLabel_100:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ?XSTORE_R0123
// 1534   msg += 4;
// 1535   scan.duration = *msg++;
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine29 & 0xFFFF
// 1536   index         = *msg;
??CrossCallReturnLabel_40:
        MOV       R0,A
// 1537   scan.scanType = ZMAC_ACTIVE_SCAN;
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x1
        MOVX      @DPTR,A
// 1538   scan.scanApp  = NLME_DISC_SCAN;
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x1
        MOVX      @DPTR,A
// 1539 
// 1540   // Save off the information to be used for the response
// 1541   zdappMgmtNwkDiscReqInProgress          = true;
        MOV       DPTR,#zdappMgmtNwkDiscReqInProgress
        MOVX      @DPTR,A
// 1542   zdappMgmtNwkDiscRspAddr.addrMode       = Addr16Bit;
        MOV       DPTR,#zdappMgmtNwkDiscRspAddr + 8
        INC       A
        LCALL     ?Subroutine35 & 0xFFFF
// 1543   zdappMgmtNwkDiscRspAddr.addr.shortAddr = inMsg->srcAddr.addr.shortAddr;
??CrossCallReturnLabel_55:
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R3,A
        MOV       DPTR,#zdappMgmtNwkDiscRspAddr
        LCALL     ??Subroutine196_0 & 0xFFFF
// 1544   zdappMgmtNwkDiscStartIndex             = index;
??CrossCallReturnLabel_346:
        MOV       A,R0
        MOV       DPTR,#zdappMgmtNwkDiscStartIndex
        MOVX      @DPTR,A
// 1545   zdappMgmtNwkDiscRspTransSeq            = inMsg->TransSeq;
        LCALL     ?Subroutine128 & 0xFFFF
??CrossCallReturnLabel_228:
        MOVX      A,@DPTR
        MOV       DPTR,#zdappMgmtNwkDiscRspTransSeq
        MOVX      @DPTR,A
// 1546 
// 1547   if ( NLME_NwkDiscReq2( &scan ) != ZSuccess )
        ; Setup parameters for call to function NLME_NwkDiscReq2
        MOV       R2,?XSP + 0
        MOV       R3,?XSP + 1
        LCALL     `??NLME_NwkDiscReq2::?relay`; Banked call to: NLME_NwkDiscReq2
        MOV       A,R1
        JZ        ??ZDO_ProcessMgmtNwkDiscReq_0
// 1548   {
// 1549     NLME_NwkDiscTerm();
        ; Setup parameters for call to function NLME_NwkDiscTerm
        LCALL     `??NLME_NwkDiscTerm::?relay`; Banked call to: NLME_NwkDiscTerm
// 1550 
// 1551     // zdappMgmtNwkDiscReqInProgress will be reset in the confirm callback
// 1552   }
// 1553 }
??ZDO_ProcessMgmtNwkDiscReq_0:
        MOV       A,#0x7
        LJMP      ??Subroutine188_0 & 0xFFFF
          CFI EndBlock cfiBlock281
// 1554 
// 1555 #if defined ( ZDO_MGMT_NWKDISC_RESPONSE )
// 1556 /*********************************************************************
// 1557  * @fn          ZDO_FinishProcessingMgmtNwkDiscReq
// 1558  *
// 1559  * @brief       This function finishes the processing of the Management
// 1560  *              Network Discover Request and generates the response.
// 1561  *
// 1562  *   Note:      This function will limit the number of items returned
// 1563  *              to ZDO_MAX_NWKDISC_ITEMS items.
// 1564  *
// 1565  * @param       ResultCountSrcAddr - source of the request
// 1566  * @param       msg - pointer to incoming message
// 1567  * @param       SecurityUse -
// 1568  *
// 1569  * @return      none
// 1570  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1571 void ZDO_FinishProcessingMgmtNwkDiscReq( void )
ZDO_FinishProcessingMgmtNwkDiscReq:
          CFI Block cfiBlock282 Using cfiCommon0
          CFI Function ZDO_FinishProcessingMgmtNwkDiscReq
        CODE
// 1572 {
        FUNCALL ZDO_FinishProcessingMgmtNwkDiscReq, nwk_getNwkDescList
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_FinishProcessingMgmtNwkDiscReq, nwk_getNwkDescList
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_FinishProcessingMgmtNwkDiscReq, nwk_getNwkDescList
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_FinishProcessingMgmtNwkDiscReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_FinishProcessingMgmtNwkDiscReq, NLME_GetProtocolVersion
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_FinishProcessingMgmtNwkDiscReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_FinishProcessingMgmtNwkDiscReq, ZMacGetReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_FinishProcessingMgmtNwkDiscReq, ZDP_MgmtNwkDiscRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_FinishProcessingMgmtNwkDiscReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_FinishProcessingMgmtNwkDiscReq, NLME_NwkDiscTerm
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV       A,#-0xe
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
// 1573   byte count, i, ResultCount = 0;
        MOV       ?V0,#0x0
// 1574   networkDesc_t *newDesc = NULL, *pList, *NetworkList;
        MOV       R6,#0x0
        MOV       R7,#0x0
// 1575 
// 1576   NetworkList = nwk_getNwkDescList();
        ; Setup parameters for call to function nwk_getNwkDescList
        LCALL     `??nwk_getNwkDescList::?relay`; Banked call to: nwk_getNwkDescList
        MOV       ?V2,R2
        MOV       ?V3,R3
// 1577 
// 1578   // Count the number of nwk descriptors in the list
// 1579   pList = nwk_getNwkDescList();
        ; Setup parameters for call to function nwk_getNwkDescList
        LCALL     ?Subroutine143 & 0xFFFF
??CrossCallReturnLabel_258:
        SJMP      ??CrossCallReturnLabel_373
// 1580   while (pList)
// 1581   {
// 1582     ResultCount++;
??ZDO_FinishProcessingMgmtNwkDiscReq_0:
        INC       ?V0
// 1583     pList = pList->nextDesc;
        LCALL     ?Subroutine176 & 0xFFFF
// 1584   }
??CrossCallReturnLabel_507:
        ADDC      A,R1
        MOV       DPH,A
        LCALL     ??Subroutine201_0 & 0xFFFF
??CrossCallReturnLabel_373:
        MOV       A,R0
        ORL       A,R1
        JNZ       ??ZDO_FinishProcessingMgmtNwkDiscReq_0
// 1585 
// 1586   if ( ZSTACK_ROUTER_BUILD )
// 1587   {
// 1588     // Look for my PanID.
// 1589     pList = nwk_getNwkDescList();
        ; Setup parameters for call to function nwk_getNwkDescList
        LCALL     ?Subroutine143 & 0xFFFF
??CrossCallReturnLabel_259:
        SJMP      ??ZDO_FinishProcessingMgmtNwkDiscReq_1
// 1590     while ( pList )
// 1591     {
// 1592       if ( pList->panId == _NIB.nwkPanId )
// 1593       {
// 1594         break;
// 1595       }
// 1596 
// 1597 
// 1598       if ( !pList->nextDesc )
// 1599       {
// 1600         break;
// 1601       }
// 1602       pList = pList->nextDesc;
??ZDO_FinishProcessingMgmtNwkDiscReq_2:
        MOV       A,R2
        MOV       R0,A
        MOV       A,R3
        MOV       R1,A
??ZDO_FinishProcessingMgmtNwkDiscReq_1:
        MOV       A,R0
        ORL       A,R1
        JZ        ??ZDO_FinishProcessingMgmtNwkDiscReq_3
        LCALL     ?Subroutine98 & 0xFFFF
??CrossCallReturnLabel_390:
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      A,@DPTR
        XRL       A,R4
        JNZ       ??ZDO_FinishProcessingMgmtNwkDiscReq_4
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R5
??ZDO_FinishProcessingMgmtNwkDiscReq_4:
        JZ        ??ZDO_FinishProcessingMgmtNwkDiscReq_5
        LCALL     ?Subroutine176 & 0xFFFF
// 1603     }
??CrossCallReturnLabel_508:
        ADDC      A,R1
        LCALL     ??Subroutine199_0 & 0xFFFF
??CrossCallReturnLabel_359:
        JNZ       ??ZDO_FinishProcessingMgmtNwkDiscReq_2
??ZDO_FinishProcessingMgmtNwkDiscReq_5:
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      A,@DPTR
        XRL       A,R4
        JNZ       ??ZDO_FinishProcessingMgmtNwkDiscReq_6
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R5
??ZDO_FinishProcessingMgmtNwkDiscReq_6:
        JNZ       $+5
        LJMP      ??ZDO_FinishProcessingMgmtNwkDiscReq_7 & 0xFFFF
// 1604 
// 1605 
// 1606     // If my Pan not present (query to a star network ZC or an isolated ZR?),
// 1607     // prepend it.
// 1608     if ( !pList || (pList->panId != _NIB.nwkPanId) )
// 1609     {
// 1610       newDesc = (networkDesc_t *)osal_mem_alloc( sizeof( networkDesc_t ) );
??ZDO_FinishProcessingMgmtNwkDiscReq_3:
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,#0x16
        MOV       R3,#0x0
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V4,R2
        MOV       ?V5,R3
        MOV       R6,?V4
        MOV       R7,?V5
// 1611       if ( newDesc )
        MOV       A,R2
        ORL       A,R7
        JZ        ??ZDO_FinishProcessingMgmtNwkDiscReq_7
// 1612       {
// 1613         byte pJoin;
// 1614 
// 1615         newDesc->panId = _NIB.nwkPanId;
        MOV       DPTR,#_NIB + 33
        LCALL     ?Subroutine95 & 0xFFFF
??CrossCallReturnLabel_161:
        LCALL     ??Subroutine245_0 & 0xFFFF
// 1616         newDesc->logicalChannel = _NIB.nwkLogicalChannel;
??CrossCallReturnLabel_624:
        MOV       DPTR,#_NIB + 22
        LCALL     ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_149:
        MOVX      @DPTR,A
// 1617         newDesc->version = NLME_GetProtocolVersion();
        ; Setup parameters for call to function NLME_GetProtocolVersion
        LCALL     `??NLME_GetProtocolVersion::?relay`; Banked call to: NLME_GetProtocolVersion
        MOV       A,R1
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
// 1618         newDesc->stackProfile = zgStackProfile;
        MOV       DPTR,#zgStackProfile
        MOVX      A,@DPTR
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
// 1619 
// 1620         //Extended PanID
// 1621         osal_cpyExtAddr( newDesc->extendedPANID, _NIB.extendedPANID);
        ; Setup parameters for call to function sAddrExtCpy
        MOV       R4,#(_NIB + 53) & 0xff
        MOV       R5,#((_NIB + 53) >> 8) & 0xff
        MOV       A,R6
        ADD       A,#0xb
        LCALL     ?Subroutine170 & 0xFFFF
// 1622 
// 1623         ZMacGetReq( ZMacAssociationPermit, &pJoin );
??CrossCallReturnLabel_296:
        ; Setup parameters for call to function ZMacGetReq
        MOV       R2,?XSP + 0
        MOV       R3,?XSP + 1
        MOV       R1,#0x41
        LCALL     `??ZMacGetReq::?relay`; Banked call to: ZMacGetReq
// 1624         newDesc->chosenRouter = ((pJoin) ? ZDAppNwkAddr.addr.shortAddr :
// 1625                                            INVALID_NODE_ADDR);
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      A,@DPTR
        JZ        ??ZDO_FinishProcessingMgmtNwkDiscReq_8
        MOV       DPTR,#ZDAppNwkAddr
        LCALL     ??Subroutine201_0 & 0xFFFF
??CrossCallReturnLabel_374:
        SJMP      ??ZDO_FinishProcessingMgmtNwkDiscReq_9
??ZDO_FinishProcessingMgmtNwkDiscReq_8:
        MOV       R0,#-0x2
        MOV       R1,#-0x1
??ZDO_FinishProcessingMgmtNwkDiscReq_9:
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine38 & 0xFFFF
// 1626 
// 1627         newDesc->nextDesc = NetworkList;
??CrossCallReturnLabel_381:
        LCALL     ??Subroutine226_0 & 0xFFFF
??CrossCallReturnLabel_503:
        MOV       A,?V2
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V3
        MOVX      @DPTR,A
// 1628         NetworkList = newDesc;
        MOV       ?V2,R6
        MOV       ?V3,R7
// 1629         ResultCount++;
        INC       ?V0
// 1630       }
// 1631     }
// 1632   }
// 1633 
// 1634   // Calc the count and apply a max count.
// 1635   if ( zdappMgmtNwkDiscStartIndex > ResultCount )
??ZDO_FinishProcessingMgmtNwkDiscReq_7:
        MOV       DPTR,#zdappMgmtNwkDiscStartIndex
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       A,?V0
        CLR       C
        SUBB      A,R0
        JNC       ??ZDO_FinishProcessingMgmtNwkDiscReq_10
// 1636   {
// 1637     count = 0;
        MOV       R1,#0x0
        SJMP      ??ZDO_FinishProcessingMgmtNwkDiscReq_11
// 1638   }
// 1639   else
// 1640   {
// 1641     count = ResultCount - zdappMgmtNwkDiscStartIndex;
??ZDO_FinishProcessingMgmtNwkDiscReq_10:
        MOV       A,?V0
        CLR       C
        SUBB      A,R0
        MOV       R1,A
// 1642     if ( count > ZDO_MAX_NWKDISC_ITEMS )
        CLR       C
        SUBB      A,#0x6
        JC        ??ZDO_FinishProcessingMgmtNwkDiscReq_12
// 1643     {
// 1644       count = ZDO_MAX_NWKDISC_ITEMS;
        MOV       R1,#0x5
// 1645     }
// 1646 
// 1647     // Move the list pointer up to the start index.
// 1648     for ( i = 0; i < zdappMgmtNwkDiscStartIndex; i++ )
??ZDO_FinishProcessingMgmtNwkDiscReq_12:
        MOV       R0,#0x0
        SJMP      ??ZDO_FinishProcessingMgmtNwkDiscReq_13
// 1649     {
// 1650       NetworkList = NetworkList->nextDesc;
??ZDO_FinishProcessingMgmtNwkDiscReq_14:
        MOV       A,?V2
        LCALL     ??Subroutine227_0 & 0xFFFF
// 1651     }
??CrossCallReturnLabel_506:
        ADDC      A,?V3
        LCALL     ?Subroutine103 & 0xFFFF
??CrossCallReturnLabel_386:
        MOV       ?V3,A
        INC       R0
??ZDO_FinishProcessingMgmtNwkDiscReq_13:
        MOV       DPTR,#zdappMgmtNwkDiscStartIndex
        MOVX      A,@DPTR
        MOV       R2,A
        MOV       A,R0
        CLR       C
        SUBB      A,R2
        JC        ??ZDO_FinishProcessingMgmtNwkDiscReq_14
// 1652   }
// 1653 
// 1654   ZDP_MgmtNwkDiscRsp( zdappMgmtNwkDiscRspTransSeq,
// 1655                      &zdappMgmtNwkDiscRspAddr, ZSuccess, ResultCount,
// 1656                       zdappMgmtNwkDiscStartIndex,
// 1657                       count,
// 1658                       NetworkList,
// 1659                       false );
??ZDO_FinishProcessingMgmtNwkDiscReq_11:
        ; Setup parameters for call to function ZDP_MgmtNwkDiscRsp
        MOV       ?V1,#0x0
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 16)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 18)
        MOV       A,R1
        MOV       ?V1,A
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       DPTR,#zdappMgmtNwkDiscStartIndex
        MOVX      A,@DPTR
        MOV       ?V1,A
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       R5,?V0
        MOV       R4,#0x0
        MOV       R2,#zdappMgmtNwkDiscRspAddr & 0xff
        MOV       R3,#(zdappMgmtNwkDiscRspAddr >> 8) & 0xff
        MOV       DPTR,#zdappMgmtNwkDiscRspTransSeq
        MOVX      A,@DPTR
        MOV       R1,A
        LCALL     `??ZDP_MgmtNwkDiscRsp::?relay`; Banked call to: ZDP_MgmtNwkDiscRsp
        MOV       A,#0x5
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
// 1660 
// 1661   if ( ZSTACK_ROUTER_BUILD )
// 1662   {
// 1663     if ( newDesc != NULL )
        MOV       A,R6
        ORL       A,R7
        JZ        ??ZDO_FinishProcessingMgmtNwkDiscReq_15
// 1664     {
// 1665       osal_mem_free( newDesc );
        ; Setup parameters for call to function osal_mem_free
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 1666     }
// 1667   }
// 1668 
// 1669   NLME_NwkDiscTerm();
??ZDO_FinishProcessingMgmtNwkDiscReq_15:
        ; Setup parameters for call to function NLME_NwkDiscTerm
        LCALL     `??NLME_NwkDiscTerm::?relay`; Banked call to: NLME_NwkDiscTerm
// 1670 }
        MOV       A,#0x1
        LJMP      ?Subroutine5 & 0xFFFF
          CFI EndBlock cfiBlock282

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine143:
          CFI Block cfiCond283 Using cfiCommon0
          CFI Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_258
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond284 Using cfiCommon0
          CFI (cfiCond284) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond284) Conditional ??CrossCallReturnLabel_259
          CFI (cfiCond284) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond284) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond284) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond284) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond284) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond284) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond284) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond284) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond284) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond284) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond284) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond284) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond284) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond284) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond284) CFA_SP SP+-2
          CFI (cfiCond284) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker285 Using cfiCommon1
          CFI (cfiPicker285) NoFunction
          CFI (cfiPicker285) Picker
        LCALL     `??nwk_getNwkDescList::?relay`; Banked call to: nwk_getNwkDescList
        MOV       ?V4,R2
        MOV       ?V5,R3
        MOV       R0,?V4
        MOV       R1,?V5
        RET
          CFI EndBlock cfiCond283
          CFI EndBlock cfiCond284
          CFI EndBlock cfiPicker285

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine103:
          CFI Block cfiCond286 Using cfiCommon0
          CFI Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_386
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond287 Using cfiCommon0
          CFI (cfiCond287) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond287) Conditional ??CrossCallReturnLabel_387
          CFI (cfiCond287) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond287) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond287) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond287) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond287) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond287) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond287) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond287) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond287) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond287) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond287) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond287) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond287) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond287) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond287) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond287) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond287) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond287) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond287) CFA_SP SP+-2
          CFI (cfiCond287) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker288 Using cfiCommon1
          CFI (cfiPicker288) NoFunction
          CFI (cfiPicker288) Picker
        MOV       DPH,A
          CFI EndBlock cfiCond286
          CFI EndBlock cfiCond287
          CFI EndBlock cfiPicker288
        REQUIRE ??Subroutine203_0
        ; // Fall through to label ??Subroutine203_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine203_0:
          CFI Block cfiCond289 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_385
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond290 Using cfiCommon0
          CFI (cfiCond290) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond290) Conditional ??CrossCallReturnLabel_384
          CFI (cfiCond290) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond290) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond290) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond290) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond290) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond290) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond290) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond290) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond290) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond290) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond290) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond290) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond290) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond290) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond290) CFA_SP SP+-2
          CFI (cfiCond290) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond291 Using cfiCommon0
          CFI (cfiCond291) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond291) Conditional ??CrossCallReturnLabel_386
          CFI (cfiCond291) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond291) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond291) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond291) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond291) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond291) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond291) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond291) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond291) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond291) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond291) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond291) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond291) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond291) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond291) CFA_SP SP+-2
          CFI (cfiCond291) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond292 Using cfiCommon0
          CFI (cfiCond292) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond292) Conditional ??CrossCallReturnLabel_387
          CFI (cfiCond292) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond292) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond292) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond292) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond292) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond292) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond292) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond292) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond292) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond292) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond292) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond292) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond292) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond292) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond292) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond292) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond292) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond292) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond292) CFA_SP SP+-2
          CFI (cfiCond292) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker293 Using cfiCommon1
          CFI (cfiPicker293) NoFunction
          CFI (cfiPicker293) Picker
        MOVX      A,@DPTR
        MOV       ?V2,A
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond289
          CFI EndBlock cfiCond290
          CFI EndBlock cfiCond291
          CFI EndBlock cfiCond292
          CFI EndBlock cfiPicker293

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine98:
          CFI Block cfiCond294 Using cfiCommon0
          CFI Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_390
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond295 Using cfiCommon0
          CFI (cfiCond295) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond295) Conditional ??CrossCallReturnLabel_391
          CFI (cfiCond295) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond295) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond295) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond295) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond295) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond295) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond295) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond295) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond295) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond295) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond295) CFA_SP SP+-2
          CFI (cfiCond295) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker296 Using cfiCommon1
          CFI (cfiPicker296) NoFunction
          CFI (cfiPicker296) Picker
        MOV       DPTR,#_NIB + 33
          CFI EndBlock cfiCond294
          CFI EndBlock cfiCond295
          CFI EndBlock cfiPicker296
        REQUIRE ??Subroutine204_0
        ; // Fall through to label ??Subroutine204_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine204_0:
          CFI Block cfiCond297 Using cfiCommon0
          CFI Function ZDO_CompareClusterLists
          CFI Conditional ??CrossCallReturnLabel_388
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond298 Using cfiCommon0
          CFI (cfiCond298) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond298) Conditional ??CrossCallReturnLabel_389
          CFI (cfiCond298) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond298) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond298) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond298) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond298) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond298) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond298) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond298) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond298) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond298) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond298) CFA_SP SP+-2
          CFI (cfiCond298) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond299 Using cfiCommon0
          CFI (cfiCond299) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond299) Conditional ??CrossCallReturnLabel_390
          CFI (cfiCond299) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond299) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond299) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond299) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond299) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond299) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond299) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond299) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond299) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond299) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond299) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond299) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond299) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond299) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond299) CFA_SP SP+-2
          CFI (cfiCond299) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond300 Using cfiCommon0
          CFI (cfiCond300) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond300) Conditional ??CrossCallReturnLabel_391
          CFI (cfiCond300) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond300) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond300) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond300) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond300) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond300) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond300) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond300) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond300) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond300) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond300) CFA_SP SP+-2
          CFI (cfiCond300) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker301 Using cfiCommon1
          CFI (cfiPicker301) NoFunction
          CFI (cfiPicker301) Picker
        MOVX      A,@DPTR
        MOV       R4,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R5,A
        RET
          CFI EndBlock cfiCond297
          CFI EndBlock cfiCond298
          CFI EndBlock cfiCond299
          CFI EndBlock cfiCond300
          CFI EndBlock cfiPicker301

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine95:
          CFI Block cfiCond302 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_160
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond303 Using cfiCommon0
          CFI (cfiCond303) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond303) Conditional ??CrossCallReturnLabel_161
          CFI (cfiCond303) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond303) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond303) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond303) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond303) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond303) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond303) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond303) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond303) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond303) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond303) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond303) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond303) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond303) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond303) CFA_SP SP+-2
          CFI (cfiCond303) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker304 Using cfiCommon1
          CFI (cfiPicker304) NoFunction
          CFI (cfiPicker304) Picker
        LCALL     ?Subroutine168 & 0xFFFF
??CrossCallReturnLabel_471:
        MOV       DPL,R2
        MOV       DPH,R3
        RET
          CFI EndBlock cfiCond302
          CFI EndBlock cfiCond303
          CFI EndBlock cfiPicker304
// 1671 #endif
// 1672 
// 1673 /*********************************************************************
// 1674  * @fn          ZDO_ProcessMgmtRtgReq
// 1675  *
// 1676  * @brief       This function finishes the processing of the Management
// 1677  *              Routing Request and generates the response.
// 1678  *
// 1679  *   Note:      This function will limit the number of items returned
// 1680  *              to ZDO_MAX_RTG_ITEMS items.
// 1681  *
// 1682  * @param       inMsg - incoming message (request)
// 1683  *
// 1684  * @return      none
// 1685  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1686 void ZDO_ProcessMgmtRtgReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtRtgReq:
          CFI Block cfiBlock305 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtRtgReq
        CODE
// 1687 {
        FUNCALL ZDO_ProcessMgmtRtgReq, NLME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtRtgReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtRtgReq, NLME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtRtgReq, ZDP_MgmtRtgRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtRtgReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 17)
        MOV       ?V2,R2
        MOV       ?V3,R3
// 1688   byte x;
// 1689   byte maxNumItems;
// 1690   byte numItems = 0;
        MOV       R6,#0x0
// 1691   uint8 *pBuf = NULL;
        MOV       ?V6,R6
        MOV       ?V7,R6
// 1692   rtgItem_t *pList;
// 1693   uint8 StartIndex = inMsg->asdu[0];
        LCALL     ??Subroutine211_0 & 0xFFFF
??CrossCallReturnLabel_427:
        ADDC      A,?V3
        MOV       DPH,A
        LCALL     ??Subroutine186_0 & 0xFFFF
??CrossCallReturnLabel_313:
        MOV       R7,A
// 1694 
// 1695   // Get the number of table items
// 1696   NLME_GetRequest( nwkNumRoutingTableEntries, 0, &maxNumItems );
        ; Setup parameters for call to function NLME_GetRequest
        MOV       R4,?XSP + 0
        MOV       R5,?XSP + 1
        MOV       R2,#0x0
        MOV       R3,#0x0
        MOV       R1,#-0x63
        LCALL     `??NLME_GetRequest::?relay`; Banked call to: NLME_GetRequest
// 1697 
// 1698   if ( maxNumItems > StartIndex )
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       A,R7
        CLR       C
        SUBB      A,R0
        JNC       ??ZDO_ProcessMgmtRtgReq_0
// 1699   {
// 1700     numItems = maxNumItems - StartIndex;    // Start at the passed in index
        MOVX      A,@DPTR
        CLR       C
        SUBB      A,R7
        MOV       R6,A
// 1701 
// 1702     // limit the size of the list
// 1703     if ( numItems > ZDO_MAX_RTG_ITEMS )
        CLR       C
        SUBB      A,#0xb
        JC        ??ZDO_ProcessMgmtRtgReq_1
// 1704     {
// 1705       numItems = ZDO_MAX_RTG_ITEMS;
        MOV       R6,#0xa
// 1706     }
// 1707 
// 1708     // Allocate the memory to build the table
// 1709     pBuf = osal_mem_alloc( (short)(sizeof( rtgItem_t ) * numItems) );
??ZDO_ProcessMgmtRtgReq_1:
        ; Setup parameters for call to function osal_mem_alloc
        MOV       A,R6
        MOV       B,#0x7
        MUL       AB
        MOV       R2,A
        MOV       R3,B
        LCALL     ??Subroutine205_0 & 0xFFFF
??CrossCallReturnLabel_394:
        MOV       ?V6,R2
        MOV       ?V7,R3
// 1710 
// 1711     if ( pBuf != NULL )
        MOV       A,R2
        ORL       A,R3
        JZ        ??ZDO_ProcessMgmtRtgReq_2
// 1712     {
// 1713       // Convert buffer to list
// 1714       pList = (rtgItem_t *)pBuf;
// 1715 
// 1716       // Loop through items and build list
// 1717       for ( x = 0; x < numItems; x++ )
        MOV       ?V4,#0x0
        SJMP      ??ZDO_ProcessMgmtRtgReq_3
// 1718       {
// 1719         NLME_GetRequest( nwkRoutingTable, (uint16)(x + StartIndex), (void*)pList );
// 1720 
// 1721         // Remap the status to the RoutingTableList Record Format defined in the ZigBee spec
// 1722         switch( pList->status )
// 1723         {
// 1724           case RT_ACTIVE:
// 1725             pList->status = ZDO_MGMT_RTG_ENTRY_ACTIVE;
// 1726             break;
// 1727 
// 1728           case RT_DISC:
// 1729             pList->status = ZDO_MGMT_RTG_ENTRY_DISCOVERY_UNDERWAY;
// 1730             break;
// 1731 
// 1732           case RT_LINK_FAIL:
// 1733             pList->status = ZDO_MGMT_RTG_ENTRY_DISCOVERY_FAILED;
// 1734             break;
// 1735 
// 1736           case RT_INIT:
// 1737           case RT_REPAIR:
// 1738           default:
// 1739             pList->status = ZDO_MGMT_RTG_ENTRY_INACTIVE;
??ZDO_ProcessMgmtRtgReq_4:
        MOV       A,#0x3
??ZDO_ProcessMgmtRtgReq_5:
        MOVX      @DPTR,A
// 1740             break;
// 1741         }
// 1742 
// 1743         // Increment pointer to next record
// 1744         pList++;
        MOV       A,?V0
        ADD       A,#0x7
        MOV       ?V0,A
        JNC       ??ZDO_ProcessMgmtRtgReq_6
        INC       ?V1
??ZDO_ProcessMgmtRtgReq_6:
        INC       ?V4
??ZDO_ProcessMgmtRtgReq_3:
        MOV       A,?V4
        CLR       C
        SUBB      A,R6
        JNC       ??ZDO_ProcessMgmtRtgReq_0
        ; Setup parameters for call to function NLME_GetRequest
        MOV       R4,?V0
        MOV       R5,?V1
        MOV       A,?V4
        ADD       A,R7
        MOV       R2,A
        CLR       A
        ADDC      A,#0x0
        MOV       R3,A
        MOV       R1,#-0x75
        LCALL     `??NLME_GetRequest::?relay`; Banked call to: NLME_GetRequest
        MOV       A,?V0
        ADD       A,#0x5
        LCALL     ??Subroutine237_0 & 0xFFFF
??CrossCallReturnLabel_572:
        MOVX      A,@DPTR
        DEC       A
        JZ        ??ZDO_ProcessMgmtRtgReq_7
        DEC       A
        JZ        ??ZDO_ProcessMgmtRtgReq_8
        DEC       A
        JZ        ??ZDO_ProcessMgmtRtgReq_9
        SJMP      ??ZDO_ProcessMgmtRtgReq_4
??ZDO_ProcessMgmtRtgReq_7:
        CLR       A
        SJMP      ??ZDO_ProcessMgmtRtgReq_5
??ZDO_ProcessMgmtRtgReq_8:
        MOV       A,#0x1
        SJMP      ??ZDO_ProcessMgmtRtgReq_5
??ZDO_ProcessMgmtRtgReq_9:
        MOV       A,#0x2
        SJMP      ??ZDO_ProcessMgmtRtgReq_5
// 1745       }
// 1746     }
// 1747     else
// 1748     {
// 1749       numItems = 0;
??ZDO_ProcessMgmtRtgReq_2:
        MOV       R6,#0x0
// 1750     }
// 1751   }
// 1752 
// 1753   // Send response
// 1754   ZDP_MgmtRtgRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZSuccess, maxNumItems, StartIndex, numItems,
// 1755                         (rtgItem_t *)pBuf, false );
??ZDO_ProcessMgmtRtgReq_0:
        ; Setup parameters for call to function ZDP_MgmtRtgRsp
        MOV       ?V0,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 18)
        MOV       R0,#?V6
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       A,R6
        MOV       ?V0,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       A,R7
        MOV       ?V0,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       R5,A
        MOV       R4,#0x0
        MOV       A,?V2
        LCALL     ?Subroutine130 & 0xFFFF
??CrossCallReturnLabel_238:
        ADDC      A,?V3
        MOV       R3,A
        MOV       A,?V2
        LCALL     ?Subroutine129 & 0xFFFF
??CrossCallReturnLabel_231:
        ADDC      A,?V3
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       R1,A
        LCALL     `??ZDP_MgmtRtgRsp::?relay`; Banked call to: ZDP_MgmtRtgRsp
        MOV       A,#0x5
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 17)
// 1756 
// 1757   if ( pBuf != NULL )
        MOV       A,?V6
        ORL       A,?V7
        JZ        ??ZDO_ProcessMgmtRtgReq_10
// 1758   {
// 1759     osal_mem_free( pBuf );
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V6
        MOV       R3,?V7
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 1760   }
// 1761 }
??ZDO_ProcessMgmtRtgReq_10:
        MOV       A,#0x1
          CFI EndBlock cfiBlock305
        REQUIRE ?Subroutine8
        ; // Fall through to label ?Subroutine8

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine8:
          CFI Block cfiBlock306 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 17)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Valid
        LJMP      ??Subroutine210_0 & 0xFFFF
          CFI EndBlock cfiBlock306
// 1762 
// 1763 /*********************************************************************
// 1764  * @fn          ZDO_ProcessMgmtBindReq
// 1765  *
// 1766  * @brief       This function finishes the processing of the Management
// 1767  *              Bind Request and generates the response.
// 1768  *
// 1769  *   Note:      This function will limit the number of items returned
// 1770  *              to ZDO_MAX_BIND_ITEMS items.
// 1771  *
// 1772  * @param       inMsg - incoming message (request)
// 1773  *
// 1774  * @return      none
// 1775  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1776 void ZDO_ProcessMgmtBindReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtBindReq:
          CFI Block cfiBlock307 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtBindReq
        CODE
// 1777 {
        FUNCALL ZDO_ProcessMgmtBindReq, APSME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtBindReq, ZDP_MgmtBindRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtBindReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtBindReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtBindReq, APSME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V8
        REQUIRE ?V9
        MOV       A,#-0x12
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 2
        MOV       A,#-0x2
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       ?V4,R2
        MOV       ?V5,R3
// 1778 #if defined ( REFLECTOR )
// 1779   byte x;
// 1780   uint16 maxNumItems;
// 1781   uint16 numItems;
// 1782   uint8 *pBuf = NULL;
        MOV       ?V8,#0x0
        MOV       ?V9,#0x0
// 1783   apsBindingItem_t *pList;
// 1784   uint8 StartIndex = inMsg->asdu[0];
        LCALL     ??Subroutine211_0 & 0xFFFF
??CrossCallReturnLabel_428:
        ADDC      A,?V5
        LCALL     ?Subroutine83 & 0xFFFF
// 1785   uint8 status;
// 1786 
// 1787   // Get the number of table items
// 1788   APSME_GetRequest( apsNumBindingTableEntries, 0, (byte*)(&maxNumItems) );
??CrossCallReturnLabel_145:
        ; Setup parameters for call to function APSME_GetRequest
        MOV       R4,?XSP + 0
        MOV       R5,?XSP + 1
        MOV       R2,#0x0
        MOV       R3,#0x0
        MOV       R1,#-0x5d
        LCALL     `??APSME_GetRequest::?relay`; Banked call to: APSME_GetRequest
// 1789 
// 1790   if ( maxNumItems > StartIndex )
        MOV       R2,?V2
        LCALL     ?Subroutine96 & 0xFFFF
??CrossCallReturnLabel_377:
        CLR       C
        MOV       A,R2
        SUBB      A,R0
        CLR       A
        SUBB      A,R1
        JNC       ??ZDO_ProcessMgmtBindReq_0
// 1791   {
// 1792     numItems = maxNumItems - StartIndex;    // Start at the passed in index
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      A,@DPTR
        CLR       C
        SUBB      A,R2
        MOV       R6,A
        INC       DPTR
        MOVX      A,@DPTR
        SUBB      A,#0x0
        MOV       R7,A
// 1793   }
// 1794   else
// 1795   {
// 1796     numItems = 0;
// 1797   }
// 1798 
// 1799   // limit the size of the list
// 1800   if ( numItems > ZDO_MAX_BIND_ITEMS )
        CLR       C
        MOV       A,R6
        SUBB      A,#0x4
        MOV       A,R7
        SUBB      A,#0x0
        JC        ??ZDO_ProcessMgmtBindReq_1
// 1801   {
// 1802     numItems = ZDO_MAX_BIND_ITEMS;
        MOV       R6,#0x3
        MOV       R7,#0x0
        SJMP      ??ZDO_ProcessMgmtBindReq_2
// 1803   }
??ZDO_ProcessMgmtBindReq_0:
        MOV       R6,#0x0
// 1804 
// 1805   // Allocate the memory to build the table
// 1806   if ( numItems )
// 1807   {
// 1808     pBuf = osal_mem_alloc( sizeof( apsBindingItem_t ) * numItems );
// 1809     
// 1810     if(pBuf != NULL)
// 1811     {
// 1812     
// 1813       status = ZSuccess;
// 1814 
// 1815       // Convert buffer to list
// 1816       pList = (apsBindingItem_t *)pBuf;
// 1817 
// 1818       // Loop through items and build list
// 1819       for ( x = 0; x < numItems; x++ )
// 1820       {
// 1821         APSME_GetRequest( apsBindingTable, (x + StartIndex), (void*)pList );
// 1822         pList++;
// 1823       }
// 1824     }
// 1825     else
// 1826     {
// 1827       //No memory to allocate response, respond unsupported attribute
// 1828       status = ZApsUnsupportedAttrib;
// 1829       numItems = 0;
// 1830     }
// 1831   }
// 1832   else
// 1833   {
// 1834     status = ZSuccess;
??ZDO_ProcessMgmtBindReq_3:
        MOV       ?V3,#0x0
??ZDO_ProcessMgmtBindReq_4:
        MOV       A,R6
        MOV       R1,A
// 1835   }
// 1836 
// 1837   // Send response
// 1838   ZDP_MgmtBindRsp( inMsg->TransSeq, &(inMsg->srcAddr), status, (byte)maxNumItems, StartIndex,
// 1839                    (byte)numItems, (apsBindingItem_t *)pBuf, false );
??ZDO_ProcessMgmtBindReq_5:
        ; Setup parameters for call to function ZDP_MgmtBindRsp
        MOV       ?V0,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       R0,#?V8
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       A,R1
        MOV       ?V0,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       A,?V2
        MOV       ?V0,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       R5,A
        MOV       R4,?V3
        MOV       A,?V4
        LCALL     ?Subroutine130 & 0xFFFF
??CrossCallReturnLabel_239:
        ADDC      A,?V5
        MOV       R3,A
        MOV       A,?V4
        LCALL     ?Subroutine129 & 0xFFFF
??CrossCallReturnLabel_232:
        ADDC      A,?V5
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       R1,A
        LCALL     `??ZDP_MgmtBindRsp::?relay`; Banked call to: ZDP_MgmtBindRsp
        MOV       A,#0x5
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
// 1840 
// 1841   if ( pBuf )
        MOV       A,?V8
        ORL       A,?V9
        JZ        ??ZDO_ProcessMgmtBindReq_6
// 1842   {
// 1843     osal_mem_free( pBuf );
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V8
        MOV       R3,?V9
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 1844   }
// 1845 #else
// 1846   (void)inMsg;
// 1847 #endif
// 1848 }
??ZDO_ProcessMgmtBindReq_6:
        MOV       A,#0x2
        LJMP      ?Subroutine7 & 0xFFFF
??ZDO_ProcessMgmtBindReq_1:
        MOV       A,R6
        ORL       A,R7
        JZ        ??ZDO_ProcessMgmtBindReq_3
??ZDO_ProcessMgmtBindReq_2:
        ; Setup parameters for call to function osal_mem_alloc
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        MOV       A,R2
        MOV       B,#0x15
        MUL       AB
        MOV       R2,A
        MOV       R0,B
        MOV       B,#0x15
        MOV       A,R3
        MUL       AB
        ADD       A,R0
        LCALL     ?Subroutine136 & 0xFFFF
??CrossCallReturnLabel_392:
        MOV       ?V8,R2
        MOV       ?V9,R3
        MOV       A,R2
        ORL       A,R3
        JZ        ??ZDO_ProcessMgmtBindReq_7
        MOV       ?V3,#0x0
        MOV       ?V6,#0x0
??ZDO_ProcessMgmtBindReq_8:
        CLR       C
        MOV       A,?V6
        SUBB      A,R6
        CLR       A
        SUBB      A,R7
        JC        $+5
        LJMP      ??ZDO_ProcessMgmtBindReq_4 & 0xFFFF
        ; Setup parameters for call to function APSME_GetRequest
        MOV       R4,?V0
        MOV       R5,?V1
        MOV       R0,?V2
        MOV       A,?V6
        ADD       A,R0
        MOV       R2,A
        CLR       A
        ADDC      A,#0x0
        MOV       R3,A
        MOV       R1,#-0x5e
        LCALL     `??APSME_GetRequest::?relay`; Banked call to: APSME_GetRequest
        MOV       A,?V0
        ADD       A,#0x15
        MOV       ?V0,A
        JNC       ??ZDO_ProcessMgmtBindReq_9
        INC       ?V1
??ZDO_ProcessMgmtBindReq_9:
        INC       ?V6
        SJMP      ??ZDO_ProcessMgmtBindReq_8
??ZDO_ProcessMgmtBindReq_7:
        MOV       ?V3,#-0x4b
        MOV       R1,#0x0
        LJMP      ??ZDO_ProcessMgmtBindReq_5 & 0xFFFF
          CFI EndBlock cfiBlock307

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine136:
          CFI Block cfiCond308 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtBindReq
          CFI Conditional ??CrossCallReturnLabel_392
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond309 Using cfiCommon0
          CFI (cfiCond309) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond309) Conditional ??CrossCallReturnLabel_393
          CFI (cfiCond309) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond309) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond309) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond309) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond309) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond309) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond309) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond309) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond309) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond309) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond309) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond309) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond309) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond309) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond309) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond309) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond309) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond309) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond309) CFA_SP SP+-2
          CFI (cfiCond309) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker310 Using cfiCommon1
          CFI (cfiPicker310) NoFunction
          CFI (cfiPicker310) Picker
        MOV       R3,A
          CFI EndBlock cfiCond308
          CFI EndBlock cfiCond309
          CFI EndBlock cfiPicker310
        REQUIRE ??Subroutine205_0
        ; // Fall through to label ??Subroutine205_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine205_0:
          CFI Block cfiCond311 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtRtgReq
          CFI Conditional ??CrossCallReturnLabel_394
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond312 Using cfiCommon0
          CFI (cfiCond312) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond312) Conditional ??CrossCallReturnLabel_392
          CFI (cfiCond312) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond312) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond312) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond312) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond312) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond312) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond312) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond312) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond312) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond312) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond312) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond312) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond312) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond312) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond312) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond312) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond312) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond312) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond312) CFA_SP SP+-2
          CFI (cfiCond312) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond313 Using cfiCommon0
          CFI (cfiCond313) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond313) Conditional ??CrossCallReturnLabel_393
          CFI (cfiCond313) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond313) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond313) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond313) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond313) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond313) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond313) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond313) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond313) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond313) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond313) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond313) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond313) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond313) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond313) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond313) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond313) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond313) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond313) CFA_SP SP+-2
          CFI (cfiCond313) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker314 Using cfiCommon1
          CFI (cfiPicker314) NoFunction
          CFI (cfiPicker314) Picker
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V0,R2
        MOV       ?V1,R3
        RET
          CFI EndBlock cfiCond311
          CFI EndBlock cfiCond312
          CFI EndBlock cfiCond313
          CFI EndBlock cfiPicker314

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine130:
          CFI Block cfiCond315 Using cfiCommon0
          CFI Function ZDO_ProcessServerDiscReq
          CFI Conditional ??CrossCallReturnLabel_236
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond316 Using cfiCommon0
          CFI (cfiCond316) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond316) Conditional ??CrossCallReturnLabel_237
          CFI (cfiCond316) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond316) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond316) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond316) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond316) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond316) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond316) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond316) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond316) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond316) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond316) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond316) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond316) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond316) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond316) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond316) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond316) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond316) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond316) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond316) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond316) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond316) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond316) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond316) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond316) CFA_SP SP+-2
          CFI (cfiCond316) CFA_XSP16 add(XSP16, 66)
          CFI Block cfiCond317 Using cfiCommon0
          CFI (cfiCond317) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond317) Conditional ??CrossCallReturnLabel_238
          CFI (cfiCond317) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond317) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond317) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond317) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond317) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond317) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond317) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond317) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond317) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond317) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond317) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond317) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond317) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond317) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond317) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond317) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond317) CFA_SP SP+-2
          CFI (cfiCond317) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond318 Using cfiCommon0
          CFI (cfiCond318) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond318) Conditional ??CrossCallReturnLabel_239
          CFI (cfiCond318) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond318) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond318) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond318) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond318) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond318) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond318) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond318) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond318) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond318) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond318) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond318) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond318) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond318) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond318) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond318) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond318) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond318) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond318) CFA_SP SP+-2
          CFI (cfiCond318) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond319 Using cfiCommon0
          CFI (cfiCond319) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond319) Conditional ??CrossCallReturnLabel_240
          CFI (cfiCond319) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond319) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond319) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond319) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond319) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond319) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond319) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond319) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond319) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond319) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond319) CFA_SP SP+-2
          CFI (cfiCond319) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond320 Using cfiCommon0
          CFI (cfiCond320) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond320) Conditional ??CrossCallReturnLabel_241
          CFI (cfiCond320) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond320) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond320) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond320) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond320) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond320) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond320) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond320) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond320) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond320) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond320) CFA_SP SP+-2
          CFI (cfiCond320) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker321 Using cfiCommon1
          CFI (cfiPicker321) NoFunction
          CFI (cfiPicker321) Picker
        ADD       A,#0x2
        MOV       R2,A
        CLR       A
        RET
          CFI EndBlock cfiCond315
          CFI EndBlock cfiCond316
          CFI EndBlock cfiCond317
          CFI EndBlock cfiCond318
          CFI EndBlock cfiCond319
          CFI EndBlock cfiCond320
          CFI EndBlock cfiPicker321

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine129:
          CFI Block cfiCond322 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_230
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 66)
          CFI Block cfiCond323 Using cfiCommon0
          CFI (cfiCond323) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond323) Conditional ??CrossCallReturnLabel_231
          CFI (cfiCond323) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond323) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond323) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond323) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond323) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond323) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond323) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond323) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond323) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond323) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond323) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond323) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond323) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond323) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond323) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond323) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond323) CFA_SP SP+-2
          CFI (cfiCond323) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond324 Using cfiCommon0
          CFI (cfiCond324) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond324) Conditional ??CrossCallReturnLabel_232
          CFI (cfiCond324) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond324) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond324) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond324) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond324) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond324) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond324) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond324) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond324) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond324) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond324) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond324) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond324) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond324) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond324) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond324) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond324) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond324) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond324) CFA_SP SP+-2
          CFI (cfiCond324) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond325 Using cfiCommon0
          CFI (cfiCond325) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond325) Conditional ??CrossCallReturnLabel_233
          CFI (cfiCond325) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond325) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond325) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond325) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond325) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond325) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond325) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond325) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond325) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond325) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond325) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond325) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond325) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond325) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond325) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond325) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond325) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond325) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond325) CFA_SP SP+-2
          CFI (cfiCond325) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond326 Using cfiCommon0
          CFI (cfiCond326) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond326) Conditional ??CrossCallReturnLabel_234
          CFI (cfiCond326) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond326) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond326) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond326) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond326) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond326) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond326) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond326) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond326) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond326) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond326) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond326) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond326) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond326) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond326) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond326) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond326) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond326) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond326) CFA_SP SP+-2
          CFI (cfiCond326) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond327 Using cfiCommon0
          CFI (cfiCond327) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond327) Conditional ??CrossCallReturnLabel_235
          CFI (cfiCond327) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond327) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond327) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond327) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond327) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond327) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond327) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond327) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond327) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond327) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond327) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker328 Using cfiCommon1
          CFI (cfiPicker328) NoFunction
          CFI (cfiPicker328) Picker
        ADD       A,#0xf
        MOV       DPL,A
        CLR       A
        RET
          CFI EndBlock cfiCond322
          CFI EndBlock cfiCond323
          CFI EndBlock cfiCond324
          CFI EndBlock cfiCond325
          CFI EndBlock cfiCond326
          CFI EndBlock cfiCond327
          CFI EndBlock cfiPicker328
// 1849 
// 1850 /*********************************************************************
// 1851  * @fn          ZDO_ProcessMgmtDirectJoinReq
// 1852  *
// 1853  * @brief       This function finishes the processing of the Management
// 1854  *              Direct Join Request and generates the response.
// 1855  *
// 1856  * @param       inMsg - incoming message (request)
// 1857  *
// 1858  * @return      none
// 1859  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1860 void ZDO_ProcessMgmtDirectJoinReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtDirectJoinReq:
          CFI Block cfiBlock329 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtDirectJoinReq
        CODE
// 1861 {
        FUNCALL ZDO_ProcessMgmtDirectJoinReq, NLME_DirectJoinRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtDirectJoinReq, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
// 1862   uint8 *deviceAddr;
// 1863   uint8 capInfo;
// 1864   uint8 stat;
// 1865 
// 1866   // Parse the message
// 1867   deviceAddr = inMsg->asdu;
// 1868   capInfo = inMsg->asdu[Z_EXTADDR_LEN];
// 1869 
// 1870   stat = (byte) NLME_DirectJoinRequest( deviceAddr, capInfo );
        LCALL     ?Subroutine119 & 0xFFFF
??CrossCallReturnLabel_208:
        MOV       DPH,A
        LCALL     ??Subroutine206_0 & 0xFFFF
??CrossCallReturnLabel_399:
        ; Setup parameters for call to function NLME_DirectJoinRequest
        MOV       DPL,R2
        MOV       DPH,A
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        LCALL     `??NLME_DirectJoinRequest::?relay`; Banked call to: NLME_DirectJoinRequest
        MOV       A,R1
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
// 1871 
// 1872   ZDP_MgmtDirectJoinRsp( inMsg->TransSeq, &(inMsg->srcAddr), stat, false );
        ; Setup parameters for call to function ZDP_SendData
        MOV       ?V0,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V0,R0
        MOV       ?V1,R1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV       ?V0,#0x35
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        MOV       R1,#0x1
        MOV       A,R6
        ADD       A,#0x2
        MOV       R4,A
        CLR       A
        ADDC      A,R7
        MOV       R5,A
        LCALL     ?Subroutine127 & 0xFFFF
??CrossCallReturnLabel_226:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
// 1873 }
        MOV       A,#0x1
        LJMP      ??Subroutine188_0 & 0xFFFF
          CFI EndBlock cfiBlock329

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine119:
          CFI Block cfiCond330 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_206
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond331 Using cfiCommon0
          CFI (cfiCond331) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond331) Conditional ??CrossCallReturnLabel_207
          CFI (cfiCond331) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond331) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond331) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond331) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond331) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond331) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond331) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond331) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond331) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond331) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond331) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond331) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond331) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond331) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond331) CFA_SP SP+-2
          CFI (cfiCond331) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond332 Using cfiCommon0
          CFI (cfiCond332) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond332) Conditional ??CrossCallReturnLabel_208
          CFI (cfiCond332) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond332) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond332) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond332) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond332) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond332) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond332) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond332) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond332) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond332) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond332) CFA_SP SP+-2
          CFI (cfiCond332) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond333 Using cfiCommon0
          CFI (cfiCond333) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond333) Conditional ??CrossCallReturnLabel_209
          CFI (cfiCond333) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond333) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond333) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond333) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond333) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond333) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond333) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond333) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond333) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond333) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond333) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond333) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond333) CFA_SP SP+-2
          CFI (cfiCond333) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiPicker334 Using cfiCommon1
          CFI (cfiPicker334) NoFunction
          CFI (cfiPicker334) Picker
        LCALL     ?Subroutine183 & 0xFFFF
??CrossCallReturnLabel_515:
        ADDC      A,R7
        RET
          CFI EndBlock cfiCond330
          CFI EndBlock cfiCond331
          CFI EndBlock cfiCond332
          CFI EndBlock cfiCond333
          CFI EndBlock cfiPicker334

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine94:
          CFI Block cfiCond335 Using cfiCommon0
          CFI Function ZDO_ProcessDeviceAnnce
          CFI Conditional ??CrossCallReturnLabel_402
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond336 Using cfiCommon0
          CFI (cfiCond336) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond336) Conditional ??CrossCallReturnLabel_403
          CFI (cfiCond336) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond336) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond336) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond336) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond336) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond336) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond336) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond336) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond336) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond336) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond336) CFA_SP SP+-2
          CFI (cfiCond336) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond337 Using cfiCommon0
          CFI (cfiCond337) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond337) Conditional ??CrossCallReturnLabel_404
          CFI (cfiCond337) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond337) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond337) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond337) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond337) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond337) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond337) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond337) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond337) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond337) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond337) CFA_SP SP+-2
          CFI (cfiCond337) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond338 Using cfiCommon0
          CFI (cfiCond338) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond338) Conditional ??CrossCallReturnLabel_405
          CFI (cfiCond338) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond338) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond338) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond338) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond338) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond338) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond338) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond338) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond338) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond338) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond338) CFA_SP SP+-2
          CFI (cfiCond338) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker339 Using cfiCommon1
          CFI (cfiPicker339) NoFunction
          CFI (cfiPicker339) Picker
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
          CFI EndBlock cfiCond335
          CFI EndBlock cfiCond336
          CFI EndBlock cfiCond337
          CFI EndBlock cfiCond338
          CFI EndBlock cfiPicker339
        REQUIRE ??Subroutine206_0
        ; // Fall through to label ??Subroutine206_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine206_0:
          CFI Block cfiCond340 Using cfiCommon0
          CFI Function ZDO_StartDevice
          CFI Conditional ??CrossCallReturnLabel_395
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond341 Using cfiCommon0
          CFI (cfiCond341) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond341) Conditional ??CrossCallReturnLabel_396
          CFI (cfiCond341) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond341) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond341) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond341) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond341) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond341) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond341) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond341) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond341) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond341) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond341) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond341) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond341) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond341) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond341) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond341) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond341) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond341) CFA_SP SP+-2
          CFI (cfiCond341) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond342 Using cfiCommon0
          CFI (cfiCond342) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond342) Conditional ??CrossCallReturnLabel_397
          CFI (cfiCond342) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond342) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond342) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond342) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond342) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond342) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond342) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond342) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond342) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond342) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond342) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond342) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond342) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond342) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond342) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond342) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond342) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond342) CFA_SP SP+-2
          CFI (cfiCond342) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond343 Using cfiCommon0
          CFI (cfiCond343) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond343) Conditional ??CrossCallReturnLabel_398
          CFI (cfiCond343) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond343) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond343) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond343) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond343) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond343) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond343) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond343) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond343) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond343) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond343) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond343) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond343) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond343) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond343) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond343) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond343) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond343) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond343) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond343) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond343) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond343) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond343) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond343) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond343) CFA_SP SP+-2
          CFI (cfiCond343) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond344 Using cfiCommon0
          CFI (cfiCond344) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond344) Conditional ??CrossCallReturnLabel_399
          CFI (cfiCond344) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond344) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond344) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond344) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond344) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond344) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond344) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond344) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond344) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond344) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond344) CFA_SP SP+-2
          CFI (cfiCond344) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond345 Using cfiCommon0
          CFI (cfiCond345) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond345) Conditional ??CrossCallReturnLabel_400
          CFI (cfiCond345) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond345) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond345) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond345) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond345) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond345) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond345) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond345) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond345) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond345) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond345) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond345) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond345) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond345) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond345) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond345) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond345) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond345) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond345) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond345) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond345) CFA_SP SP+-2
          CFI (cfiCond345) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond346 Using cfiCommon0
          CFI (cfiCond346) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond346) Conditional ??CrossCallReturnLabel_401
          CFI (cfiCond346) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond346) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond346) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond346) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond346) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond346) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond346) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond346) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond346) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond346) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond346) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond346) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond346) CFA_SP SP+-2
          CFI (cfiCond346) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond347 Using cfiCommon0
          CFI (cfiCond347) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond347) Conditional ??CrossCallReturnLabel_402
          CFI (cfiCond347) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond347) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond347) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond347) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond347) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond347) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond347) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond347) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond347) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond347) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond347) CFA_SP SP+-2
          CFI (cfiCond347) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond348 Using cfiCommon0
          CFI (cfiCond348) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond348) Conditional ??CrossCallReturnLabel_403
          CFI (cfiCond348) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond348) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond348) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond348) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond348) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond348) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond348) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond348) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond348) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond348) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond348) CFA_SP SP+-2
          CFI (cfiCond348) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond349 Using cfiCommon0
          CFI (cfiCond349) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond349) Conditional ??CrossCallReturnLabel_404
          CFI (cfiCond349) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond349) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond349) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond349) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond349) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond349) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond349) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond349) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond349) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond349) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond349) CFA_SP SP+-2
          CFI (cfiCond349) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond350 Using cfiCommon0
          CFI (cfiCond350) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond350) Conditional ??CrossCallReturnLabel_405
          CFI (cfiCond350) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond350) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond350) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond350) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond350) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond350) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond350) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond350) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond350) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond350) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond350) CFA_SP SP+-2
          CFI (cfiCond350) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker351 Using cfiCommon1
          CFI (cfiPicker351) NoFunction
          CFI (cfiPicker351) Picker
        LCALL     ?Subroutine160 & 0xFFFF
??CrossCallReturnLabel_411:
        RET
          CFI EndBlock cfiCond340
          CFI EndBlock cfiCond341
          CFI EndBlock cfiCond342
          CFI EndBlock cfiCond343
          CFI EndBlock cfiCond344
          CFI EndBlock cfiCond345
          CFI EndBlock cfiCond346
          CFI EndBlock cfiCond347
          CFI EndBlock cfiCond348
          CFI EndBlock cfiCond349
          CFI EndBlock cfiCond350
          CFI EndBlock cfiPicker351

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine160:
          CFI Block cfiCond352 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_406, ??CrossCallReturnLabel_121
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond353 Using cfiCommon0
          CFI (cfiCond353) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond353) Conditional ??CrossCallReturnLabel_406, ??CrossCallReturnLabel_123
          CFI (cfiCond353) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond353) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond353) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond353) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond353) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond353) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond353) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond353) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond353) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond353) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond353) CFA_SP SP+-4
          CFI (cfiCond353) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond354 Using cfiCommon0
          CFI (cfiCond354) Function ZDO_RemoveMatchMemory
          CFI (cfiCond354) Conditional ??CrossCallReturnLabel_406, ??CrossCallReturnLabel_122
          CFI (cfiCond354) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond354) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond354) CFA_SP SP+-9
          CFI Block cfiCond355 Using cfiCommon0
          CFI (cfiCond355) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond355) Conditional ??CrossCallReturnLabel_410, ??CrossCallReturnLabel_361
          CFI (cfiCond355) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond355) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond355) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond355) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond355) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond355) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond355) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond355) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond355) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond355) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond355) CFA_SP SP+-4
          CFI (cfiCond355) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond356 Using cfiCommon0
          CFI (cfiCond356) Function ZDO_RemoveMatchMemory
          CFI (cfiCond356) Conditional ??CrossCallReturnLabel_410, ??CrossCallReturnLabel_362
          CFI (cfiCond356) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond356) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond356) CFA_SP SP+-9
          CFI Block cfiCond357 Using cfiCommon0
          CFI (cfiCond357) Function ZDO_RemoveMatchMemory
          CFI (cfiCond357) Conditional ??CrossCallReturnLabel_410, ??CrossCallReturnLabel_363
          CFI (cfiCond357) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond357) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond357) CFA_SP SP+-9
          CFI Block cfiCond358 Using cfiCommon0
          CFI (cfiCond358) Function ZDO_RemoveMatchMemory
          CFI (cfiCond358) Conditional ??CrossCallReturnLabel_410, ??CrossCallReturnLabel_364
          CFI (cfiCond358) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond358) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond358) CFA_SP SP+-9
          CFI Block cfiCond359 Using cfiCommon0
          CFI (cfiCond359) Function ZDO_RemoveMatchMemory
          CFI (cfiCond359) Conditional ??CrossCallReturnLabel_410, ??CrossCallReturnLabel_365
          CFI (cfiCond359) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond359) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond359) CFA_SP SP+-9
          CFI Block cfiCond360 Using cfiCommon0
          CFI (cfiCond360) Function ZDO_RemoveMatchMemory
          CFI (cfiCond360) Conditional ??CrossCallReturnLabel_410, ??CrossCallReturnLabel_366
          CFI (cfiCond360) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond360) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond360) CFA_SP SP+-9
          CFI Block cfiCond361 Using cfiCommon0
          CFI (cfiCond361) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond361) Conditional ??CrossCallReturnLabel_410, ??CrossCallReturnLabel_358
          CFI (cfiCond361) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond361) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond361) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond361) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond361) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond361) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond361) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond361) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond361) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond361) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond361) CFA_SP SP+-4
          CFI (cfiCond361) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond362 Using cfiCommon0
          CFI (cfiCond362) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond362) Conditional ??CrossCallReturnLabel_410, ??CrossCallReturnLabel_359
          CFI (cfiCond362) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond362) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond362) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond362) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond362) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond362) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond362) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond362) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond362) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond362) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond362) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond362) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond362) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond362) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond362) CFA_SP SP+-4
          CFI (cfiCond362) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond363 Using cfiCommon0
          CFI (cfiCond363) Function ZDO_RemoveMatchMemory
          CFI (cfiCond363) Conditional ??CrossCallReturnLabel_410, ??CrossCallReturnLabel_360
          CFI (cfiCond363) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond363) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond363) CFA_SP SP+-9
          CFI Block cfiCond364 Using cfiCommon0
          CFI (cfiCond364) Function ZDO_CopyMatchInfo
          CFI (cfiCond364) Conditional ??CrossCallReturnLabel_410, ??CrossCallReturnLabel_355
          CFI (cfiCond364) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond364) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond364) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond364) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond364) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond364) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond364) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond364) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond364) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond364) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond364) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond364) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond364) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond364) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond364) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond364) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond364) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond364) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond364) CFA_SP SP+-4
          CFI (cfiCond364) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond365 Using cfiCommon0
          CFI (cfiCond365) Function ZDO_CopyMatchInfo
          CFI (cfiCond365) Conditional ??CrossCallReturnLabel_410, ??CrossCallReturnLabel_356
          CFI (cfiCond365) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond365) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond365) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond365) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond365) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond365) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond365) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond365) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond365) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond365) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond365) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond365) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond365) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond365) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond365) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond365) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond365) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond365) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond365) CFA_SP SP+-4
          CFI (cfiCond365) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond366 Using cfiCommon0
          CFI (cfiCond366) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond366) Conditional ??CrossCallReturnLabel_410, ??CrossCallReturnLabel_357
          CFI (cfiCond366) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond366) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond366) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond366) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond366) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond366) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond366) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond366) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond366) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond366) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond366) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond366) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond366) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond366) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond366) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond366) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond366) CFA_SP SP+-4
          CFI (cfiCond366) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond367 Using cfiCommon0
          CFI (cfiCond367) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond367) Conditional ??CrossCallReturnLabel_411, ??CrossCallReturnLabel_402
          CFI (cfiCond367) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond367) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond367) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond367) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond367) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond367) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond367) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond367) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond367) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond367) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond367) CFA_SP SP+-4
          CFI (cfiCond367) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond368 Using cfiCommon0
          CFI (cfiCond368) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond368) Conditional ??CrossCallReturnLabel_411, ??CrossCallReturnLabel_403
          CFI (cfiCond368) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond368) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond368) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond368) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond368) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond368) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond368) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond368) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond368) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond368) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond368) CFA_SP SP+-4
          CFI (cfiCond368) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond369 Using cfiCommon0
          CFI (cfiCond369) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond369) Conditional ??CrossCallReturnLabel_411, ??CrossCallReturnLabel_404
          CFI (cfiCond369) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond369) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond369) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond369) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond369) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond369) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond369) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond369) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond369) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond369) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond369) CFA_SP SP+-4
          CFI (cfiCond369) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond370 Using cfiCommon0
          CFI (cfiCond370) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond370) Conditional ??CrossCallReturnLabel_411, ??CrossCallReturnLabel_405
          CFI (cfiCond370) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond370) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond370) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond370) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond370) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond370) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond370) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond370) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond370) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond370) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond370) CFA_SP SP+-4
          CFI (cfiCond370) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond371 Using cfiCommon0
          CFI (cfiCond371) Function ZDO_StartDevice
          CFI (cfiCond371) Conditional ??CrossCallReturnLabel_411, ??CrossCallReturnLabel_395
          CFI (cfiCond371) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond371) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond371) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond371) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond371) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond371) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond371) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond371) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond371) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond371) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond371) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond371) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond371) CFA_SP SP+-4
          CFI (cfiCond371) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond372 Using cfiCommon0
          CFI (cfiCond372) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond372) Conditional ??CrossCallReturnLabel_411, ??CrossCallReturnLabel_396
          CFI (cfiCond372) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond372) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond372) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond372) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond372) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond372) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond372) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond372) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond372) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond372) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond372) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond372) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond372) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond372) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond372) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond372) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond372) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond372) CFA_SP SP+-4
          CFI (cfiCond372) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond373 Using cfiCommon0
          CFI (cfiCond373) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond373) Conditional ??CrossCallReturnLabel_411, ??CrossCallReturnLabel_397
          CFI (cfiCond373) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond373) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond373) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond373) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond373) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond373) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond373) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond373) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond373) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond373) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond373) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond373) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond373) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond373) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond373) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond373) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond373) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond373) CFA_SP SP+-4
          CFI (cfiCond373) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond374 Using cfiCommon0
          CFI (cfiCond374) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond374) Conditional ??CrossCallReturnLabel_411, ??CrossCallReturnLabel_398
          CFI (cfiCond374) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond374) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond374) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond374) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond374) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond374) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond374) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond374) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond374) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond374) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond374) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond374) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond374) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond374) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond374) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond374) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond374) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond374) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond374) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond374) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond374) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond374) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond374) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond374) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond374) CFA_SP SP+-4
          CFI (cfiCond374) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond375 Using cfiCommon0
          CFI (cfiCond375) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond375) Conditional ??CrossCallReturnLabel_411, ??CrossCallReturnLabel_399
          CFI (cfiCond375) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond375) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond375) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond375) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond375) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond375) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond375) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond375) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond375) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond375) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond375) CFA_SP SP+-4
          CFI (cfiCond375) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond376 Using cfiCommon0
          CFI (cfiCond376) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond376) Conditional ??CrossCallReturnLabel_411, ??CrossCallReturnLabel_400
          CFI (cfiCond376) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond376) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond376) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond376) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond376) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond376) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond376) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond376) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond376) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond376) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond376) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond376) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond376) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond376) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond376) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond376) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond376) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond376) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond376) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond376) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond376) CFA_SP SP+-4
          CFI (cfiCond376) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond377 Using cfiCommon0
          CFI (cfiCond377) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond377) Conditional ??CrossCallReturnLabel_411, ??CrossCallReturnLabel_401
          CFI (cfiCond377) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond377) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond377) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond377) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond377) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond377) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond377) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond377) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond377) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond377) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond377) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond377) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond377) CFA_SP SP+-4
          CFI (cfiCond377) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond378 Using cfiCommon0
          CFI (cfiCond378) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond378) Conditional ??CrossCallReturnLabel_407, ??CrossCallReturnLabel_463
          CFI (cfiCond378) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond378) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond378) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond378) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond378) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond378) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond378) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond378) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond378) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond378) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond378) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond378) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond378) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond378) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond378) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond378) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond378) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond378) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond378) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond378) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond378) CFA_SP SP+-4
          CFI (cfiCond378) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond379 Using cfiCommon0
          CFI (cfiCond379) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond379) Conditional ??CrossCallReturnLabel_407, ??CrossCallReturnLabel_464
          CFI (cfiCond379) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond379) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond379) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond379) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond379) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond379) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond379) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond379) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond379) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond379) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond379) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond379) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond379) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond379) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond379) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond379) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond379) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond379) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond379) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond379) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond379) CFA_SP SP+-4
          CFI (cfiCond379) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond380 Using cfiCommon0
          CFI (cfiCond380) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond380) Conditional ??CrossCallReturnLabel_409, ??CrossCallReturnLabel_158
          CFI (cfiCond380) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond380) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond380) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond380) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond380) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond380) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond380) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond380) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond380) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond380) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond380) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond380) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond380) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond380) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond380) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond380) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond380) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond380) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond380) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond380) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond380) CFA_SP SP+-4
          CFI (cfiCond380) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond381 Using cfiCommon0
          CFI (cfiCond381) Function ZDMatchSendState
          CFI (cfiCond381) Conditional ??CrossCallReturnLabel_409, ??CrossCallReturnLabel_159
          CFI (cfiCond381) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond381) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond381) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond381) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond381) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond381) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond381) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond381) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond381) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond381) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond381) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond381) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond381) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond381) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond381) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond381) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond381) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond381) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond381) CFA_SP SP+-4
          CFI (cfiCond381) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond382 Using cfiCommon0
          CFI (cfiCond382) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond382) Conditional ??CrossCallReturnLabel_408, ??CrossCallReturnLabel_152
          CFI (cfiCond382) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond382) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond382) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond382) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond382) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond382) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond382) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond382) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond382) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond382) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond382) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond382) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond382) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond382) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond382) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond382) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond382) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond382) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond382) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond382) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond382) CFA_SP SP+-4
          CFI (cfiCond382) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond383 Using cfiCommon0
          CFI (cfiCond383) Function ZDMatchSendState
          CFI (cfiCond383) Conditional ??CrossCallReturnLabel_408, ??CrossCallReturnLabel_153
          CFI (cfiCond383) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond383) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond383) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond383) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond383) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond383) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond383) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond383) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond383) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond383) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond383) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond383) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond383) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond383) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond383) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond383) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond383) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond383) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond383) CFA_SP SP+-4
          CFI (cfiCond383) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker384 Using cfiCommon1
          CFI (cfiPicker384) NoFunction
          CFI (cfiPicker384) Picker
        MOVX      A,@DPTR
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R3,A
        RET
          CFI EndBlock cfiCond352
          CFI EndBlock cfiCond353
          CFI EndBlock cfiCond354
          CFI EndBlock cfiCond355
          CFI EndBlock cfiCond356
          CFI EndBlock cfiCond357
          CFI EndBlock cfiCond358
          CFI EndBlock cfiCond359
          CFI EndBlock cfiCond360
          CFI EndBlock cfiCond361
          CFI EndBlock cfiCond362
          CFI EndBlock cfiCond363
          CFI EndBlock cfiCond364
          CFI EndBlock cfiCond365
          CFI EndBlock cfiCond366
          CFI EndBlock cfiCond367
          CFI EndBlock cfiCond368
          CFI EndBlock cfiCond369
          CFI EndBlock cfiCond370
          CFI EndBlock cfiCond371
          CFI EndBlock cfiCond372
          CFI EndBlock cfiCond373
          CFI EndBlock cfiCond374
          CFI EndBlock cfiCond375
          CFI EndBlock cfiCond376
          CFI EndBlock cfiCond377
          CFI EndBlock cfiCond378
          CFI EndBlock cfiCond379
          CFI EndBlock cfiCond380
          CFI EndBlock cfiCond381
          CFI EndBlock cfiCond382
          CFI EndBlock cfiCond383
          CFI EndBlock cfiPicker384
// 1874 
// 1875 /*********************************************************************
// 1876  * @fn          ZDO_ProcessMgmtLeaveReq
// 1877  *
// 1878  * @brief       This function processes a Management Leave Request
// 1879  *              and generates the response.
// 1880  *
// 1881  * @param       inMsg - incoming message (request)
// 1882  *
// 1883  * @return      none
// 1884  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1885 void ZDO_ProcessMgmtLeaveReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtLeaveReq:
          CFI Block cfiBlock385 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLeaveReq
        CODE
// 1886 {
        FUNCALL ZDO_ProcessMgmtLeaveReq, AddrMgrExtAddrValid
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLeaveReq, NLME_GetExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLeaveReq, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLeaveReq, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLeaveReq, NLME_LeaveReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLeaveReq, bdb_setFN
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 6
        MOV       A,#-0x6
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
        LCALL     ?Subroutine122 & 0xFFFF
// 1887   NLME_LeaveReq_t req;
// 1888   ZStatus_t       status;
// 1889   uint8           option;
// 1890   uint8 *msg = inMsg->asdu;
??CrossCallReturnLabel_425:
        ADDC      A,?V1
        LCALL     ??Subroutine194_0 & 0xFFFF
// 1891   
// 1892   if ( ( AddrMgrExtAddrValid( msg ) == FALSE                 ) ||
// 1893        ( osal_ExtAddrEqual( msg, NLME_GetExtAddr() ) == TRUE )    )
??CrossCallReturnLabel_337:
        ; Setup parameters for call to function AddrMgrExtAddrValid
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        LCALL     `??AddrMgrExtAddrValid::?relay`; Banked call to: AddrMgrExtAddrValid
        MOV       A,R1
        JZ        ??ZDO_ProcessMgmtLeaveReq_0
        ; Setup parameters for call to function NLME_GetExtAddr
        LCALL     ?Subroutine112 & 0xFFFF
??CrossCallReturnLabel_181:
        ; Setup parameters for call to function sAddrExtCmp
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        LCALL     `??sAddrExtCmp::?relay`; Banked call to: sAddrExtCmp
        MOV       A,R1
        XRL       A,#0x1
        JNZ       ??ZDO_ProcessMgmtLeaveReq_1
// 1894   {
// 1895     if ( ( ZG_BUILD_COORDINATOR_TYPE ) && ( ZG_DEVICE_COORDINATOR_TYPE ) )
// 1896     {
// 1897       // Coordinator shall drop the leave request for itself
// 1898       // section 3.6.1.10.3.1 R21
// 1899       return;
??ZDO_ProcessMgmtLeaveReq_0:
        SJMP      ??ZDO_ProcessMgmtLeaveReq_2
// 1900     }
// 1901     else
// 1902     {
// 1903       // Remove this device
// 1904       req.extAddr = NULL;
// 1905     }
// 1906   }
// 1907   else
// 1908   {
// 1909     // Remove child device
// 1910     req.extAddr = msg;
??ZDO_ProcessMgmtLeaveReq_1:
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R6
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R7
        LCALL     ?Subroutine46 & 0xFFFF
// 1911   }
// 1912   if ( ( ZG_BUILD_ENDDEVICE_TYPE ) && ( ZG_DEVICE_ENDDEVICE_TYPE ) )
// 1913   {
// 1914     //Only the parent device can request to leave, otherwise silently discard the frame
// 1915     if(inMsg->srcAddr.addr.shortAddr != _NIB.nwkCoordAddress)
// 1916     {
// 1917       return;
// 1918     }
// 1919   }
// 1920 
// 1921   option = msg[Z_EXTADDR_LEN];
??CrossCallReturnLabel_76:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R6,A
// 1922   if ( option & ZDP_MGMT_LEAVE_REQ_RC )
        MOV       C,0xE0 /* A   */.6
        JNC       ??ZDO_ProcessMgmtLeaveReq_3
// 1923   {
// 1924     req.removeChildren = TRUE;
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x1
        MOVX      @DPTR,A
// 1925   }
// 1926 
// 1927   if ( option & ZDP_MGMT_LEAVE_REQ_REJOIN )
??ZDO_ProcessMgmtLeaveReq_3:
        MOV       A,R6
        MOV       C,0xE0 /* A   */.7
        JNC       ??ZDO_ProcessMgmtLeaveReq_4
// 1928   {
// 1929      req.rejoin = TRUE;
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x1
        MOVX      @DPTR,A
// 1930   }
// 1931 
// 1932   req.silent = FALSE;
??ZDO_ProcessMgmtLeaveReq_4:
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        CLR       A
        LCALL     ?Subroutine30 & 0xFFFF
// 1933   
// 1934   //According to R21 spec sec2.4.3.3.5.2 Mgmt leave rsp must contain the status response from the nwk leave processing. 
// 1935   //Latest discussion in Zigbee indicates that mgmt leave rsp due to an OTA command must have status=success (9/12/16)
// 1936   status = ZSuccess;
??CrossCallReturnLabel_42:
        MOVX      @DPTR,A
// 1937   
// 1938   ZDP_MgmtLeaveRsp( inMsg->TransSeq, &(inMsg->srcAddr), status, FALSE );
        ; Setup parameters for call to function ZDP_SendData
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V2,R0
        MOV       ?V3,R1
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       ?V2,#0x34
        MOV       ?V3,#-0x80
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        LCALL     ?Subroutine126 & 0xFFFF
??CrossCallReturnLabel_225:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
// 1939   
// 1940   if ( ZG_BUILD_ENDDEVICE_TYPE )
// 1941   {
// 1942     // Stop polling and get ready to reset
// 1943     NLME_SetPollRate( 0 );
// 1944     NLME_SetResponseRate(0);
// 1945     NLME_SetQueuedPollRate(0);
// 1946   }
// 1947   
// 1948   NLME_LeaveReq(&req);
        ; Setup parameters for call to function NLME_LeaveReq
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??NLME_LeaveReq::?relay`; Banked call to: NLME_LeaveReq
// 1949   
// 1950   if (! (option & ZDP_MGMT_LEAVE_REQ_REJOIN) )
        MOV       A,R6
        MOV       C,0xE0 /* A   */.7
        JC        ??ZDO_ProcessMgmtLeaveReq_2
// 1951   {
// 1952     if(req.extAddr == NULL)
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine213_0 & 0xFFFF
??CrossCallReturnLabel_434:
        JNZ       ??ZDO_ProcessMgmtLeaveReq_2
// 1953     {
// 1954       bdb_setFN();
        ; Setup parameters for call to function bdb_setFN
        LCALL     `??bdb_setFN::?relay`; Banked call to: bdb_setFN
// 1955     }
// 1956   }
// 1957 }
??ZDO_ProcessMgmtLeaveReq_2:
        MOV       A,#0x6
        LJMP      ?Subroutine1 & 0xFFFF
          CFI EndBlock cfiBlock385

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine126:
          CFI Block cfiCond386 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_224
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond387 Using cfiCommon0
          CFI (cfiCond387) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond387) Conditional ??CrossCallReturnLabel_225
          CFI (cfiCond387) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond387) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond387) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond387) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond387) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond387) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond387) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond387) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond387) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond387) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond387) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond387) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond387) CFA_SP SP+-2
          CFI (cfiCond387) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker388 Using cfiCommon1
          CFI (cfiPicker388) NoFunction
          CFI (cfiPicker388) Picker
        MOV       R1,#0x1
        MOV       A,?V0
        ADD       A,#0x2
        MOV       R4,A
        CLR       A
        ADDC      A,?V1
        MOV       R5,A
        MOV       A,?V0
        ADD       A,#0xf
        MOV       R2,A
        CLR       A
        ADDC      A,?V1
        LCALL     ?Subroutine177 & 0xFFFF
??CrossCallReturnLabel_412:
        RET
          CFI EndBlock cfiCond386
          CFI EndBlock cfiCond387
          CFI EndBlock cfiPicker388

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine112:
          CFI Block cfiCond389 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_180
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond390 Using cfiCommon0
          CFI (cfiCond390) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond390) Conditional ??CrossCallReturnLabel_181
          CFI (cfiCond390) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond390) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond390) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond390) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond390) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond390) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond390) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond390) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond390) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond390) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond390) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond390) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond390) CFA_SP SP+-2
          CFI (cfiCond390) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker391 Using cfiCommon1
          CFI (cfiPicker391) NoFunction
          CFI (cfiPicker391) Picker
        LCALL     `??NLME_GetExtAddr::?relay`; Banked call to: NLME_GetExtAddr
        MOV       ?V2,R2
        MOV       ?V3,R3
        MOV       R4,?V2
        MOV       R5,?V3
        RET
          CFI EndBlock cfiCond389
          CFI EndBlock cfiCond390
          CFI EndBlock cfiPicker391
// 1958 
// 1959 
// 1960 /*********************************************************************
// 1961  * @fn          ZDO_ProcessMgmtPermitJoinReq
// 1962  *
// 1963  * @brief       This function processes a Management Permit Join Request
// 1964  *              and generates the response.
// 1965  *
// 1966  * @param       inMsg - incoming message (request)
// 1967  *
// 1968  * @return      none
// 1969  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1970 void ZDO_ProcessMgmtPermitJoinReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtPermitJoinReq:
          CFI Block cfiBlock392 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtPermitJoinReq
        CODE
// 1971 {
        FUNCALL ZDO_ProcessMgmtPermitJoinReq, NLME_PermitJoiningRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtPermitJoinReq, APSME_IsDistributedSecurity
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtPermitJoinReq, ZDSecMgrPermitJoining
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtPermitJoinReq, ZDSecMgrPermitJoining
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtPermitJoinReq, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
// 1972   uint8 stat;
// 1973   uint8 duration;
// 1974 #if (ZG_BUILD_COORDINATOR_TYPE)
// 1975   if(ZG_DEVICE_COORDINATOR_TYPE)
// 1976   {
// 1977     //If zgAllowRemoteTCPolicyChange is set to FALSE, the request from other 
// 1978     //devices cannot affect the  Trust Center policies
// 1979     if((zgAllowRemoteTCPolicyChange == 0) && (inMsg->srcAddr.addr.shortAddr!= 0x0000))
        MOV       A,R2
        LCALL     ?Subroutine131 & 0xFFFF
??CrossCallReturnLabel_242:
        MOV       DPTR,#zgAllowRemoteTCPolicyChange
        MOVX      A,@DPTR
        JNZ       ??ZDO_ProcessMgmtPermitJoinReq_0
        MOV       DPL,?V0
        MOV       DPH,?V1
        LCALL     ??Subroutine213_0 & 0xFFFF
??CrossCallReturnLabel_435:
        JNZ       ??ZDO_ProcessMgmtPermitJoinReq_1
// 1980     {
// 1981       return;
// 1982     }
// 1983   }
// 1984 #endif
// 1985   
// 1986   duration = inMsg->asdu[ZDP_MGMT_PERMIT_JOIN_REQ_DURATION];
??ZDO_ProcessMgmtPermitJoinReq_0:
        LCALL     ?Subroutine119 & 0xFFFF
??CrossCallReturnLabel_209:
        LCALL     ?Subroutine83 & 0xFFFF
// 1987   // Per R21 Spec this field is not longer relevant 2.4.3.3.7.2 (Mgmt_Permit_Joining_req Effect on Receipt)
// 1988   //tcsig    = inMsg->asdu[ZDP_MGMT_PERMIT_JOIN_REQ_TC_SIG];
// 1989 
// 1990   // Per R21 Spec this duration cannot last forever 2.4.3.3.7.2 (Mgmt_Permit_Joining_req Effect on Receipt)
// 1991   if(duration == 0xFF)
??CrossCallReturnLabel_146:
        MOV       A,#-0x1
        XRL       A,?V2
        JNZ       ??ZDO_ProcessMgmtPermitJoinReq_2
// 1992   {
// 1993     duration = 0xFE;
        MOV       ?V2,#-0x2
// 1994   }
// 1995   
// 1996   // Set the network layer permit join duration
// 1997   stat = (byte) NLME_PermitJoiningRequest( duration );
??ZDO_ProcessMgmtPermitJoinReq_2:
        ; Setup parameters for call to function NLME_PermitJoiningRequest
        MOV       R1,?V2
        LCALL     `??NLME_PermitJoiningRequest::?relay`; Banked call to: NLME_PermitJoiningRequest
        MOV       A,R1
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
// 1998 
// 1999   //Handle the permit joining if running a distributed network
// 2000   if(APSME_IsDistributedSecurity())
        ; Setup parameters for call to function APSME_IsDistributedSecurity
        LCALL     `??APSME_IsDistributedSecurity::?relay`; Banked call to: APSME_IsDistributedSecurity
        MOV       A,R1
        JZ        ??ZDO_ProcessMgmtPermitJoinReq_3
// 2001   {
// 2002     ZDSecMgrPermitJoining( duration );
        ; Setup parameters for call to function ZDSecMgrPermitJoining
        MOV       R1,?V2
        LCALL     `??ZDSecMgrPermitJoining::?relay`; Banked call to: ZDSecMgrPermitJoining
// 2003   }
// 2004   
// 2005   // Handle the Trust Center Significance
// 2006   if ( ZG_SECURE_ENABLED && ZG_BUILD_COORDINATOR_TYPE && ZG_DEVICE_COORDINATOR_TYPE )
// 2007   {
// 2008     ZDSecMgrPermitJoining( duration );
??ZDO_ProcessMgmtPermitJoinReq_3:
        ; Setup parameters for call to function ZDSecMgrPermitJoining
        MOV       R1,?V2
        LCALL     `??ZDSecMgrPermitJoining::?relay`; Banked call to: ZDSecMgrPermitJoining
// 2009   }
// 2010 
// 2011   // Send a response if unicast
// 2012   if ( !inMsg->wasBroadcast )
        MOV       A,R6
        ADD       A,#0xb
        LCALL     ??Subroutine208_0 & 0xFFFF
??CrossCallReturnLabel_419:
        JNZ       ??ZDO_ProcessMgmtPermitJoinReq_1
// 2013   {
// 2014     ZDP_MgmtPermitJoinRsp( inMsg->TransSeq, &(inMsg->srcAddr), stat, false );
        ; Setup parameters for call to function ZDP_SendData
        MOV       ?V2,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 14)
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V2,R0
        MOV       ?V3,R1
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        MOV       ?V2,#0x36
        MOV       ?V3,#-0x80
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 18)
        MOV       R1,#0x1
        MOV       R4,?V0
        MOV       R5,?V1
        LCALL     ?Subroutine127 & 0xFFFF
// 2015   }
??CrossCallReturnLabel_227:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
// 2016 }
??ZDO_ProcessMgmtPermitJoinReq_1:
        MOV       A,#0x1
        LJMP      ?Subroutine1 & 0xFFFF
          CFI EndBlock cfiBlock392

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine127:
          CFI Block cfiCond393 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtDirectJoinReq
          CFI Conditional ??CrossCallReturnLabel_226
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond394 Using cfiCommon0
          CFI (cfiCond394) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond394) Conditional ??CrossCallReturnLabel_227
          CFI (cfiCond394) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond394) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond394) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond394) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond394) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond394) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond394) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond394) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond394) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond394) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond394) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond394) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond394) CFA_SP SP+-2
          CFI (cfiCond394) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker395 Using cfiCommon1
          CFI (cfiPicker395) NoFunction
          CFI (cfiPicker395) Picker
        MOV       A,R6
        ADD       A,#0xf
        MOV       R2,A
        CLR       A
        ADDC      A,R7
        LCALL     ?Subroutine177 & 0xFFFF
??CrossCallReturnLabel_413:
        RET
          CFI EndBlock cfiCond393
          CFI EndBlock cfiCond394
          CFI EndBlock cfiPicker395

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine177:
          CFI Block cfiCond396 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_412, ??CrossCallReturnLabel_224
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond397 Using cfiCommon0
          CFI (cfiCond397) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond397) Conditional ??CrossCallReturnLabel_412, ??CrossCallReturnLabel_225
          CFI (cfiCond397) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond397) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond397) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond397) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond397) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond397) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond397) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond397) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond397) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond397) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond397) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond397) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond397) CFA_SP SP+-4
          CFI (cfiCond397) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond398 Using cfiCommon0
          CFI (cfiCond398) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond398) Conditional ??CrossCallReturnLabel_413, ??CrossCallReturnLabel_226
          CFI (cfiCond398) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond398) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond398) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond398) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond398) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond398) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond398) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond398) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond398) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond398) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond398) CFA_SP SP+-4
          CFI (cfiCond398) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond399 Using cfiCommon0
          CFI (cfiCond399) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond399) Conditional ??CrossCallReturnLabel_413, ??CrossCallReturnLabel_227
          CFI (cfiCond399) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond399) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond399) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond399) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond399) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond399) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond399) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond399) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond399) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond399) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond399) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond399) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond399) CFA_SP SP+-4
          CFI (cfiCond399) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker400 Using cfiCommon1
          CFI (cfiPicker400) NoFunction
          CFI (cfiPicker400) Picker
        MOV       R3,A
          CFI EndBlock cfiCond396
          CFI EndBlock cfiCond397
          CFI EndBlock cfiCond398
          CFI EndBlock cfiCond399
          CFI EndBlock cfiPicker400
        REQUIRE ??Subroutine207_0
        ; // Fall through to label ??Subroutine207_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine207_0:
          CFI Block cfiCond401 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
          CFI Conditional ??CrossCallReturnLabel_414, ??CrossCallReturnLabel_253
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond402 Using cfiCommon0
          CFI (cfiCond402) Function ZDO_ProcessUserDescSet
          CFI (cfiCond402) Conditional ??CrossCallReturnLabel_414, ??CrossCallReturnLabel_254
          CFI (cfiCond402) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond402) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond402) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond402) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond402) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond402) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond402) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond402) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond402) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond402) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond402) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond402) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond402) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond402) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond402) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond402) CFA_SP SP+-4
          CFI (cfiCond402) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond403 Using cfiCommon0
          CFI (cfiCond403) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond403) Conditional ??CrossCallReturnLabel_414, ??CrossCallReturnLabel_255
          CFI (cfiCond403) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond403) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond403) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond403) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond403) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond403) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond403) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond403) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond403) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond403) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond403) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond403) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond403) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond403) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond403) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond403) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond403) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond403) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond403) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond403) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond403) CFA_SP SP+-4
          CFI (cfiCond403) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond404 Using cfiCommon0
          CFI (cfiCond404) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond404) Conditional ??CrossCallReturnLabel_414, ??CrossCallReturnLabel_256
          CFI (cfiCond404) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond404) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond404) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond404) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond404) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond404) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond404) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond404) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond404) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond404) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond404) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond404) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond404) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond404) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond404) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond404) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond404) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond404) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond404) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond404) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond404) CFA_SP SP+-4
          CFI (cfiCond404) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond405 Using cfiCommon0
          CFI (cfiCond405) Function ZDMatchSendState
          CFI (cfiCond405) Conditional ??CrossCallReturnLabel_414, ??CrossCallReturnLabel_257
          CFI (cfiCond405) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond405) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond405) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond405) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond405) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond405) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond405) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond405) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond405) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond405) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond405) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond405) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond405) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond405) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond405) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond405) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond405) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond405) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond405) CFA_SP SP+-4
          CFI (cfiCond405) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond406 Using cfiCommon0
          CFI (cfiCond406) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond406) Conditional ??CrossCallReturnLabel_415, ??CrossCallReturnLabel_152
          CFI (cfiCond406) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond406) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond406) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond406) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond406) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond406) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond406) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond406) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond406) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond406) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond406) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond406) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond406) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond406) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond406) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond406) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond406) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond406) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond406) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond406) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond406) CFA_SP SP+-4
          CFI (cfiCond406) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond407 Using cfiCommon0
          CFI (cfiCond407) Function ZDMatchSendState
          CFI (cfiCond407) Conditional ??CrossCallReturnLabel_415, ??CrossCallReturnLabel_153
          CFI (cfiCond407) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond407) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond407) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond407) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond407) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond407) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond407) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond407) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond407) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond407) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond407) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond407) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond407) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond407) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond407) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond407) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond407) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond407) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond407) CFA_SP SP+-4
          CFI (cfiCond407) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond408 Using cfiCommon0
          CFI (cfiCond408) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond408) Conditional ??CrossCallReturnLabel_412, ??CrossCallReturnLabel_224
          CFI (cfiCond408) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond408) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond408) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond408) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond408) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond408) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond408) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond408) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond408) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond408) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond408) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond408) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond408) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond408) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond408) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond408) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond408) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond408) CFA_SP SP+-4
          CFI (cfiCond408) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond409 Using cfiCommon0
          CFI (cfiCond409) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond409) Conditional ??CrossCallReturnLabel_412, ??CrossCallReturnLabel_225
          CFI (cfiCond409) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond409) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond409) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond409) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond409) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond409) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond409) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond409) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond409) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond409) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond409) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond409) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond409) CFA_SP SP+-4
          CFI (cfiCond409) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond410 Using cfiCommon0
          CFI (cfiCond410) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond410) Conditional ??CrossCallReturnLabel_413, ??CrossCallReturnLabel_226
          CFI (cfiCond410) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond410) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond410) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond410) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond410) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond410) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond410) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond410) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond410) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond410) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond410) CFA_SP SP+-4
          CFI (cfiCond410) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond411 Using cfiCommon0
          CFI (cfiCond411) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond411) Conditional ??CrossCallReturnLabel_413, ??CrossCallReturnLabel_227
          CFI (cfiCond411) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond411) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond411) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond411) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond411) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond411) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond411) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond411) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond411) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond411) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond411) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond411) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond411) CFA_SP SP+-4
          CFI (cfiCond411) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker412 Using cfiCommon1
          CFI (cfiPicker412) NoFunction
          CFI (cfiPicker412) Picker
        LCALL     `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV       A,#0x5
        RET
          CFI EndBlock cfiCond401
          CFI EndBlock cfiCond402
          CFI EndBlock cfiCond403
          CFI EndBlock cfiCond404
          CFI EndBlock cfiCond405
          CFI EndBlock cfiCond406
          CFI EndBlock cfiCond407
          CFI EndBlock cfiCond408
          CFI EndBlock cfiCond409
          CFI EndBlock cfiCond410
          CFI EndBlock cfiCond411
          CFI EndBlock cfiPicker412

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine113:
          CFI Block cfiCond413 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
          CFI Conditional ??CrossCallReturnLabel_421
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond414 Using cfiCommon0
          CFI (cfiCond414) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond414) Conditional ??CrossCallReturnLabel_422
          CFI (cfiCond414) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond414) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond414) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond414) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond414) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond414) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond414) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond414) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond414) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond414) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond414) CFA_SP SP+-2
          CFI (cfiCond414) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond415 Using cfiCommon0
          CFI (cfiCond415) Function ZDO_ProcessUserDescReq
          CFI (cfiCond415) Conditional ??CrossCallReturnLabel_423
          CFI (cfiCond415) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond415) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond415) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond415) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond415) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond415) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond415) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond415) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond415) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond415) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond415) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond415) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond415) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond415) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond415) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond415) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond415) CFA_SP SP+-2
          CFI (cfiCond415) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker416 Using cfiCommon1
          CFI (cfiPicker416) NoFunction
          CFI (cfiPicker416) Picker
        MOV       A,R6
        ADD       A,#0xe
          CFI EndBlock cfiCond413
          CFI EndBlock cfiCond414
          CFI EndBlock cfiCond415
          CFI EndBlock cfiPicker416
        REQUIRE ??Subroutine208_0
        ; // Fall through to label ??Subroutine208_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine208_0:
          CFI Block cfiCond417 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
          CFI Conditional ??CrossCallReturnLabel_417
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond418 Using cfiCommon0
          CFI (cfiCond418) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond418) Conditional ??CrossCallReturnLabel_418
          CFI (cfiCond418) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond418) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond418) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond418) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond418) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond418) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond418) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond418) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond418) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond418) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond418) CFA_SP SP+-2
          CFI (cfiCond418) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond419 Using cfiCommon0
          CFI (cfiCond419) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond419) Conditional ??CrossCallReturnLabel_419
          CFI (cfiCond419) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond419) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond419) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond419) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond419) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond419) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond419) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond419) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond419) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond419) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond419) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond419) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond419) CFA_SP SP+-2
          CFI (cfiCond419) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond420 Using cfiCommon0
          CFI (cfiCond420) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond420) Conditional ??CrossCallReturnLabel_420
          CFI (cfiCond420) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond420) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond420) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond420) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond420) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond420) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond420) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond420) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond420) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond420) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond420) CFA_SP SP+-2
          CFI (cfiCond420) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond421 Using cfiCommon0
          CFI (cfiCond421) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond421) Conditional ??CrossCallReturnLabel_421
          CFI (cfiCond421) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond421) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond421) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond421) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond421) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond421) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond421) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond421) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond421) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond421) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond421) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond421) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond421) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond421) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond421) CFA_SP SP+-2
          CFI (cfiCond421) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond422 Using cfiCommon0
          CFI (cfiCond422) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond422) Conditional ??CrossCallReturnLabel_422
          CFI (cfiCond422) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond422) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond422) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond422) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond422) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond422) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond422) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond422) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond422) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond422) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond422) CFA_SP SP+-2
          CFI (cfiCond422) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond423 Using cfiCommon0
          CFI (cfiCond423) Function ZDO_ProcessUserDescReq
          CFI (cfiCond423) Conditional ??CrossCallReturnLabel_423
          CFI (cfiCond423) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond423) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond423) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond423) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond423) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond423) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond423) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond423) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond423) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond423) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond423) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond423) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond423) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond423) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond423) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond423) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond423) CFA_SP SP+-2
          CFI (cfiCond423) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker424 Using cfiCommon1
          CFI (cfiPicker424) NoFunction
          CFI (cfiPicker424) Picker
        MOV       DPL,A
        CLR       A
          CFI EndBlock cfiCond417
          CFI EndBlock cfiCond418
          CFI EndBlock cfiCond419
          CFI EndBlock cfiCond420
          CFI EndBlock cfiCond421
          CFI EndBlock cfiCond422
          CFI EndBlock cfiCond423
          CFI EndBlock cfiPicker424
        REQUIRE ??Subroutine209_0
        ; // Fall through to label ??Subroutine209_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine209_0:
          CFI Block cfiCond425 Using cfiCommon0
          CFI Function ZDO_CompareClusterLists
          CFI Conditional ??CrossCallReturnLabel_416
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond426 Using cfiCommon0
          CFI (cfiCond426) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond426) Conditional ??CrossCallReturnLabel_417
          CFI (cfiCond426) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond426) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond426) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond426) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond426) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond426) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond426) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond426) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond426) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond426) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond426) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond426) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond426) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond426) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond426) CFA_SP SP+-2
          CFI (cfiCond426) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond427 Using cfiCommon0
          CFI (cfiCond427) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond427) Conditional ??CrossCallReturnLabel_418
          CFI (cfiCond427) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond427) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond427) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond427) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond427) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond427) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond427) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond427) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond427) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond427) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond427) CFA_SP SP+-2
          CFI (cfiCond427) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond428 Using cfiCommon0
          CFI (cfiCond428) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond428) Conditional ??CrossCallReturnLabel_419
          CFI (cfiCond428) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond428) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond428) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond428) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond428) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond428) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond428) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond428) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond428) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond428) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond428) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond428) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond428) CFA_SP SP+-2
          CFI (cfiCond428) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond429 Using cfiCommon0
          CFI (cfiCond429) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond429) Conditional ??CrossCallReturnLabel_420
          CFI (cfiCond429) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond429) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond429) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond429) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond429) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond429) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond429) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond429) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond429) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond429) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond429) CFA_SP SP+-2
          CFI (cfiCond429) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond430 Using cfiCommon0
          CFI (cfiCond430) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond430) Conditional ??CrossCallReturnLabel_421
          CFI (cfiCond430) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond430) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond430) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond430) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond430) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond430) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond430) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond430) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond430) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond430) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond430) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond430) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond430) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond430) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond430) CFA_SP SP+-2
          CFI (cfiCond430) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond431 Using cfiCommon0
          CFI (cfiCond431) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond431) Conditional ??CrossCallReturnLabel_422
          CFI (cfiCond431) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond431) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond431) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond431) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond431) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond431) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond431) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond431) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond431) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond431) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond431) CFA_SP SP+-2
          CFI (cfiCond431) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond432 Using cfiCommon0
          CFI (cfiCond432) Function ZDO_ProcessUserDescReq
          CFI (cfiCond432) Conditional ??CrossCallReturnLabel_423
          CFI (cfiCond432) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond432) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond432) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond432) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond432) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond432) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond432) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond432) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond432) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond432) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond432) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond432) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond432) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond432) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond432) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond432) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond432) CFA_SP SP+-2
          CFI (cfiCond432) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker433 Using cfiCommon1
          CFI (cfiPicker433) NoFunction
          CFI (cfiPicker433) Picker
        ADDC      A,R7
        MOV       DPH,A
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond425
          CFI EndBlock cfiCond426
          CFI EndBlock cfiCond427
          CFI EndBlock cfiCond428
          CFI EndBlock cfiCond429
          CFI EndBlock cfiCond430
          CFI EndBlock cfiCond431
          CFI EndBlock cfiCond432
          CFI EndBlock cfiPicker433

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine83:
          CFI Block cfiCond434 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtBindReq
          CFI Conditional ??CrossCallReturnLabel_145
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond435 Using cfiCommon0
          CFI (cfiCond435) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond435) Conditional ??CrossCallReturnLabel_146
          CFI (cfiCond435) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond435) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond435) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond435) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond435) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond435) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond435) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond435) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond435) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond435) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond435) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond435) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond435) CFA_SP SP+-2
          CFI (cfiCond435) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiPicker436 Using cfiCommon1
          CFI (cfiPicker436) NoFunction
          CFI (cfiPicker436) Picker
        MOV       DPH,A
        LCALL     ?Subroutine159 & 0xFFFF
??CrossCallReturnLabel_318:
        MOV       ?V2,A
        RET
          CFI EndBlock cfiCond434
          CFI EndBlock cfiCond435
          CFI EndBlock cfiPicker436
// 2017 
// 2018 /*
// 2019  * This function stub allows the next higher layer to be notified of
// 2020  * a permit joining timeout.
// 2021  */
// 2022 /*********************************************************************
// 2023  * @fn          ZDO_ProcessMgmtPermitJoinTimeout
// 2024  *
// 2025  * @brief       This function stub allows the next higher layer to be
// 2026  *              notified of a permit joining timeout. Currently, this
// 2027  *              directly bypasses the APS layer.
// 2028  *
// 2029  * @param       none
// 2030  *
// 2031  * @return      none
// 2032  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2033 void ZDO_ProcessMgmtPermitJoinTimeout( void )
NLME_PermitJoiningTimeout:
          CFI Block cfiBlock437 Using cfiCommon0
          CFI Function NLME_PermitJoiningTimeout
        CODE
// 2034 {
        FUNCALL NLME_PermitJoiningTimeout, ZDSecMgrPermitJoiningTimeout
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH      DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH      DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2035   #if defined( ZDO_MGMT_PERMIT_JOIN_RESPONSE )
// 2036   // Currently, only the ZDSecMgr needs to be notified
// 2037   if ( ZG_SECURE_ENABLED && ZG_BUILD_COORDINATOR_TYPE && ZG_DEVICE_COORDINATOR_TYPE )
// 2038   {
// 2039     ZDSecMgrPermitJoiningTimeout();
        ; Setup parameters for call to function ZDSecMgrPermitJoiningTimeout
        LCALL     `??ZDSecMgrPermitJoiningTimeout::?relay`; Banked call to: ZDSecMgrPermitJoiningTimeout
// 2040   }
// 2041   #endif
// 2042 }
          CFI EndBlock cfiBlock437
        REQUIRE ?Subroutine0
        ; // Fall through to label ?Subroutine0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine0:
          CFI Block cfiBlock438 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+-5
          CFI DPL0 Frame(CFA_SP, 4)
          CFI DPH0 Frame(CFA_SP, 5)
        POP       DPH
          CFI CFA_SP SP+-4
          CFI DPH0 SameValue
        POP       DPL
          CFI CFA_SP SP+-3
          CFI DPL0 SameValue
        LJMP      ?BRET
          CFI EndBlock cfiBlock438
// 2043 
// 2044 /*********************************************************************
// 2045  * @fn          ZDO_ProcessUserDescReq
// 2046  *
// 2047  * @brief       This function finishes the processing of the User
// 2048  *              Descriptor Request and generates the response.
// 2049  *
// 2050  * @param       inMsg - incoming message (request)
// 2051  *
// 2052  * @return      none
// 2053  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2054 void ZDO_ProcessUserDescReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessUserDescReq:
          CFI Block cfiBlock439 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescReq
        CODE
// 2055 {
        FUNCALL ZDO_ProcessUserDescReq, osal_nv_read
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessUserDescReq, ZDP_UserDescRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessUserDescReq, ZDP_GenericRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 17
        MOV       A,#-0x11
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 33)
        LCALL     ?Subroutine80 & 0xFFFF
// 2056   uint16 aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
??CrossCallReturnLabel_138:
        MOV       R0,A
        CLR       A
        XCH       A,R0
        MOV       R1,A
        MOV       A,R2
        ADD       A,R0
        MOV       ?V4,A
        CLR       A
        ADDC      A,R1
        MOV       ?V5,A
// 2057   UserDescriptorFormat_t userDesc;
// 2058 
// 2059   if ( (aoi == ZDAppNwkAddr.addr.shortAddr) && (ZSUCCESS == osal_nv_read(
// 2060              ZCD_NV_USERDESC, 0, sizeof(UserDescriptorFormat_t), &userDesc )) )
        MOV       A,R6
        ADD       A,#0xf
        MOV       ?V2,A
        CLR       A
        ADDC      A,R7
        MOV       ?V3,A
        MOV       A,R6
        LCALL     ?Subroutine131 & 0xFFFF
??CrossCallReturnLabel_243:
        MOV       DPTR,#ZDAppNwkAddr
        MOVX      A,@DPTR
        XRL       A,R2
        JNZ       ??ZDO_ProcessUserDescReq_0
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R1
??ZDO_ProcessUserDescReq_0:
        JNZ       ??ZDO_ProcessUserDescReq_1
        ; Setup parameters for call to function osal_nv_read
        MOV       R0,?XSP + 0
        MOV       R1,?XSP + 1
        MOV       ?V6,R0
        MOV       ?V7,R1
        MOV       R0,#?V6
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 35)
        MOV       ?V6,#0x11
        MOV       ?V7,#0x0
        MOV       R0,#?V6
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 37)
        MOV       R4,#0x0
        MOV       R5,#0x0
        MOV       R2,#-0x7f
        MOV       R3,#0x0
        LCALL     `??osal_nv_read::?relay`; Banked call to: osal_nv_read
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 33)
        MOV       A,R1
        JNZ       ??ZDO_ProcessUserDescReq_1
// 2061   {
// 2062     ZDP_UserDescRsp( inMsg->TransSeq, &(inMsg->srcAddr), aoi, &userDesc, false );
        ; Setup parameters for call to function ZDP_UserDescRsp
        MOV       ?V6,#0x0
        MOV       R0,#?V6
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 34)
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V6,R0
        MOV       ?V7,R1
        MOV       R0,#?V6
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 36)
        MOV       R4,?V4
        MOV       R5,?V5
        MOV       R2,?V0
        MOV       R3,?V1
        MOV       DPL,?V2
        MOV       DPH,?V3
        MOVX      A,@DPTR
        MOV       R1,A
        LCALL     `??ZDP_UserDescRsp::?relay`; Banked call to: ZDP_UserDescRsp
        MOV       A,#0x3
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 33)
        SJMP      ??ZDO_ProcessUserDescReq_2
// 2063   }
// 2064   else
// 2065   {
// 2066     ZDP_GenericRsp(inMsg->TransSeq, &(inMsg->srcAddr),
// 2067            ZDP_NOT_SUPPORTED, aoi, User_Desc_rsp, inMsg->SecurityUse );
??ZDO_ProcessUserDescReq_1:
        ; Setup parameters for call to function ZDP_GenericRsp
        MOV       ?V6,#0x11
        MOV       ?V7,#-0x80
        MOV       R0,#?V6
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 35)
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 37)
        LCALL     ?Subroutine113 & 0xFFFF
// 2068   }
??CrossCallReturnLabel_423:
        MOV       R5,A
        MOV       R4,#-0x7c
        MOV       R2,?V0
        MOV       R3,?V1
        MOV       DPL,?V2
        MOV       DPH,?V3
        MOVX      A,@DPTR
        MOV       R1,A
        LCALL     `??ZDP_GenericRsp::?relay`; Banked call to: ZDP_GenericRsp
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 33)
// 2069 }
??ZDO_ProcessUserDescReq_2:
        MOV       A,#0x11
        LJMP      ?Subroutine8 & 0xFFFF
          CFI EndBlock cfiBlock439

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine131:
          CFI Block cfiCond440 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtPermitJoinReq
          CFI Conditional ??CrossCallReturnLabel_242
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond441 Using cfiCommon0
          CFI (cfiCond441) Function ZDO_ProcessUserDescReq
          CFI (cfiCond441) Conditional ??CrossCallReturnLabel_243
          CFI (cfiCond441) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond441) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond441) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond441) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond441) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond441) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond441) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond441) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond441) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond441) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond441) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond441) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond441) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond441) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond441) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond441) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond441) CFA_SP SP+-2
          CFI (cfiCond441) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker442 Using cfiCommon1
          CFI (cfiPicker442) NoFunction
          CFI (cfiPicker442) Picker
        ADD       A,#0x2
        MOV       ?V0,A
        CLR       A
        ADDC      A,R7
        MOV       ?V1,A
        RET
          CFI EndBlock cfiCond440
          CFI EndBlock cfiCond441
          CFI EndBlock cfiPicker442

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine80:
          CFI Block cfiCond443 Using cfiCommon0
          CFI Function ZDO_ProcessServerDiscReq
          CFI Conditional ??CrossCallReturnLabel_137
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond444 Using cfiCommon0
          CFI (cfiCond444) Function ZDO_ProcessUserDescReq
          CFI (cfiCond444) Conditional ??CrossCallReturnLabel_138
          CFI (cfiCond444) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond444) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond444) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond444) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond444) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond444) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond444) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond444) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond444) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond444) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond444) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond444) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond444) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond444) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond444) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond444) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond444) CFA_SP SP+-2
          CFI (cfiCond444) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker445 Using cfiCommon1
          CFI (cfiPicker445) NoFunction
          CFI (cfiPicker445) Picker
        LCALL     ?Subroutine162 & 0xFFFF
??CrossCallReturnLabel_287:
        RET
          CFI EndBlock cfiCond443
          CFI EndBlock cfiCond444
          CFI EndBlock cfiPicker445

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine162:
          CFI Block cfiCond446 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_94
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond447 Using cfiCommon0
          CFI (cfiCond447) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond447) Conditional ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_95
          CFI (cfiCond447) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond447) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond447) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond447) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond447) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond447) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond447) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond447) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond447) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond447) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond447) CFA_SP SP+-4
          CFI (cfiCond447) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond448 Using cfiCommon0
          CFI (cfiCond448) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond448) Conditional ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_137
          CFI (cfiCond448) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond448) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond448) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond448) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond448) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond448) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond448) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond448) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond448) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond448) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond448) CFA_SP SP+-4
          CFI (cfiCond448) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond449 Using cfiCommon0
          CFI (cfiCond449) Function ZDO_ProcessUserDescReq
          CFI (cfiCond449) Conditional ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_138
          CFI (cfiCond449) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond449) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond449) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond449) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond449) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond449) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond449) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond449) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond449) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond449) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond449) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond449) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond449) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond449) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond449) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond449) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond449) CFA_SP SP+-4
          CFI (cfiCond449) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker450 Using cfiCommon1
          CFI (cfiPicker450) NoFunction
          CFI (cfiPicker450) Picker
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
        MOV       A,R2
        LCALL     ?Subroutine182 & 0xFFFF
??CrossCallReturnLabel_309:
        LCALL     ?Subroutine180 & 0xFFFF
??CrossCallReturnLabel_307:
        MOVX      A,@DPTR
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond446
          CFI EndBlock cfiCond447
          CFI EndBlock cfiCond448
          CFI EndBlock cfiCond449
          CFI EndBlock cfiPicker450

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine4:
          CFI Block cfiBlock451 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R2,?V2
        MOV       R3,?V3
          CFI EndBlock cfiBlock451
        REQUIRE ??Subroutine210_0
        ; // Fall through to label ??Subroutine210_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine210_0:
          CFI Block cfiBlock452 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0x8
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock452
// 2070 
// 2071 /*********************************************************************
// 2072  * @fn          ZDO_ProcessUserDescSet
// 2073  *
// 2074  * @brief       This function finishes the processing of the User
// 2075  *              Descriptor Set and generates the response.
// 2076  *
// 2077  * @param       inMsg - incoming message (request)
// 2078  *
// 2079  * @return      none
// 2080  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2081 void ZDO_ProcessUserDescSet( zdoIncomingMsg_t *inMsg )
ZDO_ProcessUserDescSet:
          CFI Block cfiBlock453 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescSet
        CODE
// 2082 {
        FUNCALL ZDO_ProcessUserDescSet, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 39, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 39, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessUserDescSet, osal_nv_write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 40, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 40, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessUserDescSet, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 41, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        MOV       A,#-0xf
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 21
        MOV       A,#-0x15
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 36)
        MOV       ?V2,R2
        MOV       ?V3,R3
// 2083   uint8 *msg;
// 2084   uint16 aoi;
// 2085   UserDescriptorFormat_t userDesc;
// 2086   uint8 outMsg[3];
// 2087   uint8 status;
// 2088 
// 2089   msg = inMsg->asdu;
        LCALL     ??Subroutine211_0 & 0xFFFF
??CrossCallReturnLabel_429:
        ADDC      A,?V3
        LCALL     ?Subroutine78 & 0xFFFF
// 2090   aoi = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_132:
        MOV       R2,A
        CLR       A
        XCH       A,R2
        MOV       R3,A
        MOV       A,R4
        ADD       A,R2
        MOV       R6,A
        CLR       A
        ADDC      A,R3
        MOV       R7,A
// 2091 
// 2092   if ( aoi == ZDAppNwkAddr.addr.shortAddr )
        MOV       DPTR,#ZDAppNwkAddr
        MOVX      A,@DPTR
        XRL       A,R6
        JNZ       ??ZDO_ProcessUserDescSet_0
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R7
??ZDO_ProcessUserDescSet_0:
        JZ        $+5
        LJMP      ??ZDO_ProcessUserDescSet_1 & 0xFFFF
// 2093   {
// 2094     userDesc.len = (msg[2] < AF_MAX_USER_DESCRIPTOR_LEN) ? msg[2] : AF_MAX_USER_DESCRIPTOR_LEN;
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R2,A
        SUBB      A,#0x10
        JNC       ??ZDO_ProcessUserDescSet_2
        MOV       ?V0,R2
        SJMP      ??ZDO_ProcessUserDescSet_3
??ZDO_ProcessUserDescSet_2:
        MOV       ?V0,#0x10
??ZDO_ProcessUserDescSet_3:
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V0
        LCALL     ?Subroutine34 & 0xFFFF
// 2095     msg ++;  // increment one for the length field
// 2096 
// 2097     osal_memcpy( userDesc.desc, &msg[2], userDesc.len );
??CrossCallReturnLabel_52:
        MOV       R1,DPL
        MOV       R2,DPH
        MOV       ?V4,R1
        MOV       ?V5,R2
        MOV       ?V6,#0x0
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 39)
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       R4,A
        MOV       R5,#0x0
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        MOV       R2,DPL
        MOV       R3,DPH
        LCALL     ??Subroutine242_0 & 0xFFFF
??CrossCallReturnLabel_600:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 36)
// 2098     osal_nv_write( ZCD_NV_USERDESC, 0, sizeof(UserDescriptorFormat_t), &userDesc );
        ; Setup parameters for call to function osal_nv_write
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V4,R0
        MOV       ?V5,R1
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 38)
        MOV       ?V4,#0x11
        MOV       ?V5,#0x0
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 40)
        MOV       R4,#0x0
        MOV       R5,#0x0
        MOV       R2,#-0x7f
        MOV       R3,#0x0
        LCALL     `??osal_nv_write::?relay`; Banked call to: osal_nv_write
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 36)
// 2099     if ( userDesc.len != 0 )
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       DPTR,#ZDO_Config_Node_Descriptor
        JZ        ??ZDO_ProcessUserDescSet_4
// 2100     {
// 2101       ZDO_Config_Node_Descriptor.UserDescAvail = TRUE;
        MOVX      A,@DPTR
        SETB      0xE0 /* A   */.4
        SJMP      ??ZDO_ProcessUserDescSet_5
// 2102     }
// 2103     else
// 2104     {
// 2105       ZDO_Config_Node_Descriptor.UserDescAvail = FALSE;
??ZDO_ProcessUserDescSet_4:
        MOVX      A,@DPTR
        CLR       0xE0 /* A   */.4
// 2106     }
// 2107 
// 2108     status = ZDP_SUCCESS;
// 2109   }
??ZDO_ProcessUserDescSet_5:
        LCALL     ?Subroutine30 & 0xFFFF
??CrossCallReturnLabel_43:
        CLR       A
        SJMP      ??ZDO_ProcessUserDescSet_6
// 2110   else
// 2111   {
// 2112     status =  ZDP_NOT_SUPPORTED;
??ZDO_ProcessUserDescSet_1:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,#-0x7c
??ZDO_ProcessUserDescSet_6:
        MOVX      @DPTR,A
// 2113   }
// 2114 
// 2115   outMsg[0] = status;
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 2116   outMsg[1] = LO_UINT16( aoi );
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R6
        MOVX      @DPTR,A
// 2117   outMsg[2] = LO_UINT16( aoi );
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R6
        MOVX      @DPTR,A
// 2118 
// 2119   ZDP_SendData( &(inMsg->TransSeq), &(inMsg->srcAddr), User_Desc_conf, 3, outMsg,
// 2120                inMsg->SecurityUse );
        ; Setup parameters for call to function ZDP_SendData
        MOV       A,?V2
        LCALL     ?Subroutine125 & 0xFFFF
??CrossCallReturnLabel_219:
        ADDC      A,?V3
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       ?V1,A
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 37)
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V4,R0
        MOV       ?V5,R1
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 39)
        MOV       ?V4,#0x14
        MOV       ?V5,#-0x80
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 41)
        MOV       R1,#0x3
        MOV       A,?V2
        ADD       A,#0x2
        MOV       R4,A
        CLR       A
        ADDC      A,?V3
        MOV       R5,A
        MOV       A,?V2
        ADD       A,#0xf
        MOV       R2,A
        CLR       A
        ADDC      A,?V3
        MOV       R3,A
        LCALL     ?Subroutine142 & 0xFFFF
??CrossCallReturnLabel_254:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 36)
// 2121 }
        MOV       A,#0x15
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
        MOV       R7,#0x7
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock453

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine122:
          CFI Block cfiCond454 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_424
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond455 Using cfiCommon0
          CFI (cfiCond455) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond455) Conditional ??CrossCallReturnLabel_425
          CFI (cfiCond455) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond455) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond455) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond455) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond455) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond455) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond455) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond455) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond455) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond455) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond455) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond455) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond455) CFA_SP SP+-2
          CFI (cfiCond455) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker456 Using cfiCommon1
          CFI (cfiPicker456) NoFunction
          CFI (cfiPicker456) Picker
        MOV       ?V0,R2
        MOV       ?V1,R3
          CFI EndBlock cfiCond454
          CFI EndBlock cfiCond455
          CFI EndBlock cfiPicker456
        REQUIRE ??Subroutine211_0
        ; // Fall through to label ??Subroutine211_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine211_0:
          CFI Block cfiCond457 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_426
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond458 Using cfiCommon0
          CFI (cfiCond458) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond458) Conditional ??CrossCallReturnLabel_427
          CFI (cfiCond458) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond458) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond458) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond458) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond458) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond458) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond458) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond458) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond458) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond458) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond458) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond458) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond458) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond458) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond458) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond458) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond458) CFA_SP SP+-2
          CFI (cfiCond458) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond459 Using cfiCommon0
          CFI (cfiCond459) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond459) Conditional ??CrossCallReturnLabel_428
          CFI (cfiCond459) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond459) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond459) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond459) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond459) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond459) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond459) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond459) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond459) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond459) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond459) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond459) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond459) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond459) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond459) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond459) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond459) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond459) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond459) CFA_SP SP+-2
          CFI (cfiCond459) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond460 Using cfiCommon0
          CFI (cfiCond460) Function ZDO_ProcessUserDescSet
          CFI (cfiCond460) Conditional ??CrossCallReturnLabel_429
          CFI (cfiCond460) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond460) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond460) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond460) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond460) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond460) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond460) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond460) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond460) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond460) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond460) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond460) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond460) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond460) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond460) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond460) CFA_SP SP+-2
          CFI (cfiCond460) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond461 Using cfiCommon0
          CFI (cfiCond461) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond461) Conditional ??CrossCallReturnLabel_424
          CFI (cfiCond461) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond461) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond461) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond461) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond461) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond461) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond461) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond461) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond461) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond461) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond461) CFA_SP SP+-2
          CFI (cfiCond461) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond462 Using cfiCommon0
          CFI (cfiCond462) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond462) Conditional ??CrossCallReturnLabel_425
          CFI (cfiCond462) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond462) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond462) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond462) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond462) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond462) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond462) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond462) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond462) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond462) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond462) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond462) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond462) CFA_SP SP+-2
          CFI (cfiCond462) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker463 Using cfiCommon1
          CFI (cfiPicker463) NoFunction
          CFI (cfiPicker463) Picker
        LCALL     ?Subroutine183 & 0xFFFF
??CrossCallReturnLabel_517:
        RET
          CFI EndBlock cfiCond457
          CFI EndBlock cfiCond458
          CFI EndBlock cfiCond459
          CFI EndBlock cfiCond460
          CFI EndBlock cfiCond461
          CFI EndBlock cfiCond462
          CFI EndBlock cfiPicker463

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine183:
          CFI Block cfiCond464 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_515, ??CrossCallReturnLabel_206
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond465 Using cfiCommon0
          CFI (cfiCond465) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond465) Conditional ??CrossCallReturnLabel_515, ??CrossCallReturnLabel_207
          CFI (cfiCond465) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond465) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond465) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond465) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond465) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond465) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond465) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond465) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond465) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond465) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond465) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond465) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond465) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond465) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond465) CFA_SP SP+-4
          CFI (cfiCond465) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond466 Using cfiCommon0
          CFI (cfiCond466) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond466) Conditional ??CrossCallReturnLabel_515, ??CrossCallReturnLabel_208
          CFI (cfiCond466) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond466) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond466) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond466) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond466) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond466) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond466) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond466) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond466) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond466) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond466) CFA_SP SP+-4
          CFI (cfiCond466) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond467 Using cfiCommon0
          CFI (cfiCond467) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond467) Conditional ??CrossCallReturnLabel_515, ??CrossCallReturnLabel_209
          CFI (cfiCond467) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond467) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond467) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond467) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond467) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond467) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond467) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond467) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond467) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond467) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond467) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond467) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond467) CFA_SP SP+-4
          CFI (cfiCond467) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond468 Using cfiCommon0
          CFI (cfiCond468) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond468) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_424
          CFI (cfiCond468) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond468) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond468) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond468) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond468) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond468) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond468) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond468) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond468) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond468) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond468) CFA_SP SP+-4
          CFI (cfiCond468) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond469 Using cfiCommon0
          CFI (cfiCond469) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond469) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_425
          CFI (cfiCond469) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond469) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond469) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond469) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond469) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond469) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond469) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond469) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond469) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond469) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond469) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond469) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond469) CFA_SP SP+-4
          CFI (cfiCond469) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond470 Using cfiCommon0
          CFI (cfiCond470) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond470) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_426
          CFI (cfiCond470) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond470) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond470) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond470) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond470) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond470) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond470) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond470) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond470) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond470) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond470) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond470) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond470) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond470) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond470) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond470) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond470) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond470) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond470) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond470) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond470) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond470) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond470) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond470) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond470) CFA_SP SP+-4
          CFI (cfiCond470) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond471 Using cfiCommon0
          CFI (cfiCond471) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond471) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_427
          CFI (cfiCond471) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond471) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond471) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond471) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond471) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond471) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond471) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond471) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond471) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond471) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond471) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond471) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond471) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond471) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond471) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond471) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond471) CFA_SP SP+-4
          CFI (cfiCond471) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond472 Using cfiCommon0
          CFI (cfiCond472) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond472) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_428
          CFI (cfiCond472) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond472) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond472) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond472) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond472) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond472) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond472) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond472) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond472) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond472) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond472) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond472) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond472) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond472) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond472) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond472) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond472) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond472) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond472) CFA_SP SP+-4
          CFI (cfiCond472) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond473 Using cfiCommon0
          CFI (cfiCond473) Function ZDO_ProcessUserDescSet
          CFI (cfiCond473) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_429
          CFI (cfiCond473) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond473) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond473) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond473) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond473) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond473) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond473) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond473) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond473) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond473) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond473) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond473) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond473) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond473) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond473) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond473) CFA_SP SP+-4
          CFI (cfiCond473) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond474 Using cfiCommon0
          CFI (cfiCond474) Function ZDO_ParseEPListRsp
          CFI (cfiCond474) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_147
          CFI (cfiCond474) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond474) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond474) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond474) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond474) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond474) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond474) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond474) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond474) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond474) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond474) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond474) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond474) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond474) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond474) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond474) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond474) CFA_SP SP+-6
          CFI (cfiCond474) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond475 Using cfiCommon0
          CFI (cfiCond475) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond475) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_148
          CFI (cfiCond475) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond475) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond475) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond475) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond475) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond475) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond475) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond475) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond475) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond475) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond475) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond475) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond475) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond475) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond475) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond475) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond475) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond475) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond475) CFA_SP SP+-6
          CFI (cfiCond475) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond476 Using cfiCommon0
          CFI (cfiCond476) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond476) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_210
          CFI (cfiCond476) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond476) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond476) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond476) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond476) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond476) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond476) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond476) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond476) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond476) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond476) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond476) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond476) CFA_SP SP+-6
          CFI (cfiCond476) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond477 Using cfiCommon0
          CFI (cfiCond477) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond477) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_211
          CFI (cfiCond477) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond477) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond477) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond477) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond477) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond477) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond477) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond477) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond477) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond477) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond477) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond477) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond477) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond477) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond477) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond477) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond477) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond477) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond477) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond477) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond477) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond477) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond477) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond477) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond477) CFA_SP SP+-6
          CFI (cfiCond477) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker478 Using cfiCommon1
          CFI (cfiPicker478) NoFunction
          CFI (cfiPicker478) Picker
        MOV       A,R2
          CFI EndBlock cfiCond464
          CFI EndBlock cfiCond465
          CFI EndBlock cfiCond466
          CFI EndBlock cfiCond467
          CFI EndBlock cfiCond468
          CFI EndBlock cfiCond469
          CFI EndBlock cfiCond470
          CFI EndBlock cfiCond471
          CFI EndBlock cfiCond472
          CFI EndBlock cfiCond473
          CFI EndBlock cfiCond474
          CFI EndBlock cfiCond475
          CFI EndBlock cfiCond476
          CFI EndBlock cfiCond477
          CFI EndBlock cfiPicker478
        REQUIRE ??Subroutine212_0
        ; // Fall through to label ??Subroutine212_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine212_0:
          CFI Block cfiCond479 Using cfiCommon0
          CFI Function ZDO_ParseUserDescRsp
          CFI Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_331
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond480 Using cfiCommon0
          CFI (cfiCond480) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond480) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_332
          CFI (cfiCond480) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond480) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond480) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond480) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond480) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond480) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond480) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond480) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond480) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond480) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond480) CFA_SP SP+-6
          CFI (cfiCond480) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond481 Using cfiCommon0
          CFI (cfiCond481) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond481) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_514, ??CrossCallReturnLabel_212
          CFI (cfiCond481) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond481) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond481) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond481) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond481) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond481) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond481) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond481) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond481) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond481) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond481) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond481) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond481) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond481) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond481) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond481) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond481) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond481) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond481) CFA_SP SP+-6
          CFI (cfiCond481) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond482 Using cfiCommon0
          CFI (cfiCond482) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond482) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_514, ??CrossCallReturnLabel_213
          CFI (cfiCond482) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond482) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond482) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond482) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond482) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond482) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond482) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond482) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond482) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond482) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond482) CFA_SP SP+-6
          CFI (cfiCond482) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond483 Using cfiCommon0
          CFI (cfiCond483) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond483) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_514, ??CrossCallReturnLabel_214
          CFI (cfiCond483) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond483) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond483) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond483) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond483) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond483) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond483) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond483) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond483) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond483) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond483) CFA_SP SP+-6
          CFI (cfiCond483) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond484 Using cfiCommon0
          CFI (cfiCond484) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond484) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_0
          CFI (cfiCond484) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond484) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond484) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond484) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond484) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond484) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond484) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond484) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond484) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond484) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond484) CFA_SP SP+-6
          CFI (cfiCond484) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond485 Using cfiCommon0
          CFI (cfiCond485) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond485) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_1
          CFI (cfiCond485) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond485) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond485) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond485) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond485) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond485) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond485) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond485) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond485) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond485) CFA_SP SP+-6
          CFI (cfiCond485) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond486 Using cfiCommon0
          CFI (cfiCond486) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond486) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_110
          CFI (cfiCond486) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond486) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond486) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond486) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond486) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond486) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond486) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond486) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond486) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond486) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond486) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond486) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond486) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond486) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond486) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond486) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond486) CFA_SP SP+-6
          CFI (cfiCond486) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond487 Using cfiCommon0
          CFI (cfiCond487) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond487) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_111
          CFI (cfiCond487) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond487) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond487) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond487) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond487) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond487) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond487) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond487) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond487) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond487) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond487) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond487) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond487) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond487) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond487) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond487) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond487) CFA_SP SP+-6
          CFI (cfiCond487) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond488 Using cfiCommon0
          CFI (cfiCond488) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond488) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_112
          CFI (cfiCond488) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond488) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond488) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond488) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond488) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond488) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond488) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond488) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond488) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond488) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond488) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond488) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond488) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond488) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond488) CFA_SP SP+-6
          CFI (cfiCond488) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond489 Using cfiCommon0
          CFI (cfiCond489) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond489) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_338
          CFI (cfiCond489) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond489) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond489) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond489) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond489) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond489) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond489) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond489) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond489) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond489) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond489) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond489) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond489) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond489) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond489) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond489) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond489) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond489) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond489) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond489) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond489) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond489) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond489) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond489) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond489) CFA_SP SP+-6
          CFI (cfiCond489) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond490 Using cfiCommon0
          CFI (cfiCond490) Function ZDO_ParseParentAnnce
          CFI (cfiCond490) Conditional ??CrossCallReturnLabel_518, ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_339
          CFI (cfiCond490) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond490) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond490) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond490) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond490) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond490) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond490) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond490) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond490) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond490) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond490) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond490) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond490) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond490) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond490) CFA_SP SP+-6
          CFI (cfiCond490) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond491 Using cfiCommon0
          CFI (cfiCond491) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond491) Conditional ??CrossCallReturnLabel_515, ??CrossCallReturnLabel_206
          CFI (cfiCond491) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond491) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond491) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond491) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond491) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond491) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond491) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond491) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond491) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond491) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond491) CFA_SP SP+-4
          CFI (cfiCond491) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond492 Using cfiCommon0
          CFI (cfiCond492) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond492) Conditional ??CrossCallReturnLabel_515, ??CrossCallReturnLabel_207
          CFI (cfiCond492) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond492) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond492) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond492) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond492) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond492) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond492) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond492) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond492) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond492) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond492) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond492) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond492) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond492) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond492) CFA_SP SP+-4
          CFI (cfiCond492) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond493 Using cfiCommon0
          CFI (cfiCond493) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond493) Conditional ??CrossCallReturnLabel_515, ??CrossCallReturnLabel_208
          CFI (cfiCond493) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond493) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond493) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond493) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond493) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond493) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond493) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond493) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond493) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond493) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond493) CFA_SP SP+-4
          CFI (cfiCond493) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond494 Using cfiCommon0
          CFI (cfiCond494) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond494) Conditional ??CrossCallReturnLabel_515, ??CrossCallReturnLabel_209
          CFI (cfiCond494) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond494) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond494) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond494) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond494) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond494) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond494) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond494) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond494) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond494) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond494) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond494) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond494) CFA_SP SP+-4
          CFI (cfiCond494) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond495 Using cfiCommon0
          CFI (cfiCond495) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond495) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_424
          CFI (cfiCond495) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond495) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond495) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond495) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond495) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond495) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond495) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond495) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond495) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond495) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond495) CFA_SP SP+-4
          CFI (cfiCond495) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond496 Using cfiCommon0
          CFI (cfiCond496) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond496) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_425
          CFI (cfiCond496) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond496) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond496) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond496) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond496) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond496) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond496) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond496) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond496) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond496) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond496) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond496) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond496) CFA_SP SP+-4
          CFI (cfiCond496) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond497 Using cfiCommon0
          CFI (cfiCond497) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond497) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_426
          CFI (cfiCond497) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond497) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond497) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond497) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond497) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond497) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond497) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond497) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond497) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond497) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond497) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond497) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond497) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond497) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond497) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond497) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond497) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond497) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond497) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond497) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond497) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond497) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond497) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond497) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond497) CFA_SP SP+-4
          CFI (cfiCond497) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond498 Using cfiCommon0
          CFI (cfiCond498) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond498) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_427
          CFI (cfiCond498) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond498) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond498) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond498) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond498) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond498) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond498) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond498) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond498) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond498) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond498) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond498) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond498) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond498) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond498) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond498) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond498) CFA_SP SP+-4
          CFI (cfiCond498) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond499 Using cfiCommon0
          CFI (cfiCond499) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond499) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_428
          CFI (cfiCond499) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond499) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond499) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond499) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond499) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond499) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond499) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond499) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond499) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond499) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond499) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond499) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond499) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond499) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond499) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond499) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond499) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond499) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond499) CFA_SP SP+-4
          CFI (cfiCond499) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond500 Using cfiCommon0
          CFI (cfiCond500) Function ZDO_ProcessUserDescSet
          CFI (cfiCond500) Conditional ??CrossCallReturnLabel_517, ??CrossCallReturnLabel_429
          CFI (cfiCond500) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond500) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond500) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond500) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond500) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond500) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond500) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond500) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond500) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond500) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond500) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond500) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond500) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond500) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond500) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond500) CFA_SP SP+-4
          CFI (cfiCond500) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond501 Using cfiCommon0
          CFI (cfiCond501) Function ZDO_ParseEPListRsp
          CFI (cfiCond501) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_147
          CFI (cfiCond501) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond501) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond501) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond501) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond501) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond501) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond501) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond501) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond501) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond501) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond501) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond501) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond501) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond501) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond501) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond501) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond501) CFA_SP SP+-6
          CFI (cfiCond501) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond502 Using cfiCommon0
          CFI (cfiCond502) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond502) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_148
          CFI (cfiCond502) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond502) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond502) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond502) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond502) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond502) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond502) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond502) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond502) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond502) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond502) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond502) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond502) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond502) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond502) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond502) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond502) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond502) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond502) CFA_SP SP+-6
          CFI (cfiCond502) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond503 Using cfiCommon0
          CFI (cfiCond503) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond503) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_210
          CFI (cfiCond503) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond503) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond503) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond503) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond503) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond503) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond503) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond503) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond503) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond503) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond503) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond503) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond503) CFA_SP SP+-6
          CFI (cfiCond503) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond504 Using cfiCommon0
          CFI (cfiCond504) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond504) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_211
          CFI (cfiCond504) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond504) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond504) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond504) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond504) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond504) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond504) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond504) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond504) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond504) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond504) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond504) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond504) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond504) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond504) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond504) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond504) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond504) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond504) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond504) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond504) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond504) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond504) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond504) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond504) CFA_SP SP+-6
          CFI (cfiCond504) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker505 Using cfiCommon1
          CFI (cfiPicker505) NoFunction
          CFI (cfiPicker505) Picker
        ADD       A,#0x13
        MOV       DPL,A
        CLR       A
        RET
          CFI EndBlock cfiCond479
          CFI EndBlock cfiCond480
          CFI EndBlock cfiCond481
          CFI EndBlock cfiCond482
          CFI EndBlock cfiCond483
          CFI EndBlock cfiCond484
          CFI EndBlock cfiCond485
          CFI EndBlock cfiCond486
          CFI EndBlock cfiCond487
          CFI EndBlock cfiCond488
          CFI EndBlock cfiCond489
          CFI EndBlock cfiCond490
          CFI EndBlock cfiCond491
          CFI EndBlock cfiCond492
          CFI EndBlock cfiCond493
          CFI EndBlock cfiCond494
          CFI EndBlock cfiCond495
          CFI EndBlock cfiCond496
          CFI EndBlock cfiCond497
          CFI EndBlock cfiCond498
          CFI EndBlock cfiCond499
          CFI EndBlock cfiCond500
          CFI EndBlock cfiCond501
          CFI EndBlock cfiCond502
          CFI EndBlock cfiCond503
          CFI EndBlock cfiCond504
          CFI EndBlock cfiPicker505

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine78:
          CFI Block cfiCond506 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_133
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond507 Using cfiCommon0
          CFI (cfiCond507) Function ZDO_ProcessUserDescSet
          CFI (cfiCond507) Conditional ??CrossCallReturnLabel_132
          CFI (cfiCond507) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond507) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond507) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond507) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond507) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond507) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond507) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond507) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond507) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond507) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond507) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond507) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond507) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond507) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond507) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond507) CFA_SP SP+-2
          CFI (cfiCond507) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiPicker508 Using cfiCommon1
          CFI (cfiPicker508) NoFunction
          CFI (cfiPicker508) Picker
        LCALL     ?Subroutine167 & 0xFFFF
??CrossCallReturnLabel_292:
        MOV       R4,A
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond506
          CFI EndBlock cfiCond507
          CFI EndBlock cfiPicker508

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine30:
          CFI Block cfiCond509 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLeaveReq
          CFI Conditional ??CrossCallReturnLabel_42
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond510 Using cfiCommon0
          CFI (cfiCond510) Function ZDO_ProcessUserDescSet
          CFI (cfiCond510) Conditional ??CrossCallReturnLabel_43
          CFI (cfiCond510) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond510) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond510) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond510) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond510) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond510) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond510) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond510) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond510) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond510) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond510) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond510) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond510) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond510) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond510) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond510) CFA_SP SP+-2
          CFI (cfiCond510) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond511 Using cfiCommon0
          CFI (cfiCond511) Function ZDMatchSendState
          CFI (cfiCond511) Conditional ??CrossCallReturnLabel_44
          CFI (cfiCond511) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond511) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond511) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond511) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond511) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond511) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond511) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond511) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond511) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond511) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond511) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond511) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond511) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond511) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond511) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond511) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond511) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond511) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond511) CFA_SP SP+-2
          CFI (cfiCond511) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker512 Using cfiCommon1
          CFI (cfiPicker512) NoFunction
          CFI (cfiPicker512) Picker
        MOVX      @DPTR,A
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        RET
          CFI EndBlock cfiCond509
          CFI EndBlock cfiCond510
          CFI EndBlock cfiCond511
          CFI EndBlock cfiPicker512
// 2122 
// 2123 /*********************************************************************
// 2124  * @fn          ZDO_ProcessDeviceAnnce
// 2125  *
// 2126  * @brief       This function processes a device annouce message.
// 2127  *
// 2128  * @param       inMsg - incoming message
// 2129  *
// 2130  * @return      none
// 2131  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2132 void ZDO_ProcessDeviceAnnce( zdoIncomingMsg_t *inMsg )
ZDO_ProcessDeviceAnnce:
          CFI Block cfiBlock513 Using cfiCommon0
          CFI Function ZDO_ProcessDeviceAnnce
        CODE
// 2133 {
        FUNCALL ZDO_ProcessDeviceAnnce, ZDO_ParseDeviceAnnce
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, nwkNeighborRemoveAllStranded
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, NLME_CheckNewAddrSet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, NLME_GetCoordExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, NLME_GetCoordShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, ZMacSetReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, NLME_GetShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AssocGetWithExt
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AssocRemove
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, RTG_RemoveRtgEntry
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, nwkNeighborRemove
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrEntryLookupNwk
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrExtAddrSet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrEntryUpdate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrExtAddrSet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrEntryLookupExt
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrEntryUpdate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 32
        MOV       A,#-0x20
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 42)
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
// 2134   ZDO_DeviceAnnce_t Annce;
// 2135   AddrMgrEntry_t addrEntry;
// 2136   uint8 parentExt[Z_EXTADDR_LEN];
// 2137 #if !defined (DISABLE_GREENPOWER_BASIC_PROXY) && (ZG_BUILD_RTR_TYPE)
// 2138   uint8 invalidIEEE[Z_EXTADDR_LEN] = {0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF};
// 2139 #endif
// 2140 
// 2141   if ( (_NIB.nwkState != NWK_ROUTER) && (_NIB.nwkState != NWK_ENDDEVICE) )
        MOV       DPTR,#_NIB + 35
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       A,#0x8
        XRL       A,R0
        JZ        ??ZDO_ProcessDeviceAnnce_0
        MOV       A,#0x4
        XRL       A,R0
        JZ        $+5
        LJMP      ??ZDO_ProcessDeviceAnnce_1 & 0xFFFF
// 2142   {
// 2143     // we aren抰 stable, ignore the message
// 2144     return;
// 2145   }
// 2146   
// 2147   // Parse incoming message
// 2148   ZDO_ParseDeviceAnnce( inMsg, &Annce );
??ZDO_ProcessDeviceAnnce_0:
        ; Setup parameters for call to function ZDO_ParseDeviceAnnce
        MOV       R4,?XSP + 0
        MOV       R5,?XSP + 1
        LCALL     `??ZDO_ParseDeviceAnnce::?relay`; Banked call to: ZDO_ParseDeviceAnnce
// 2149 
// 2150   if ( ZSTACK_END_DEVICE_BUILD )
// 2151   {
// 2152     // Make sure the message didn't come from myself - end device only
// 2153     if ( osal_ExtAddrEqual( NLME_GetExtAddr(), Annce.extAddr ) && Annce.nwkAddr == NLME_GetShortAddr() )
// 2154     {
// 2155       return;
// 2156     }
// 2157   }
// 2158 
// 2159 #if defined ( ZIGBEEPRO )
// 2160   // Clean up the neighbor table
// 2161   nwkNeighborRemoveAllStranded();
        ; Setup parameters for call to function nwkNeighborRemoveAllStranded
        LCALL     `??nwkNeighborRemoveAllStranded::?relay`; Banked call to: nwkNeighborRemoveAllStranded
// 2162 
// 2163   // If address conflict is detected, no need to update the address manager
// 2164   if ( NLME_CheckNewAddrSet( Annce.nwkAddr, Annce.extAddr )== ZFailure )
        ; Setup parameters for call to function NLME_CheckNewAddrSet
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOV       R4,DPL
        MOV       R5,DPH
        LCALL     ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_402:
        LCALL     `??NLME_CheckNewAddrSet::?relay`; Banked call to: NLME_CheckNewAddrSet
        MOV       A,R1
        XRL       A,#0x1
        JNZ       $+5
        LJMP      ??ZDO_ProcessDeviceAnnce_1 & 0xFFFF
// 2165   {
// 2166     return;
// 2167   }
// 2168 
// 2169   // Check for parent's address
// 2170   NLME_GetCoordExtAddr( parentExt );
        ; Setup parameters for call to function NLME_GetCoordExtAddr
        MOV       A,#0x18
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??NLME_GetCoordExtAddr::?relay`; Banked call to: NLME_GetCoordExtAddr
// 2171   if ( osal_ExtAddrEqual( parentExt, Annce.extAddr ) )
        ; Setup parameters for call to function sAddrExtCmp
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOV       R4,DPL
        MOV       R5,DPH
        MOV       A,#0x18
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??sAddrExtCmp::?relay`; Banked call to: sAddrExtCmp
        MOV       A,R1
        JZ        ??ZDO_ProcessDeviceAnnce_2
// 2172   {
// 2173     if ( Annce.nwkAddr != NLME_GetCoordShortAddr() )
        ; Setup parameters for call to function NLME_GetCoordShortAddr
        LCALL     `??NLME_GetCoordShortAddr::?relay`; Banked call to: NLME_GetCoordShortAddr
        MOV       ?V0,R2
        MOV       ?V1,R3
        MOV       R0,?V0
        MOV       R1,?V1
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      A,@DPTR
        XRL       A,R0
        JNZ       ??ZDO_ProcessDeviceAnnce_3
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R1
??ZDO_ProcessDeviceAnnce_3:
        JZ        ??ZDO_ProcessDeviceAnnce_2
// 2174     {
// 2175       // Set the Parent's MAC's new short address
// 2176       _NIB.nwkCoordAddress = Annce.nwkAddr;
        LCALL     ?Subroutine96 & 0xFFFF
??CrossCallReturnLabel_378:
        MOV       DPTR,#_NIB + 23
        LCALL     ??Subroutine245_0 & 0xFFFF
// 2177       ZMacSetReq( ZMacCoordShortAddress, (byte*)&(_NIB.nwkCoordAddress) );
??CrossCallReturnLabel_625:
        ; Setup parameters for call to function ZMacSetReq
        MOV       R2,#(_NIB + 23) & 0xff
        MOV       R3,#((_NIB + 23) >> 8) & 0xff
        MOV       R1,#0x4b
        LCALL     `??ZMacSetReq::?relay`; Banked call to: ZMacSetReq
// 2178     }
// 2179   }
// 2180 
// 2181   if ( ZSTACK_ROUTER_BUILD )
// 2182   {
// 2183     // If the device annce comes from a end device child that has moved
// 2184     // to another parent, remove it from associated device list
// 2185 
// 2186     // If the dev annce is coming from other device's children,
// 2187     // (The dev annce from its own children shall be unicast to itself,
// 2188     // So check the mac destination address)
// 2189     // Remove it from the associated device list. If it is not
// 2190     // a child, no action will be taken in AssocRemove() anyway.
// 2191     if ( inMsg->macDestAddr != NLME_GetShortAddr() )
??ZDO_ProcessDeviceAnnce_2:
        ; Setup parameters for call to function NLME_GetShortAddr
        LCALL     `??NLME_GetShortAddr::?relay`; Banked call to: NLME_GetShortAddr
        MOV       ?V0,R2
        MOV       ?V1,R3
        MOV       R0,?V0
        MOV       R1,?V1
        MOV       A,R6
        ADD       A,#0x11
        LCALL     ??Subroutine208_0 & 0xFFFF
??CrossCallReturnLabel_420:
        XRL       A,R0
        JNZ       ??ZDO_ProcessDeviceAnnce_4
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R1
??ZDO_ProcessDeviceAnnce_4:
        JZ        ??ZDO_ProcessDeviceAnnce_5
// 2192     {
// 2193       associated_devices_t *dev_ptr;
// 2194 
// 2195       // If it's an end device child
// 2196       dev_ptr = AssocGetWithExt( Annce.extAddr );
        ; Setup parameters for call to function AssocGetWithExt
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOV       R2,DPL
        MOV       R3,DPH
        LCALL     ?Subroutine146 & 0xFFFF
// 2197       if ( dev_ptr )
??CrossCallReturnLabel_264:
        JZ        ??ZDO_ProcessDeviceAnnce_6
// 2198       {
// 2199         if ( dev_ptr->nodeRelation == CHILD_RFD ||
// 2200              dev_ptr->nodeRelation == CHILD_RFD_RX_IDLE )
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       A,#0x1
        XRL       A,R0
        JZ        ??ZDO_ProcessDeviceAnnce_7
        MOV       A,#0x2
        XRL       A,R0
        JNZ       ??ZDO_ProcessDeviceAnnce_6
// 2201         {
// 2202           AssocRemove( Annce.extAddr );
??ZDO_ProcessDeviceAnnce_7:
        ; Setup parameters for call to function AssocRemove
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOV       R2,DPL
        MOV       R3,DPH
        LCALL     `??AssocRemove::?relay`; Banked call to: AssocRemove
// 2203         }
// 2204       }
// 2205 
// 2206       // Remove the address from the SrcMatch table,
// 2207       // just in case the device was aged out by Child Management Table process
// 2208       if ( ( pNwkNotMyChildListDelete != NULL ) &&
// 2209            ( zgChildAgingEnable == TRUE ) )
??ZDO_ProcessDeviceAnnce_6:
        MOV       DPTR,#pNwkNotMyChildListDelete
        LCALL     ??Subroutine213_0 & 0xFFFF
??CrossCallReturnLabel_436:
        JZ        ??ZDO_ProcessDeviceAnnce_5
        MOV       DPTR,#zgChildAgingEnable
        MOVX      A,@DPTR
        XRL       A,#0x1
        JNZ       ??ZDO_ProcessDeviceAnnce_5
// 2210       {
// 2211         pNwkNotMyChildListDelete( Annce.nwkAddr );
        ; Setup parameters for indirect call
        LCALL     ?Subroutine94 & 0xFFFF
// 2212       }
// 2213     }
// 2214   }
??CrossCallReturnLabel_403:
        MOV       DPTR,#pNwkNotMyChildListDelete + 1
        MOVX      A,@DPTR
        MOV       DPH,A
        MOV       DPL,R0
        LCALL     ?CALL_IND
// 2215 
// 2216   // Assume that the device has moved, remove existing routing entries
// 2217   RTG_RemoveRtgEntry( Annce.nwkAddr, 0 );
??ZDO_ProcessDeviceAnnce_5:
        ; Setup parameters for call to function RTG_RemoveRtgEntry
        MOV       R1,#0x0
        LCALL     ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_404:
        LCALL     `??RTG_RemoveRtgEntry::?relay`; Banked call to: RTG_RemoveRtgEntry
// 2218 
// 2219   // Remove entry from neighborTable
// 2220   nwkNeighborRemove( Annce.nwkAddr, _NIB.nwkPanId );
        ; Setup parameters for call to function nwkNeighborRemove
        LCALL     ?Subroutine98 & 0xFFFF
??CrossCallReturnLabel_391:
        LCALL     ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_405:
        LCALL     `??nwkNeighborRemove::?relay`; Banked call to: nwkNeighborRemove
// 2221 
// 2222 #endif // ZIGBEEPRO
// 2223 
// 2224   // Fill in the extended address in address manager if we don't have it already.
// 2225   addrEntry.user = ADDRMGR_USER_DEFAULT;
        MOV       A,#0xb
        LCALL     ?XSTACK_DISP0_8
        CLR       A
        LCALL     ?Subroutine27 & 0xFFFF
// 2226   addrEntry.nwkAddr = Annce.nwkAddr;
??CrossCallReturnLabel_37:
        MOV       R1,A
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine245_0 & 0xFFFF
// 2227   if ( AddrMgrEntryLookupNwk( &addrEntry ) )
??CrossCallReturnLabel_626:
        ; Setup parameters for call to function AddrMgrEntryLookupNwk
        MOV       A,#0xb
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??AddrMgrEntryLookupNwk::?relay`; Banked call to: AddrMgrEntryLookupNwk
        MOV       A,R1
        JZ        ??ZDO_ProcessDeviceAnnce_8
// 2228   {
// 2229     osal_memset( parentExt, 0, Z_EXTADDR_LEN );
        ; Setup parameters for call to function osal_memset
        MOV       R4,#0x8
        MOV       R5,#0x0
        MOV       R1,#0x0
        MOV       A,#0x18
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??osal_memset::?relay`; Banked call to: osal_memset
// 2230     if ( osal_ExtAddrEqual( parentExt, addrEntry.extAddr ) )
        ; Setup parameters for call to function sAddrExtCmp
        MOV       A,#0xe
        LCALL     ?XSTACK_DISP0_8
        MOV       R4,DPL
        MOV       R5,DPH
        MOV       A,#0x18
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??sAddrExtCmp::?relay`; Banked call to: sAddrExtCmp
        MOV       A,R1
        JZ        ??ZDO_ProcessDeviceAnnce_8
// 2231     {
// 2232       AddrMgrExtAddrSet( addrEntry.extAddr, Annce.extAddr );
        ; Setup parameters for call to function AddrMgrExtAddrSet
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOV       R4,DPL
        MOV       R5,DPH
        MOV       A,#0xe
        LCALL     ?XSTACK_DISP0_8
        MOV       R2,DPL
        MOV       R3,DPH
        LCALL     `??AddrMgrExtAddrSet::?relay`; Banked call to: AddrMgrExtAddrSet
// 2233       AddrMgrEntryUpdate( &addrEntry );
        ; Setup parameters for call to function AddrMgrEntryUpdate
        MOV       A,#0xb
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??AddrMgrEntryUpdate::?relay`; Banked call to: AddrMgrEntryUpdate
// 2234     }
// 2235   }
// 2236 
// 2237   // Update the short address in address manager if it's been changed
// 2238   AddrMgrExtAddrSet( addrEntry.extAddr, Annce.extAddr );
??ZDO_ProcessDeviceAnnce_8:
        ; Setup parameters for call to function AddrMgrExtAddrSet
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOV       R4,DPL
        MOV       R5,DPH
        MOV       A,#0xe
        LCALL     ?XSTACK_DISP0_8
        MOV       R2,DPL
        MOV       R3,DPH
        LCALL     `??AddrMgrExtAddrSet::?relay`; Banked call to: AddrMgrExtAddrSet
// 2239   if ( AddrMgrEntryLookupExt( &addrEntry ) )
        ; Setup parameters for call to function AddrMgrEntryLookupExt
        MOV       A,#0xb
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??AddrMgrEntryLookupExt::?relay`; Banked call to: AddrMgrEntryLookupExt
        MOV       A,R1
        JZ        ??ZDO_ProcessDeviceAnnce_1
// 2240   {
// 2241     if ( addrEntry.nwkAddr != Annce.nwkAddr )
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine201_0 & 0xFFFF
??CrossCallReturnLabel_375:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      A,@DPTR
        XRL       A,R0
        JNZ       ??ZDO_ProcessDeviceAnnce_9
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R1
??ZDO_ProcessDeviceAnnce_9:
        JZ        ??ZDO_ProcessDeviceAnnce_1
// 2242     {
// 2243       addrEntry.nwkAddr = Annce.nwkAddr;
        LCALL     ?Subroutine96 & 0xFFFF
??CrossCallReturnLabel_379:
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine245_0 & 0xFFFF
// 2244       AddrMgrEntryUpdate( &addrEntry );
??CrossCallReturnLabel_627:
        ; Setup parameters for call to function AddrMgrEntryUpdate
        MOV       A,#0xb
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??AddrMgrEntryUpdate::?relay`; Banked call to: AddrMgrEntryUpdate
// 2245     }
// 2246   }
// 2247 
// 2248 #if !defined (DISABLE_GREENPOWER_BASIC_PROXY) && (ZG_BUILD_RTR_TYPE)
// 2249   if(ZG_DEVICE_RTR_TYPE)
// 2250   {
// 2251     uint32 timeout;
// 2252     uint8 invalidAddr;
// 2253     uint8 sameAnnce;
// 2254     
// 2255     timeout = osal_get_timeoutEx( gp_TaskID, GP_PROXY_ALIAS_CONFLICT_TIMEOUT );
// 2256     invalidAddr = osal_memcmp( Annce.extAddr, invalidIEEE, Z_EXTADDR_LEN );
// 2257     sameAnnce = osal_memcmp( &Annce, &GP_aliasConflictAnnce, sizeof( ZDO_DeviceAnnce_t ) );
// 2258         
// 2259     // Check GP proxy table to update the entry if necesary
// 2260     if( timeout && ( invalidAddr && sameAnnce ) )
// 2261     {
// 2262       osal_stop_timerEx( gp_TaskID, GP_PROXY_ALIAS_CONFLICT_TIMEOUT );
// 2263     }
// 2264     else if(GP_CheckAnnouncedDeviceGCB != NULL)
// 2265     {
// 2266       GP_CheckAnnouncedDeviceGCB( Annce.extAddr, Annce.nwkAddr );       
// 2267     }
// 2268   }
// 2269 #endif
// 2270 }
??ZDO_ProcessDeviceAnnce_1:
        MOV       A,#0x20
        LJMP      ??Subroutine188_0 & 0xFFFF
          CFI EndBlock cfiBlock513

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine54:
          CFI Block cfiCond514 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_439
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond515 Using cfiCommon0
          CFI (cfiCond515) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond515) Conditional ??CrossCallReturnLabel_440
          CFI (cfiCond515) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond515) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond515) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond515) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond515) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond515) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond515) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond515) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond515) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond515) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond515) CFA_SP SP+-2
          CFI (cfiCond515) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker516 Using cfiCommon1
          CFI (cfiPicker516) NoFunction
          CFI (cfiPicker516) Picker
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
          CFI EndBlock cfiCond514
          CFI EndBlock cfiCond515
          CFI EndBlock cfiPicker516
        REQUIRE ??Subroutine213_0
        ; // Fall through to label ??Subroutine213_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine213_0:
          CFI Block cfiCond517 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
          CFI Conditional ??CrossCallReturnLabel_430
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond518 Using cfiCommon0
          CFI (cfiCond518) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond518) Conditional ??CrossCallReturnLabel_431
          CFI (cfiCond518) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond518) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond518) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond518) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond518) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond518) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond518) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond518) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond518) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond518) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond518) CFA_SP SP+-2
          CFI (cfiCond518) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond519 Using cfiCommon0
          CFI (cfiCond519) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond519) Conditional ??CrossCallReturnLabel_432
          CFI (cfiCond519) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond519) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond519) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond519) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond519) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond519) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond519) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond519) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond519) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond519) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond519) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond519) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond519) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond519) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond519) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond519) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond519) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond519) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond519) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond519) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond519) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond519) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond519) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond519) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond519) CFA_SP SP+-2
          CFI (cfiCond519) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond520 Using cfiCommon0
          CFI (cfiCond520) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond520) Conditional ??CrossCallReturnLabel_433
          CFI (cfiCond520) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond520) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond520) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond520) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond520) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond520) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond520) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond520) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond520) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond520) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond520) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond520) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond520) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond520) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond520) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond520) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond520) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond520) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond520) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond520) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond520) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond520) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond520) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond520) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond520) CFA_SP SP+-2
          CFI (cfiCond520) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond521 Using cfiCommon0
          CFI (cfiCond521) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond521) Conditional ??CrossCallReturnLabel_434
          CFI (cfiCond521) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond521) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond521) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond521) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond521) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond521) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond521) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond521) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond521) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond521) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond521) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond521) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond521) CFA_SP SP+-2
          CFI (cfiCond521) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond522 Using cfiCommon0
          CFI (cfiCond522) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond522) Conditional ??CrossCallReturnLabel_435
          CFI (cfiCond522) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond522) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond522) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond522) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond522) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond522) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond522) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond522) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond522) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond522) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond522) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond522) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond522) CFA_SP SP+-2
          CFI (cfiCond522) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond523 Using cfiCommon0
          CFI (cfiCond523) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond523) Conditional ??CrossCallReturnLabel_436
          CFI (cfiCond523) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond523) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond523) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond523) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond523) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond523) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond523) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond523) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond523) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond523) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond523) CFA_SP SP+-2
          CFI (cfiCond523) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond524 Using cfiCommon0
          CFI (cfiCond524) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond524) Conditional ??CrossCallReturnLabel_437
          CFI (cfiCond524) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond524) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond524) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond524) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond524) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond524) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond524) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond524) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond524) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond524) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond524) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond524) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond524) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond524) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond524) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond524) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond524) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond524) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond524) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond524) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond524) CFA_SP SP+-2
          CFI (cfiCond524) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond525 Using cfiCommon0
          CFI (cfiCond525) Function ZDO_RemoveMatchMemory
          CFI (cfiCond525) Conditional ??CrossCallReturnLabel_438
          CFI (cfiCond525) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond525) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond525) CFA_SP SP+-7
          CFI Block cfiCond526 Using cfiCommon0
          CFI (cfiCond526) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond526) Conditional ??CrossCallReturnLabel_439
          CFI (cfiCond526) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond526) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond526) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond526) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond526) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond526) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond526) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond526) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond526) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond526) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond526) CFA_SP SP+-2
          CFI (cfiCond526) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond527 Using cfiCommon0
          CFI (cfiCond527) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond527) Conditional ??CrossCallReturnLabel_440
          CFI (cfiCond527) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond527) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond527) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond527) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond527) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond527) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond527) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond527) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond527) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond527) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond527) CFA_SP SP+-2
          CFI (cfiCond527) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker528 Using cfiCommon1
          CFI (cfiPicker528) NoFunction
          CFI (cfiPicker528) Picker
        LCALL     ?Subroutine168 & 0xFFFF
??CrossCallReturnLabel_473:
        MOV       A,R0
        ORL       A,R1
        RET
          CFI EndBlock cfiCond517
          CFI EndBlock cfiCond518
          CFI EndBlock cfiCond519
          CFI EndBlock cfiCond520
          CFI EndBlock cfiCond521
          CFI EndBlock cfiCond522
          CFI EndBlock cfiCond523
          CFI EndBlock cfiCond524
          CFI EndBlock cfiCond525
          CFI EndBlock cfiCond526
          CFI EndBlock cfiCond527
          CFI EndBlock cfiPicker528

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine27:
          CFI Block cfiCond529 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_36
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond530 Using cfiCommon0
          CFI (cfiCond530) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond530) Conditional ??CrossCallReturnLabel_37
          CFI (cfiCond530) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond530) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond530) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond530) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond530) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond530) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond530) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond530) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond530) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond530) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond530) CFA_SP SP+-2
          CFI (cfiCond530) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker531 Using cfiCommon1
          CFI (cfiPicker531) NoFunction
          CFI (cfiPicker531) Picker
        MOVX      @DPTR,A
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ?Subroutine181 & 0xFFFF
??CrossCallReturnLabel_524:
        RET
          CFI EndBlock cfiCond529
          CFI EndBlock cfiCond530
          CFI EndBlock cfiPicker531

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine181:
          CFI Block cfiCond532 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_528, ??CrossCallReturnLabel_319, ??CrossCallReturnLabel_314
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond533 Using cfiCommon0
          CFI (cfiCond533) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond533) Conditional ??CrossCallReturnLabel_528, ??CrossCallReturnLabel_319, ??CrossCallReturnLabel_315
          CFI (cfiCond533) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond533) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond533) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond533) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond533) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond533) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond533) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond533) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond533) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond533) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond533) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond533) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond533) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond533) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond533) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond533) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond533) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond533) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond533) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond533) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond533) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond533) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond533) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond533) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond533) CFA_SP SP+-6
          CFI (cfiCond533) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond534 Using cfiCommon0
          CFI (cfiCond534) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond534) Conditional ??CrossCallReturnLabel_528, ??CrossCallReturnLabel_319, ??CrossCallReturnLabel_312
          CFI (cfiCond534) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond534) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond534) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond534) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond534) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond534) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond534) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond534) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond534) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond534) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond534) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond534) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond534) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond534) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond534) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond534) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond534) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond534) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond534) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond534) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond534) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond534) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond534) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond534) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond534) CFA_SP SP+-6
          CFI (cfiCond534) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond535 Using cfiCommon0
          CFI (cfiCond535) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond535) Conditional ??CrossCallReturnLabel_528, ??CrossCallReturnLabel_319, ??CrossCallReturnLabel_313
          CFI (cfiCond535) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond535) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond535) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond535) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond535) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond535) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond535) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond535) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond535) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond535) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond535) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond535) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond535) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond535) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond535) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond535) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond535) CFA_SP SP+-6
          CFI (cfiCond535) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond536 Using cfiCommon0
          CFI (cfiCond536) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond536) Conditional ??CrossCallReturnLabel_528, ??CrossCallReturnLabel_317, ??CrossCallReturnLabel_88
          CFI (cfiCond536) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond536) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond536) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond536) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond536) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond536) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond536) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond536) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond536) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond536) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond536) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond536) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond536) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond536) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond536) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond536) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond536) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond536) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond536) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond536) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond536) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond536) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond536) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond536) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond536) CFA_SP SP+-6
          CFI (cfiCond536) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond537 Using cfiCommon0
          CFI (cfiCond537) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond537) Conditional ??CrossCallReturnLabel_528, ??CrossCallReturnLabel_317, ??CrossCallReturnLabel_89
          CFI (cfiCond537) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond537) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond537) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond537) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond537) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond537) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond537) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond537) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond537) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond537) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond537) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond537) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond537) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond537) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond537) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond537) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond537) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond537) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond537) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond537) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond537) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond537) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond537) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond537) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond537) CFA_SP SP+-6
          CFI (cfiCond537) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond538 Using cfiCommon0
          CFI (cfiCond538) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond538) Conditional ??CrossCallReturnLabel_528, ??CrossCallReturnLabel_317, ??CrossCallReturnLabel_90
          CFI (cfiCond538) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond538) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond538) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond538) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond538) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond538) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond538) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond538) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond538) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond538) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond538) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond538) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond538) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond538) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond538) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond538) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond538) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond538) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond538) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond538) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond538) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond538) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond538) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond538) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond538) CFA_SP SP+-6
          CFI (cfiCond538) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond539 Using cfiCommon0
          CFI (cfiCond539) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond539) Conditional ??CrossCallReturnLabel_528, ??CrossCallReturnLabel_317, ??CrossCallReturnLabel_91
          CFI (cfiCond539) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond539) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond539) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond539) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond539) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond539) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond539) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond539) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond539) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond539) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond539) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond539) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond539) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond539) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond539) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond539) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond539) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond539) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond539) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond539) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond539) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond539) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond539) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond539) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond539) CFA_SP SP+-6
          CFI (cfiCond539) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond540 Using cfiCommon0
          CFI (cfiCond540) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond540) Conditional ??CrossCallReturnLabel_528, ??CrossCallReturnLabel_316, ??CrossCallReturnLabel_84
          CFI (cfiCond540) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond540) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond540) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond540) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond540) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond540) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond540) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond540) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond540) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond540) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond540) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond540) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond540) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond540) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond540) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond540) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond540) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond540) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond540) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond540) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond540) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond540) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond540) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond540) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond540) CFA_SP SP+-6
          CFI (cfiCond540) CFA_XSP16 add(XSP16, 39)
          CFI Block cfiCond541 Using cfiCommon0
          CFI (cfiCond541) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond541) Conditional ??CrossCallReturnLabel_528, ??CrossCallReturnLabel_316, ??CrossCallReturnLabel_85
          CFI (cfiCond541) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond541) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond541) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond541) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond541) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond541) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond541) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond541) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond541) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond541) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond541) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond541) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond541) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond541) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond541) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond541) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond541) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond541) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond541) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond541) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond541) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond541) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond541) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond541) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond541) CFA_SP SP+-6
          CFI (cfiCond541) CFA_XSP16 add(XSP16, 39)
          CFI Block cfiCond542 Using cfiCommon0
          CFI (cfiCond542) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond542) Conditional ??CrossCallReturnLabel_528, ??CrossCallReturnLabel_316, ??CrossCallReturnLabel_86
          CFI (cfiCond542) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond542) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond542) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond542) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond542) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond542) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond542) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond542) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond542) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond542) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond542) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond542) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond542) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond542) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond542) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond542) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond542) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond542) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond542) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond542) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond542) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond542) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond542) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond542) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond542) CFA_SP SP+-6
          CFI (cfiCond542) CFA_XSP16 add(XSP16, 39)
          CFI Block cfiCond543 Using cfiCommon0
          CFI (cfiCond543) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond543) Conditional ??CrossCallReturnLabel_528, ??CrossCallReturnLabel_316, ??CrossCallReturnLabel_87
          CFI (cfiCond543) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond543) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond543) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond543) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond543) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond543) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond543) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond543) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond543) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond543) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond543) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond543) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond543) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond543) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond543) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond543) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond543) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond543) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond543) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond543) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond543) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond543) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond543) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond543) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond543) CFA_SP SP+-6
          CFI (cfiCond543) CFA_XSP16 add(XSP16, 39)
          CFI Block cfiCond544 Using cfiCommon0
          CFI (cfiCond544) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond544) Conditional ??CrossCallReturnLabel_528, ??CrossCallReturnLabel_318, ??CrossCallReturnLabel_145
          CFI (cfiCond544) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond544) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond544) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond544) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond544) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond544) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond544) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond544) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond544) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond544) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond544) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond544) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond544) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond544) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond544) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond544) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond544) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond544) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond544) CFA_SP SP+-6
          CFI (cfiCond544) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond545 Using cfiCommon0
          CFI (cfiCond545) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond545) Conditional ??CrossCallReturnLabel_528, ??CrossCallReturnLabel_318, ??CrossCallReturnLabel_146
          CFI (cfiCond545) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond545) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond545) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond545) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond545) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond545) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond545) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond545) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond545) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond545) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond545) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond545) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond545) CFA_SP SP+-6
          CFI (cfiCond545) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond546 Using cfiCommon0
          CFI (cfiCond546) Function ZDO_ParseUserDescRsp
          CFI (cfiCond546) Conditional ??CrossCallReturnLabel_529, ??CrossCallReturnLabel_331
          CFI (cfiCond546) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond546) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond546) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond546) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond546) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond546) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond546) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond546) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond546) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond546) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond546) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond546) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond546) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond546) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond546) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond546) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond546) CFA_SP SP+-4
          CFI (cfiCond546) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond547 Using cfiCommon0
          CFI (cfiCond547) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond547) Conditional ??CrossCallReturnLabel_529, ??CrossCallReturnLabel_332
          CFI (cfiCond547) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond547) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond547) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond547) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond547) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond547) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond547) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond547) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond547) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond547) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond547) CFA_SP SP+-4
          CFI (cfiCond547) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond548 Using cfiCommon0
          CFI (cfiCond548) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond548) Conditional ??CrossCallReturnLabel_529, ??CrossCallReturnLabel_330
          CFI (cfiCond548) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond548) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond548) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond548) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond548) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond548) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond548) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond548) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond548) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond548) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond548) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond548) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond548) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond548) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond548) CFA_SP SP+-4
          CFI (cfiCond548) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond549 Using cfiCommon0
          CFI (cfiCond549) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond549) Conditional ??CrossCallReturnLabel_529, ??CrossCallReturnLabel_327
          CFI (cfiCond549) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond549) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond549) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond549) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond549) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond549) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond549) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond549) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond549) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond549) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond549) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond549) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond549) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond549) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond549) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond549) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond549) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond549) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond549) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond549) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond549) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond549) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond549) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond549) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond549) CFA_SP SP+-4
          CFI (cfiCond549) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond550 Using cfiCommon0
          CFI (cfiCond550) Function ZDO_ProcessParentAnnce
          CFI (cfiCond550) Conditional ??CrossCallReturnLabel_529, ??CrossCallReturnLabel_328
          CFI (cfiCond550) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond550) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond550) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond550) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond550) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond550) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond550) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond550) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond550) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond550) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond550) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond550) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond550) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond550) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond550) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond550) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond550) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond550) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond550) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond550) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond550) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond550) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond550) CFA_SP SP+-4
          CFI (cfiCond550) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond551 Using cfiCommon0
          CFI (cfiCond551) Function ZDMatchSendState
          CFI (cfiCond551) Conditional ??CrossCallReturnLabel_529, ??CrossCallReturnLabel_329
          CFI (cfiCond551) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond551) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond551) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond551) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond551) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond551) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond551) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond551) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond551) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond551) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond551) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond551) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond551) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond551) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond551) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond551) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond551) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond551) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond551) CFA_SP SP+-4
          CFI (cfiCond551) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond552 Using cfiCommon0
          CFI (cfiCond552) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond552) Conditional ??CrossCallReturnLabel_525, ??CrossCallReturnLabel_79
          CFI (cfiCond552) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond552) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond552) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond552) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond552) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond552) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond552) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond552) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond552) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond552) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond552) CFA_SP SP+-4
          CFI (cfiCond552) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond553 Using cfiCommon0
          CFI (cfiCond553) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond553) Conditional ??CrossCallReturnLabel_525, ??CrossCallReturnLabel_78
          CFI (cfiCond553) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond553) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond553) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond553) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond553) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond553) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond553) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond553) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond553) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond553) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond553) CFA_SP SP+-4
          CFI (cfiCond553) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond554 Using cfiCommon0
          CFI (cfiCond554) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond554) Conditional ??CrossCallReturnLabel_530, ??CrossCallReturnLabel_472, ??CrossCallReturnLabel_377
          CFI (cfiCond554) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond554) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond554) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond554) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond554) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond554) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond554) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond554) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond554) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond554) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond554) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond554) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond554) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond554) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond554) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond554) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond554) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond554) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond554) CFA_SP SP+-6
          CFI (cfiCond554) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond555 Using cfiCommon0
          CFI (cfiCond555) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond555) Conditional ??CrossCallReturnLabel_530, ??CrossCallReturnLabel_472, ??CrossCallReturnLabel_378
          CFI (cfiCond555) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond555) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond555) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond555) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond555) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond555) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond555) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond555) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond555) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond555) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond555) CFA_SP SP+-6
          CFI (cfiCond555) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond556 Using cfiCommon0
          CFI (cfiCond556) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond556) Conditional ??CrossCallReturnLabel_530, ??CrossCallReturnLabel_472, ??CrossCallReturnLabel_379
          CFI (cfiCond556) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond556) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond556) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond556) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond556) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond556) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond556) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond556) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond556) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond556) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond556) CFA_SP SP+-6
          CFI (cfiCond556) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond557 Using cfiCommon0
          CFI (cfiCond557) Function ZDO_UpdateNwkStatus
          CFI (cfiCond557) Conditional ??CrossCallReturnLabel_530, ??CrossCallReturnLabel_472, ??CrossCallReturnLabel_367
          CFI (cfiCond557) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond557) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond557) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond557) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond557) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond557) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond557) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond557) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond557) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond557) CFA_SP SP+-6
          CFI (cfiCond557) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond558 Using cfiCommon0
          CFI (cfiCond558) Function ZDO_CompareClusterLists
          CFI (cfiCond558) Conditional ??CrossCallReturnLabel_530, ??CrossCallReturnLabel_472, ??CrossCallReturnLabel_368
          CFI (cfiCond558) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond558) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond558) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond558) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond558) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond558) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond558) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond558) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond558) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond558) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond558) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond558) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond558) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond558) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond558) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond558) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond558) CFA_SP SP+-6
          CFI (cfiCond558) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond559 Using cfiCommon0
          CFI (cfiCond559) Function ZDO_AnyClusterMatches
          CFI (cfiCond559) Conditional ??CrossCallReturnLabel_530, ??CrossCallReturnLabel_472, ??CrossCallReturnLabel_369
          CFI (cfiCond559) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond559) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond559) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond559) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond559) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond559) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond559) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond559) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond559) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond559) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond559) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond559) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond559) CFA_SP SP+-6
          CFI (cfiCond559) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond560 Using cfiCommon0
          CFI (cfiCond560) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond560) Conditional ??CrossCallReturnLabel_530, ??CrossCallReturnLabel_472, ??CrossCallReturnLabel_370
          CFI (cfiCond560) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond560) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond560) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond560) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond560) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond560) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond560) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond560) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond560) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond560) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond560) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond560) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond560) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond560) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond560) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond560) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond560) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond560) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond560) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond560) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond560) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond560) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond560) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond560) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond560) CFA_SP SP+-6
          CFI (cfiCond560) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond561 Using cfiCommon0
          CFI (cfiCond561) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond561) Conditional ??CrossCallReturnLabel_530, ??CrossCallReturnLabel_472, ??CrossCallReturnLabel_371
          CFI (cfiCond561) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond561) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond561) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond561) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond561) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond561) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond561) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond561) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond561) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond561) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond561) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond561) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond561) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond561) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond561) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond561) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond561) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond561) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond561) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond561) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond561) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond561) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond561) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond561) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond561) CFA_SP SP+-6
          CFI (cfiCond561) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond562 Using cfiCommon0
          CFI (cfiCond562) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond562) Conditional ??CrossCallReturnLabel_530, ??CrossCallReturnLabel_472, ??CrossCallReturnLabel_372
          CFI (cfiCond562) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond562) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond562) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond562) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond562) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond562) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond562) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond562) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond562) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond562) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond562) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond562) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond562) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond562) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond562) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond562) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond562) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond562) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond562) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond562) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond562) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond562) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond562) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond562) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond562) CFA_SP SP+-6
          CFI (cfiCond562) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond563 Using cfiCommon0
          CFI (cfiCond563) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond563) Conditional ??CrossCallReturnLabel_530, ??CrossCallReturnLabel_472, ??CrossCallReturnLabel_373
          CFI (cfiCond563) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond563) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond563) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond563) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond563) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond563) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond563) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond563) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond563) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond563) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond563) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond563) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond563) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond563) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond563) CFA_SP SP+-6
          CFI (cfiCond563) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond564 Using cfiCommon0
          CFI (cfiCond564) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond564) Conditional ??CrossCallReturnLabel_530, ??CrossCallReturnLabel_472, ??CrossCallReturnLabel_374
          CFI (cfiCond564) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond564) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond564) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond564) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond564) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond564) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond564) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond564) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond564) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond564) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond564) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond564) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond564) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond564) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond564) CFA_SP SP+-6
          CFI (cfiCond564) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond565 Using cfiCommon0
          CFI (cfiCond565) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond565) Conditional ??CrossCallReturnLabel_530, ??CrossCallReturnLabel_472, ??CrossCallReturnLabel_375
          CFI (cfiCond565) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond565) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond565) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond565) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond565) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond565) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond565) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond565) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond565) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond565) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond565) CFA_SP SP+-6
          CFI (cfiCond565) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond566 Using cfiCommon0
          CFI (cfiCond566) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond566) Conditional ??CrossCallReturnLabel_530, ??CrossCallReturnLabel_472, ??CrossCallReturnLabel_376
          CFI (cfiCond566) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond566) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond566) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond566) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond566) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond566) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond566) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond566) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond566) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond566) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond566) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond566) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond566) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond566) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond566) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond566) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond566) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond566) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond566) CFA_SP SP+-6
          CFI (cfiCond566) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond567 Using cfiCommon0
          CFI (cfiCond567) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond567) Conditional ??CrossCallReturnLabel_530, ??CrossCallReturnLabel_469, ??CrossCallReturnLabel_10
          CFI (cfiCond567) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond567) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond567) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond567) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond567) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond567) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond567) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond567) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond567) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond567) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond567) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond567) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond567) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond567) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond567) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond567) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond567) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond567) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond567) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond567) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond567) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond567) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond567) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond567) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond567) CFA_SP SP+-6
          CFI (cfiCond567) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond568 Using cfiCommon0
          CFI (cfiCond568) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond568) Conditional ??CrossCallReturnLabel_530, ??CrossCallReturnLabel_469, ??CrossCallReturnLabel_11
          CFI (cfiCond568) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond568) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond568) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond568) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond568) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond568) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond568) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond568) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond568) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond568) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond568) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond568) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond568) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond568) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond568) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond568) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond568) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond568) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond568) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond568) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond568) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond568) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond568) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond568) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond568) CFA_SP SP+-6
          CFI (cfiCond568) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond569 Using cfiCommon0
          CFI (cfiCond569) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond569) Conditional ??CrossCallReturnLabel_530, ??CrossCallReturnLabel_471, ??CrossCallReturnLabel_160
          CFI (cfiCond569) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond569) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond569) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond569) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond569) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond569) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond569) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond569) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond569) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond569) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond569) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond569) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond569) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond569) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond569) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond569) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond569) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond569) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond569) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond569) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond569) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond569) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond569) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond569) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond569) CFA_SP SP+-6
          CFI (cfiCond569) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond570 Using cfiCommon0
          CFI (cfiCond570) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond570) Conditional ??CrossCallReturnLabel_530, ??CrossCallReturnLabel_471, ??CrossCallReturnLabel_161
          CFI (cfiCond570) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond570) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond570) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond570) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond570) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond570) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond570) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond570) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond570) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond570) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond570) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond570) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond570) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond570) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond570) CFA_SP SP+-6
          CFI (cfiCond570) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond571 Using cfiCommon0
          CFI (cfiCond571) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond571) Conditional ??CrossCallReturnLabel_530, ??CrossCallReturnLabel_473, ??CrossCallReturnLabel_439
          CFI (cfiCond571) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond571) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond571) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond571) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond571) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond571) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond571) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond571) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond571) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond571) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond571) CFA_SP SP+-6
          CFI (cfiCond571) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond572 Using cfiCommon0
          CFI (cfiCond572) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond572) Conditional ??CrossCallReturnLabel_530, ??CrossCallReturnLabel_473, ??CrossCallReturnLabel_440
          CFI (cfiCond572) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond572) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond572) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond572) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond572) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond572) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond572) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond572) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond572) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond572) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond572) CFA_SP SP+-6
          CFI (cfiCond572) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond573 Using cfiCommon0
          CFI (cfiCond573) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond573) Conditional ??CrossCallReturnLabel_530, ??CrossCallReturnLabel_473, ??CrossCallReturnLabel_430
          CFI (cfiCond573) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond573) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond573) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond573) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond573) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond573) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond573) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond573) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond573) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond573) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond573) CFA_SP SP+-6
          CFI (cfiCond573) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond574 Using cfiCommon0
          CFI (cfiCond574) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond574) Conditional ??CrossCallReturnLabel_530, ??CrossCallReturnLabel_473, ??CrossCallReturnLabel_431
          CFI (cfiCond574) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond574) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond574) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond574) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond574) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond574) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond574) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond574) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond574) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond574) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond574) CFA_SP SP+-6
          CFI (cfiCond574) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond575 Using cfiCommon0
          CFI (cfiCond575) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond575) Conditional ??CrossCallReturnLabel_530, ??CrossCallReturnLabel_473, ??CrossCallReturnLabel_432
          CFI (cfiCond575) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond575) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond575) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond575) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond575) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond575) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond575) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond575) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond575) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond575) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond575) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond575) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond575) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond575) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond575) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond575) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond575) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond575) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond575) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond575) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond575) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond575) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond575) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond575) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond575) CFA_SP SP+-6
          CFI (cfiCond575) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond576 Using cfiCommon0
          CFI (cfiCond576) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond576) Conditional ??CrossCallReturnLabel_530, ??CrossCallReturnLabel_473, ??CrossCallReturnLabel_433
          CFI (cfiCond576) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond576) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond576) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond576) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond576) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond576) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond576) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond576) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond576) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond576) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond576) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond576) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond576) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond576) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond576) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond576) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond576) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond576) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond576) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond576) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond576) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond576) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond576) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond576) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond576) CFA_SP SP+-6
          CFI (cfiCond576) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond577 Using cfiCommon0
          CFI (cfiCond577) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond577) Conditional ??CrossCallReturnLabel_530, ??CrossCallReturnLabel_473, ??CrossCallReturnLabel_434
          CFI (cfiCond577) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond577) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond577) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond577) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond577) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond577) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond577) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond577) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond577) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond577) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond577) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond577) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond577) CFA_SP SP+-6
          CFI (cfiCond577) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond578 Using cfiCommon0
          CFI (cfiCond578) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond578) Conditional ??CrossCallReturnLabel_530, ??CrossCallReturnLabel_473, ??CrossCallReturnLabel_435
          CFI (cfiCond578) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond578) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond578) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond578) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond578) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond578) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond578) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond578) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond578) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond578) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond578) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond578) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond578) CFA_SP SP+-6
          CFI (cfiCond578) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond579 Using cfiCommon0
          CFI (cfiCond579) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond579) Conditional ??CrossCallReturnLabel_530, ??CrossCallReturnLabel_473, ??CrossCallReturnLabel_436
          CFI (cfiCond579) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond579) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond579) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond579) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond579) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond579) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond579) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond579) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond579) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond579) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond579) CFA_SP SP+-6
          CFI (cfiCond579) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond580 Using cfiCommon0
          CFI (cfiCond580) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond580) Conditional ??CrossCallReturnLabel_530, ??CrossCallReturnLabel_473, ??CrossCallReturnLabel_437
          CFI (cfiCond580) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond580) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond580) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond580) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond580) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond580) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond580) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond580) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond580) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond580) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond580) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond580) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond580) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond580) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond580) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond580) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond580) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond580) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond580) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond580) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond580) CFA_SP SP+-6
          CFI (cfiCond580) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond581 Using cfiCommon0
          CFI (cfiCond581) Function ZDO_RemoveMatchMemory
          CFI (cfiCond581) Conditional ??CrossCallReturnLabel_530, ??CrossCallReturnLabel_473, ??CrossCallReturnLabel_438
          CFI (cfiCond581) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond581) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond581) CFA_SP SP+-11
          CFI Block cfiCond582 Using cfiCommon0
          CFI (cfiCond582) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond582) Conditional ??CrossCallReturnLabel_530, ??CrossCallReturnLabel_474, ??CrossCallReturnLabel_467
          CFI (cfiCond582) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond582) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond582) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond582) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond582) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond582) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond582) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond582) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond582) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond582) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond582) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond582) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond582) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond582) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond582) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond582) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond582) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond582) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond582) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond582) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond582) CFA_SP SP+-6
          CFI (cfiCond582) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond583 Using cfiCommon0
          CFI (cfiCond583) Function ZDMatchSendState
          CFI (cfiCond583) Conditional ??CrossCallReturnLabel_530, ??CrossCallReturnLabel_474, ??CrossCallReturnLabel_468
          CFI (cfiCond583) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond583) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond583) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond583) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond583) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond583) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond583) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond583) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond583) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond583) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond583) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond583) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond583) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond583) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond583) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond583) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond583) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond583) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond583) CFA_SP SP+-6
          CFI (cfiCond583) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond584 Using cfiCommon0
          CFI (cfiCond584) Function ZDMatchSendState
          CFI (cfiCond584) Conditional ??CrossCallReturnLabel_530, ??CrossCallReturnLabel_474, ??CrossCallReturnLabel_466
          CFI (cfiCond584) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond584) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond584) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond584) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond584) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond584) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond584) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond584) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond584) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond584) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond584) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond584) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond584) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond584) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond584) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond584) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond584) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond584) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond584) CFA_SP SP+-6
          CFI (cfiCond584) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond585 Using cfiCommon0
          CFI (cfiCond585) Function ZDMatchSendState
          CFI (cfiCond585) Conditional ??CrossCallReturnLabel_530, ??CrossCallReturnLabel_474, ??CrossCallReturnLabel_465
          CFI (cfiCond585) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond585) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond585) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond585) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond585) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond585) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond585) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond585) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond585) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond585) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond585) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond585) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond585) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond585) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond585) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond585) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond585) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond585) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond585) CFA_SP SP+-6
          CFI (cfiCond585) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond586 Using cfiCommon0
          CFI (cfiCond586) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond586) Conditional ??CrossCallReturnLabel_530, ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_23
          CFI (cfiCond586) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond586) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond586) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond586) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond586) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond586) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond586) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond586) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond586) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond586) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond586) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond586) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond586) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond586) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond586) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond586) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond586) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond586) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond586) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond586) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond586) CFA_SP SP+-6
          CFI (cfiCond586) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond587 Using cfiCommon0
          CFI (cfiCond587) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond587) Conditional ??CrossCallReturnLabel_530, ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_24
          CFI (cfiCond587) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond587) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond587) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond587) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond587) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond587) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond587) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond587) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond587) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond587) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond587) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond587) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond587) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond587) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond587) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond587) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond587) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond587) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond587) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond587) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond587) CFA_SP SP+-6
          CFI (cfiCond587) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond588 Using cfiCommon0
          CFI (cfiCond588) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond588) Conditional ??CrossCallReturnLabel_524, ??CrossCallReturnLabel_36
          CFI (cfiCond588) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond588) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond588) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond588) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond588) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond588) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond588) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond588) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond588) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond588) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond588) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond588) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond588) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond588) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond588) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond588) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond588) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond588) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond588) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond588) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond588) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond588) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond588) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond588) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond588) CFA_SP SP+-4
          CFI (cfiCond588) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond589 Using cfiCommon0
          CFI (cfiCond589) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond589) Conditional ??CrossCallReturnLabel_524, ??CrossCallReturnLabel_37
          CFI (cfiCond589) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond589) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond589) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond589) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond589) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond589) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond589) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond589) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond589) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond589) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond589) CFA_SP SP+-4
          CFI (cfiCond589) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond590 Using cfiCommon0
          CFI (cfiCond590) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond590) Conditional ??CrossCallReturnLabel_531, ??CrossCallReturnLabel_486, ??CrossCallReturnLabel_483
          CFI (cfiCond590) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond590) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond590) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond590) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond590) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond590) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond590) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond590) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond590) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond590) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond590) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond590) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond590) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond590) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond590) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond590) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond590) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond590) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond590) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond590) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond590) CFA_SP SP+-6
          CFI (cfiCond590) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond591 Using cfiCommon0
          CFI (cfiCond591) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond591) Conditional ??CrossCallReturnLabel_531, ??CrossCallReturnLabel_486, ??CrossCallReturnLabel_484
          CFI (cfiCond591) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond591) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond591) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond591) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond591) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond591) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond591) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond591) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond591) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond591) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond591) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond591) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond591) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond591) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond591) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond591) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond591) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond591) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond591) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond591) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond591) CFA_SP SP+-6
          CFI (cfiCond591) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond592 Using cfiCommon0
          CFI (cfiCond592) Function ZDMatchSendState
          CFI (cfiCond592) Conditional ??CrossCallReturnLabel_531, ??CrossCallReturnLabel_486, ??CrossCallReturnLabel_485
          CFI (cfiCond592) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond592) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond592) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond592) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond592) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond592) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond592) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond592) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond592) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond592) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond592) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond592) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond592) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond592) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond592) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond592) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond592) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond592) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond592) CFA_SP SP+-6
          CFI (cfiCond592) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond593 Using cfiCommon0
          CFI (cfiCond593) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond593) Conditional ??CrossCallReturnLabel_531, ??CrossCallReturnLabel_487, ??CrossCallReturnLabel_4
          CFI (cfiCond593) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond593) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond593) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond593) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond593) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond593) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond593) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond593) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond593) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond593) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond593) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond593) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond593) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond593) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond593) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond593) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond593) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond593) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond593) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond593) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond593) CFA_SP SP+-6
          CFI (cfiCond593) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond594 Using cfiCommon0
          CFI (cfiCond594) Function ZDMatchSendState
          CFI (cfiCond594) Conditional ??CrossCallReturnLabel_531, ??CrossCallReturnLabel_487, ??CrossCallReturnLabel_5
          CFI (cfiCond594) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond594) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond594) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond594) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond594) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond594) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond594) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond594) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond594) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond594) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond594) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond594) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond594) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond594) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond594) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond594) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond594) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond594) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond594) CFA_SP SP+-6
          CFI (cfiCond594) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond595 Using cfiCommon0
          CFI (cfiCond595) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond595) Conditional ??CrossCallReturnLabel_531, ??CrossCallReturnLabel_488, ??CrossCallReturnLabel_80
          CFI (cfiCond595) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond595) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond595) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond595) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond595) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond595) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond595) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond595) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond595) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond595) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond595) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond595) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond595) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond595) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond595) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond595) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond595) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond595) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond595) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond595) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond595) CFA_SP SP+-6
          CFI (cfiCond595) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond596 Using cfiCommon0
          CFI (cfiCond596) Function ZDMatchSendState
          CFI (cfiCond596) Conditional ??CrossCallReturnLabel_531, ??CrossCallReturnLabel_488, ??CrossCallReturnLabel_81
          CFI (cfiCond596) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond596) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond596) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond596) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond596) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond596) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond596) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond596) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond596) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond596) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond596) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond596) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond596) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond596) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond596) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond596) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond596) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond596) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond596) CFA_SP SP+-6
          CFI (cfiCond596) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond597 Using cfiCommon0
          CFI (cfiCond597) Function ZDMatchSendState
          CFI (cfiCond597) Conditional ??CrossCallReturnLabel_526, ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_113
          CFI (cfiCond597) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond597) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond597) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond597) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond597) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond597) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond597) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond597) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond597) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond597) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond597) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond597) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond597) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond597) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond597) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond597) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond597) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond597) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond597) CFA_SP SP+-6
          CFI (cfiCond597) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond598 Using cfiCommon0
          CFI (cfiCond598) Function ZDMatchSendState
          CFI (cfiCond598) Conditional ??CrossCallReturnLabel_526, ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_114
          CFI (cfiCond598) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond598) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond598) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond598) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond598) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond598) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond598) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond598) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond598) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond598) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond598) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond598) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond598) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond598) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond598) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond598) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond598) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond598) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond598) CFA_SP SP+-6
          CFI (cfiCond598) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond599 Using cfiCommon0
          CFI (cfiCond599) Function ZDMatchSendState
          CFI (cfiCond599) Conditional ??CrossCallReturnLabel_526, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_108
          CFI (cfiCond599) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond599) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond599) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond599) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond599) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond599) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond599) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond599) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond599) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond599) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond599) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond599) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond599) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond599) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond599) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond599) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond599) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond599) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond599) CFA_SP SP+-6
          CFI (cfiCond599) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond600 Using cfiCommon0
          CFI (cfiCond600) Function ZDMatchSendState
          CFI (cfiCond600) Conditional ??CrossCallReturnLabel_526, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_109
          CFI (cfiCond600) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond600) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond600) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond600) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond600) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond600) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond600) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond600) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond600) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond600) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond600) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond600) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond600) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond600) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond600) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond600) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond600) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond600) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond600) CFA_SP SP+-6
          CFI (cfiCond600) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond601 Using cfiCommon0
          CFI (cfiCond601) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond601) Conditional ??CrossCallReturnLabel_532, ??CrossCallReturnLabel_522, ??CrossCallReturnLabel_126
          CFI (cfiCond601) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond601) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond601) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond601) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond601) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond601) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond601) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond601) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond601) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond601) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond601) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond601) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond601) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond601) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond601) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond601) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond601) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond601) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond601) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond601) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond601) CFA_SP SP+-6
          CFI (cfiCond601) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond602 Using cfiCommon0
          CFI (cfiCond602) Function ZDMatchSendState
          CFI (cfiCond602) Conditional ??CrossCallReturnLabel_532, ??CrossCallReturnLabel_522, ??CrossCallReturnLabel_127
          CFI (cfiCond602) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond602) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond602) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond602) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond602) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond602) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond602) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond602) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond602) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond602) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond602) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond602) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond602) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond602) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond602) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond602) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond602) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond602) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond602) CFA_SP SP+-6
          CFI (cfiCond602) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond603 Using cfiCommon0
          CFI (cfiCond603) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond603) Conditional ??CrossCallReturnLabel_532, ??CrossCallReturnLabel_521, ??CrossCallReturnLabel_106
          CFI (cfiCond603) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond603) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond603) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond603) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond603) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond603) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond603) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond603) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond603) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond603) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond603) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond603) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond603) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond603) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond603) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond603) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond603) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond603) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond603) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond603) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond603) CFA_SP SP+-6
          CFI (cfiCond603) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond604 Using cfiCommon0
          CFI (cfiCond604) Function ZDMatchSendState
          CFI (cfiCond604) Conditional ??CrossCallReturnLabel_532, ??CrossCallReturnLabel_521, ??CrossCallReturnLabel_107
          CFI (cfiCond604) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond604) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond604) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond604) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond604) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond604) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond604) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond604) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond604) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond604) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond604) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond604) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond604) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond604) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond604) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond604) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond604) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond604) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond604) CFA_SP SP+-6
          CFI (cfiCond604) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond605 Using cfiCommon0
          CFI (cfiCond605) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond605) Conditional ??CrossCallReturnLabel_532, ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_463
          CFI (cfiCond605) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond605) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond605) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond605) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond605) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond605) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond605) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond605) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond605) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond605) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond605) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond605) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond605) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond605) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond605) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond605) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond605) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond605) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond605) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond605) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond605) CFA_SP SP+-6
          CFI (cfiCond605) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond606 Using cfiCommon0
          CFI (cfiCond606) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond606) Conditional ??CrossCallReturnLabel_532, ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_464
          CFI (cfiCond606) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond606) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond606) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond606) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond606) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond606) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond606) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond606) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond606) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond606) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond606) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond606) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond606) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond606) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond606) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond606) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond606) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond606) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond606) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond606) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond606) CFA_SP SP+-6
          CFI (cfiCond606) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond607 Using cfiCommon0
          CFI (cfiCond607) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond607) Conditional ??CrossCallReturnLabel_532, ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_443
          CFI (cfiCond607) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond607) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond607) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond607) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond607) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond607) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond607) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond607) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond607) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond607) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond607) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond607) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond607) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond607) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond607) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond607) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond607) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond607) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond607) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond607) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond607) CFA_SP SP+-6
          CFI (cfiCond607) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond608 Using cfiCommon0
          CFI (cfiCond608) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond608) Conditional ??CrossCallReturnLabel_532, ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_444
          CFI (cfiCond608) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond608) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond608) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond608) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond608) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond608) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond608) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond608) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond608) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond608) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond608) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond608) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond608) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond608) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond608) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond608) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond608) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond608) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond608) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond608) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond608) CFA_SP SP+-6
          CFI (cfiCond608) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond609 Using cfiCommon0
          CFI (cfiCond609) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond609) Conditional ??CrossCallReturnLabel_532, ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_445
          CFI (cfiCond609) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond609) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond609) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond609) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond609) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond609) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond609) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond609) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond609) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond609) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond609) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond609) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond609) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond609) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond609) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond609) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond609) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond609) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond609) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond609) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond609) CFA_SP SP+-6
          CFI (cfiCond609) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond610 Using cfiCommon0
          CFI (cfiCond610) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond610) Conditional ??CrossCallReturnLabel_532, ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_446
          CFI (cfiCond610) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond610) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond610) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond610) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond610) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond610) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond610) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond610) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond610) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond610) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond610) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond610) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond610) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond610) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond610) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond610) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond610) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond610) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond610) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond610) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond610) CFA_SP SP+-6
          CFI (cfiCond610) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond611 Using cfiCommon0
          CFI (cfiCond611) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond611) Conditional ??CrossCallReturnLabel_532, ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_447
          CFI (cfiCond611) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond611) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond611) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond611) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond611) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond611) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond611) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond611) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond611) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond611) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond611) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond611) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond611) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond611) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond611) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond611) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond611) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond611) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond611) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond611) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond611) CFA_SP SP+-6
          CFI (cfiCond611) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond612 Using cfiCommon0
          CFI (cfiCond612) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond612) Conditional ??CrossCallReturnLabel_532, ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_448
          CFI (cfiCond612) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond612) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond612) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond612) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond612) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond612) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond612) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond612) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond612) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond612) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond612) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond612) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond612) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond612) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond612) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond612) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond612) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond612) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond612) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond612) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond612) CFA_SP SP+-6
          CFI (cfiCond612) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond613 Using cfiCommon0
          CFI (cfiCond613) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond613) Conditional ??CrossCallReturnLabel_532, ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_449
          CFI (cfiCond613) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond613) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond613) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond613) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond613) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond613) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond613) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond613) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond613) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond613) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond613) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond613) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond613) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond613) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond613) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond613) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond613) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond613) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond613) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond613) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond613) CFA_SP SP+-6
          CFI (cfiCond613) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond614 Using cfiCommon0
          CFI (cfiCond614) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond614) Conditional ??CrossCallReturnLabel_532, ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_450
          CFI (cfiCond614) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond614) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond614) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond614) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond614) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond614) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond614) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond614) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond614) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond614) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond614) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond614) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond614) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond614) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond614) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond614) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond614) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond614) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond614) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond614) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond614) CFA_SP SP+-6
          CFI (cfiCond614) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond615 Using cfiCommon0
          CFI (cfiCond615) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond615) Conditional ??CrossCallReturnLabel_532, ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_451
          CFI (cfiCond615) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond615) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond615) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond615) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond615) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond615) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond615) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond615) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond615) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond615) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond615) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond615) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond615) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond615) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond615) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond615) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond615) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond615) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond615) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond615) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond615) CFA_SP SP+-6
          CFI (cfiCond615) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond616 Using cfiCommon0
          CFI (cfiCond616) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond616) Conditional ??CrossCallReturnLabel_532, ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_452
          CFI (cfiCond616) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond616) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond616) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond616) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond616) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond616) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond616) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond616) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond616) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond616) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond616) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond616) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond616) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond616) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond616) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond616) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond616) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond616) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond616) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond616) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond616) CFA_SP SP+-6
          CFI (cfiCond616) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond617 Using cfiCommon0
          CFI (cfiCond617) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond617) Conditional ??CrossCallReturnLabel_532, ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_453
          CFI (cfiCond617) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond617) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond617) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond617) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond617) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond617) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond617) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond617) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond617) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond617) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond617) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond617) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond617) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond617) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond617) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond617) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond617) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond617) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond617) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond617) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond617) CFA_SP SP+-6
          CFI (cfiCond617) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond618 Using cfiCommon0
          CFI (cfiCond618) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond618) Conditional ??CrossCallReturnLabel_532, ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_454
          CFI (cfiCond618) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond618) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond618) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond618) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond618) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond618) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond618) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond618) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond618) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond618) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond618) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond618) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond618) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond618) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond618) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond618) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond618) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond618) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond618) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond618) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond618) CFA_SP SP+-6
          CFI (cfiCond618) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond619 Using cfiCommon0
          CFI (cfiCond619) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond619) Conditional ??CrossCallReturnLabel_532, ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_455
          CFI (cfiCond619) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond619) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond619) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond619) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond619) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond619) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond619) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond619) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond619) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond619) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond619) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond619) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond619) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond619) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond619) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond619) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond619) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond619) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond619) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond619) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond619) CFA_SP SP+-6
          CFI (cfiCond619) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond620 Using cfiCommon0
          CFI (cfiCond620) Function ZDO_RemoveMatchMemory
          CFI (cfiCond620) Conditional ??CrossCallReturnLabel_532, ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_456
          CFI (cfiCond620) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond620) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond620) CFA_SP SP+-11
          CFI Block cfiCond621 Using cfiCommon0
          CFI (cfiCond621) Function ZDO_RemoveMatchMemory
          CFI (cfiCond621) Conditional ??CrossCallReturnLabel_532, ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_457
          CFI (cfiCond621) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond621) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond621) CFA_SP SP+-11
          CFI Block cfiCond622 Using cfiCommon0
          CFI (cfiCond622) Function ZDO_RemoveMatchMemory
          CFI (cfiCond622) Conditional ??CrossCallReturnLabel_532, ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_458
          CFI (cfiCond622) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond622) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond622) CFA_SP SP+-11
          CFI Block cfiCond623 Using cfiCommon0
          CFI (cfiCond623) Function ZDO_RemoveMatchMemory
          CFI (cfiCond623) Conditional ??CrossCallReturnLabel_532, ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_459
          CFI (cfiCond623) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond623) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond623) CFA_SP SP+-11
          CFI Block cfiCond624 Using cfiCommon0
          CFI (cfiCond624) Function ZDO_RemoveMatchMemory
          CFI (cfiCond624) Conditional ??CrossCallReturnLabel_532, ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_460
          CFI (cfiCond624) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond624) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond624) CFA_SP SP+-11
          CFI Block cfiCond625 Using cfiCommon0
          CFI (cfiCond625) Function ZDMatchSendState
          CFI (cfiCond625) Conditional ??CrossCallReturnLabel_532, ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_461
          CFI (cfiCond625) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond625) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond625) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond625) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond625) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond625) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond625) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond625) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond625) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond625) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond625) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond625) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond625) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond625) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond625) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond625) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond625) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond625) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond625) CFA_SP SP+-7
          CFI (cfiCond625) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond626 Using cfiCommon0
          CFI (cfiCond626) Function ZDMatchSendState
          CFI (cfiCond626) Conditional ??CrossCallReturnLabel_532, ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_462
          CFI (cfiCond626) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond626) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond626) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond626) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond626) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond626) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond626) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond626) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond626) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond626) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond626) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond626) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond626) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond626) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond626) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond626) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond626) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond626) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond626) CFA_SP SP+-6
          CFI (cfiCond626) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond627 Using cfiCommon0
          CFI (cfiCond627) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond627) Conditional ??CrossCallReturnLabel_532, ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_441
          CFI (cfiCond627) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond627) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond627) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond627) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond627) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond627) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond627) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond627) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond627) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond627) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond627) CFA_SP SP+-6
          CFI (cfiCond627) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond628 Using cfiCommon0
          CFI (cfiCond628) Function ZDMatchSendState
          CFI (cfiCond628) Conditional ??CrossCallReturnLabel_532, ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_442
          CFI (cfiCond628) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond628) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond628) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond628) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond628) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond628) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond628) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond628) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond628) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond628) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond628) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond628) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond628) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond628) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond628) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond628) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond628) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond628) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond628) CFA_SP SP+-6
          CFI (cfiCond628) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond629 Using cfiCommon0
          CFI (cfiCond629) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond629) Conditional ??CrossCallReturnLabel_532, ??CrossCallReturnLabel_520, ??CrossCallReturnLabel_128
          CFI (cfiCond629) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond629) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond629) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond629) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond629) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond629) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond629) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond629) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond629) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond629) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond629) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond629) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond629) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond629) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond629) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond629) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond629) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond629) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond629) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond629) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond629) CFA_SP SP+-6
          CFI (cfiCond629) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond630 Using cfiCommon0
          CFI (cfiCond630) Function ZDMatchSendState
          CFI (cfiCond630) Conditional ??CrossCallReturnLabel_532, ??CrossCallReturnLabel_520, ??CrossCallReturnLabel_129
          CFI (cfiCond630) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond630) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond630) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond630) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond630) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond630) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond630) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond630) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond630) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond630) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond630) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond630) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond630) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond630) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond630) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond630) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond630) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond630) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond630) CFA_SP SP+-6
          CFI (cfiCond630) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond631 Using cfiCommon0
          CFI (cfiCond631) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond631) Conditional ??CrossCallReturnLabel_532, ??CrossCallReturnLabel_519, ??CrossCallReturnLabel_124
          CFI (cfiCond631) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond631) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond631) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond631) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond631) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond631) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond631) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond631) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond631) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond631) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond631) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond631) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond631) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond631) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond631) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond631) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond631) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond631) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond631) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond631) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond631) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond631) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond631) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond631) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond631) CFA_SP SP+-6
          CFI (cfiCond631) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond632 Using cfiCommon0
          CFI (cfiCond632) Function ZDO_ParseAddrRsp
          CFI (cfiCond632) Conditional ??CrossCallReturnLabel_532, ??CrossCallReturnLabel_519, ??CrossCallReturnLabel_125
          CFI (cfiCond632) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond632) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond632) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond632) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond632) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond632) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond632) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond632) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond632) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond632) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond632) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond632) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond632) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond632) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond632) CFA_SP SP+-6
          CFI (cfiCond632) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond633 Using cfiCommon0
          CFI (cfiCond633) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond633) Conditional ??CrossCallReturnLabel_527, ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_133
          CFI (cfiCond633) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond633) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond633) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond633) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond633) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond633) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond633) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond633) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond633) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond633) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond633) CFA_SP SP+-6
          CFI (cfiCond633) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond634 Using cfiCommon0
          CFI (cfiCond634) Function ZDO_ProcessUserDescSet
          CFI (cfiCond634) Conditional ??CrossCallReturnLabel_527, ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_132
          CFI (cfiCond634) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond634) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond634) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond634) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond634) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond634) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond634) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond634) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond634) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond634) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond634) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond634) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond634) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond634) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond634) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond634) CFA_SP SP+-6
          CFI (cfiCond634) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond635 Using cfiCommon0
          CFI (cfiCond635) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond635) Conditional ??CrossCallReturnLabel_527, ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_0
          CFI (cfiCond635) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond635) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond635) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond635) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond635) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond635) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond635) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond635) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond635) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond635) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond635) CFA_SP SP+-6
          CFI (cfiCond635) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond636 Using cfiCommon0
          CFI (cfiCond636) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond636) Conditional ??CrossCallReturnLabel_527, ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_1
          CFI (cfiCond636) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond636) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond636) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond636) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond636) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond636) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond636) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond636) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond636) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond636) CFA_SP SP+-6
          CFI (cfiCond636) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker637 Using cfiCommon1
          CFI (cfiPicker637) NoFunction
          CFI (cfiPicker637) Picker
        MOVX      A,@DPTR
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond532
          CFI EndBlock cfiCond533
          CFI EndBlock cfiCond534
          CFI EndBlock cfiCond535
          CFI EndBlock cfiCond536
          CFI EndBlock cfiCond537
          CFI EndBlock cfiCond538
          CFI EndBlock cfiCond539
          CFI EndBlock cfiCond540
          CFI EndBlock cfiCond541
          CFI EndBlock cfiCond542
          CFI EndBlock cfiCond543
          CFI EndBlock cfiCond544
          CFI EndBlock cfiCond545
          CFI EndBlock cfiCond546
          CFI EndBlock cfiCond547
          CFI EndBlock cfiCond548
          CFI EndBlock cfiCond549
          CFI EndBlock cfiCond550
          CFI EndBlock cfiCond551
          CFI EndBlock cfiCond552
          CFI EndBlock cfiCond553
          CFI EndBlock cfiCond554
          CFI EndBlock cfiCond555
          CFI EndBlock cfiCond556
          CFI EndBlock cfiCond557
          CFI EndBlock cfiCond558
          CFI EndBlock cfiCond559
          CFI EndBlock cfiCond560
          CFI EndBlock cfiCond561
          CFI EndBlock cfiCond562
          CFI EndBlock cfiCond563
          CFI EndBlock cfiCond564
          CFI EndBlock cfiCond565
          CFI EndBlock cfiCond566
          CFI EndBlock cfiCond567
          CFI EndBlock cfiCond568
          CFI EndBlock cfiCond569
          CFI EndBlock cfiCond570
          CFI EndBlock cfiCond571
          CFI EndBlock cfiCond572
          CFI EndBlock cfiCond573
          CFI EndBlock cfiCond574
          CFI EndBlock cfiCond575
          CFI EndBlock cfiCond576
          CFI EndBlock cfiCond577
          CFI EndBlock cfiCond578
          CFI EndBlock cfiCond579
          CFI EndBlock cfiCond580
          CFI EndBlock cfiCond581
          CFI EndBlock cfiCond582
          CFI EndBlock cfiCond583
          CFI EndBlock cfiCond584
          CFI EndBlock cfiCond585
          CFI EndBlock cfiCond586
          CFI EndBlock cfiCond587
          CFI EndBlock cfiCond588
          CFI EndBlock cfiCond589
          CFI EndBlock cfiCond590
          CFI EndBlock cfiCond591
          CFI EndBlock cfiCond592
          CFI EndBlock cfiCond593
          CFI EndBlock cfiCond594
          CFI EndBlock cfiCond595
          CFI EndBlock cfiCond596
          CFI EndBlock cfiCond597
          CFI EndBlock cfiCond598
          CFI EndBlock cfiCond599
          CFI EndBlock cfiCond600
          CFI EndBlock cfiCond601
          CFI EndBlock cfiCond602
          CFI EndBlock cfiCond603
          CFI EndBlock cfiCond604
          CFI EndBlock cfiCond605
          CFI EndBlock cfiCond606
          CFI EndBlock cfiCond607
          CFI EndBlock cfiCond608
          CFI EndBlock cfiCond609
          CFI EndBlock cfiCond610
          CFI EndBlock cfiCond611
          CFI EndBlock cfiCond612
          CFI EndBlock cfiCond613
          CFI EndBlock cfiCond614
          CFI EndBlock cfiCond615
          CFI EndBlock cfiCond616
          CFI EndBlock cfiCond617
          CFI EndBlock cfiCond618
          CFI EndBlock cfiCond619
          CFI EndBlock cfiCond620
          CFI EndBlock cfiCond621
          CFI EndBlock cfiCond622
          CFI EndBlock cfiCond623
          CFI EndBlock cfiCond624
          CFI EndBlock cfiCond625
          CFI EndBlock cfiCond626
          CFI EndBlock cfiCond627
          CFI EndBlock cfiCond628
          CFI EndBlock cfiCond629
          CFI EndBlock cfiCond630
          CFI EndBlock cfiCond631
          CFI EndBlock cfiCond632
          CFI EndBlock cfiCond633
          CFI EndBlock cfiCond634
          CFI EndBlock cfiCond635
          CFI EndBlock cfiCond636
          CFI EndBlock cfiPicker637
// 2271 
// 2272 /*********************************************************************
// 2273  * @fn          ZDO_ProcessParentAnnce
// 2274  *
// 2275  * @brief       This function processes a Parent annouce message.
// 2276  *
// 2277  * @param       inMsg - incoming message
// 2278  *
// 2279  * @return      none
// 2280  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2281 void ZDO_ProcessParentAnnce( zdoIncomingMsg_t *inMsg )
ZDO_ProcessParentAnnce:
          CFI Block cfiBlock638 Using cfiCommon0
          CFI Function ZDO_ProcessParentAnnce
        CODE
// 2282 {
        FUNCALL ZDO_ProcessParentAnnce, ZDO_ParseParentAnnce
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessParentAnnce, AssocGetWithExt
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessParentAnnce, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessParentAnnce, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessParentAnnce, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessParentAnnce, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessParentAnnce, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessParentAnnce, ZDP_ParentAnnce
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessParentAnnce, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessParentAnnce, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessParentAnnce, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        MOV       A,#-0x16
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 9
        MOV       A,#-0x9
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 31)
        MOV       ?V8,R2
        MOV       ?V9,R3
// 2283   ZDO_ParentAnnce_t *parentAnnce;
// 2284   uint8 x;
// 2285   uint8 childCount = 0;
        MOV       ?V7,#0x0
// 2286 
// 2287   ZDO_ChildInfoList_t *listHead = NULL;
        MOV       ?V0,#0x0
        MOV       ?V1,#0x0
// 2288   ZDO_ChildInfoList_t *listTail;
// 2289   ZDO_ChildInfoList_t *newNode;
// 2290 
// 2291   // Parse incoming message, memory is allocated by the parse function,
// 2292   // it should be free after processing the message
// 2293   parentAnnce = ZDO_ParseParentAnnce( inMsg );
        ; Setup parameters for call to function ZDO_ParseParentAnnce
        LCALL     `??ZDO_ParseParentAnnce::?relay`; Banked call to: ZDO_ParseParentAnnce
        MOV       ?V4,R2
        MOV       ?V5,R3
// 2294 
// 2295   if ( parentAnnce != NULL )
        MOV       A,R2
        ORL       A,R3
        JNZ       $+5
        LJMP      ??ZDO_ProcessParentAnnce_0 & 0xFFFF
// 2296   {
// 2297     for ( x = 0; x < parentAnnce->numOfChildren; x++ )
        MOV       ?V6,#0x0
        SJMP      ??ZDO_ProcessParentAnnce_1
// 2298     {
// 2299       associated_devices_t *dev_ptr;
// 2300 
// 2301       // If it's an End Device child
// 2302       dev_ptr = AssocGetWithExt( parentAnnce->childInfo[x].extAddr );
// 2303 
// 2304       if ( dev_ptr )
// 2305       {
// 2306         if ( dev_ptr->nodeRelation == CHILD_RFD ||
// 2307              dev_ptr->nodeRelation == CHILD_RFD_RX_IDLE )
// 2308         {
// 2309           if ( dev_ptr->keepaliveRcv == TRUE )
// 2310           {
// 2311             // Add one element to the list
// 2312             newNode = (ZDO_ChildInfoList_t *)osal_mem_alloc( sizeof(ZDO_ChildInfoList_t) );
// 2313 
// 2314             osal_cpyExtAddr( newNode->child.extAddr, parentAnnce->childInfo[x].extAddr );
// 2315 
// 2316             newNode->next = NULL;
// 2317 
// 2318             if ( listHead == NULL )
??ZDO_ProcessParentAnnce_2:
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOV       A,?V2
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V3
        MOVX      @DPTR,A
// 2319             {
// 2320               // Initialize the head of the list
// 2321               listHead = listTail = newNode;
// 2322             }
// 2323             else
// 2324             {
// 2325               // Add new element to the end
// 2326               listTail->next = newNode;
// 2327 
// 2328               listTail = listTail->next;
        MOV       R6,?V12
        MOV       R7,A
// 2329             }
// 2330 
// 2331             childCount++;
??ZDO_ProcessParentAnnce_3:
        INC       ?V7
??ZDO_ProcessParentAnnce_4:
        INC       ?V6
??ZDO_ProcessParentAnnce_1:
        MOV       DPL,?V4
        MOV       DPH,?V5
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       A,?V6
        CLR       C
        SUBB      A,R0
        JC        $+5
        LJMP      ??ZDO_ProcessParentAnnce_5 & 0xFFFF
        MOV       A,?V6
        MOV       ?V2,A
        MOV       ?V3,#0x0
        MOV       A,#0x3
        MOV       R0,#?V2
        LCALL     ?S_SHL
        MOV       A,?V4
        ADD       A,?V2
        MOV       DPL,A
        MOV       A,?V5
        ADDC      A,?V3
        MOV       DPH,A
        INC       DPTR
        MOV       ?V10,DPL
        MOV       ?V11,DPH
        ; Setup parameters for call to function AssocGetWithExt
        MOV       R2,?V10
        MOV       R3,?V11
        LCALL     `??AssocGetWithExt::?relay`; Banked call to: AssocGetWithExt
        MOV       ?V2,R2
        MOV       ?V3,R3
        MOV       R1,?V3
        MOV       A,R2
        ORL       A,R1
        JZ        ??ZDO_ProcessParentAnnce_4
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R2,A
        MOV       A,#0x1
        XRL       A,R2
        JZ        ??ZDO_ProcessParentAnnce_6
        MOV       A,#0x2
        XRL       A,R2
        JNZ       ??ZDO_ProcessParentAnnce_4
??ZDO_ProcessParentAnnce_6:
        MOV       A,?V2
        ADD       A,#0x1b
        MOV       DPL,A
        CLR       A
        ADDC      A,R1
        MOV       DPH,A
        MOVX      A,@DPTR
        XRL       A,#0x1
        JNZ       ??ZDO_ProcessParentAnnce_4
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,#0xa
        MOV       R3,#0x0
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V2,R2
        MOV       ?V3,R3
        MOV       ?V12,R2
        ; Setup parameters for call to function sAddrExtCpy
        MOV       R4,?V10
        MOV       R5,?V11
        LCALL     ?Subroutine157 & 0xFFFF
??CrossCallReturnLabel_501:
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,?V0
        ORL       A,?V1
        JZ        $+5
        LJMP      ??ZDO_ProcessParentAnnce_2 & 0xFFFF
        MOV       R6,?V2
        MOV       R7,?V3
        MOV       ?V0,R6
        MOV       ?V1,R7
        LJMP      ??ZDO_ProcessParentAnnce_3 & 0xFFFF
// 2332           }
// 2333         }
// 2334       }
// 2335     }
// 2336 
// 2337     // If the device has children that match some in the received list,
// 2338     // it should send a unicast Parent_Annce_rsp message.
// 2339     if ( childCount > 0 )
??ZDO_ProcessParentAnnce_5:
        MOV       A,?V7
        JNZ       $+5
        LJMP      ??ZDO_ProcessParentAnnce_7 & 0xFFFF
// 2340     {
// 2341       ZDO_ChildInfo_t *childInfo;
// 2342       zAddrType_t dstAddr;
// 2343 
// 2344       dstAddr.addrMode = (afAddrMode_t)Addr16Bit;
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x2
        MOVX      @DPTR,A
// 2345       dstAddr.addr.shortAddr = inMsg->srcAddr.addr.shortAddr;
        MOV       DPL,?V8
        MOV       DPH,?V9
        INC       DPTR
        INC       DPTR
        LCALL     ??Subroutine191_0 & 0xFFFF
??CrossCallReturnLabel_328:
        LCALL     ?Subroutine39 & 0xFFFF
// 2346 
// 2347       x = 0;
??CrossCallReturnLabel_631:
        MOV       ?V6,#0x0
// 2348 
// 2349       childInfo = (ZDO_ChildInfo_t *)osal_mem_alloc( childCount * sizeof(ZDO_ChildInfo_t) );
        ; Setup parameters for call to function osal_mem_alloc
        MOV       A,?V7
        MOV       ?V2,A
        MOV       ?V3,#0x0
        MOV       A,#0x3
        MOV       R0,#?V2
        LCALL     ?S_SHL
        MOV       R2,?V2
        MOV       R3,?V3
        LCALL     ??Subroutine240_0 & 0xFFFF
// 2350 
// 2351       if ( childInfo != NULL )
??CrossCallReturnLabel_593:
        JZ        ??CrossCallReturnLabel_120
        SJMP      ??CrossCallReturnLabel_119
// 2352       {
// 2353         // Copy the content of the link list into this buffer
// 2354         while ( listHead != NULL )
// 2355         {
// 2356           listTail = listHead;
??ZDO_ProcessParentAnnce_8:
        MOV       R6,?V0
        MOV       R7,?V1
// 2357 
// 2358           osal_cpyExtAddr( childInfo[x].extAddr,  listHead->child.extAddr );
        ; Setup parameters for call to function sAddrExtCpy
        MOV       R4,?V0
        MOV       R5,?V1
        MOV       A,?V6
        MOV       ?V0,A
        MOV       ?V1,#0x0
        MOV       A,#0x3
        MOV       R0,#?V0
        LCALL     ?S_SHL
        MOV       A,?V2
        ADD       A,?V0
        MOV       R2,A
        MOV       A,?V3
        ADDC      A,?V1
        MOV       R3,A
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 2359 
// 2360           x++;
        INC       ?V6
// 2361 
// 2362           listHead = listTail->next;
        LCALL     ?Subroutine71 & 0xFFFF
// 2363 
// 2364           // Free this element of the link list
// 2365           osal_mem_free( listTail );
// 2366         }
??CrossCallReturnLabel_119:
        MOV       A,?V0
        ORL       A,?V1
        JNZ       ??ZDO_ProcessParentAnnce_8
// 2367 
// 2368         ZDP_ParentAnnceRsp( (inMsg->TransSeq), dstAddr, childCount,
// 2369                             ((uint8 *)childInfo), 0 );
        ; Setup parameters for call to function ZDP_ParentAnnce
        MOV       ?V0,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 32)
        MOV       ?V0,#0x1f
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 34)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 36)
        MOV       R1,?V7
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP102_8
        MOV       A,?V8
        ADD       A,#0xf
        MOV       R2,A
        CLR       A
        ADDC      A,?V9
        MOV       R3,A
        LCALL     `??ZDP_ParentAnnce::?relay`; Banked call to: ZDP_ParentAnnce
        MOV       A,#0x5
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 31)
// 2370         
// 2371         
// 2372         osal_mem_free(childInfo);
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V2
        MOV       R3,?V3
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        SJMP      ??ZDO_ProcessParentAnnce_7
// 2373       }
// 2374       else
// 2375       {
// 2376         while(listHead != NULL)
// 2377         {
// 2378           listTail = listHead;
??ZDO_ProcessParentAnnce_9:
        MOV       R6,?V0
        MOV       R7,?V1
// 2379           listHead = listTail->next;
        LCALL     ?Subroutine71 & 0xFFFF
// 2380 
// 2381           // Free this element of the link list
// 2382           osal_mem_free( listTail );
// 2383         }  
??CrossCallReturnLabel_120:
        MOV       A,?V0
        ORL       A,?V1
        JNZ       ??ZDO_ProcessParentAnnce_9
// 2384       }
// 2385     }
// 2386     
// 2387     // Free memory allocated by parsing function
// 2388     osal_mem_free( parentAnnce );
??ZDO_ProcessParentAnnce_7:
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V4
        MOV       R3,?V5
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2389   }
// 2390 }
??ZDO_ProcessParentAnnce_0:
        MOV       A,#0x9
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       R7,#0xe
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock638

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine71:
          CFI Block cfiCond639 Using cfiCommon0
          CFI Function ZDO_ProcessParentAnnce
          CFI Conditional ??CrossCallReturnLabel_119
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond640 Using cfiCommon0
          CFI (cfiCond640) Function ZDO_ProcessParentAnnce
          CFI (cfiCond640) Conditional ??CrossCallReturnLabel_120
          CFI (cfiCond640) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond640) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond640) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond640) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond640) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond640) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond640) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond640) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond640) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond640) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond640) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond640) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond640) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond640) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond640) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond640) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond640) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond640) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond640) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond640) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond640) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond640) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond640) CFA_SP SP+-2
          CFI (cfiCond640) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiPicker641 Using cfiCommon1
          CFI (cfiPicker641) NoFunction
          CFI (cfiPicker641) Picker
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine169 & 0xFFFF
??CrossCallReturnLabel_325:
        MOV       ?V1,A
        ; Setup parameters for call to function osal_mem_free
        ; Setup parameters for call to function osal_mem_free
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        RET
          CFI EndBlock cfiCond639
          CFI EndBlock cfiCond640
          CFI EndBlock cfiPicker641

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine169:
          CFI Block cfiCond642 Using cfiCommon0
          CFI Function ZDO_AnyClusterMatches
          CFI Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_321
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond643 Using cfiCommon0
          CFI (cfiCond643) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond643) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_322
          CFI (cfiCond643) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond643) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond643) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond643) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond643) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond643) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond643) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond643) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond643) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond643) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond643) CFA_SP SP+-4
          CFI (cfiCond643) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond644 Using cfiCommon0
          CFI (cfiCond644) Function ZDMatchSendState
          CFI (cfiCond644) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_320
          CFI (cfiCond644) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond644) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond644) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond644) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond644) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond644) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond644) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond644) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond644) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond644) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond644) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond644) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond644) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond644) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond644) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond644) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond644) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond644) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond644) CFA_SP SP+-4
          CFI (cfiCond644) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond645 Using cfiCommon0
          CFI (cfiCond645) Function ZDO_ConvertOTAClusters
          CFI (cfiCond645) Conditional ??CrossCallReturnLabel_323
          CFI (cfiCond645) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond645) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond645) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond645) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond645) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond645) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond645) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond645) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond645) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond645) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond645) CFA_SP SP+-2
          CFI (cfiCond645) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond646 Using cfiCommon0
          CFI (cfiCond646) Function ZDO_ProcessParentAnnce
          CFI (cfiCond646) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_119
          CFI (cfiCond646) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond646) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond646) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond646) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond646) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond646) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond646) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond646) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond646) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond646) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond646) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond646) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond646) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond646) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond646) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond646) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond646) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond646) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond646) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond646) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond646) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond646) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond646) CFA_SP SP+-4
          CFI (cfiCond646) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond647 Using cfiCommon0
          CFI (cfiCond647) Function ZDO_ProcessParentAnnce
          CFI (cfiCond647) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_120
          CFI (cfiCond647) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond647) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond647) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond647) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond647) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond647) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond647) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond647) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond647) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond647) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond647) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond647) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond647) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond647) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond647) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond647) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond647) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond647) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond647) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond647) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond647) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond647) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond647) CFA_SP SP+-4
          CFI (cfiCond647) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond648 Using cfiCommon0
          CFI (cfiCond648) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond648) Conditional ??CrossCallReturnLabel_324
          CFI (cfiCond648) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond648) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond648) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond648) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond648) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond648) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond648) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond648) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond648) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond648) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond648) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond648) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond648) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond648) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond648) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond648) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond648) CFA_SP SP+-2
          CFI (cfiCond648) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker649 Using cfiCommon1
          CFI (cfiPicker649) NoFunction
          CFI (cfiPicker649) Picker
        MOVX      A,@DPTR
        MOV       ?V0,A
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond642
          CFI EndBlock cfiCond643
          CFI EndBlock cfiCond644
          CFI EndBlock cfiCond645
          CFI EndBlock cfiCond646
          CFI EndBlock cfiCond647
          CFI EndBlock cfiCond648
          CFI EndBlock cfiPicker649
// 2391 
// 2392 /*********************************************************************
// 2393  * @fn          ZDO_ProcessParentAnnceRsp
// 2394  *
// 2395  * @brief       This function processes a Parent annouce response message.
// 2396  *
// 2397  * @param       inMsg - incoming message
// 2398  *
// 2399  * @return      none
// 2400  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2401 void ZDO_ProcessParentAnnceRsp( zdoIncomingMsg_t *inMsg )
ZDO_ProcessParentAnnceRsp:
          CFI Block cfiBlock650 Using cfiCommon0
          CFI Function ZDO_ProcessParentAnnceRsp
        CODE
// 2402 {
        FUNCALL ZDO_ProcessParentAnnceRsp, ZDO_ParseParentAnnce
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessParentAnnceRsp, AssocGetWithExt
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessParentAnnceRsp, AssocRemove
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessParentAnnceRsp, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV       A,#-0xe
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
// 2403   ZDO_ParentAnnce_t *parentAnnce;
// 2404   uint8 x;
// 2405 
// 2406   // Parse incoming message, memory is allocated by the parse function,
// 2407   // it should be free after processing the message
// 2408   parentAnnce = ZDO_ParseParentAnnce( inMsg );
        ; Setup parameters for call to function ZDO_ParseParentAnnce
        LCALL     `??ZDO_ParseParentAnnce::?relay`; Banked call to: ZDO_ParseParentAnnce
        MOV       ?V0,R2
        MOV       ?V1,R3
// 2409 
// 2410   if ( parentAnnce != NULL )
        MOV       A,R2
        ORL       A,R3
        JZ        ??ZDO_ProcessParentAnnceRsp_0
// 2411   {
// 2412     for ( x = 0; x < parentAnnce->numOfChildren; x++ )
        MOV       ?V2,#0x0
        SJMP      ??ZDO_ProcessParentAnnceRsp_1
// 2413     {
// 2414       associated_devices_t *dev_ptr;
// 2415 
// 2416       // If it's an End Device child
// 2417       dev_ptr = AssocGetWithExt( parentAnnce->childInfo[x].extAddr );
??ZDO_ProcessParentAnnceRsp_2:
        MOV       A,?V2
        MOV       ?V4,A
        MOV       ?V5,#0x0
        MOV       A,#0x3
        MOV       R0,#?V4
        LCALL     ?S_SHL
        MOV       A,?V0
        ADD       A,?V4
        MOV       DPL,A
        MOV       A,?V1
        ADDC      A,?V5
        MOV       DPH,A
        INC       DPTR
        MOV       R6,DPL
        MOV       R7,DPH
        ; Setup parameters for call to function AssocGetWithExt
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        LCALL     ?Subroutine146 & 0xFFFF
// 2418 
// 2419       if ( dev_ptr )
??CrossCallReturnLabel_265:
        JZ        ??ZDO_ProcessParentAnnceRsp_3
// 2420       {
// 2421         if ( dev_ptr->nodeRelation == CHILD_RFD ||
// 2422              dev_ptr->nodeRelation == CHILD_RFD_RX_IDLE )
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       A,#0x1
        XRL       A,R0
        JZ        ??ZDO_ProcessParentAnnceRsp_4
        MOV       A,#0x2
        XRL       A,R0
        JNZ       ??ZDO_ProcessParentAnnceRsp_3
// 2423         {
// 2424           AssocRemove( parentAnnce->childInfo[x].extAddr );
??ZDO_ProcessParentAnnceRsp_4:
        ; Setup parameters for call to function AssocRemove
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        LCALL     `??AssocRemove::?relay`; Banked call to: AssocRemove
// 2425         }
// 2426       }
// 2427     }
??ZDO_ProcessParentAnnceRsp_3:
        INC       ?V2
??ZDO_ProcessParentAnnceRsp_1:
        MOV       DPL,?V0
        MOV       DPH,?V1
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       A,?V2
        CLR       C
        SUBB      A,R0
        JC        ??ZDO_ProcessParentAnnceRsp_2
// 2428 
// 2429     // Free memory allocated by parsing function
// 2430     osal_mem_free( parentAnnce );
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V0
        MOV       R3,?V1
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2431   }
// 2432 }
??ZDO_ProcessParentAnnceRsp_0:
        LJMP      ??Subroutine214_0 & 0xFFFF
          CFI EndBlock cfiBlock650

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine146:
          CFI Block cfiCond651 Using cfiCommon0
          CFI Function ZDO_ProcessDeviceAnnce
          CFI Conditional ??CrossCallReturnLabel_264
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond652 Using cfiCommon0
          CFI (cfiCond652) Function ZDO_ProcessParentAnnceRsp
          CFI (cfiCond652) Conditional ??CrossCallReturnLabel_265
          CFI (cfiCond652) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond652) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond652) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond652) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond652) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond652) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond652) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond652) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond652) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond652) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond652) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond652) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond652) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond652) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond652) CFA_SP SP+-2
          CFI (cfiCond652) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker653 Using cfiCommon1
          CFI (cfiPicker653) NoFunction
          CFI (cfiPicker653) Picker
        LCALL     `??AssocGetWithExt::?relay`; Banked call to: AssocGetWithExt
        MOV       DPL,R2
        MOV       DPH,R3
        MOV       A,DPL
        ORL       A,DPH
        RET
          CFI EndBlock cfiCond651
          CFI EndBlock cfiCond652
          CFI EndBlock cfiPicker653
// 2433 
// 2434 /*********************************************************************
// 2435  * @fn          ZDO_BuildSimpleDescBuf
// 2436  *
// 2437  * @brief       Build a byte sequence representation of a Simple Descriptor.
// 2438  *
// 2439  * @param       buf  - pointer to a byte array big enough for data.
// 2440  * @param       desc - SimpleDescriptionFormat_t *
// 2441  *
// 2442  * @return      none
// 2443  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2444 void ZDO_BuildSimpleDescBuf( uint8 *buf, SimpleDescriptionFormat_t *desc )
ZDO_BuildSimpleDescBuf:
          CFI Block cfiBlock654 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
        CODE
// 2445 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV       A,#-0xe
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
// 2446   byte cnt;
// 2447   uint16 *ptr;
// 2448 
// 2449   *buf++ = desc->EndPoint;
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ??Subroutine243_0 & 0xFFFF
??CrossCallReturnLabel_605:
        LCALL     ?Subroutine16 & 0xFFFF
// 2450   *buf++ = HI_UINT16( desc->AppProfId );
??CrossCallReturnLabel_20:
        INC       DPTR
        MOV       R0,DPL
        MOV       R1,DPH
        LCALL     ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_608:
        LCALL     ?Subroutine23 & 0xFFFF
// 2451   *buf++ = LO_UINT16( desc->AppProfId );
??CrossCallReturnLabel_29:
        MOVX      @DPTR,A
// 2452   *buf++ = HI_UINT16( desc->AppDeviceId );
        MOV       A,R4
        ADD       A,#0x3
        MOV       R0,A
        CLR       A
        ADDC      A,R5
        MOV       R1,A
        MOV       DPL,R0
        MOV       DPH,A
        INC       DPTR
        LCALL     ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_150:
        LCALL     ?Subroutine23 & 0xFFFF
// 2453   *buf++ = LO_UINT16( desc->AppDeviceId );
??CrossCallReturnLabel_30:
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine16 & 0xFFFF
// 2454 
// 2455   *buf++ = (byte)(desc->AppDevVer << 4);
??CrossCallReturnLabel_21:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        SWAP      A
        ANL       A,#0xf0
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
// 2456 
// 2457   *buf++ = desc->AppNumInClusters;
        MOV       A,R4
        ADD       A,#0x6
        MOV       R0,A
        CLR       A
        ADDC      A,R5
        MOV       ?V2,R0
        MOV       ?V3,A
        MOV       DPL,R0
        MOV       DPH,A
        LCALL     ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_151:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,R2
        ADD       A,#0x7
        MOV       R2,A
        JNC       ??ZDO_BuildSimpleDescBuf_0
        INC       R3
// 2458   ptr = desc->pAppInClusterList;
??ZDO_BuildSimpleDescBuf_0:
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ?Subroutine106 & 0xFFFF
// 2459   for ( cnt = 0; cnt < desc->AppNumInClusters; ptr++, cnt++ )
??CrossCallReturnLabel_174:
        SJMP      ??ZDO_BuildSimpleDescBuf_1
// 2460   {
// 2461     *buf++ = HI_UINT16( *ptr );
??ZDO_BuildSimpleDescBuf_2:
        LCALL     ?Subroutine24 & 0xFFFF
// 2462     *buf++ = LO_UINT16( *ptr );
// 2463   }
??CrossCallReturnLabel_594:
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      @DPTR,A
        MOV       A,R2
        ADD       A,#0x2
        MOV       R2,A
        JNC       ??ZDO_BuildSimpleDescBuf_3
        INC       R3
??ZDO_BuildSimpleDescBuf_3:
        MOV       A,R6
        ADD       A,#0x2
        MOV       R6,A
        JNC       ??ZDO_BuildSimpleDescBuf_4
        INC       R7
??ZDO_BuildSimpleDescBuf_4:
        INC       ?V0
??ZDO_BuildSimpleDescBuf_1:
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        MOV       R0,DPL
        MOV       R1,DPH
        MOV       DPL,?V2
        MOV       DPH,?V3
        MOVX      A,@DPTR
        MOV       ?V1,A
        MOV       A,?V0
        CLR       C
        SUBB      A,?V1
        JC        ??ZDO_BuildSimpleDescBuf_2
// 2464 
// 2465   *buf++ = desc->AppNumOutClusters;
        MOV       A,R4
        ADD       A,#0x9
        MOV       R6,A
        CLR       A
        ADDC      A,R5
        MOV       ?V2,R6
        MOV       ?V3,A
        MOV       DPL,R6
        MOV       DPH,A
        LCALL     ??Subroutine243_0 & 0xFFFF
??CrossCallReturnLabel_606:
        MOVX      @DPTR,A
        MOV       A,R0
        MOV       R2,A
        MOV       A,R1
        MOV       R3,A
// 2466   ptr = desc->pAppOutClusterList;
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine106 & 0xFFFF
// 2467   for ( cnt = 0; cnt < desc->AppNumOutClusters; ptr++, cnt++ )
??CrossCallReturnLabel_175:
        SJMP      ??ZDO_BuildSimpleDescBuf_5
// 2468   {
// 2469     *buf++ = HI_UINT16( *ptr );
??ZDO_BuildSimpleDescBuf_6:
        LCALL     ?Subroutine24 & 0xFFFF
// 2470     *buf++ = LO_UINT16( *ptr );
// 2471   }
??CrossCallReturnLabel_595:
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,R2
        ADD       A,#0x2
        MOV       R2,A
        JNC       ??ZDO_BuildSimpleDescBuf_7
        INC       R3
??ZDO_BuildSimpleDescBuf_7:
        MOV       A,R6
        ADD       A,#0x2
        MOV       R6,A
        JNC       ??ZDO_BuildSimpleDescBuf_8
        INC       R7
??ZDO_BuildSimpleDescBuf_8:
        INC       ?V0
??ZDO_BuildSimpleDescBuf_5:
        MOV       DPL,?V2
        MOV       DPH,?V3
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       A,?V0
        CLR       C
        SUBB      A,R0
        JC        ??ZDO_BuildSimpleDescBuf_6
// 2472 }
        SJMP      ??Subroutine214_0
          CFI EndBlock cfiBlock654

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine106:
          CFI Block cfiCond655 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_174
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond656 Using cfiCommon0
          CFI (cfiCond656) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond656) Conditional ??CrossCallReturnLabel_175
          CFI (cfiCond656) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond656) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond656) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond656) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond656) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond656) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond656) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond656) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond656) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond656) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond656) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond656) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond656) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond656) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond656) CFA_SP SP+-2
          CFI (cfiCond656) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker657 Using cfiCommon1
          CFI (cfiPicker657) NoFunction
          CFI (cfiPicker657) Picker
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ??Subroutine231_0 & 0xFFFF
??CrossCallReturnLabel_542:
        MOV       R7,A
        MOV       ?V0,#0x0
        RET
          CFI EndBlock cfiCond655
          CFI EndBlock cfiCond656
          CFI EndBlock cfiPicker657

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine88:
          CFI Block cfiCond658 Using cfiCommon0
          CFI Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_149
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond659 Using cfiCommon0
          CFI (cfiCond659) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond659) Conditional ??CrossCallReturnLabel_150
          CFI (cfiCond659) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond659) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond659) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond659) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond659) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond659) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond659) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond659) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond659) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond659) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond659) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond659) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond659) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond659) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond659) CFA_SP SP+-2
          CFI (cfiCond659) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond660 Using cfiCommon0
          CFI (cfiCond660) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond660) Conditional ??CrossCallReturnLabel_151
          CFI (cfiCond660) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond660) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond660) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond660) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond660) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond660) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond660) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond660) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond660) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond660) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond660) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond660) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond660) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond660) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond660) CFA_SP SP+-2
          CFI (cfiCond660) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker661 Using cfiCommon1
          CFI (cfiPicker661) NoFunction
          CFI (cfiPicker661) Picker
        MOVX      A,@DPTR
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond658
          CFI EndBlock cfiCond659
          CFI EndBlock cfiCond660
          CFI EndBlock cfiPicker661

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine23:
          CFI Block cfiCond662 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_29
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond663 Using cfiCommon0
          CFI (cfiCond663) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond663) Conditional ??CrossCallReturnLabel_30
          CFI (cfiCond663) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond663) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond663) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond663) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond663) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond663) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond663) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond663) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond663) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond663) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond663) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond663) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond663) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond663) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond663) CFA_SP SP+-2
          CFI (cfiCond663) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker664 Using cfiCommon1
          CFI (cfiPicker664) NoFunction
          CFI (cfiPicker664) Picker
        INC       DPTR
        LCALL     ?Subroutine151 & 0xFFFF
??CrossCallReturnLabel_273:
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond662
          CFI EndBlock cfiCond663
          CFI EndBlock cfiPicker664

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine16:
          CFI Block cfiCond665 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_16
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond666 Using cfiCommon0
          CFI (cfiCond666) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond666) Conditional ??CrossCallReturnLabel_17
          CFI (cfiCond666) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond666) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond666) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond666) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond666) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond666) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond666) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond666) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond666) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond666) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond666) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond666) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond666) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond666) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond666) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond666) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond666) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond666) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond666) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond666) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond666) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond666) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond666) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond666) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond666) CFA_SP SP+-2
          CFI (cfiCond666) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond667 Using cfiCommon0
          CFI (cfiCond667) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond667) Conditional ??CrossCallReturnLabel_18
          CFI (cfiCond667) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond667) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond667) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond667) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond667) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond667) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond667) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond667) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond667) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond667) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond667) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond667) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond667) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond667) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond667) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond667) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond667) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond667) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond667) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond667) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond667) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond667) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond667) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond667) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond667) CFA_SP SP+-2
          CFI (cfiCond667) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond668 Using cfiCommon0
          CFI (cfiCond668) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond668) Conditional ??CrossCallReturnLabel_19
          CFI (cfiCond668) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond668) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond668) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond668) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond668) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond668) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond668) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond668) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond668) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond668) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond668) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond668) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond668) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond668) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond668) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond668) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond668) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond668) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond668) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond668) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond668) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond668) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond668) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond668) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond668) CFA_SP SP+-2
          CFI (cfiCond668) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond669 Using cfiCommon0
          CFI (cfiCond669) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond669) Conditional ??CrossCallReturnLabel_20
          CFI (cfiCond669) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond669) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond669) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond669) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond669) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond669) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond669) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond669) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond669) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond669) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond669) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond669) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond669) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond669) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond669) CFA_SP SP+-2
          CFI (cfiCond669) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond670 Using cfiCommon0
          CFI (cfiCond670) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond670) Conditional ??CrossCallReturnLabel_21
          CFI (cfiCond670) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond670) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond670) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond670) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond670) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond670) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond670) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond670) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond670) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond670) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond670) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond670) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond670) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond670) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond670) CFA_SP SP+-2
          CFI (cfiCond670) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond671 Using cfiCommon0
          CFI (cfiCond671) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond671) Conditional ??CrossCallReturnLabel_22
          CFI (cfiCond671) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond671) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond671) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond671) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond671) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond671) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond671) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond671) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond671) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond671) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond671) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond671) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond671) CFA_SP SP+-2
          CFI (cfiCond671) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker672 Using cfiCommon1
          CFI (cfiPicker672) NoFunction
          CFI (cfiPicker672) Picker
        MOVX      @DPTR,A
        ; Setup parameters for call to function APSME_BindRequest
        MOV       DPL,R4
        MOV       DPH,R5
        RET
          CFI EndBlock cfiCond665
          CFI EndBlock cfiCond666
          CFI EndBlock cfiCond667
          CFI EndBlock cfiCond668
          CFI EndBlock cfiCond669
          CFI EndBlock cfiCond670
          CFI EndBlock cfiCond671
          CFI EndBlock cfiPicker672

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine5:
          CFI Block cfiBlock673 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock673
        REQUIRE ??Subroutine214_0
        ; // Fall through to label ??Subroutine214_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine214_0:
          CFI Block cfiBlock674 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0x6
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock674
// 2473 
// 2474 #if ( ZG_BUILD_COORDINATOR_TYPE )
// 2475 #ifdef ZDO_ENDDEVICEBIND_RESPONSE
// 2476 /*********************************************************************
// 2477  * @fn      ZDO_MatchEndDeviceBind()
// 2478  *
// 2479  * @brief
// 2480  *
// 2481  *   Called to match end device binding requests
// 2482  *
// 2483  * @param  bindReq  - binding request information
// 2484  * @param  SecurityUse - Security enable/disable
// 2485  *
// 2486  * @return  none
// 2487  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2488 void ZDO_MatchEndDeviceBind( ZDEndDeviceBind_t *bindReq )
ZDO_MatchEndDeviceBind:
          CFI Block cfiBlock675 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
        CODE
// 2489 {
        FUNCALL ZDO_MatchEndDeviceBind, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDO_CopyMatchInfo
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDO_RemoveMatchMemory
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, APS_SetEndDeviceBindTimeout
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDO_CopyMatchInfo
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDO_CompareClusterLists
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 34, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 33, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDO_CompareClusterLists
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 34, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 33, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDMatchSendState
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        MOV       A,#-0x14
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 10
        MOV       A,#-0xa
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       ?V4,R2
        MOV       ?V5,R3
// 2490   zAddrType_t dstAddr;
// 2491   uint8 sendRsp = FALSE;
        MOV       R6,#0x0
// 2492   uint8 status;
// 2493 
// 2494   // Is this the first request?
// 2495   if ( matchED == NULL )
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        MOV       ?V8,DPL
        MOV       ?V9,DPH
        MOV       A,R2
        ADD       A,#0x2
        MOV       ?V6,A
        CLR       A
        ADDC      A,?V5
        MOV       ?V7,A
        MOV       DPTR,#matchED
        LCALL     ??Subroutine213_0 & 0xFFFF
??CrossCallReturnLabel_437:
        JZ        $+5
        LJMP      ??ZDO_MatchEndDeviceBind_0 & 0xFFFF
// 2496   {
// 2497     // Create match info structure
// 2498     matchED = (ZDMatchEndDeviceBind_t *)osal_mem_alloc( sizeof ( ZDMatchEndDeviceBind_t ) );
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,#0x37
        MOV       R3,#0x0
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       DPTR,#matchED
        LCALL     ??Subroutine196_0 & 0xFFFF
// 2499     if ( matchED )
??CrossCallReturnLabel_347:
        MOV       R1,A
        MOV       A,R2
        ORL       A,R1
        JZ        ??ZDO_MatchEndDeviceBind_1
// 2500     {
// 2501       // Clear the structure
// 2502       osal_memset( (uint8 *)matchED, 0, sizeof ( ZDMatchEndDeviceBind_t ) );
        ; Setup parameters for call to function osal_memset
        MOV       R4,#0x37
        MOV       R5,#0x0
        MOV       R1,#0x0
        LCALL     `??osal_memset::?relay`; Banked call to: osal_memset
// 2503 
// 2504       // Copy the first request's information
// 2505       if ( !ZDO_CopyMatchInfo( &(matchED->ed1), bindReq ) )
        ; Setup parameters for call to function ZDO_CopyMatchInfo
        MOV       R4,?V4
        MOV       R5,?V5
        MOV       DPTR,#matchED
        LCALL     ??Subroutine206_0 & 0xFFFF
// 2506       {
// 2507         status = ZDP_NO_ENTRY;
// 2508         sendRsp = TRUE;
// 2509       }
// 2510     }
??CrossCallReturnLabel_400:
        LCALL     `??ZDO_CopyMatchInfo::?relay`; Banked call to: ZDO_CopyMatchInfo
        MOV       A,R1
        JZ        $+5
        LJMP      ??ZDO_MatchEndDeviceBind_2 & 0xFFFF
// 2511     else
// 2512     {
// 2513       status = ZDP_NO_ENTRY;
??ZDO_MatchEndDeviceBind_1:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,#-0x78
??ZDO_MatchEndDeviceBind_3:
        MOVX      @DPTR,A
// 2514       sendRsp = TRUE;
// 2515     }
// 2516 
// 2517     if ( !sendRsp )
// 2518     {
// 2519       // Set into the correct state
// 2520       matchED->state = ZDMATCH_WAIT_REQ;
// 2521 
// 2522       // Setup the timeout
// 2523       APS_SetEndDeviceBindTimeout( AIB_MaxBindingTime, ZDO_EndDeviceBindMatchTimeoutCB );
// 2524     }
// 2525   }
// 2526   else
// 2527   {
// 2528     if(matchED->state == ZDMATCH_WAIT_REQ)//when bind is running,refuse new end-device-bind-req
// 2529     {
// 2530       matchED->state = ZDMATCH_SENDING_BINDS;
// 2531 
// 2532       // Copy the 2nd request's information
// 2533       if ( !ZDO_CopyMatchInfo( &(matchED->ed2), bindReq ) )
// 2534       {
// 2535         status = ZDP_NO_ENTRY;
// 2536         sendRsp = TRUE;
// 2537       }
// 2538 
// 2539       // Make a source match for ed1
// 2540       matchED->ed1numMatched = ZDO_CompareClusterLists(
// 2541       matchED->ed1.numOutClusters, matchED->ed1.outClusters,
// 2542       matchED->ed2.numInClusters, matchED->ed2.inClusters, ZDOBuildBuf );
// 2543       if ( matchED->ed1numMatched )
// 2544       {
// 2545         // Save the match list
// 2546         matchED->ed1Matched = osal_mem_alloc( (short)(matchED->ed1numMatched * sizeof ( uint16 )) );
// 2547         if ( matchED->ed1Matched )
// 2548         {
// 2549           osal_memcpy( matchED->ed1Matched, ZDOBuildBuf, (matchED->ed1numMatched * sizeof ( uint16 )) );
// 2550         }
// 2551         else
// 2552         {
// 2553           // Allocation error, stop
// 2554           status = ZDP_NO_ENTRY;
// 2555           sendRsp = TRUE;
// 2556         }
// 2557       }
// 2558 
// 2559       // Make a source match for ed2
// 2560       matchED->ed2numMatched = ZDO_CompareClusterLists(
// 2561       matchED->ed2.numOutClusters, matchED->ed2.outClusters,
// 2562       matchED->ed1.numInClusters, matchED->ed1.inClusters, ZDOBuildBuf );
// 2563       if ( matchED->ed2numMatched )
// 2564       {
// 2565         // Save the match list
// 2566         matchED->ed2Matched = osal_mem_alloc( (short)(matchED->ed2numMatched * sizeof ( uint16 )) );
// 2567         if ( matchED->ed2Matched )
// 2568         {
// 2569           osal_memcpy( matchED->ed2Matched, ZDOBuildBuf, (matchED->ed2numMatched * sizeof ( uint16 )) );
// 2570         }
// 2571         else
// 2572         {
// 2573           // Allocation error, stop
// 2574           status = ZDP_NO_ENTRY;
// 2575           sendRsp = TRUE;
// 2576         }
// 2577       }
// 2578 
// 2579       if ( (sendRsp == FALSE) && (matchED->ed1numMatched || matchED->ed2numMatched) )
// 2580       {
// 2581         // Do the first unbind/bind state
// 2582         ZDMatchSendState( ZDMATCH_REASON_START, ZDP_SUCCESS, 0 );
// 2583       }
// 2584       else
// 2585       {
// 2586         status = ZDP_NO_MATCH;
// 2587         sendRsp = TRUE;
// 2588       }
// 2589     }
// 2590     else
// 2591     {
// 2592       status = ZDP_NO_ENTRY;
// 2593       dstAddr.addrMode = Addr16Bit;
// 2594       dstAddr.addr.shortAddr = bindReq->srcAddr;
// 2595       ZDP_EndDeviceBindRsp( bindReq->TransSeq, &dstAddr, status, bindReq->SecurityUse );
// 2596       return;
// 2597     }
// 2598   }
// 2599 
// 2600   if ( sendRsp )
// 2601   {
// 2602     // send response to this requester
// 2603     dstAddr.addrMode = Addr16Bit;
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine18 & 0xFFFF
// 2604     dstAddr.addr.shortAddr = bindReq->srcAddr;
??CrossCallReturnLabel_23:
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine14 & 0xFFFF
// 2605     ZDP_EndDeviceBindRsp( bindReq->TransSeq, &dstAddr, status, bindReq->SecurityUse );
??CrossCallReturnLabel_12:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 31)
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V0,R0
        MOV       ?V1,R1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 33)
        MOV       ?V0,#0x20
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 35)
        MOV       R1,#0x1
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP102_8
        MOV       R2,?V4
        MOV       R3,?V5
        LCALL     ?Subroutine142 & 0xFFFF
??CrossCallReturnLabel_255:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 30)
// 2606 
// 2607     if ( matchED->state == ZDMATCH_SENDING_BINDS )
        LCALL     ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_106:
        JNZ       ??ZDO_MatchEndDeviceBind_4
// 2608     {
// 2609       // send response to first requester
// 2610       dstAddr.addrMode = Addr16Bit;
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x2
        LCALL     ?Subroutine48 & 0xFFFF
// 2611       dstAddr.addr.shortAddr = matchED->ed1.srcAddr;
// 2612       ZDP_EndDeviceBindRsp( matchED->ed1.TransSeq, &dstAddr, status, matchED->ed1.SecurityUse );
// 2613     }
??CrossCallReturnLabel_80:
        LCALL     ?Subroutine68 & 0xFFFF
??CrossCallReturnLabel_467:
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine11 & 0xFFFF
??CrossCallReturnLabel_4:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 31)
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V0,R0
        MOV       ?V1,R1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 33)
        MOV       ?V0,#0x20
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 35)
        MOV       R1,#0x1
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP102_8
        LCALL     ?Subroutine90 & 0xFFFF
??CrossCallReturnLabel_152:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 30)
// 2614 
// 2615     // Process ended - release memory used
// 2616     ZDO_RemoveMatchMemory();
??ZDO_MatchEndDeviceBind_4:
        ; Setup parameters for call to function ZDO_RemoveMatchMemory
        LCALL     `??ZDO_RemoveMatchMemory::?relay`; Banked call to: ZDO_RemoveMatchMemory
// 2617   }
// 2618 }
??ZDO_MatchEndDeviceBind_5:
        MOV       A,#0xa
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       R7,#0xc
        LJMP      ?BANKED_LEAVE_XDATA
          CFI CFA_XSP16 add(XSP16, 30)
??ZDO_MatchEndDeviceBind_2:
        LCALL     ??Subroutine215_0 & 0xFFFF
??CrossCallReturnLabel_443:
        ADD       A,#0x2e
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        MOV       A,#0x1
        MOVX      @DPTR,A
        ; Setup parameters for call to function APS_SetEndDeviceBindTimeout
        LCALL     ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_158:
        SJMP      ??ZDO_MatchEndDeviceBind_5
??ZDO_MatchEndDeviceBind_0:
        MOV       DPTR,#matchED
        MOVX      A,@DPTR
        ADD       A,#0x2e
        LCALL     ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_134:
        XRL       A,#0x1
        JZ        $+5
        LJMP      ??ZDO_MatchEndDeviceBind_6 & 0xFFFF
        MOV       A,#0x2
        MOVX      @DPTR,A
        ; Setup parameters for call to function ZDO_CopyMatchInfo
        MOV       R4,?V4
        MOV       R5,?V5
        LCALL     ?Subroutine104 & 0xFFFF
??CrossCallReturnLabel_172:
        LCALL     `??ZDO_CopyMatchInfo::?relay`; Banked call to: ZDO_CopyMatchInfo
        MOV       A,R1
        JNZ       ??ZDO_MatchEndDeviceBind_7
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,#-0x78
        MOVX      @DPTR,A
        MOV       R6,#0x1
??ZDO_MatchEndDeviceBind_7:
        ; Setup parameters for call to function ZDO_CompareClusterLists
        MOV       ?V0,#ZDOBuildBuf & 0xff
        MOV       ?V1,#(ZDOBuildBuf >> 8) & 0xff
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 32)
        LCALL     ??Subroutine215_0 & 0xFFFF
??CrossCallReturnLabel_444:
        ADD       A,#0x29
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 34)
        LCALL     ??Subroutine215_0 & 0xFFFF
??CrossCallReturnLabel_445:
        ADD       A,#0x28
        LCALL     ??Subroutine223_0 & 0xFFFF
??CrossCallReturnLabel_489:
        MOV       R4,A
        LCALL     ??Subroutine215_0 & 0xFFFF
??CrossCallReturnLabel_446:
        ADD       A,#0x15
        LCALL     ?Subroutine76 & 0xFFFF
??CrossCallReturnLabel_463:
        ADD       A,#0x14
        LCALL     ?Subroutine139 & 0xFFFF
??CrossCallReturnLabel_249:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       A,R1
        MOV       R0,A
        LCALL     ??Subroutine215_0 & 0xFFFF
??CrossCallReturnLabel_447:
        ADD       A,#0x31
        LCALL     ?Subroutine17 & 0xFFFF
??CrossCallReturnLabel_483:
        LCALL     ?Subroutine175 & 0xFFFF
??CrossCallReturnLabel_496:
        MOV       R0,A
        MOV       ?V2,#0x0
        JZ        ??ZDO_MatchEndDeviceBind_8
        ; Setup parameters for call to function osal_mem_alloc
        LCALL     ?Subroutine117 & 0xFFFF
??CrossCallReturnLabel_200:
        LCALL     ??Subroutine215_0 & 0xFFFF
??CrossCallReturnLabel_448:
        ADD       A,#0x32
        LCALL     ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_479:
        JZ        ??ZDO_MatchEndDeviceBind_9
        ; Setup parameters for call to function osal_memcpy
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 33)
        LCALL     ??Subroutine215_0 & 0xFFFF
??CrossCallReturnLabel_449:
        ADD       A,#0x31
        LCALL     ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_475:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 30)
        SJMP      ??ZDO_MatchEndDeviceBind_8
??ZDO_MatchEndDeviceBind_9:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,#-0x78
        MOVX      @DPTR,A
        MOV       R6,#0x1
??ZDO_MatchEndDeviceBind_8:
        ; Setup parameters for call to function ZDO_CompareClusterLists
        MOV       ?V10,#ZDOBuildBuf & 0xff
        MOV       ?V11,#(ZDOBuildBuf >> 8) & 0xff
        MOV       R0,#?V10
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 32)
        LCALL     ??Subroutine215_0 & 0xFFFF
??CrossCallReturnLabel_450:
        ADD       A,#0x12
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 34)
        LCALL     ??Subroutine215_0 & 0xFFFF
??CrossCallReturnLabel_451:
        ADD       A,#0x11
        LCALL     ??Subroutine223_0 & 0xFFFF
??CrossCallReturnLabel_490:
        MOV       R4,A
        LCALL     ??Subroutine215_0 & 0xFFFF
??CrossCallReturnLabel_452:
        ADD       A,#0x2c
        LCALL     ?Subroutine76 & 0xFFFF
??CrossCallReturnLabel_464:
        ADD       A,#0x2b
        LCALL     ?Subroutine139 & 0xFFFF
??CrossCallReturnLabel_250:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 30)
        MOV       A,R1
        MOV       R0,A
        LCALL     ??Subroutine215_0 & 0xFFFF
??CrossCallReturnLabel_453:
        ADD       A,#0x34
        LCALL     ?Subroutine17 & 0xFFFF
??CrossCallReturnLabel_484:
        ADD       A,#0x34
        LCALL     ??Subroutine223_0 & 0xFFFF
??CrossCallReturnLabel_491:
        JZ        ??ZDO_MatchEndDeviceBind_10
        ; Setup parameters for call to function osal_mem_alloc
        LCALL     ?Subroutine117 & 0xFFFF
??CrossCallReturnLabel_201:
        LCALL     ??Subroutine215_0 & 0xFFFF
??CrossCallReturnLabel_454:
        ADD       A,#0x35
        LCALL     ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_480:
        JZ        ??ZDO_MatchEndDeviceBind_11
        ; Setup parameters for call to function osal_memcpy
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 33)
        LCALL     ??Subroutine215_0 & 0xFFFF
??CrossCallReturnLabel_455:
        ADD       A,#0x34
        LCALL     ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_476:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 30)
??ZDO_MatchEndDeviceBind_10:
        MOV       A,R6
        MOV       C,0xE0 /* A   */.0
        JC        ??ZDO_MatchEndDeviceBind_12
        LCALL     ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_126:
        JNZ       ??ZDO_MatchEndDeviceBind_13
        MOV       DPTR,#matchED
        LCALL     ?Subroutine75 & 0xFFFF
??CrossCallReturnLabel_128:
        JZ        ??ZDO_MatchEndDeviceBind_12
??ZDO_MatchEndDeviceBind_13:
        ; Setup parameters for call to function ZDMatchSendState
        MOV       R3,#0x0
        MOV       R2,#0x0
        MOV       R1,#0x0
        LCALL     `??ZDMatchSendState::?relay`; Banked call to: ZDMatchSendState
        LJMP      ??ZDO_MatchEndDeviceBind_5 & 0xFFFF
??ZDO_MatchEndDeviceBind_11:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,#-0x78
        MOVX      @DPTR,A
??ZDO_MatchEndDeviceBind_12:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,#-0x7a
        LJMP      ??ZDO_MatchEndDeviceBind_3 & 0xFFFF
??ZDO_MatchEndDeviceBind_6:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,#-0x78
        MOVX      @DPTR,A
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_24:
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine14 & 0xFFFF
??CrossCallReturnLabel_13:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 31)
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V0,R0
        MOV       ?V1,R1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 33)
        MOV       ?V0,#0x20
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 35)
        MOV       R1,#0x1
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP102_8
        LCALL     ?Subroutine142 & 0xFFFF
??CrossCallReturnLabel_256:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 30)
        LJMP      ??ZDO_MatchEndDeviceBind_5 & 0xFFFF
          CFI EndBlock cfiBlock675

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine142:
          CFI Block cfiCond676 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
          CFI Conditional ??CrossCallReturnLabel_253
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond677 Using cfiCommon0
          CFI (cfiCond677) Function ZDO_ProcessUserDescSet
          CFI (cfiCond677) Conditional ??CrossCallReturnLabel_254
          CFI (cfiCond677) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond677) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond677) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond677) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond677) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond677) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond677) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond677) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond677) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond677) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond677) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond677) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond677) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond677) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond677) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond677) CFA_SP SP+-2
          CFI (cfiCond677) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond678 Using cfiCommon0
          CFI (cfiCond678) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond678) Conditional ??CrossCallReturnLabel_255
          CFI (cfiCond678) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond678) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond678) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond678) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond678) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond678) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond678) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond678) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond678) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond678) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond678) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond678) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond678) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond678) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond678) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond678) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond678) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond678) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond678) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond678) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond678) CFA_SP SP+-2
          CFI (cfiCond678) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond679 Using cfiCommon0
          CFI (cfiCond679) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond679) Conditional ??CrossCallReturnLabel_256
          CFI (cfiCond679) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond679) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond679) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond679) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond679) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond679) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond679) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond679) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond679) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond679) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond679) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond679) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond679) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond679) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond679) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond679) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond679) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond679) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond679) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond679) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond679) CFA_SP SP+-2
          CFI (cfiCond679) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond680 Using cfiCommon0
          CFI (cfiCond680) Function ZDMatchSendState
          CFI (cfiCond680) Conditional ??CrossCallReturnLabel_257
          CFI (cfiCond680) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond680) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond680) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond680) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond680) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond680) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond680) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond680) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond680) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond680) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond680) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond680) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond680) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond680) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond680) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond680) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond680) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond680) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond680) CFA_SP SP+-2
          CFI (cfiCond680) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker681 Using cfiCommon1
          CFI (cfiPicker681) NoFunction
          CFI (cfiPicker681) Picker
        LCALL     ??Subroutine207_0 & 0xFFFF
??CrossCallReturnLabel_414:
        RET
          CFI EndBlock cfiCond676
          CFI EndBlock cfiCond677
          CFI EndBlock cfiCond678
          CFI EndBlock cfiCond679
          CFI EndBlock cfiCond680
          CFI EndBlock cfiPicker681

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine139:
          CFI Block cfiCond682 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_249
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond683 Using cfiCommon0
          CFI (cfiCond683) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond683) Conditional ??CrossCallReturnLabel_250
          CFI (cfiCond683) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond683) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond683) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond683) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond683) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond683) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond683) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond683) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond683) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond683) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond683) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond683) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond683) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond683) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond683) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond683) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond683) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond683) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond683) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond683) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond683) CFA_SP SP+-2
          CFI (cfiCond683) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiPicker684 Using cfiCommon1
          CFI (cfiPicker684) NoFunction
          CFI (cfiPicker684) Picker
        LCALL     ??Subroutine223_0 & 0xFFFF
??CrossCallReturnLabel_495:
        MOV       R1,A
        LCALL     `??ZDO_CompareClusterLists::?relay`; Banked call to: ZDO_CompareClusterLists
        MOV       A,#0x4
        RET
          CFI EndBlock cfiCond682
          CFI EndBlock cfiCond683
          CFI EndBlock cfiPicker684

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine117:
          CFI Block cfiCond685 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_198
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond686 Using cfiCommon0
          CFI (cfiCond686) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond686) Conditional ??CrossCallReturnLabel_199
          CFI (cfiCond686) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond686) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond686) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond686) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond686) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond686) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond686) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond686) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond686) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond686) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond686) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond686) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond686) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond686) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond686) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond686) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond686) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond686) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond686) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond686) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond686) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond686) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond686) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond686) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond686) CFA_SP SP+-2
          CFI (cfiCond686) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond687 Using cfiCommon0
          CFI (cfiCond687) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond687) Conditional ??CrossCallReturnLabel_200
          CFI (cfiCond687) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond687) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond687) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond687) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond687) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond687) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond687) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond687) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond687) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond687) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond687) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond687) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond687) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond687) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond687) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond687) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond687) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond687) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond687) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond687) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond687) CFA_SP SP+-2
          CFI (cfiCond687) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond688 Using cfiCommon0
          CFI (cfiCond688) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond688) Conditional ??CrossCallReturnLabel_201
          CFI (cfiCond688) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond688) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond688) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond688) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond688) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond688) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond688) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond688) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond688) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond688) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond688) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond688) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond688) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond688) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond688) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond688) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond688) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond688) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond688) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond688) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond688) CFA_SP SP+-2
          CFI (cfiCond688) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond689 Using cfiCommon0
          CFI (cfiCond689) Function ZDO_CopyMatchInfo
          CFI (cfiCond689) Conditional ??CrossCallReturnLabel_202
          CFI (cfiCond689) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond689) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond689) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond689) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond689) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond689) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond689) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond689) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond689) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond689) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond689) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond689) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond689) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond689) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond689) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond689) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond689) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond689) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond689) CFA_SP SP+-2
          CFI (cfiCond689) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond690 Using cfiCommon0
          CFI (cfiCond690) Function ZDO_CopyMatchInfo
          CFI (cfiCond690) Conditional ??CrossCallReturnLabel_203
          CFI (cfiCond690) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond690) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond690) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond690) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond690) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond690) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond690) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond690) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond690) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond690) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond690) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond690) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond690) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond690) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond690) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond690) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond690) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond690) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond690) CFA_SP SP+-2
          CFI (cfiCond690) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker691 Using cfiCommon1
          CFI (cfiPicker691) NoFunction
          CFI (cfiPicker691) Picker
        LCALL     ?Subroutine171 & 0xFFFF
??CrossCallReturnLabel_297:
        RET
          CFI EndBlock cfiCond685
          CFI EndBlock cfiCond686
          CFI EndBlock cfiCond687
          CFI EndBlock cfiCond688
          CFI EndBlock cfiCond689
          CFI EndBlock cfiCond690
          CFI EndBlock cfiPicker691

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine171:
          CFI Block cfiCond692 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_297, ??CrossCallReturnLabel_198
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond693 Using cfiCommon0
          CFI (cfiCond693) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond693) Conditional ??CrossCallReturnLabel_297, ??CrossCallReturnLabel_199
          CFI (cfiCond693) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond693) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond693) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond693) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond693) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond693) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond693) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond693) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond693) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond693) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond693) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond693) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond693) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond693) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond693) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond693) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond693) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond693) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond693) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond693) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond693) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond693) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond693) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond693) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond693) CFA_SP SP+-4
          CFI (cfiCond693) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond694 Using cfiCommon0
          CFI (cfiCond694) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond694) Conditional ??CrossCallReturnLabel_297, ??CrossCallReturnLabel_200
          CFI (cfiCond694) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond694) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond694) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond694) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond694) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond694) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond694) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond694) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond694) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond694) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond694) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond694) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond694) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond694) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond694) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond694) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond694) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond694) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond694) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond694) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond694) CFA_SP SP+-4
          CFI (cfiCond694) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond695 Using cfiCommon0
          CFI (cfiCond695) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond695) Conditional ??CrossCallReturnLabel_297, ??CrossCallReturnLabel_201
          CFI (cfiCond695) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond695) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond695) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond695) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond695) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond695) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond695) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond695) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond695) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond695) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond695) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond695) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond695) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond695) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond695) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond695) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond695) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond695) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond695) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond695) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond695) CFA_SP SP+-4
          CFI (cfiCond695) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond696 Using cfiCommon0
          CFI (cfiCond696) Function ZDO_CopyMatchInfo
          CFI (cfiCond696) Conditional ??CrossCallReturnLabel_297, ??CrossCallReturnLabel_202
          CFI (cfiCond696) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond696) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond696) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond696) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond696) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond696) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond696) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond696) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond696) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond696) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond696) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond696) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond696) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond696) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond696) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond696) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond696) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond696) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond696) CFA_SP SP+-4
          CFI (cfiCond696) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond697 Using cfiCommon0
          CFI (cfiCond697) Function ZDO_CopyMatchInfo
          CFI (cfiCond697) Conditional ??CrossCallReturnLabel_297, ??CrossCallReturnLabel_203
          CFI (cfiCond697) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond697) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond697) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond697) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond697) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond697) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond697) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond697) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond697) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond697) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond697) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond697) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond697) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond697) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond697) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond697) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond697) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond697) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond697) CFA_SP SP+-4
          CFI (cfiCond697) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond698 Using cfiCommon0
          CFI (cfiCond698) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond698) Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_196
          CFI (cfiCond698) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond698) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond698) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond698) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond698) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond698) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond698) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond698) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond698) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond698) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond698) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond698) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond698) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond698) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond698) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond698) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond698) CFA_SP SP+-4
          CFI (cfiCond698) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond699 Using cfiCommon0
          CFI (cfiCond699) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond699) Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_197
          CFI (cfiCond699) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond699) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond699) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond699) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond699) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond699) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond699) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond699) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond699) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond699) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond699) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond699) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond699) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond699) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond699) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond699) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond699) CFA_SP SP+-4
          CFI (cfiCond699) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker700 Using cfiCommon1
          CFI (cfiPicker700) NoFunction
          CFI (cfiPicker700) Picker
        ADD       A,0xE0 /* A   */
        MOV       R2,A
        CLR       A
        RLC       A
        MOV       R3,A
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        RET
          CFI EndBlock cfiCond692
          CFI EndBlock cfiCond693
          CFI EndBlock cfiCond694
          CFI EndBlock cfiCond695
          CFI EndBlock cfiCond696
          CFI EndBlock cfiCond697
          CFI EndBlock cfiCond698
          CFI EndBlock cfiCond699
          CFI EndBlock cfiPicker700

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine76:
          CFI Block cfiCond701 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_463
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond702 Using cfiCommon0
          CFI (cfiCond702) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond702) Conditional ??CrossCallReturnLabel_464
          CFI (cfiCond702) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond702) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond702) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond702) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond702) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond702) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond702) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond702) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond702) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond702) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond702) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond702) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond702) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond702) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond702) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond702) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond702) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond702) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond702) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond702) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond702) CFA_SP SP+-2
          CFI (cfiCond702) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiPicker703 Using cfiCommon1
          CFI (cfiPicker703) NoFunction
          CFI (cfiPicker703) Picker
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        LCALL     ?Subroutine160 & 0xFFFF
??CrossCallReturnLabel_407:
          CFI EndBlock cfiCond701
          CFI EndBlock cfiCond702
          CFI EndBlock cfiPicker703
        REQUIRE ??Subroutine215_0
        ; // Fall through to label ??Subroutine215_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine215_0:
          CFI Block cfiCond704 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_443
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond705 Using cfiCommon0
          CFI (cfiCond705) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond705) Conditional ??CrossCallReturnLabel_444
          CFI (cfiCond705) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond705) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond705) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond705) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond705) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond705) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond705) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond705) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond705) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond705) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond705) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond705) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond705) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond705) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond705) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond705) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond705) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond705) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond705) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond705) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond705) CFA_SP SP+-2
          CFI (cfiCond705) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond706 Using cfiCommon0
          CFI (cfiCond706) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond706) Conditional ??CrossCallReturnLabel_445
          CFI (cfiCond706) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond706) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond706) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond706) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond706) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond706) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond706) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond706) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond706) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond706) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond706) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond706) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond706) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond706) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond706) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond706) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond706) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond706) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond706) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond706) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond706) CFA_SP SP+-2
          CFI (cfiCond706) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond707 Using cfiCommon0
          CFI (cfiCond707) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond707) Conditional ??CrossCallReturnLabel_446
          CFI (cfiCond707) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond707) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond707) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond707) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond707) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond707) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond707) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond707) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond707) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond707) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond707) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond707) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond707) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond707) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond707) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond707) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond707) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond707) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond707) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond707) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond707) CFA_SP SP+-2
          CFI (cfiCond707) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond708 Using cfiCommon0
          CFI (cfiCond708) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond708) Conditional ??CrossCallReturnLabel_447
          CFI (cfiCond708) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond708) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond708) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond708) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond708) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond708) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond708) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond708) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond708) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond708) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond708) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond708) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond708) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond708) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond708) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond708) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond708) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond708) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond708) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond708) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond708) CFA_SP SP+-2
          CFI (cfiCond708) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond709 Using cfiCommon0
          CFI (cfiCond709) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond709) Conditional ??CrossCallReturnLabel_448
          CFI (cfiCond709) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond709) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond709) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond709) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond709) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond709) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond709) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond709) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond709) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond709) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond709) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond709) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond709) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond709) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond709) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond709) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond709) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond709) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond709) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond709) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond709) CFA_SP SP+-2
          CFI (cfiCond709) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond710 Using cfiCommon0
          CFI (cfiCond710) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond710) Conditional ??CrossCallReturnLabel_449
          CFI (cfiCond710) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond710) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond710) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond710) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond710) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond710) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond710) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond710) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond710) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond710) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond710) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond710) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond710) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond710) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond710) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond710) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond710) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond710) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond710) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond710) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond710) CFA_SP SP+-2
          CFI (cfiCond710) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond711 Using cfiCommon0
          CFI (cfiCond711) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond711) Conditional ??CrossCallReturnLabel_450
          CFI (cfiCond711) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond711) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond711) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond711) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond711) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond711) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond711) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond711) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond711) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond711) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond711) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond711) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond711) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond711) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond711) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond711) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond711) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond711) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond711) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond711) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond711) CFA_SP SP+-2
          CFI (cfiCond711) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond712 Using cfiCommon0
          CFI (cfiCond712) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond712) Conditional ??CrossCallReturnLabel_451
          CFI (cfiCond712) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond712) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond712) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond712) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond712) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond712) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond712) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond712) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond712) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond712) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond712) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond712) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond712) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond712) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond712) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond712) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond712) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond712) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond712) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond712) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond712) CFA_SP SP+-2
          CFI (cfiCond712) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond713 Using cfiCommon0
          CFI (cfiCond713) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond713) Conditional ??CrossCallReturnLabel_452
          CFI (cfiCond713) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond713) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond713) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond713) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond713) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond713) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond713) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond713) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond713) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond713) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond713) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond713) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond713) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond713) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond713) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond713) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond713) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond713) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond713) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond713) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond713) CFA_SP SP+-2
          CFI (cfiCond713) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond714 Using cfiCommon0
          CFI (cfiCond714) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond714) Conditional ??CrossCallReturnLabel_453
          CFI (cfiCond714) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond714) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond714) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond714) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond714) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond714) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond714) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond714) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond714) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond714) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond714) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond714) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond714) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond714) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond714) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond714) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond714) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond714) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond714) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond714) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond714) CFA_SP SP+-2
          CFI (cfiCond714) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond715 Using cfiCommon0
          CFI (cfiCond715) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond715) Conditional ??CrossCallReturnLabel_454
          CFI (cfiCond715) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond715) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond715) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond715) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond715) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond715) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond715) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond715) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond715) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond715) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond715) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond715) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond715) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond715) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond715) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond715) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond715) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond715) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond715) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond715) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond715) CFA_SP SP+-2
          CFI (cfiCond715) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond716 Using cfiCommon0
          CFI (cfiCond716) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond716) Conditional ??CrossCallReturnLabel_455
          CFI (cfiCond716) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond716) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond716) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond716) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond716) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond716) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond716) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond716) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond716) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond716) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond716) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond716) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond716) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond716) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond716) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond716) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond716) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond716) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond716) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond716) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond716) CFA_SP SP+-2
          CFI (cfiCond716) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond717 Using cfiCommon0
          CFI (cfiCond717) Function ZDO_RemoveMatchMemory
          CFI (cfiCond717) Conditional ??CrossCallReturnLabel_456
          CFI (cfiCond717) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond717) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond717) CFA_SP SP+-7
          CFI Block cfiCond718 Using cfiCommon0
          CFI (cfiCond718) Function ZDO_RemoveMatchMemory
          CFI (cfiCond718) Conditional ??CrossCallReturnLabel_457
          CFI (cfiCond718) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond718) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond718) CFA_SP SP+-7
          CFI Block cfiCond719 Using cfiCommon0
          CFI (cfiCond719) Function ZDO_RemoveMatchMemory
          CFI (cfiCond719) Conditional ??CrossCallReturnLabel_458
          CFI (cfiCond719) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond719) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond719) CFA_SP SP+-7
          CFI Block cfiCond720 Using cfiCommon0
          CFI (cfiCond720) Function ZDO_RemoveMatchMemory
          CFI (cfiCond720) Conditional ??CrossCallReturnLabel_459
          CFI (cfiCond720) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond720) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond720) CFA_SP SP+-7
          CFI Block cfiCond721 Using cfiCommon0
          CFI (cfiCond721) Function ZDO_RemoveMatchMemory
          CFI (cfiCond721) Conditional ??CrossCallReturnLabel_460
          CFI (cfiCond721) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond721) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond721) CFA_SP SP+-7
          CFI Block cfiCond722 Using cfiCommon0
          CFI (cfiCond722) Function ZDMatchSendState
          CFI (cfiCond722) Conditional ??CrossCallReturnLabel_461
          CFI (cfiCond722) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond722) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond722) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond722) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond722) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond722) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond722) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond722) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond722) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond722) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond722) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond722) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond722) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond722) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond722) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond722) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond722) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond722) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond722) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond723 Using cfiCommon0
          CFI (cfiCond723) Function ZDMatchSendState
          CFI (cfiCond723) Conditional ??CrossCallReturnLabel_462
          CFI (cfiCond723) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond723) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond723) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond723) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond723) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond723) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond723) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond723) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond723) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond723) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond723) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond723) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond723) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond723) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond723) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond723) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond723) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond723) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond723) CFA_SP SP+-2
          CFI (cfiCond723) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond724 Using cfiCommon0
          CFI (cfiCond724) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond724) Conditional ??CrossCallReturnLabel_463
          CFI (cfiCond724) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond724) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond724) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond724) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond724) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond724) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond724) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond724) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond724) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond724) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond724) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond724) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond724) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond724) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond724) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond724) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond724) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond724) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond724) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond724) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond724) CFA_SP SP+-2
          CFI (cfiCond724) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond725 Using cfiCommon0
          CFI (cfiCond725) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond725) Conditional ??CrossCallReturnLabel_464
          CFI (cfiCond725) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond725) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond725) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond725) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond725) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond725) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond725) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond725) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond725) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond725) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond725) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond725) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond725) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond725) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond725) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond725) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond725) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond725) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond725) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond725) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond725) CFA_SP SP+-2
          CFI (cfiCond725) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiPicker726 Using cfiCommon1
          CFI (cfiPicker726) NoFunction
          CFI (cfiPicker726) Picker
        MOV       DPTR,#matchED
          CFI EndBlock cfiCond704
          CFI EndBlock cfiCond705
          CFI EndBlock cfiCond706
          CFI EndBlock cfiCond707
          CFI EndBlock cfiCond708
          CFI EndBlock cfiCond709
          CFI EndBlock cfiCond710
          CFI EndBlock cfiCond711
          CFI EndBlock cfiCond712
          CFI EndBlock cfiCond713
          CFI EndBlock cfiCond714
          CFI EndBlock cfiCond715
          CFI EndBlock cfiCond716
          CFI EndBlock cfiCond717
          CFI EndBlock cfiCond718
          CFI EndBlock cfiCond719
          CFI EndBlock cfiCond720
          CFI EndBlock cfiCond721
          CFI EndBlock cfiCond722
          CFI EndBlock cfiCond723
          CFI EndBlock cfiCond724
          CFI EndBlock cfiCond725
          CFI EndBlock cfiPicker726
        REQUIRE ??Subroutine216_0
        ; // Fall through to label ??Subroutine216_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine216_0:
          CFI Block cfiCond727 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
          CFI Conditional ??CrossCallReturnLabel_441
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond728 Using cfiCommon0
          CFI (cfiCond728) Function ZDMatchSendState
          CFI (cfiCond728) Conditional ??CrossCallReturnLabel_442
          CFI (cfiCond728) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond728) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond728) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond728) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond728) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond728) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond728) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond728) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond728) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond728) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond728) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond728) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond728) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond728) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond728) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond728) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond728) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond728) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond728) CFA_SP SP+-2
          CFI (cfiCond728) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond729 Using cfiCommon0
          CFI (cfiCond729) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond729) Conditional ??CrossCallReturnLabel_443
          CFI (cfiCond729) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond729) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond729) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond729) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond729) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond729) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond729) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond729) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond729) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond729) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond729) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond729) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond729) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond729) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond729) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond729) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond729) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond729) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond729) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond729) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond729) CFA_SP SP+-2
          CFI (cfiCond729) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond730 Using cfiCommon0
          CFI (cfiCond730) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond730) Conditional ??CrossCallReturnLabel_444
          CFI (cfiCond730) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond730) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond730) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond730) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond730) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond730) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond730) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond730) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond730) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond730) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond730) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond730) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond730) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond730) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond730) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond730) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond730) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond730) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond730) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond730) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond730) CFA_SP SP+-2
          CFI (cfiCond730) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond731 Using cfiCommon0
          CFI (cfiCond731) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond731) Conditional ??CrossCallReturnLabel_445
          CFI (cfiCond731) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond731) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond731) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond731) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond731) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond731) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond731) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond731) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond731) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond731) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond731) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond731) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond731) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond731) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond731) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond731) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond731) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond731) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond731) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond731) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond731) CFA_SP SP+-2
          CFI (cfiCond731) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond732 Using cfiCommon0
          CFI (cfiCond732) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond732) Conditional ??CrossCallReturnLabel_446
          CFI (cfiCond732) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond732) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond732) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond732) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond732) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond732) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond732) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond732) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond732) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond732) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond732) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond732) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond732) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond732) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond732) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond732) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond732) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond732) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond732) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond732) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond732) CFA_SP SP+-2
          CFI (cfiCond732) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond733 Using cfiCommon0
          CFI (cfiCond733) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond733) Conditional ??CrossCallReturnLabel_447
          CFI (cfiCond733) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond733) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond733) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond733) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond733) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond733) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond733) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond733) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond733) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond733) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond733) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond733) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond733) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond733) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond733) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond733) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond733) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond733) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond733) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond733) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond733) CFA_SP SP+-2
          CFI (cfiCond733) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond734 Using cfiCommon0
          CFI (cfiCond734) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond734) Conditional ??CrossCallReturnLabel_448
          CFI (cfiCond734) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond734) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond734) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond734) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond734) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond734) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond734) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond734) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond734) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond734) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond734) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond734) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond734) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond734) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond734) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond734) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond734) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond734) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond734) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond734) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond734) CFA_SP SP+-2
          CFI (cfiCond734) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond735 Using cfiCommon0
          CFI (cfiCond735) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond735) Conditional ??CrossCallReturnLabel_449
          CFI (cfiCond735) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond735) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond735) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond735) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond735) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond735) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond735) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond735) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond735) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond735) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond735) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond735) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond735) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond735) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond735) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond735) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond735) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond735) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond735) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond735) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond735) CFA_SP SP+-2
          CFI (cfiCond735) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond736 Using cfiCommon0
          CFI (cfiCond736) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond736) Conditional ??CrossCallReturnLabel_450
          CFI (cfiCond736) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond736) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond736) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond736) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond736) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond736) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond736) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond736) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond736) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond736) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond736) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond736) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond736) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond736) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond736) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond736) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond736) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond736) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond736) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond736) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond736) CFA_SP SP+-2
          CFI (cfiCond736) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond737 Using cfiCommon0
          CFI (cfiCond737) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond737) Conditional ??CrossCallReturnLabel_451
          CFI (cfiCond737) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond737) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond737) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond737) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond737) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond737) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond737) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond737) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond737) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond737) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond737) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond737) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond737) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond737) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond737) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond737) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond737) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond737) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond737) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond737) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond737) CFA_SP SP+-2
          CFI (cfiCond737) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond738 Using cfiCommon0
          CFI (cfiCond738) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond738) Conditional ??CrossCallReturnLabel_452
          CFI (cfiCond738) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond738) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond738) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond738) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond738) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond738) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond738) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond738) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond738) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond738) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond738) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond738) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond738) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond738) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond738) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond738) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond738) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond738) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond738) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond738) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond738) CFA_SP SP+-2
          CFI (cfiCond738) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond739 Using cfiCommon0
          CFI (cfiCond739) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond739) Conditional ??CrossCallReturnLabel_453
          CFI (cfiCond739) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond739) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond739) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond739) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond739) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond739) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond739) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond739) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond739) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond739) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond739) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond739) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond739) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond739) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond739) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond739) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond739) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond739) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond739) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond739) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond739) CFA_SP SP+-2
          CFI (cfiCond739) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond740 Using cfiCommon0
          CFI (cfiCond740) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond740) Conditional ??CrossCallReturnLabel_454
          CFI (cfiCond740) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond740) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond740) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond740) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond740) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond740) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond740) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond740) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond740) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond740) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond740) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond740) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond740) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond740) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond740) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond740) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond740) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond740) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond740) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond740) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond740) CFA_SP SP+-2
          CFI (cfiCond740) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond741 Using cfiCommon0
          CFI (cfiCond741) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond741) Conditional ??CrossCallReturnLabel_455
          CFI (cfiCond741) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond741) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond741) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond741) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond741) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond741) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond741) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond741) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond741) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond741) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond741) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond741) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond741) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond741) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond741) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond741) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond741) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond741) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond741) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond741) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond741) CFA_SP SP+-2
          CFI (cfiCond741) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond742 Using cfiCommon0
          CFI (cfiCond742) Function ZDO_RemoveMatchMemory
          CFI (cfiCond742) Conditional ??CrossCallReturnLabel_456
          CFI (cfiCond742) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond742) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond742) CFA_SP SP+-7
          CFI Block cfiCond743 Using cfiCommon0
          CFI (cfiCond743) Function ZDO_RemoveMatchMemory
          CFI (cfiCond743) Conditional ??CrossCallReturnLabel_457
          CFI (cfiCond743) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond743) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond743) CFA_SP SP+-7
          CFI Block cfiCond744 Using cfiCommon0
          CFI (cfiCond744) Function ZDO_RemoveMatchMemory
          CFI (cfiCond744) Conditional ??CrossCallReturnLabel_458
          CFI (cfiCond744) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond744) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond744) CFA_SP SP+-7
          CFI Block cfiCond745 Using cfiCommon0
          CFI (cfiCond745) Function ZDO_RemoveMatchMemory
          CFI (cfiCond745) Conditional ??CrossCallReturnLabel_459
          CFI (cfiCond745) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond745) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond745) CFA_SP SP+-7
          CFI Block cfiCond746 Using cfiCommon0
          CFI (cfiCond746) Function ZDO_RemoveMatchMemory
          CFI (cfiCond746) Conditional ??CrossCallReturnLabel_460
          CFI (cfiCond746) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond746) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond746) CFA_SP SP+-7
          CFI Block cfiCond747 Using cfiCommon0
          CFI (cfiCond747) Function ZDMatchSendState
          CFI (cfiCond747) Conditional ??CrossCallReturnLabel_461
          CFI (cfiCond747) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond747) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond747) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond747) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond747) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond747) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond747) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond747) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond747) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond747) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond747) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond747) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond747) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond747) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond747) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond747) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond747) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond747) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond747) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond748 Using cfiCommon0
          CFI (cfiCond748) Function ZDMatchSendState
          CFI (cfiCond748) Conditional ??CrossCallReturnLabel_462
          CFI (cfiCond748) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond748) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond748) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond748) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond748) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond748) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond748) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond748) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond748) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond748) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond748) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond748) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond748) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond748) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond748) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond748) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond748) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond748) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond748) CFA_SP SP+-2
          CFI (cfiCond748) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond749 Using cfiCommon0
          CFI (cfiCond749) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond749) Conditional ??CrossCallReturnLabel_463
          CFI (cfiCond749) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond749) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond749) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond749) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond749) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond749) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond749) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond749) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond749) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond749) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond749) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond749) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond749) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond749) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond749) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond749) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond749) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond749) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond749) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond749) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond749) CFA_SP SP+-2
          CFI (cfiCond749) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond750 Using cfiCommon0
          CFI (cfiCond750) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond750) Conditional ??CrossCallReturnLabel_464
          CFI (cfiCond750) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond750) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond750) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond750) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond750) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond750) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond750) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond750) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond750) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond750) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond750) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond750) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond750) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond750) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond750) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond750) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond750) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond750) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond750) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond750) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond750) CFA_SP SP+-2
          CFI (cfiCond750) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiPicker751 Using cfiCommon1
          CFI (cfiPicker751) NoFunction
          CFI (cfiPicker751) Picker
        LCALL     ??Subroutine229_0 & 0xFFFF
??CrossCallReturnLabel_523:
        RET
          CFI EndBlock cfiCond727
          CFI EndBlock cfiCond728
          CFI EndBlock cfiCond729
          CFI EndBlock cfiCond730
          CFI EndBlock cfiCond731
          CFI EndBlock cfiCond732
          CFI EndBlock cfiCond733
          CFI EndBlock cfiCond734
          CFI EndBlock cfiCond735
          CFI EndBlock cfiCond736
          CFI EndBlock cfiCond737
          CFI EndBlock cfiCond738
          CFI EndBlock cfiCond739
          CFI EndBlock cfiCond740
          CFI EndBlock cfiCond741
          CFI EndBlock cfiCond742
          CFI EndBlock cfiCond743
          CFI EndBlock cfiCond744
          CFI EndBlock cfiCond745
          CFI EndBlock cfiCond746
          CFI EndBlock cfiCond747
          CFI EndBlock cfiCond748
          CFI EndBlock cfiCond749
          CFI EndBlock cfiCond750
          CFI EndBlock cfiPicker751

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine68:
          CFI Block cfiCond752 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_467
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond753 Using cfiCommon0
          CFI (cfiCond753) Function ZDMatchSendState
          CFI (cfiCond753) Conditional ??CrossCallReturnLabel_468
          CFI (cfiCond753) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond753) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond753) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond753) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond753) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond753) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond753) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond753) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond753) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond753) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond753) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond753) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond753) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond753) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond753) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond753) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond753) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond753) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond753) CFA_SP SP+-2
          CFI (cfiCond753) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker754 Using cfiCommon1
          CFI (cfiPicker754) NoFunction
          CFI (cfiPicker754) Picker
        MOV       DPH,A
        MOV       DPL,R0
          CFI EndBlock cfiCond752
          CFI EndBlock cfiCond753
          CFI EndBlock cfiPicker754
        REQUIRE ??Subroutine217_0
        ; // Fall through to label ??Subroutine217_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine217_0:
          CFI Block cfiCond755 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_466
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond756 Using cfiCommon0
          CFI (cfiCond756) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond756) Conditional ??CrossCallReturnLabel_467
          CFI (cfiCond756) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond756) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond756) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond756) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond756) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond756) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond756) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond756) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond756) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond756) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond756) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond756) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond756) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond756) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond756) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond756) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond756) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond756) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond756) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond756) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond756) CFA_SP SP+-2
          CFI (cfiCond756) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond757 Using cfiCommon0
          CFI (cfiCond757) Function ZDMatchSendState
          CFI (cfiCond757) Conditional ??CrossCallReturnLabel_468
          CFI (cfiCond757) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond757) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond757) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond757) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond757) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond757) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond757) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond757) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond757) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond757) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond757) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond757) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond757) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond757) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond757) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond757) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond757) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond757) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond757) CFA_SP SP+-2
          CFI (cfiCond757) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker758 Using cfiCommon1
          CFI (cfiPicker758) NoFunction
          CFI (cfiPicker758) Picker
        INC       DPTR
        INC       DPTR
          CFI EndBlock cfiCond755
          CFI EndBlock cfiCond756
          CFI EndBlock cfiCond757
          CFI EndBlock cfiPicker758
        REQUIRE ??Subroutine218_0
        ; // Fall through to label ??Subroutine218_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine218_0:
          CFI Block cfiCond759 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_465
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond760 Using cfiCommon0
          CFI (cfiCond760) Function ZDMatchSendState
          CFI (cfiCond760) Conditional ??CrossCallReturnLabel_466
          CFI (cfiCond760) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond760) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond760) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond760) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond760) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond760) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond760) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond760) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond760) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond760) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond760) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond760) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond760) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond760) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond760) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond760) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond760) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond760) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond760) CFA_SP SP+-2
          CFI (cfiCond760) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond761 Using cfiCommon0
          CFI (cfiCond761) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond761) Conditional ??CrossCallReturnLabel_467
          CFI (cfiCond761) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond761) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond761) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond761) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond761) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond761) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond761) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond761) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond761) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond761) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond761) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond761) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond761) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond761) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond761) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond761) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond761) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond761) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond761) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond761) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond761) CFA_SP SP+-2
          CFI (cfiCond761) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond762 Using cfiCommon0
          CFI (cfiCond762) Function ZDMatchSendState
          CFI (cfiCond762) Conditional ??CrossCallReturnLabel_468
          CFI (cfiCond762) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond762) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond762) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond762) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond762) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond762) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond762) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond762) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond762) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond762) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond762) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond762) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond762) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond762) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond762) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond762) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond762) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond762) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond762) CFA_SP SP+-2
          CFI (cfiCond762) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker763 Using cfiCommon1
          CFI (cfiPicker763) NoFunction
          CFI (cfiPicker763) Picker
        LCALL     ?Subroutine168 & 0xFFFF
??CrossCallReturnLabel_474:
        MOV       A,#0x1
        RET
          CFI EndBlock cfiCond759
          CFI EndBlock cfiCond760
          CFI EndBlock cfiCond761
          CFI EndBlock cfiCond762
          CFI EndBlock cfiPicker763

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine56:
          CFI Block cfiCond764 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_475
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond765 Using cfiCommon0
          CFI (cfiCond765) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond765) Conditional ??CrossCallReturnLabel_476
          CFI (cfiCond765) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond765) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond765) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond765) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond765) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond765) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond765) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond765) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond765) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond765) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond765) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond765) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond765) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond765) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond765) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond765) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond765) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond765) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond765) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond765) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond765) CFA_SP SP+-2
          CFI (cfiCond765) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker766 Using cfiCommon1
          CFI (cfiPicker766) NoFunction
          CFI (cfiPicker766) Picker
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
          CFI EndBlock cfiCond764
          CFI EndBlock cfiCond765
          CFI EndBlock cfiPicker766
        REQUIRE ??Subroutine219_0
        ; // Fall through to label ??Subroutine219_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine219_0:
          CFI Block cfiCond767 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
          CFI Conditional ??CrossCallReturnLabel_477
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond768 Using cfiCommon0
          CFI (cfiCond768) Function ZDO_CopyMatchInfo
          CFI (cfiCond768) Conditional ??CrossCallReturnLabel_478
          CFI (cfiCond768) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond768) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond768) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond768) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond768) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond768) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond768) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond768) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond768) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond768) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond768) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond768) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond768) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond768) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond768) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond768) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond768) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond768) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond768) CFA_SP SP+-2
          CFI (cfiCond768) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond769 Using cfiCommon0
          CFI (cfiCond769) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond769) Conditional ??CrossCallReturnLabel_475
          CFI (cfiCond769) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond769) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond769) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond769) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond769) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond769) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond769) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond769) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond769) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond769) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond769) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond769) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond769) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond769) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond769) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond769) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond769) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond769) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond769) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond769) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond769) CFA_SP SP+-2
          CFI (cfiCond769) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond770 Using cfiCommon0
          CFI (cfiCond770) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond770) Conditional ??CrossCallReturnLabel_476
          CFI (cfiCond770) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond770) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond770) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond770) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond770) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond770) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond770) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond770) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond770) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond770) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond770) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond770) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond770) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond770) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond770) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond770) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond770) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond770) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond770) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond770) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond770) CFA_SP SP+-2
          CFI (cfiCond770) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker771 Using cfiCommon1
          CFI (cfiPicker771) NoFunction
          CFI (cfiPicker771) Picker
        MOVX      A,@DPTR
        LCALL     ??Subroutine244_0 & 0xFFFF
??CrossCallReturnLabel_612:
        LCALL     `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV       A,#0x3
        RET
          CFI EndBlock cfiCond767
          CFI EndBlock cfiCond768
          CFI EndBlock cfiCond769
          CFI EndBlock cfiCond770
          CFI EndBlock cfiPicker771

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine22:
          CFI Block cfiCond772 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_479
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond773 Using cfiCommon0
          CFI (cfiCond773) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond773) Conditional ??CrossCallReturnLabel_480
          CFI (cfiCond773) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond773) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond773) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond773) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond773) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond773) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond773) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond773) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond773) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond773) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond773) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond773) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond773) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond773) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond773) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond773) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond773) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond773) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond773) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond773) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond773) CFA_SP SP+-2
          CFI (cfiCond773) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker774 Using cfiCommon1
          CFI (cfiPicker774) NoFunction
          CFI (cfiPicker774) Picker
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
          CFI EndBlock cfiCond772
          CFI EndBlock cfiCond773
          CFI EndBlock cfiPicker774
        REQUIRE ??Subroutine220_0
        ; // Fall through to label ??Subroutine220_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine220_0:
          CFI Block cfiCond775 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
          CFI Conditional ??CrossCallReturnLabel_481
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond776 Using cfiCommon0
          CFI (cfiCond776) Function ZDO_CopyMatchInfo
          CFI (cfiCond776) Conditional ??CrossCallReturnLabel_482
          CFI (cfiCond776) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond776) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond776) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond776) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond776) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond776) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond776) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond776) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond776) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond776) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond776) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond776) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond776) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond776) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond776) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond776) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond776) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond776) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond776) CFA_SP SP+-2
          CFI (cfiCond776) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond777 Using cfiCommon0
          CFI (cfiCond777) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond777) Conditional ??CrossCallReturnLabel_479
          CFI (cfiCond777) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond777) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond777) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond777) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond777) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond777) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond777) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond777) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond777) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond777) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond777) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond777) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond777) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond777) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond777) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond777) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond777) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond777) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond777) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond777) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond777) CFA_SP SP+-2
          CFI (cfiCond777) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond778 Using cfiCommon0
          CFI (cfiCond778) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond778) Conditional ??CrossCallReturnLabel_480
          CFI (cfiCond778) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond778) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond778) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond778) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond778) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond778) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond778) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond778) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond778) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond778) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond778) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond778) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond778) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond778) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond778) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond778) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond778) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond778) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond778) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond778) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond778) CFA_SP SP+-2
          CFI (cfiCond778) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker779 Using cfiCommon1
          CFI (cfiPicker779) NoFunction
          CFI (cfiPicker779) Picker
        MOV       A,R2
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R3
        MOVX      @DPTR,A
        MOV       A,R2
        ORL       A,R3
        RET
          CFI EndBlock cfiCond775
          CFI EndBlock cfiCond776
          CFI EndBlock cfiCond777
          CFI EndBlock cfiCond778
          CFI EndBlock cfiPicker779

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine18:
          CFI Block cfiCond780 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_23
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond781 Using cfiCommon0
          CFI (cfiCond781) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond781) Conditional ??CrossCallReturnLabel_24
          CFI (cfiCond781) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond781) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond781) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond781) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond781) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond781) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond781) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond781) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond781) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond781) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond781) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond781) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond781) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond781) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond781) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond781) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond781) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond781) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond781) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond781) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond781) CFA_SP SP+-2
          CFI (cfiCond781) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker782 Using cfiCommon1
          CFI (cfiPicker782) NoFunction
          CFI (cfiPicker782) Picker
        MOV       A,#0x2
        MOVX      @DPTR,A
        MOV       DPL,?V6
        MOV       DPH,?V7
        LCALL     ?Subroutine168 & 0xFFFF
??CrossCallReturnLabel_470:
        MOV       A,#0x1
        RET
          CFI EndBlock cfiCond780
          CFI EndBlock cfiCond781
          CFI EndBlock cfiPicker782

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine17:
          CFI Block cfiCond783 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_483
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond784 Using cfiCommon0
          CFI (cfiCond784) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond784) Conditional ??CrossCallReturnLabel_484
          CFI (cfiCond784) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond784) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond784) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond784) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond784) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond784) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond784) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond784) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond784) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond784) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond784) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond784) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond784) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond784) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond784) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond784) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond784) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond784) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond784) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond784) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond784) CFA_SP SP+-2
          CFI (cfiCond784) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker785 Using cfiCommon1
          CFI (cfiPicker785) NoFunction
          CFI (cfiPicker785) Picker
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
          CFI EndBlock cfiCond783
          CFI EndBlock cfiCond784
          CFI EndBlock cfiPicker785
        REQUIRE ??Subroutine221_0
        ; // Fall through to label ??Subroutine221_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine221_0:
          CFI Block cfiCond786 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_485
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond787 Using cfiCommon0
          CFI (cfiCond787) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond787) Conditional ??CrossCallReturnLabel_483
          CFI (cfiCond787) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond787) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond787) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond787) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond787) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond787) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond787) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond787) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond787) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond787) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond787) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond787) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond787) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond787) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond787) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond787) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond787) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond787) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond787) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond787) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond787) CFA_SP SP+-2
          CFI (cfiCond787) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond788 Using cfiCommon0
          CFI (cfiCond788) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond788) Conditional ??CrossCallReturnLabel_484
          CFI (cfiCond788) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond788) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond788) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond788) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond788) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond788) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond788) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond788) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond788) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond788) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond788) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond788) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond788) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond788) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond788) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond788) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond788) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond788) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond788) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond788) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond788) CFA_SP SP+-2
          CFI (cfiCond788) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker789 Using cfiCommon1
          CFI (cfiPicker789) NoFunction
          CFI (cfiPicker789) Picker
        LCALL     ?Subroutine148 & 0xFFFF
??CrossCallReturnLabel_486:
        XCH       A,R0
        RET
          CFI EndBlock cfiCond786
          CFI EndBlock cfiCond787
          CFI EndBlock cfiCond788
          CFI EndBlock cfiPicker789

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine148:
          CFI Block cfiCond790 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_486, ??CrossCallReturnLabel_483
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond791 Using cfiCommon0
          CFI (cfiCond791) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond791) Conditional ??CrossCallReturnLabel_486, ??CrossCallReturnLabel_484
          CFI (cfiCond791) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond791) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond791) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond791) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond791) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond791) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond791) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond791) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond791) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond791) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond791) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond791) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond791) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond791) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond791) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond791) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond791) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond791) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond791) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond791) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond791) CFA_SP SP+-4
          CFI (cfiCond791) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond792 Using cfiCommon0
          CFI (cfiCond792) Function ZDMatchSendState
          CFI (cfiCond792) Conditional ??CrossCallReturnLabel_486, ??CrossCallReturnLabel_485
          CFI (cfiCond792) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond792) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond792) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond792) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond792) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond792) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond792) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond792) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond792) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond792) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond792) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond792) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond792) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond792) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond792) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond792) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond792) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond792) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond792) CFA_SP SP+-4
          CFI (cfiCond792) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond793 Using cfiCommon0
          CFI (cfiCond793) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond793) Conditional ??CrossCallReturnLabel_487, ??CrossCallReturnLabel_4
          CFI (cfiCond793) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond793) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond793) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond793) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond793) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond793) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond793) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond793) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond793) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond793) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond793) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond793) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond793) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond793) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond793) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond793) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond793) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond793) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond793) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond793) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond793) CFA_SP SP+-4
          CFI (cfiCond793) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond794 Using cfiCommon0
          CFI (cfiCond794) Function ZDMatchSendState
          CFI (cfiCond794) Conditional ??CrossCallReturnLabel_487, ??CrossCallReturnLabel_5
          CFI (cfiCond794) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond794) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond794) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond794) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond794) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond794) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond794) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond794) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond794) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond794) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond794) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond794) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond794) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond794) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond794) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond794) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond794) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond794) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond794) CFA_SP SP+-4
          CFI (cfiCond794) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker795 Using cfiCommon1
          CFI (cfiPicker795) NoFunction
          CFI (cfiPicker795) Picker
        MOV       A,R1
          CFI EndBlock cfiCond790
          CFI EndBlock cfiCond791
          CFI EndBlock cfiCond792
          CFI EndBlock cfiCond793
          CFI EndBlock cfiCond794
          CFI EndBlock cfiPicker795
        REQUIRE ??Subroutine222_0
        ; // Fall through to label ??Subroutine222_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine222_0:
          CFI Block cfiCond796 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_488, ??CrossCallReturnLabel_80
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond797 Using cfiCommon0
          CFI (cfiCond797) Function ZDMatchSendState
          CFI (cfiCond797) Conditional ??CrossCallReturnLabel_488, ??CrossCallReturnLabel_81
          CFI (cfiCond797) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond797) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond797) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond797) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond797) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond797) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond797) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond797) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond797) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond797) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond797) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond797) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond797) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond797) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond797) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond797) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond797) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond797) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond797) CFA_SP SP+-4
          CFI (cfiCond797) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond798 Using cfiCommon0
          CFI (cfiCond798) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond798) Conditional ??CrossCallReturnLabel_486, ??CrossCallReturnLabel_483
          CFI (cfiCond798) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond798) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond798) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond798) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond798) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond798) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond798) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond798) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond798) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond798) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond798) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond798) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond798) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond798) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond798) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond798) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond798) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond798) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond798) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond798) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond798) CFA_SP SP+-4
          CFI (cfiCond798) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond799 Using cfiCommon0
          CFI (cfiCond799) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond799) Conditional ??CrossCallReturnLabel_486, ??CrossCallReturnLabel_484
          CFI (cfiCond799) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond799) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond799) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond799) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond799) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond799) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond799) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond799) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond799) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond799) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond799) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond799) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond799) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond799) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond799) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond799) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond799) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond799) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond799) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond799) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond799) CFA_SP SP+-4
          CFI (cfiCond799) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond800 Using cfiCommon0
          CFI (cfiCond800) Function ZDMatchSendState
          CFI (cfiCond800) Conditional ??CrossCallReturnLabel_486, ??CrossCallReturnLabel_485
          CFI (cfiCond800) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond800) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond800) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond800) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond800) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond800) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond800) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond800) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond800) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond800) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond800) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond800) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond800) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond800) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond800) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond800) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond800) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond800) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond800) CFA_SP SP+-4
          CFI (cfiCond800) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond801 Using cfiCommon0
          CFI (cfiCond801) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond801) Conditional ??CrossCallReturnLabel_487, ??CrossCallReturnLabel_4
          CFI (cfiCond801) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond801) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond801) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond801) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond801) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond801) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond801) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond801) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond801) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond801) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond801) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond801) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond801) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond801) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond801) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond801) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond801) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond801) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond801) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond801) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond801) CFA_SP SP+-4
          CFI (cfiCond801) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond802 Using cfiCommon0
          CFI (cfiCond802) Function ZDMatchSendState
          CFI (cfiCond802) Conditional ??CrossCallReturnLabel_487, ??CrossCallReturnLabel_5
          CFI (cfiCond802) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond802) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond802) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond802) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond802) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond802) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond802) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond802) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond802) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond802) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond802) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond802) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond802) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond802) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond802) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond802) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond802) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond802) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond802) CFA_SP SP+-4
          CFI (cfiCond802) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker803 Using cfiCommon1
          CFI (cfiPicker803) NoFunction
          CFI (cfiPicker803) Picker
        MOVX      @DPTR,A
        ; Setup parameters for call to function ZDP_SendData
        ; Setup parameters for call to function ZDP_SendData
        ; Setup parameters for call to function ZDP_SendData
        MOV       DPTR,#matchED
        LCALL     ?Subroutine181 & 0xFFFF
??CrossCallReturnLabel_531:
        RET
          CFI EndBlock cfiCond796
          CFI EndBlock cfiCond797
          CFI EndBlock cfiCond798
          CFI EndBlock cfiCond799
          CFI EndBlock cfiCond800
          CFI EndBlock cfiCond801
          CFI EndBlock cfiCond802
          CFI EndBlock cfiPicker803

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine14:
          CFI Block cfiCond804 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_12
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond805 Using cfiCommon0
          CFI (cfiCond805) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond805) Conditional ??CrossCallReturnLabel_13
          CFI (cfiCond805) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond805) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond805) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond805) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond805) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond805) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond805) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond805) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond805) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond805) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond805) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond805) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond805) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond805) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond805) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond805) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond805) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond805) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond805) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond805) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond805) CFA_SP SP+-2
          CFI (cfiCond805) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker806 Using cfiCommon1
          CFI (cfiPicker806) NoFunction
          CFI (cfiPicker806) Picker
        MOV       A,R0
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
        MOVX      @DPTR,A
        ; Setup parameters for call to function ZDP_SendData
        ; Setup parameters for call to function ZDP_SendData
        MOV       DPL,?V8
        MOV       DPH,?V9
        MOVX      A,@DPTR
        MOV       ?V0,A
        MOV       R0,#?V0
        RET
          CFI EndBlock cfiCond804
          CFI EndBlock cfiCond805
          CFI EndBlock cfiPicker806
// 2619 #endif
// 2620 
// 2621 /*********************************************************************
// 2622  * @fn      ZDO_RemoveMatchMemory()
// 2623  *
// 2624  * @brief   Called to clear the memory used for the end device bind.
// 2625  *
// 2626  * @param  none
// 2627  *
// 2628  * @return  none
// 2629  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2630 static void ZDO_RemoveMatchMemory( void )
ZDO_RemoveMatchMemory:
          CFI Block cfiBlock807 Using cfiCommon0
          CFI Function ZDO_RemoveMatchMemory
        CODE
// 2631 {
        FUNCALL ZDO_RemoveMatchMemory, osal_mem_free
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_RemoveMatchMemory, osal_mem_free
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_RemoveMatchMemory, osal_mem_free
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_RemoveMatchMemory, osal_mem_free
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_RemoveMatchMemory, osal_mem_free
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_RemoveMatchMemory, osal_mem_free
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_RemoveMatchMemory, osal_mem_free
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH      DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH      DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2632   if ( matchED != NULL )
        MOV       DPTR,#matchED
        LCALL     ??Subroutine213_0 & 0xFFFF
??CrossCallReturnLabel_438:
        JZ        ??ZDO_RemoveMatchMemory_0
// 2633   {
// 2634     if ( matchED->ed2Matched != NULL )
        MOV       A,R0
        ADD       A,#0x35
        MOV       DPL,A
        CLR       A
        ADDC      A,R1
        LCALL     ??Subroutine199_0 & 0xFFFF
??CrossCallReturnLabel_360:
        JZ        ??ZDO_RemoveMatchMemory_1
// 2635     {
// 2636       osal_mem_free( matchED->ed2Matched );
        ; Setup parameters for call to function osal_mem_free
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2637     }
// 2638     if ( matchED->ed1Matched != NULL )
??ZDO_RemoveMatchMemory_1:
        LCALL     ??Subroutine215_0 & 0xFFFF
??CrossCallReturnLabel_456:
        ADD       A,#0x32
        LCALL     ?Subroutine53 & 0xFFFF
??CrossCallReturnLabel_362:
        JZ        ??ZDO_RemoveMatchMemory_2
// 2639     {
// 2640       osal_mem_free( matchED->ed1Matched );
        ; Setup parameters for call to function osal_mem_free
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2641     }
// 2642     if ( matchED->ed1.inClusters != NULL )
??ZDO_RemoveMatchMemory_2:
        LCALL     ??Subroutine215_0 & 0xFFFF
??CrossCallReturnLabel_457:
        ADD       A,#0x12
        LCALL     ?Subroutine53 & 0xFFFF
??CrossCallReturnLabel_363:
        JZ        ??ZDO_RemoveMatchMemory_3
// 2643     {
// 2644       osal_mem_free( matchED->ed1.inClusters );
        ; Setup parameters for call to function osal_mem_free
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2645     }
// 2646     if ( matchED->ed1.outClusters != NULL )
??ZDO_RemoveMatchMemory_3:
        LCALL     ??Subroutine215_0 & 0xFFFF
??CrossCallReturnLabel_458:
        ADD       A,#0x15
        LCALL     ?Subroutine53 & 0xFFFF
??CrossCallReturnLabel_364:
        JZ        ??ZDO_RemoveMatchMemory_4
// 2647     {
// 2648       osal_mem_free( matchED->ed1.outClusters );
        ; Setup parameters for call to function osal_mem_free
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2649     }
// 2650     if ( matchED->ed2.inClusters != NULL )
??ZDO_RemoveMatchMemory_4:
        LCALL     ??Subroutine215_0 & 0xFFFF
??CrossCallReturnLabel_459:
        ADD       A,#0x29
        LCALL     ?Subroutine53 & 0xFFFF
??CrossCallReturnLabel_365:
        JZ        ??ZDO_RemoveMatchMemory_5
// 2651     {
// 2652       osal_mem_free( matchED->ed2.inClusters );
        ; Setup parameters for call to function osal_mem_free
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2653     }
// 2654     if ( matchED->ed2.outClusters != NULL )
??ZDO_RemoveMatchMemory_5:
        LCALL     ??Subroutine215_0 & 0xFFFF
??CrossCallReturnLabel_460:
        ADD       A,#0x2c
        LCALL     ?Subroutine53 & 0xFFFF
??CrossCallReturnLabel_366:
        JZ        ??ZDO_RemoveMatchMemory_6
// 2655     {
// 2656       osal_mem_free( matchED->ed2.outClusters );
        ; Setup parameters for call to function osal_mem_free
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2657     }
// 2658 
// 2659     osal_mem_free( matchED );
??ZDO_RemoveMatchMemory_6:
        ; Setup parameters for call to function osal_mem_free
        MOV       DPTR,#matchED
        LCALL     ?Subroutine72 & 0xFFFF
// 2660     matchED = (ZDMatchEndDeviceBind_t *)NULL;
??CrossCallReturnLabel_122:
        MOV       DPTR,#matchED
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
// 2661   }
// 2662 }
??ZDO_RemoveMatchMemory_0:
        LJMP      ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock807
// 2663 
// 2664 /*********************************************************************
// 2665  * @fn      ZDO_CopyMatchInfo()
// 2666  *
// 2667  * @brief   Called to copy memory used for the end device bind.
// 2668  *
// 2669  * @param  srcReq - source information
// 2670  * @param  dstReq - destination location
// 2671  *
// 2672  * @return  TRUE if copy was successful.
// 2673  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2674 static uint8 ZDO_CopyMatchInfo( ZDEndDeviceBind_t *destReq, ZDEndDeviceBind_t *srcReq )
ZDO_CopyMatchInfo:
          CFI Block cfiBlock808 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
        CODE
// 2675 {
        FUNCALL ZDO_CopyMatchInfo, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_CopyMatchInfo, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_CopyMatchInfo, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_CopyMatchInfo, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_CopyMatchInfo, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_CopyMatchInfo, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_CopyMatchInfo, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        MOV       A,#-0x12
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 0
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
        MOV       ?V0,R4
        MOV       ?V1,R5
// 2676   uint8 allOK = TRUE;
        MOV       ?V7,#0x1
// 2677 
// 2678   // Copy bind information into the match info structure
// 2679   osal_memcpy( (uint8 *)destReq, srcReq, sizeof ( ZDEndDeviceBind_t ) );
        ; Setup parameters for call to function osal_memcpy
        MOV       ?V4,R4
        MOV       ?V5,R5
        MOV       ?V6,#0x0
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       R4,#0x17
        MOV       R5,#0x0
        LCALL     ??Subroutine242_0 & 0xFFFF
??CrossCallReturnLabel_601:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
// 2680 
// 2681   // Initialize the destination cluster pointers
// 2682   destReq->inClusters = NULL;
        MOV       A,R6
        ADD       A,#0x12
        LCALL     ?Subroutine114 & 0xFFFF
??CrossCallReturnLabel_183:
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
// 2683   destReq->outClusters = NULL;
        MOV       A,R6
        ADD       A,#0x15
        MOV       R6,A
        JNC       ??ZDO_CopyMatchInfo_0
        INC       R7
??ZDO_CopyMatchInfo_0:
        MOV       DPL,A
        MOV       DPH,R7
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
// 2684 
// 2685   // Copy input cluster IDs
// 2686   if ( srcReq->numInClusters )
        MOV       A,?V0
        ADD       A,#0x11
        LCALL     ?Subroutine140 & 0xFFFF
??CrossCallReturnLabel_251:
        JZ        ??ZDO_CopyMatchInfo_1
// 2687   {
// 2688     destReq->inClusters = osal_mem_alloc( (short)(srcReq->numInClusters * sizeof ( uint16 )) );
        ; Setup parameters for call to function osal_mem_alloc
        LCALL     ?Subroutine117 & 0xFFFF
??CrossCallReturnLabel_202:
        MOV       DPL,?V8
        MOV       DPH,?V9
        LCALL     ??Subroutine220_0 & 0xFFFF
// 2689     if ( destReq->inClusters )
??CrossCallReturnLabel_481:
        JZ        ??ZDO_CopyMatchInfo_2
// 2690     {
// 2691       // Copy the clusters
// 2692       osal_memcpy( (uint8*)(destReq->inClusters), (uint8 *)(srcReq->inClusters),
// 2693                       (srcReq->numInClusters * sizeof ( uint16 )) );
        ; Setup parameters for call to function osal_memcpy
        MOV       A,?V0
        ADD       A,#0x12
        LCALL     ?Subroutine100 & 0xFFFF
// 2694     }
??CrossCallReturnLabel_166:
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       DPL,?V2
        MOV       DPH,?V3
        LCALL     ??Subroutine219_0 & 0xFFFF
??CrossCallReturnLabel_477:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
        SJMP      ??ZDO_CopyMatchInfo_1
// 2695     else
// 2696     {
// 2697       allOK = FALSE;
??ZDO_CopyMatchInfo_2:
        MOV       ?V7,#0x0
// 2698     }
// 2699   }
// 2700 
// 2701   // Copy output cluster IDs
// 2702   if ( srcReq->numOutClusters )
??ZDO_CopyMatchInfo_1:
        MOV       A,?V0
        ADD       A,#0x14
        LCALL     ?Subroutine140 & 0xFFFF
??CrossCallReturnLabel_252:
        JZ        ??ZDO_CopyMatchInfo_3
// 2703   {
// 2704     destReq->outClusters = osal_mem_alloc( (short)(srcReq->numOutClusters * sizeof ( uint16 )) );
        ; Setup parameters for call to function osal_mem_alloc
        LCALL     ?Subroutine117 & 0xFFFF
??CrossCallReturnLabel_203:
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ??Subroutine220_0 & 0xFFFF
// 2705     if ( destReq->outClusters )
??CrossCallReturnLabel_482:
        JZ        ??ZDO_CopyMatchInfo_4
// 2706     {
// 2707       // Copy the clusters
// 2708       osal_memcpy( (uint8 *)(destReq->outClusters), (uint8 *)(srcReq->outClusters),
// 2709                       (srcReq->numOutClusters * sizeof ( uint16 )) );
        ; Setup parameters for call to function osal_memcpy
        MOV       A,?V0
        ADD       A,#0x15
        LCALL     ?Subroutine100 & 0xFFFF
// 2710     }
??CrossCallReturnLabel_167:
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       DPL,?V2
        MOV       DPH,?V3
        LCALL     ??Subroutine219_0 & 0xFFFF
??CrossCallReturnLabel_478:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
// 2711     else
// 2712     {
// 2713       allOK = FALSE;
// 2714     }
// 2715   }
// 2716 
// 2717   if ( allOK == FALSE )
??ZDO_CopyMatchInfo_3:
        MOV       A,?V7
        MOV       C,0xE0 /* A   */.0
        JC        ??ZDO_CopyMatchInfo_5
// 2718   {
// 2719     if ( destReq->inClusters != NULL )
??ZDO_CopyMatchInfo_6:
        MOV       DPL,?V8
        MOV       DPH,?V9
        LCALL     ??Subroutine200_0 & 0xFFFF
??CrossCallReturnLabel_355:
        JZ        ??ZDO_CopyMatchInfo_7
// 2720     {
// 2721       osal_mem_free( destReq->inClusters );
        ; Setup parameters for call to function osal_mem_free
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2722     }
// 2723     if ( destReq->outClusters != NULL )
??ZDO_CopyMatchInfo_7:
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ??Subroutine200_0 & 0xFFFF
??CrossCallReturnLabel_356:
        JZ        ??ZDO_CopyMatchInfo_5
// 2724     {
// 2725       osal_mem_free( destReq->outClusters );
        ; Setup parameters for call to function osal_mem_free
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2726     }
// 2727   }
// 2728 
// 2729   return ( allOK );
??ZDO_CopyMatchInfo_5:
        MOV       R1,?V7
        LJMP      ??Subroutine225_0 & 0xFFFF
??ZDO_CopyMatchInfo_4:
        MOV       ?V7,#0x0
        SJMP      ??ZDO_CopyMatchInfo_6
// 2730 }
          CFI EndBlock cfiBlock808

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine140:
          CFI Block cfiCond809 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
          CFI Conditional ??CrossCallReturnLabel_251
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond810 Using cfiCommon0
          CFI (cfiCond810) Function ZDO_CopyMatchInfo
          CFI (cfiCond810) Conditional ??CrossCallReturnLabel_252
          CFI (cfiCond810) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond810) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond810) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond810) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond810) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond810) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond810) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond810) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond810) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond810) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond810) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond810) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond810) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond810) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond810) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond810) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond810) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond810) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond810) CFA_SP SP+-2
          CFI (cfiCond810) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker811 Using cfiCommon1
          CFI (cfiPicker811) NoFunction
          CFI (cfiPicker811) Picker
        MOV       ?V2,A
        CLR       A
        ADDC      A,?V1
        MOV       ?V3,A
        MOV       DPL,?V2
        MOV       DPH,A
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond809
          CFI EndBlock cfiCond810
          CFI EndBlock cfiPicker811

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine114:
          CFI Block cfiCond812 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_182
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond813 Using cfiCommon0
          CFI (cfiCond813) Function ZDO_CopyMatchInfo
          CFI (cfiCond813) Conditional ??CrossCallReturnLabel_183
          CFI (cfiCond813) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond813) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond813) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond813) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond813) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond813) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond813) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond813) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond813) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond813) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond813) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond813) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond813) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond813) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond813) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond813) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond813) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond813) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond813) CFA_SP SP+-2
          CFI (cfiCond813) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker814 Using cfiCommon1
          CFI (cfiPicker814) NoFunction
          CFI (cfiPicker814) Picker
        MOV       ?V8,A
        CLR       A
        ADDC      A,R7
        MOV       ?V9,A
        MOV       DPL,?V8
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond812
          CFI EndBlock cfiCond813
          CFI EndBlock cfiPicker814

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine100:
          CFI Block cfiCond815 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
          CFI Conditional ??CrossCallReturnLabel_166
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond816 Using cfiCommon0
          CFI (cfiCond816) Function ZDO_CopyMatchInfo
          CFI (cfiCond816) Conditional ??CrossCallReturnLabel_167
          CFI (cfiCond816) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond816) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond816) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond816) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond816) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond816) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond816) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond816) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond816) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond816) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond816) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond816) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond816) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond816) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond816) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond816) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond816) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond816) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond816) CFA_SP SP+-2
          CFI (cfiCond816) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker817 Using cfiCommon1
          CFI (cfiPicker817) NoFunction
          CFI (cfiPicker817) Picker
        MOV       DPL,A
        CLR       A
        ADDC      A,?V1
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       ?V4,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V5,A
        MOV       R0,#?V4
        RET
          CFI EndBlock cfiCond815
          CFI EndBlock cfiCond816
          CFI EndBlock cfiPicker817
// 2731 
// 2732 /*********************************************************************
// 2733  * @fn      ZDMatchSendState()
// 2734  *
// 2735  * @brief   State machine for the End device match message algorithm.
// 2736  *
// 2737  * @param  reason - state of algoritm
// 2738  * @param  status - initial message status
// 2739  * @param  TransSeq - next transaction sequence number
// 2740  *
// 2741  * @return  FALSE if error and we are not currently matching, TRUE
// 2742  *          if success.
// 2743  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2744 uint8 ZDMatchSendState( uint8 reason, uint8 status, uint8 TransSeq )
ZDMatchSendState:
          CFI Block cfiBlock818 Using cfiCommon0
          CFI Function ZDMatchSendState
        CODE
// 2745 {
        FUNCALL ZDMatchSendState, APS_SetEndDeviceBindTimeout
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDMatchSendState, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDMatchSendState, ZDP_BindUnbindReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 45, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 45, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDMatchSendState, APS_SetEndDeviceBindTimeout
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDMatchSendState, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDMatchSendState, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDMatchSendState, ZDO_RemoveMatchMemory
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        MOV       A,#-0x12
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 19
        MOV       A,#-0x13
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 37)
        MOV       ?V3,R1
        MOV       ?V6,R2
// 2746   uint8 *dstIEEEAddr = NULL;
        MOV       ?V4,#0x0
        MOV       ?V5,#0x0
// 2747   uint8 dstEP = 0xFF;
        MOV       ?V2,#-0x1
// 2748   zAddrType_t dstAddr;
// 2749   zAddrType_t destinationAddr;
// 2750   uint16 msgType;
// 2751   uint16 clusterID = 0xFFFF;
        MOV       ?V8,#-0x1
        MOV       ?V9,#-0x1
// 2752   ZDEndDeviceBind_t *ed = NULL;
        MOV       ?V0,#0x0
        MOV       ?V1,#0x0
// 2753   uint8 rspStatus = ZDP_SUCCESS;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        CLR       A
        LCALL     ?Subroutine48 & 0xFFFF
// 2754 
// 2755   if ( matchED == NULL )
??CrossCallReturnLabel_81:
        MOV       R1,A
        MOV       A,R0
        ORL       A,R1
        JZ        ??ZDMatchSendState_0
// 2756   {
// 2757     return ( FALSE );
// 2758   }
// 2759 
// 2760   // Check sequence number
// 2761   if ( reason == ZDMATCH_REASON_BIND_RSP || reason == ZDMATCH_REASON_UNBIND_RSP )
        MOV       A,#0x3
        XRL       A,?V3
        JZ        ??ZDMatchSendState_1
        MOV       A,#0x2
        XRL       A,?V3
        JNZ       ??ZDMatchSendState_2
// 2762   {
// 2763     if ( TransSeq != matchED->transSeq )
??ZDMatchSendState_1:
        MOVX      A,@DPTR
        XCH       A,R0
        LCALL     ?Subroutine147 & 0xFFFF
??CrossCallReturnLabel_266:
        MOVX      A,@DPTR
        XRL       A,R3
        JZ        ??ZDMatchSendState_2
// 2764     {
// 2765       return( FALSE ); // ignore the message
??ZDMatchSendState_0:
        MOV       R1,#0x0
        LJMP      ??ZDMatchSendState_3 & 0xFFFF
// 2766     }
// 2767   }
// 2768 
// 2769   // turn off timer
// 2770   APS_SetEndDeviceBindTimeout( 0, ZDO_EndDeviceBindMatchTimeoutCB );
??ZDMatchSendState_2:
        ; Setup parameters for call to function APS_SetEndDeviceBindTimeout
        MOV       R4,#`??ZDO_EndDeviceBindMatchTimeoutCB::?relay` & 0xff
        MOV       R5,#(`??ZDO_EndDeviceBindMatchTimeoutCB::?relay` >> 8) & 0xff
        MOV       R2,#0x0
        MOV       R3,#0x0
        LCALL     `??APS_SetEndDeviceBindTimeout::?relay`; Banked call to: APS_SetEndDeviceBindTimeout
// 2771 
// 2772   if ( reason == ZDMATCH_REASON_TIMEOUT )
        MOV       A,#0x1
        XRL       A,?V3
        JNZ       ??ZDMatchSendState_4
// 2773   {
// 2774     rspStatus = ZDP_TIMEOUT;    // The process will stop
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,#-0x7b
        SJMP      ??ZDMatchSendState_5
// 2775   }
// 2776 
// 2777   if ( reason == ZDMATCH_REASON_START || reason == ZDMATCH_REASON_BIND_RSP )
??ZDMatchSendState_4:
        MOV       A,?V3
        JZ        ??ZDMatchSendState_6
        MOV       A,#0x3
        XRL       A,?V3
        JNZ       ??ZDMatchSendState_7
// 2778   {
// 2779     matchED->sending = ZDMATCH_SENDING_UNBIND;
??ZDMatchSendState_6:
        MOV       DPTR,#matchED
        LCALL     ?Subroutine69 & 0xFFFF
??CrossCallReturnLabel_113:
        MOVX      @DPTR,A
// 2780 
// 2781     if ( reason == ZDMATCH_REASON_BIND_RSP && status != ZDP_SUCCESS )
        MOV       A,#0x3
        XRL       A,?V3
        JNZ       ??ZDMatchSendState_8
        MOV       A,?V6
        JZ        ??ZDMatchSendState_9
// 2782     {
// 2783       rspStatus = status;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        SJMP      ??ZDMatchSendState_5
// 2784     }
// 2785   }
// 2786   else if ( reason == ZDMATCH_REASON_UNBIND_RSP )
??ZDMatchSendState_7:
        MOV       A,#0x2
        XRL       A,?V3
        JNZ       ??ZDMatchSendState_9
// 2787   {
// 2788     if ( status == ZDP_SUCCESS )
        MOV       A,?V6
        MOV       DPTR,#matchED
        JNZ       ??ZDMatchSendState_10
// 2789     {
// 2790       matchED->sending = ZDMATCH_SENDING_UNBIND;
        LCALL     ?Subroutine69 & 0xFFFF
// 2791     }
??CrossCallReturnLabel_114:
        SJMP      ??ZDMatchSendState_5
// 2792     else
// 2793     {
// 2794       matchED->sending = ZDMATCH_SENDING_BIND;
??ZDMatchSendState_10:
        LCALL     ??Subroutine216_0 & 0xFFFF
// 2795     }
// 2796   }
??CrossCallReturnLabel_442:
        LCALL     ?Subroutine184 & 0xFFFF
??CrossCallReturnLabel_310:
        MOV       A,#0x2
??ZDMatchSendState_5:
        MOVX      @DPTR,A
        SJMP      ??ZDMatchSendState_9
// 2797 
// 2798   if ( reason != ZDMATCH_REASON_START && matchED->sending == ZDMATCH_SENDING_UNBIND )
??ZDMatchSendState_8:
        MOV       A,?V3
        JZ        ??ZDMatchSendState_11
??ZDMatchSendState_9:
        LCALL     ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_108:
        JNZ       ??ZDMatchSendState_11
// 2799   {
// 2800     // Move to the next cluster ID
// 2801     if ( matchED->ed1numMatched )
        MOV       DPTR,#matchED
        MOVX      A,@DPTR
        ADD       A,#0x31
        LCALL     ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_135:
        JNZ       ??ZDMatchSendState_12
// 2802     {
// 2803       matchED->ed1numMatched--;
// 2804     }
// 2805     else if ( matchED->ed2numMatched )
        MOV       DPTR,#matchED
        MOVX      A,@DPTR
        ADD       A,#0x34
        LCALL     ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_136:
        JZ        ??ZDMatchSendState_11
// 2806     {
// 2807       matchED->ed2numMatched--;
??ZDMatchSendState_12:
        DEC       A
        MOVX      @DPTR,A
// 2808     }
// 2809   }
// 2810 
// 2811   // What message do we send now
// 2812   if ( matchED->ed1numMatched )
??ZDMatchSendState_11:
        LCALL     ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_127:
        MOV       R0,A
        MOV       DPTR,#matchED
        JZ        ??ZDMatchSendState_13
// 2813   {
// 2814     ed = &(matchED->ed1);
        LCALL     ??Subroutine187_0 & 0xFFFF
// 2815     clusterID = matchED->ed1Matched[matchED->ed1numMatched-1];
??CrossCallReturnLabel_320:
        LCALL     ?Subroutine109 & 0xFFFF
// 2816     dstIEEEAddr = matchED->ed2.ieeeAddr;
// 2817     dstEP = matchED->ed2.endpoint;
// 2818   }
??CrossCallReturnLabel_565:
        XCH       A,R2
        ADD       A,#0x32
        LCALL     ?Subroutine58 & 0xFFFF
??CrossCallReturnLabel_92:
        ADD       A,#0x1d
        LCALL     ?Subroutine101 & 0xFFFF
??CrossCallReturnLabel_168:
        ADD       A,#0x25
        SJMP      ??ZDMatchSendState_14
// 2819   else if ( matchED->ed2numMatched )
??ZDMatchSendState_13:
        LCALL     ?Subroutine75 & 0xFFFF
??CrossCallReturnLabel_129:
        MOV       R0,A
        JZ        ??ZDMatchSendState_15
// 2820   {
// 2821     ed = &(matchED->ed2);
        MOV       DPTR,#matchED
        MOVX      A,@DPTR
        ADD       A,#0x17
        MOV       ?V0,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       ?V1,A
// 2822     clusterID = matchED->ed2Matched[matchED->ed2numMatched-1];
        LCALL     ?Subroutine109 & 0xFFFF
// 2823     dstIEEEAddr = matchED->ed1.ieeeAddr;
// 2824     dstEP = matchED->ed1.endpoint;
// 2825   }
??CrossCallReturnLabel_566:
        XCH       A,R2
        ADD       A,#0x35
        LCALL     ?Subroutine58 & 0xFFFF
??CrossCallReturnLabel_93:
        ADD       A,#0x6
        LCALL     ?Subroutine101 & 0xFFFF
??CrossCallReturnLabel_169:
        ADD       A,#0xe
??ZDMatchSendState_14:
        MOV       DPL,A
        CLR       A
        ADDC      A,R2
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       ?V2,A
// 2826 
// 2827   dstAddr.addrMode = Addr16Bit;
??ZDMatchSendState_15:
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x2
        LCALL     ?Subroutine30 & 0xFFFF
// 2828 
// 2829   // Send the next message
// 2830   if ( (rspStatus == ZDP_SUCCESS) && ed )
??CrossCallReturnLabel_44:
        MOVX      A,@DPTR
        JZ        $+5
        LJMP      ??ZDMatchSendState_16 & 0xFFFF
        MOV       A,?V0
        ORL       A,?V1
        JNZ       $+5
        LJMP      ??ZDMatchSendState_16 & 0xFFFF
// 2831   {
// 2832     // Send unbind/bind message to source
// 2833     if ( matchED->sending == ZDMATCH_SENDING_UNBIND )
        LCALL     ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_109:
        JNZ       ??ZDMatchSendState_17
// 2834     {
// 2835       msgType = Unbind_req;
        MOV       R6,#0x22
        SJMP      ??ZDMatchSendState_18
// 2836     }
// 2837     else
// 2838     {
// 2839       msgType = Bind_req;
??ZDMatchSendState_17:
        MOV       R6,#0x21
// 2840     }
// 2841 
// 2842     dstAddr.addr.shortAddr = ed->srcAddr;
??ZDMatchSendState_18:
        MOV       DPL,?V0
        MOV       DPH,?V1
        LCALL     ??Subroutine217_0 & 0xFFFF
??CrossCallReturnLabel_466:
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine245_0 & 0xFFFF
// 2843 
// 2844     // Save off the transaction sequence number
// 2845     matchED->transSeq = ZDP_TransID;
??CrossCallReturnLabel_628:
        MOV       DPTR,#ZDP_TransID
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ??Subroutine215_0 & 0xFFFF
??CrossCallReturnLabel_461:
        LCALL     ?Subroutine147 & 0xFFFF
??CrossCallReturnLabel_267:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 2846 
// 2847     destinationAddr.addrMode = Addr64Bit;
        MOV       A,#0x12
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x3
        MOVX      @DPTR,A
// 2848     osal_cpyExtAddr( destinationAddr.addr.extAddr, dstIEEEAddr );
        ; Setup parameters for call to function sAddrExtCpy
        MOV       R4,?V4
        MOV       R5,?V5
        MOV       A,#0xa
        LCALL     ?XSTACK_DISP101_8
        LCALL     ?Subroutine158 & 0xFFFF
// 2849 
// 2850     ZDP_BindUnbindReq( msgType, &dstAddr, ed->ieeeAddr, ed->endpoint, clusterID,
// 2851         &destinationAddr, dstEP, ed->SecurityUse );
??CrossCallReturnLabel_282:
        MOVX      A,@DPTR
        MOV       ?V4,A
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 38)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 39)
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V4,R0
        MOV       ?V5,R1
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 41)
        MOV       R0,#?V8
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 43)
        MOV       A,?V0
        ADD       A,#0x6
        MOV       ?V4,A
        CLR       A
        ADDC      A,?V1
        MOV       ?V5,A
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 45)
        LCALL     ?Subroutine124 & 0xFFFF
??CrossCallReturnLabel_218:
        MOV       R1,A
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP102_8
        MOV       A,R6
        MOV       R2,A
        MOV       R3,#0x0
        LCALL     `??ZDP_BindUnbindReq::?relay`; Banked call to: ZDP_BindUnbindReq
        MOV       A,#0x8
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 37)
// 2852 
// 2853     // Set timeout for response
// 2854     APS_SetEndDeviceBindTimeout( AIB_MaxBindingTime, ZDO_EndDeviceBindMatchTimeoutCB );
        ; Setup parameters for call to function APS_SetEndDeviceBindTimeout
        LCALL     ?Subroutine93 & 0xFFFF
// 2855   }
??CrossCallReturnLabel_159:
        LJMP      ??ZDMatchSendState_19 & 0xFFFF
// 2856   else
// 2857   {
// 2858     // Send the response messages to requesting devices
// 2859     // send response to first requester
// 2860     dstAddr.addr.shortAddr = matchED->ed1.srcAddr;
??ZDMatchSendState_16:
        MOV       DPTR,#matchED
        LCALL     ??Subroutine191_0 & 0xFFFF
??CrossCallReturnLabel_329:
        LCALL     ?Subroutine68 & 0xFFFF
??CrossCallReturnLabel_468:
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine11 & 0xFFFF
// 2861     ZDP_EndDeviceBindRsp( matchED->ed1.TransSeq, &dstAddr, rspStatus, matchED->ed1.SecurityUse );
??CrossCallReturnLabel_5:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 38)
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V0,R0
        MOV       ?V1,R1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 40)
        MOV       ?V0,#0x20
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 42)
        MOV       R1,#0x1
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP102_8
        LCALL     ?Subroutine90 & 0xFFFF
??CrossCallReturnLabel_153:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 37)
// 2862 
// 2863     // send response to second requester
// 2864     if ( matchED->state == ZDMATCH_SENDING_BINDS )
        LCALL     ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_107:
        JNZ       ??ZDMatchSendState_20
// 2865     {
// 2866       dstAddr.addr.shortAddr = matchED->ed2.srcAddr;
        LCALL     ??Subroutine215_0 & 0xFFFF
// 2867       ZDP_EndDeviceBindRsp( matchED->ed2.TransSeq, &dstAddr, rspStatus, matchED->ed2.SecurityUse );
// 2868     }
??CrossCallReturnLabel_462:
        ADD       A,#0x19
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        LCALL     ??Subroutine218_0 & 0xFFFF
??CrossCallReturnLabel_465:
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R0
        MOVX      @DPTR,A
        INC       DPTR
        LCALL     ??Subroutine221_0 & 0xFFFF
??CrossCallReturnLabel_485:
        ADD       A,#0x18
        LCALL     ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_354:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 38)
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V0,R0
        MOV       ?V1,R1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 40)
        MOV       ?V0,#0x20
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 42)
        MOV       R1,#0x1
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP102_8
        LCALL     ?Subroutine104 & 0xFFFF
??CrossCallReturnLabel_173:
        LCALL     ?Subroutine142 & 0xFFFF
??CrossCallReturnLabel_257:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 37)
// 2869 
// 2870     // Process ended - release memory used
// 2871     ZDO_RemoveMatchMemory();
??ZDMatchSendState_20:
        ; Setup parameters for call to function ZDO_RemoveMatchMemory
        LCALL     `??ZDO_RemoveMatchMemory::?relay`; Banked call to: ZDO_RemoveMatchMemory
// 2872   }
// 2873 
// 2874   return ( TRUE );
??ZDMatchSendState_19:
        MOV       R1,#0x1
??ZDMatchSendState_3:
        MOV       A,#0x13
        LJMP      ?Subroutine7 & 0xFFFF
// 2875 }
          CFI EndBlock cfiBlock818

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine147:
          CFI Block cfiCond819 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_266
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond820 Using cfiCommon0
          CFI (cfiCond820) Function ZDMatchSendState
          CFI (cfiCond820) Conditional ??CrossCallReturnLabel_267
          CFI (cfiCond820) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond820) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond820) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond820) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond820) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond820) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond820) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond820) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond820) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond820) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond820) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond820) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond820) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond820) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond820) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond820) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond820) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond820) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond820) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker821 Using cfiCommon1
          CFI (cfiPicker821) NoFunction
          CFI (cfiPicker821) Picker
        ADD       A,#0x30
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond819
          CFI EndBlock cfiCond820
          CFI EndBlock cfiPicker821

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine124:
          CFI Block cfiCond822 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_217
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond823 Using cfiCommon0
          CFI (cfiCond823) Function ZDMatchSendState
          CFI (cfiCond823) Conditional ??CrossCallReturnLabel_218
          CFI (cfiCond823) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond823) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond823) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond823) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond823) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond823) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond823) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond823) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond823) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond823) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond823) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond823) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond823) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond823) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond823) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond823) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond823) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond823) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond823) CFA_SP SP+-2
          CFI (cfiCond823) CFA_XSP16 add(XSP16, 45)
          CFI Block cfiPicker824 Using cfiCommon1
          CFI (cfiPicker824) NoFunction
          CFI (cfiPicker824) Picker
        MOV       A,?V0
        ADD       A,#0xe
        MOV       DPL,A
        CLR       A
        ADDC      A,?V1
        MOV       DPH,A
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond822
          CFI EndBlock cfiCond823
          CFI EndBlock cfiPicker824

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine104:
          CFI Block cfiCond825 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_172
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond826 Using cfiCommon0
          CFI (cfiCond826) Function ZDMatchSendState
          CFI (cfiCond826) Conditional ??CrossCallReturnLabel_173
          CFI (cfiCond826) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond826) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond826) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond826) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond826) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond826) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond826) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond826) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond826) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond826) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond826) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond826) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond826) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond826) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond826) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond826) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond826) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond826) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond826) CFA_SP SP+-2
          CFI (cfiCond826) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker827 Using cfiCommon1
          CFI (cfiPicker827) NoFunction
          CFI (cfiPicker827) Picker
        MOV       DPTR,#matchED
        MOVX      A,@DPTR
        ADD       A,#0x17
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       R3,A
        RET
          CFI EndBlock cfiCond825
          CFI EndBlock cfiCond826
          CFI EndBlock cfiPicker827

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine101:
          CFI Block cfiCond828 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_168
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond829 Using cfiCommon0
          CFI (cfiCond829) Function ZDMatchSendState
          CFI (cfiCond829) Conditional ??CrossCallReturnLabel_169
          CFI (cfiCond829) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond829) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond829) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond829) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond829) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond829) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond829) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond829) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond829) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond829) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond829) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond829) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond829) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond829) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond829) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond829) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond829) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond829) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond829) CFA_SP SP+-2
          CFI (cfiCond829) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker830 Using cfiCommon1
          CFI (cfiPicker830) NoFunction
          CFI (cfiPicker830) Picker
        MOV       ?V4,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       ?V5,A
        MOV       DPTR,#matchED
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond828
          CFI EndBlock cfiCond829
          CFI EndBlock cfiPicker830

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine93:
          CFI Block cfiCond831 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_158
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond832 Using cfiCommon0
          CFI (cfiCond832) Function ZDMatchSendState
          CFI (cfiCond832) Conditional ??CrossCallReturnLabel_159
          CFI (cfiCond832) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond832) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond832) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond832) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond832) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond832) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond832) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond832) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond832) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond832) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond832) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond832) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond832) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond832) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond832) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond832) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond832) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond832) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond832) CFA_SP SP+-2
          CFI (cfiCond832) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker833 Using cfiCommon1
          CFI (cfiPicker833) NoFunction
          CFI (cfiPicker833) Picker
        MOV       R4,#`??ZDO_EndDeviceBindMatchTimeoutCB::?relay` & 0xff
        MOV       R5,#(`??ZDO_EndDeviceBindMatchTimeoutCB::?relay` >> 8) & 0xff
        MOV       DPTR,#AIB_MaxBindingTime
        LCALL     ?Subroutine160 & 0xFFFF
??CrossCallReturnLabel_409:
        LCALL     `??APS_SetEndDeviceBindTimeout::?relay`; Banked call to: APS_SetEndDeviceBindTimeout
        RET
          CFI EndBlock cfiCond831
          CFI EndBlock cfiCond832
          CFI EndBlock cfiPicker833

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine90:
          CFI Block cfiCond834 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_152
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond835 Using cfiCommon0
          CFI (cfiCond835) Function ZDMatchSendState
          CFI (cfiCond835) Conditional ??CrossCallReturnLabel_153
          CFI (cfiCond835) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond835) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond835) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond835) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond835) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond835) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond835) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond835) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond835) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond835) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond835) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond835) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond835) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond835) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond835) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond835) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond835) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond835) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond835) CFA_SP SP+-2
          CFI (cfiCond835) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker836 Using cfiCommon1
          CFI (cfiPicker836) NoFunction
          CFI (cfiPicker836) Picker
        MOV       DPTR,#matchED
        LCALL     ?Subroutine160 & 0xFFFF
??CrossCallReturnLabel_408:
        LCALL     ??Subroutine207_0 & 0xFFFF
??CrossCallReturnLabel_415:
        RET
          CFI EndBlock cfiCond834
          CFI EndBlock cfiCond835
          CFI EndBlock cfiPicker836

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine79:
          CFI Block cfiCond837 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_134
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond838 Using cfiCommon0
          CFI (cfiCond838) Function ZDMatchSendState
          CFI (cfiCond838) Conditional ??CrossCallReturnLabel_135
          CFI (cfiCond838) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond838) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond838) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond838) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond838) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond838) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond838) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond838) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond838) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond838) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond838) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond838) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond838) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond838) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond838) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond838) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond838) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond838) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond838) CFA_SP SP+-2
          CFI (cfiCond838) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond839 Using cfiCommon0
          CFI (cfiCond839) Function ZDMatchSendState
          CFI (cfiCond839) Conditional ??CrossCallReturnLabel_136
          CFI (cfiCond839) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond839) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond839) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond839) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond839) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond839) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond839) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond839) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond839) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond839) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond839) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond839) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond839) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond839) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond839) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond839) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond839) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond839) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond839) CFA_SP SP+-2
          CFI (cfiCond839) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker840 Using cfiCommon1
          CFI (cfiPicker840) NoFunction
          CFI (cfiPicker840) Picker
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       DPL,R0
        MOV       DPH,A
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond837
          CFI EndBlock cfiCond838
          CFI EndBlock cfiCond839
          CFI EndBlock cfiPicker840

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine75:
          CFI Block cfiCond841 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_128
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond842 Using cfiCommon0
          CFI (cfiCond842) Function ZDMatchSendState
          CFI (cfiCond842) Conditional ??CrossCallReturnLabel_129
          CFI (cfiCond842) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond842) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond842) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond842) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond842) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond842) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond842) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond842) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond842) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond842) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond842) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond842) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond842) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond842) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond842) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond842) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond842) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond842) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond842) CFA_SP SP+-2
          CFI (cfiCond842) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker843 Using cfiCommon1
          CFI (cfiPicker843) NoFunction
          CFI (cfiPicker843) Picker
        LCALL     ??Subroutine229_0 & 0xFFFF
??CrossCallReturnLabel_520:
        ADD       A,#0x34
        LCALL     ??Subroutine223_0 & 0xFFFF
??CrossCallReturnLabel_494:
        RET
          CFI EndBlock cfiCond841
          CFI EndBlock cfiCond842
          CFI EndBlock cfiPicker843

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine74:
          CFI Block cfiCond844 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_126
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond845 Using cfiCommon0
          CFI (cfiCond845) Function ZDMatchSendState
          CFI (cfiCond845) Conditional ??CrossCallReturnLabel_127
          CFI (cfiCond845) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond845) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond845) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond845) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond845) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond845) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond845) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond845) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond845) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond845) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond845) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond845) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond845) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond845) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond845) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond845) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond845) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond845) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond845) CFA_SP SP+-2
          CFI (cfiCond845) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker846 Using cfiCommon1
          CFI (cfiPicker846) NoFunction
          CFI (cfiPicker846) Picker
        LCALL     ?Subroutine164 & 0xFFFF
??CrossCallReturnLabel_522:
        LCALL     ?Subroutine175 & 0xFFFF
??CrossCallReturnLabel_497:
        RET
          CFI EndBlock cfiCond844
          CFI EndBlock cfiCond845
          CFI EndBlock cfiPicker846

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine175:
          CFI Block cfiCond847 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_496
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond848 Using cfiCommon0
          CFI (cfiCond848) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond848) Conditional ??CrossCallReturnLabel_497, ??CrossCallReturnLabel_126
          CFI (cfiCond848) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond848) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond848) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond848) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond848) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond848) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond848) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond848) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond848) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond848) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond848) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond848) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond848) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond848) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond848) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond848) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond848) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond848) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond848) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond848) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond848) CFA_SP SP+-4
          CFI (cfiCond848) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond849 Using cfiCommon0
          CFI (cfiCond849) Function ZDMatchSendState
          CFI (cfiCond849) Conditional ??CrossCallReturnLabel_497, ??CrossCallReturnLabel_127
          CFI (cfiCond849) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond849) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond849) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond849) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond849) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond849) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond849) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond849) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond849) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond849) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond849) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond849) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond849) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond849) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond849) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond849) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond849) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond849) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond849) CFA_SP SP+-4
          CFI (cfiCond849) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker850 Using cfiCommon1
          CFI (cfiPicker850) NoFunction
          CFI (cfiPicker850) Picker
        ADD       A,#0x31
          CFI EndBlock cfiCond847
          CFI EndBlock cfiCond848
          CFI EndBlock cfiCond849
          CFI EndBlock cfiPicker850
        REQUIRE ??Subroutine223_0
        ; // Fall through to label ??Subroutine223_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine223_0:
          CFI Block cfiCond851 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_489
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond852 Using cfiCommon0
          CFI (cfiCond852) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond852) Conditional ??CrossCallReturnLabel_490
          CFI (cfiCond852) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond852) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond852) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond852) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond852) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond852) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond852) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond852) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond852) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond852) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond852) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond852) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond852) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond852) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond852) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond852) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond852) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond852) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond852) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond852) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond852) CFA_SP SP+-2
          CFI (cfiCond852) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond853 Using cfiCommon0
          CFI (cfiCond853) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond853) Conditional ??CrossCallReturnLabel_491
          CFI (cfiCond853) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond853) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond853) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond853) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond853) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond853) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond853) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond853) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond853) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond853) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond853) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond853) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond853) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond853) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond853) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond853) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond853) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond853) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond853) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond853) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond853) CFA_SP SP+-2
          CFI (cfiCond853) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond854 Using cfiCommon0
          CFI (cfiCond854) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond854) Conditional ??CrossCallReturnLabel_495, ??CrossCallReturnLabel_249
          CFI (cfiCond854) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond854) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond854) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond854) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond854) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond854) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond854) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond854) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond854) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond854) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond854) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond854) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond854) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond854) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond854) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond854) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond854) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond854) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond854) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond854) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond854) CFA_SP SP+-4
          CFI (cfiCond854) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond855 Using cfiCommon0
          CFI (cfiCond855) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond855) Conditional ??CrossCallReturnLabel_495, ??CrossCallReturnLabel_250
          CFI (cfiCond855) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond855) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond855) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond855) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond855) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond855) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond855) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond855) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond855) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond855) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond855) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond855) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond855) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond855) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond855) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond855) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond855) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond855) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond855) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond855) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond855) CFA_SP SP+-4
          CFI (cfiCond855) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond856 Using cfiCommon0
          CFI (cfiCond856) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond856) Conditional ??CrossCallReturnLabel_494, ??CrossCallReturnLabel_128
          CFI (cfiCond856) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond856) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond856) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond856) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond856) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond856) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond856) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond856) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond856) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond856) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond856) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond856) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond856) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond856) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond856) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond856) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond856) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond856) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond856) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond856) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond856) CFA_SP SP+-4
          CFI (cfiCond856) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond857 Using cfiCommon0
          CFI (cfiCond857) Function ZDMatchSendState
          CFI (cfiCond857) Conditional ??CrossCallReturnLabel_494, ??CrossCallReturnLabel_129
          CFI (cfiCond857) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond857) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond857) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond857) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond857) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond857) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond857) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond857) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond857) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond857) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond857) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond857) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond857) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond857) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond857) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond857) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond857) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond857) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond857) CFA_SP SP+-4
          CFI (cfiCond857) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond858 Using cfiCommon0
          CFI (cfiCond858) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond858) Conditional ??CrossCallReturnLabel_492, ??CrossCallReturnLabel_106
          CFI (cfiCond858) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond858) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond858) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond858) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond858) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond858) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond858) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond858) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond858) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond858) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond858) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond858) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond858) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond858) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond858) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond858) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond858) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond858) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond858) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond858) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond858) CFA_SP SP+-4
          CFI (cfiCond858) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond859 Using cfiCommon0
          CFI (cfiCond859) Function ZDMatchSendState
          CFI (cfiCond859) Conditional ??CrossCallReturnLabel_492, ??CrossCallReturnLabel_107
          CFI (cfiCond859) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond859) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond859) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond859) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond859) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond859) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond859) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond859) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond859) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond859) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond859) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond859) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond859) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond859) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond859) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond859) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond859) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond859) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond859) CFA_SP SP+-4
          CFI (cfiCond859) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond860 Using cfiCommon0
          CFI (cfiCond860) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond860) Conditional ??CrossCallReturnLabel_493, ??CrossCallReturnLabel_124
          CFI (cfiCond860) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond860) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond860) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond860) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond860) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond860) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond860) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond860) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond860) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond860) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond860) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond860) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond860) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond860) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond860) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond860) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond860) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond860) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond860) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond860) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond860) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond860) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond860) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond860) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond860) CFA_SP SP+-4
          CFI (cfiCond860) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond861 Using cfiCommon0
          CFI (cfiCond861) Function ZDO_ParseAddrRsp
          CFI (cfiCond861) Conditional ??CrossCallReturnLabel_493, ??CrossCallReturnLabel_125
          CFI (cfiCond861) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond861) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond861) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond861) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond861) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond861) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond861) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond861) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond861) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond861) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond861) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond861) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond861) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond861) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond861) CFA_SP SP+-4
          CFI (cfiCond861) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond862 Using cfiCommon0
          CFI (cfiCond862) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond862) Conditional ??CrossCallReturnLabel_496
          CFI (cfiCond862) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond862) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond862) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond862) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond862) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond862) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond862) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond862) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond862) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond862) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond862) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond862) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond862) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond862) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond862) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond862) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond862) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond862) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond862) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond862) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond862) CFA_SP SP+-2
          CFI (cfiCond862) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond863 Using cfiCommon0
          CFI (cfiCond863) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond863) Conditional ??CrossCallReturnLabel_497, ??CrossCallReturnLabel_126
          CFI (cfiCond863) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond863) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond863) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond863) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond863) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond863) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond863) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond863) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond863) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond863) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond863) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond863) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond863) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond863) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond863) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond863) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond863) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond863) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond863) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond863) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond863) CFA_SP SP+-4
          CFI (cfiCond863) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond864 Using cfiCommon0
          CFI (cfiCond864) Function ZDMatchSendState
          CFI (cfiCond864) Conditional ??CrossCallReturnLabel_497, ??CrossCallReturnLabel_127
          CFI (cfiCond864) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond864) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond864) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond864) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond864) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond864) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond864) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond864) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond864) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond864) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond864) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond864) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond864) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond864) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond864) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond864) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond864) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond864) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond864) CFA_SP SP+-4
          CFI (cfiCond864) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker865 Using cfiCommon1
          CFI (cfiPicker865) NoFunction
          CFI (cfiPicker865) Picker
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond851
          CFI EndBlock cfiCond852
          CFI EndBlock cfiCond853
          CFI EndBlock cfiCond854
          CFI EndBlock cfiCond855
          CFI EndBlock cfiCond856
          CFI EndBlock cfiCond857
          CFI EndBlock cfiCond858
          CFI EndBlock cfiCond859
          CFI EndBlock cfiCond860
          CFI EndBlock cfiCond861
          CFI EndBlock cfiCond862
          CFI EndBlock cfiCond863
          CFI EndBlock cfiCond864
          CFI EndBlock cfiPicker865

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine69:
          CFI Block cfiCond866 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_113
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond867 Using cfiCommon0
          CFI (cfiCond867) Function ZDMatchSendState
          CFI (cfiCond867) Conditional ??CrossCallReturnLabel_114
          CFI (cfiCond867) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond867) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond867) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond867) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond867) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond867) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond867) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond867) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond867) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond867) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond867) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond867) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond867) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond867) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond867) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond867) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond867) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond867) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond867) CFA_SP SP+-2
          CFI (cfiCond867) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker868 Using cfiCommon1
          CFI (cfiPicker868) NoFunction
          CFI (cfiPicker868) Picker
        LCALL     ?Subroutine161 & 0xFFFF
??CrossCallReturnLabel_285:
        MOV       A,#0x1
        RET
          CFI EndBlock cfiCond866
          CFI EndBlock cfiCond867
          CFI EndBlock cfiPicker868

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine66:
          CFI Block cfiCond869 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_108
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond870 Using cfiCommon0
          CFI (cfiCond870) Function ZDMatchSendState
          CFI (cfiCond870) Conditional ??CrossCallReturnLabel_109
          CFI (cfiCond870) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond870) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond870) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond870) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond870) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond870) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond870) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond870) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond870) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond870) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond870) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond870) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond870) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond870) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond870) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond870) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond870) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond870) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond870) CFA_SP SP+-2
          CFI (cfiCond870) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker871 Using cfiCommon1
          CFI (cfiPicker871) NoFunction
          CFI (cfiPicker871) Picker
        MOV       DPTR,#matchED
        LCALL     ?Subroutine161 & 0xFFFF
??CrossCallReturnLabel_284:
        MOVX      A,@DPTR
        XRL       A,#0x1
        RET
          CFI EndBlock cfiCond869
          CFI EndBlock cfiCond870
          CFI EndBlock cfiPicker871

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine161:
          CFI Block cfiCond872 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_113
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond873 Using cfiCommon0
          CFI (cfiCond873) Function ZDMatchSendState
          CFI (cfiCond873) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_114
          CFI (cfiCond873) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond873) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond873) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond873) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond873) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond873) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond873) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond873) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond873) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond873) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond873) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond873) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond873) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond873) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond873) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond873) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond873) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond873) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond873) CFA_SP SP+-4
          CFI (cfiCond873) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond874 Using cfiCommon0
          CFI (cfiCond874) Function ZDMatchSendState
          CFI (cfiCond874) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_108
          CFI (cfiCond874) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond874) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond874) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond874) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond874) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond874) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond874) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond874) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond874) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond874) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond874) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond874) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond874) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond874) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond874) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond874) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond874) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond874) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond874) CFA_SP SP+-4
          CFI (cfiCond874) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond875 Using cfiCommon0
          CFI (cfiCond875) Function ZDMatchSendState
          CFI (cfiCond875) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_109
          CFI (cfiCond875) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond875) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond875) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond875) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond875) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond875) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond875) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond875) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond875) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond875) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond875) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond875) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond875) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond875) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond875) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond875) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond875) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond875) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond875) CFA_SP SP+-4
          CFI (cfiCond875) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker876 Using cfiCommon1
          CFI (cfiPicker876) NoFunction
          CFI (cfiPicker876) Picker
        LCALL     ?Subroutine181 & 0xFFFF
??CrossCallReturnLabel_526:
        XCH       A,R0
        LCALL     ?Subroutine184 & 0xFFFF
??CrossCallReturnLabel_311:
        RET
          CFI EndBlock cfiCond872
          CFI EndBlock cfiCond873
          CFI EndBlock cfiCond874
          CFI EndBlock cfiCond875
          CFI EndBlock cfiPicker876

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine184:
          CFI Block cfiCond877 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_310
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond878 Using cfiCommon0
          CFI (cfiCond878) Function ZDMatchSendState
          CFI (cfiCond878) Conditional ??CrossCallReturnLabel_311, ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_113
          CFI (cfiCond878) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond878) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond878) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond878) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond878) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond878) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond878) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond878) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond878) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond878) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond878) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond878) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond878) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond878) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond878) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond878) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond878) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond878) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond878) CFA_SP SP+-6
          CFI (cfiCond878) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond879 Using cfiCommon0
          CFI (cfiCond879) Function ZDMatchSendState
          CFI (cfiCond879) Conditional ??CrossCallReturnLabel_311, ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_114
          CFI (cfiCond879) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond879) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond879) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond879) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond879) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond879) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond879) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond879) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond879) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond879) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond879) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond879) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond879) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond879) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond879) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond879) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond879) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond879) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond879) CFA_SP SP+-6
          CFI (cfiCond879) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond880 Using cfiCommon0
          CFI (cfiCond880) Function ZDMatchSendState
          CFI (cfiCond880) Conditional ??CrossCallReturnLabel_311, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_108
          CFI (cfiCond880) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond880) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond880) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond880) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond880) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond880) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond880) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond880) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond880) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond880) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond880) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond880) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond880) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond880) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond880) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond880) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond880) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond880) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond880) CFA_SP SP+-6
          CFI (cfiCond880) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond881 Using cfiCommon0
          CFI (cfiCond881) Function ZDMatchSendState
          CFI (cfiCond881) Conditional ??CrossCallReturnLabel_311, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_109
          CFI (cfiCond881) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond881) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond881) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond881) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond881) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond881) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond881) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond881) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond881) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond881) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond881) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond881) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond881) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond881) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond881) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond881) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond881) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond881) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond881) CFA_SP SP+-6
          CFI (cfiCond881) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker882 Using cfiCommon1
          CFI (cfiPicker882) NoFunction
          CFI (cfiPicker882) Picker
        ADD       A,#0x2f
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond877
          CFI EndBlock cfiCond878
          CFI EndBlock cfiCond879
          CFI EndBlock cfiCond880
          CFI EndBlock cfiCond881
          CFI EndBlock cfiPicker882

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine65:
          CFI Block cfiCond883 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_106
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond884 Using cfiCommon0
          CFI (cfiCond884) Function ZDMatchSendState
          CFI (cfiCond884) Conditional ??CrossCallReturnLabel_107
          CFI (cfiCond884) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond884) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond884) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond884) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond884) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond884) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond884) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond884) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond884) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond884) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond884) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond884) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond884) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond884) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond884) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond884) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond884) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond884) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond884) CFA_SP SP+-2
          CFI (cfiCond884) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker885 Using cfiCommon1
          CFI (cfiPicker885) NoFunction
          CFI (cfiPicker885) Picker
        LCALL     ?Subroutine164 & 0xFFFF
??CrossCallReturnLabel_521:
        ADD       A,#0x2e
        LCALL     ??Subroutine223_0 & 0xFFFF
??CrossCallReturnLabel_492:
        XRL       A,#0x2
        RET
          CFI EndBlock cfiCond883
          CFI EndBlock cfiCond884
          CFI EndBlock cfiPicker885

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine58:
          CFI Block cfiCond886 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_92
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond887 Using cfiCommon0
          CFI (cfiCond887) Function ZDMatchSendState
          CFI (cfiCond887) Conditional ??CrossCallReturnLabel_93
          CFI (cfiCond887) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond887) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond887) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond887) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond887) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond887) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond887) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond887) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond887) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond887) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond887) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond887) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond887) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond887) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond887) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond887) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond887) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond887) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond887) CFA_SP SP+-2
          CFI (cfiCond887) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker888 Using cfiCommon1
          CFI (cfiPicker888) NoFunction
          CFI (cfiPicker888) Picker
        MOV       DPL,A
        CLR       A
        ADDC      A,R2
        MOV       DPH,A
        MOVX      A,@DPTR
        ADD       A,R0
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,R1
        MOV       R1,A
        MOV       A,R0
        ADD       A,#-0x2
        MOV       DPL,A
        MOV       A,R1
        ADDC      A,#-0x1
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       ?V8,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V9,A
        MOV       DPTR,#matchED
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond886
          CFI EndBlock cfiCond887
          CFI EndBlock cfiPicker888

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine48:
          CFI Block cfiCond889 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_80
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond890 Using cfiCommon0
          CFI (cfiCond890) Function ZDMatchSendState
          CFI (cfiCond890) Conditional ??CrossCallReturnLabel_81
          CFI (cfiCond890) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond890) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond890) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond890) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond890) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond890) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond890) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond890) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond890) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond890) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond890) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond890) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond890) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond890) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond890) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond890) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond890) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond890) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond890) CFA_SP SP+-2
          CFI (cfiCond890) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker891 Using cfiCommon1
          CFI (cfiPicker891) NoFunction
          CFI (cfiPicker891) Picker
        LCALL     ??Subroutine222_0 & 0xFFFF
??CrossCallReturnLabel_488:
        RET
          CFI EndBlock cfiCond889
          CFI EndBlock cfiCond890
          CFI EndBlock cfiPicker891

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine11:
          CFI Block cfiCond892 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_4
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond893 Using cfiCommon0
          CFI (cfiCond893) Function ZDMatchSendState
          CFI (cfiCond893) Conditional ??CrossCallReturnLabel_5
          CFI (cfiCond893) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond893) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond893) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond893) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond893) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond893) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond893) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond893) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond893) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond893) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond893) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond893) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond893) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond893) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond893) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond893) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond893) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond893) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond893) CFA_SP SP+-2
          CFI (cfiCond893) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker894 Using cfiCommon1
          CFI (cfiPicker894) NoFunction
          CFI (cfiPicker894) Picker
        MOV       A,R0
        MOVX      @DPTR,A
        INC       DPTR
        LCALL     ?Subroutine148 & 0xFFFF
??CrossCallReturnLabel_487:
        MOV       DPH,A
        MOV       DPL,R0
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V0,A
        MOV       R0,#?V0
        RET
          CFI EndBlock cfiCond892
          CFI EndBlock cfiCond893
          CFI EndBlock cfiPicker894
// 2876 
// 2877 /*********************************************************************
// 2878  * @fn      ZDO_EndDeviceBindMatchTimeoutCB()
// 2879  *
// 2880  * @brief   End device bind timeout.
// 2881  *
// 2882  * @param  none
// 2883  *
// 2884  * @return  none
// 2885  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2886 static void ZDO_EndDeviceBindMatchTimeoutCB( void )
ZDO_EndDeviceBindMatchTimeoutCB:
          CFI Block cfiBlock895 Using cfiCommon0
          CFI Function ZDO_EndDeviceBindMatchTimeoutCB
        CODE
// 2887 {
        FUNCALL ZDO_EndDeviceBindMatchTimeoutCB, ZDMatchSendState
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH      DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH      DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2888   ZDMatchSendState( ZDMATCH_REASON_TIMEOUT, ZDP_TIMEOUT, 0 );
        ; Setup parameters for call to function ZDMatchSendState
        MOV       R3,#0x0
        MOV       R2,#-0x7b
        MOV       R1,#0x1
        LCALL     `??ZDMatchSendState::?relay`; Banked call to: ZDMatchSendState
// 2889 }
        LJMP      ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock895
// 2890 #endif // ZG_BUILD_COORDINATOR_TYPE
// 2891 
// 2892 /*********************************************************************
// 2893  * ZDO MESSAGE PARSING API FUNCTIONS
// 2894  */
// 2895 
// 2896 #ifdef ZDO_ENDDEVICEBIND_RESPONSE
// 2897 /*********************************************************************
// 2898  * @fn          ZDO_ParseEndDeviceBindReq
// 2899  *
// 2900  * @brief       This function parses the End_Device_Bind_req message.
// 2901  *
// 2902  *     NOTE:  The clusters lists in bindReq are allocated in this
// 2903  *            function and must be freed by that calling function.
// 2904  *
// 2905  * @param       inMsg  - incoming message (request)
// 2906  * @param       bindReq - pointer to place to parse message to
// 2907  *
// 2908  * @return      none
// 2909  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2910 void ZDO_ParseEndDeviceBindReq( zdoIncomingMsg_t *inMsg, ZDEndDeviceBind_t *bindReq )
ZDO_ParseEndDeviceBindReq:
          CFI Block cfiBlock896 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
        CODE
// 2911 {
        FUNCALL ZDO_ParseEndDeviceBindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseEndDeviceBindReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseEndDeviceBindReq, ZDO_ConvertOTAClusters
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseEndDeviceBindReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseEndDeviceBindReq, ZDO_ConvertOTAClusters
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        MOV       A,#-0x12
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 0
        MOV       A,R4
        MOV       R6,A
        MOV       A,R5
        MOV       R7,A
// 2912   uint8 *msg;
// 2913 
// 2914   // Parse the message
// 2915   bindReq->TransSeq = inMsg->TransSeq;
        MOV       A,R2
        LCALL     ?Subroutine129 & 0xFFFF
??CrossCallReturnLabel_233:
        ADDC      A,R3
        MOV       DPH,A
        LCALL     ??Subroutine236_0 & 0xFFFF
??CrossCallReturnLabel_567:
        LCALL     ?Subroutine41 & 0xFFFF
// 2916   bindReq->srcAddr = inMsg->srcAddr.addr.shortAddr;
??CrossCallReturnLabel_64:
        LCALL     ??Subroutine201_0 & 0xFFFF
??CrossCallReturnLabel_376:
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        LCALL     ??Subroutine245_0 & 0xFFFF
// 2917   bindReq->SecurityUse = inMsg->SecurityUse;
??CrossCallReturnLabel_629:
        MOV       A,R2
        LCALL     ?Subroutine125 & 0xFFFF
??CrossCallReturnLabel_220:
        ADDC      A,R3
        MOV       DPH,A
        LCALL     ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_139:
        MOVX      @DPTR,A
// 2918   msg = inMsg->asdu;
        LCALL     ?Subroutine121 & 0xFFFF
??CrossCallReturnLabel_212:
        LCALL     ?Subroutine103 & 0xFFFF
??CrossCallReturnLabel_387:
        MOV       ?V3,A
// 2919 
// 2920   bindReq->localCoordinator = BUILD_UINT16( msg[0], msg[1] );
        MOV       DPL,?V2
        MOV       DPH,A
        LCALL     ?Subroutine77 & 0xFFFF
??CrossCallReturnLabel_130:
        INC       DPTR
        LCALL     ?Subroutine32 & 0xFFFF
// 2921   msg += 2;
??CrossCallReturnLabel_48:
        JNC       ??ZDO_ParseEndDeviceBindReq_0
        INC       ?V3
// 2922 
// 2923   osal_cpyExtAddr( bindReq->ieeeAddr, msg );
??ZDO_ParseEndDeviceBindReq_0:
        ; Setup parameters for call to function sAddrExtCpy
        MOV       R4,A
        MOV       R5,?V3
        MOV       A,R6
        ADD       A,#0x6
        MOV       R2,A
        CLR       A
        ADDC      A,R7
        LCALL     ?Subroutine49 & 0xFFFF
// 2924   msg += Z_EXTADDR_LEN;
// 2925 
// 2926   bindReq->endpoint = *msg++;
??CrossCallReturnLabel_498:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,R6
        LCALL     ?Subroutine125 & 0xFFFF
??CrossCallReturnLabel_221:
        ADDC      A,R7
        MOV       DPH,A
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine31 & 0xFFFF
??CrossCallReturnLabel_45:
        JNC       ??ZDO_ParseEndDeviceBindReq_1
        INC       ?V3
// 2927   bindReq->profileID = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseEndDeviceBindReq_1:
        MOV       DPL,A
        MOV       DPH,?V3
        LCALL     ??Subroutine235_0 & 0xFFFF
??CrossCallReturnLabel_561:
        MOV       R1,A
        MOV       A,R6
        LCALL     ?Subroutine129 & 0xFFFF
??CrossCallReturnLabel_234:
        ADDC      A,R7
        MOV       DPH,A
        MOV       A,R2
        LCALL     ??Subroutine202_0 & 0xFFFF
// 2928   msg += 2;
// 2929 
// 2930   bindReq->inClusters = NULL;
??CrossCallReturnLabel_382:
        ADD       A,#0x12
        MOV       ?V4,A
        CLR       A
        ADDC      A,R7
        MOV       ?V5,A
        MOV       DPL,?V4
        MOV       DPH,A
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
// 2931   bindReq->outClusters = NULL;
        MOV       A,R6
        ADD       A,#0x15
        MOV       ?V6,A
        CLR       A
        ADDC      A,R7
        MOV       ?V7,A
        MOV       DPL,?V6
        MOV       DPH,A
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        LCALL     ?Subroutine25 & 0xFFFF
// 2932 
// 2933   if ((bindReq->numInClusters = *msg++) &&
// 2934       (bindReq->inClusters = (uint16*)osal_mem_alloc( (bindReq->numInClusters * sizeof( uint16 )))))
??CrossCallReturnLabel_31:
        ADD       A,#0x11
        MOV       ?V0,A
        CLR       A
        ADDC      A,R7
        MOV       ?V1,A
        MOV       A,R0
        MOV       DPL,?V0
        MOV       DPH,?V1
        MOVX      @DPTR,A
        MOV       A,?V2
        ADD       A,#0x3
        MOV       ?V2,A
        JNC       ??ZDO_ParseEndDeviceBindReq_2
        INC       ?V3
??ZDO_ParseEndDeviceBindReq_2:
        MOV       A,R0
        JZ        ??ZDO_ParseEndDeviceBindReq_3
        ; Setup parameters for call to function osal_mem_alloc
        ADD       A,R0
        MOV       R2,A
        CLR       A
        RLC       A
        MOV       R3,A
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V8,R2
        MOV       ?V9,R3
        MOV       R4,?V8
        MOV       R5,?V9
        MOV       DPL,?V4
        MOV       DPH,?V5
        LCALL     ?Subroutine36 & 0xFFFF
??CrossCallReturnLabel_57:
        ORL       A,R5
        JZ        ??ZDO_ParseEndDeviceBindReq_3
// 2935   {
// 2936     msg = ZDO_ConvertOTAClusters( bindReq->numInClusters, msg, bindReq->inClusters );
        ; Setup parameters for call to function ZDO_ConvertOTAClusters
        MOV       R2,?V2
        MOV       R3,?V3
        MOV       DPL,?V0
        MOV       DPH,?V1
        MOVX      A,@DPTR
        MOV       R1,A
        LCALL     `??ZDO_ConvertOTAClusters::?relay`; Banked call to: ZDO_ConvertOTAClusters
        MOV       ?V2,R2
        MOV       ?V3,R3
        SJMP      ??ZDO_ParseEndDeviceBindReq_4
// 2937   }
// 2938   else
// 2939   {
// 2940     bindReq->numInClusters = 0;
??ZDO_ParseEndDeviceBindReq_3:
        MOV       DPL,?V0
        MOV       DPH,?V1
        CLR       A
        MOVX      @DPTR,A
// 2941   }
// 2942 
// 2943   if ((bindReq->numOutClusters = *msg++) &&
// 2944       (bindReq->outClusters = (uint16*)osal_mem_alloc((bindReq->numOutClusters * sizeof(uint16)))))
??ZDO_ParseEndDeviceBindReq_4:
        MOV       DPL,?V2
        MOV       DPH,?V3
        MOVX      A,@DPTR
        MOV       R2,A
        MOV       A,R6
        ADD       A,#0x14
        MOV       R0,A
        CLR       A
        ADDC      A,R7
        MOV       R1,A
        MOV       A,R0
        MOV       R6,A
        MOV       A,R1
        MOV       R7,A
        MOV       A,R2
        MOV       DPL,R0
        MOV       DPH,R1
        LCALL     ?Subroutine26 & 0xFFFF
??CrossCallReturnLabel_35:
        MOV       ?V2,DPL
        MOV       ?V3,DPH
        JZ        ??ZDO_ParseEndDeviceBindReq_5
        ; Setup parameters for call to function osal_mem_alloc
        ADD       A,R2
        MOV       R2,A
        CLR       A
        RLC       A
        LCALL     ?Subroutine136 & 0xFFFF
??CrossCallReturnLabel_393:
        MOV       R4,?V0
        MOV       R5,?V1
        MOV       DPL,?V6
        MOV       DPH,?V7
        LCALL     ?Subroutine36 & 0xFFFF
??CrossCallReturnLabel_58:
        ORL       A,R5
        JZ        ??ZDO_ParseEndDeviceBindReq_5
// 2945   {
// 2946     msg = ZDO_ConvertOTAClusters( bindReq->numOutClusters, msg, bindReq->outClusters );
        ; Setup parameters for call to function ZDO_ConvertOTAClusters
        MOV       R2,?V2
        MOV       R3,?V3
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        MOV       R1,A
        LCALL     `??ZDO_ConvertOTAClusters::?relay`; Banked call to: ZDO_ConvertOTAClusters
        SJMP      ??ZDO_ParseEndDeviceBindReq_6
// 2947   }
// 2948   else
// 2949   {
// 2950     bindReq->numOutClusters = 0;
??ZDO_ParseEndDeviceBindReq_5:
        MOV       DPL,R6
        MOV       DPH,R7
        CLR       A
        MOVX      @DPTR,A
// 2951   }
// 2952 }
??ZDO_ParseEndDeviceBindReq_6:
        SJMP      ??Subroutine225_0
          CFI EndBlock cfiBlock896

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine49:
          CFI Block cfiCond897 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_498
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond898 Using cfiCommon0
          CFI (cfiCond898) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond898) Conditional ??CrossCallReturnLabel_499
          CFI (cfiCond898) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond898) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond898) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond898) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond898) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond898) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond898) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond898) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond898) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond898) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond898) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond898) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond898) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond898) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond898) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond898) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond898) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond898) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond898) CFA_SP SP+-2
          CFI (cfiCond898) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker899 Using cfiCommon1
          CFI (cfiPicker899) NoFunction
          CFI (cfiPicker899) Picker
        MOV       R3,A
          CFI EndBlock cfiCond897
          CFI EndBlock cfiCond898
          CFI EndBlock cfiPicker899
        REQUIRE ??Subroutine224_0
        ; // Fall through to label ??Subroutine224_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine224_0:
          CFI Block cfiCond900 Using cfiCommon0
          CFI Function ZDO_ParseMgmtBindRsp
          CFI Conditional ??CrossCallReturnLabel_500
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond901 Using cfiCommon0
          CFI (cfiCond901) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond901) Conditional ??CrossCallReturnLabel_498
          CFI (cfiCond901) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond901) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond901) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond901) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond901) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond901) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond901) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond901) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond901) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond901) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond901) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond901) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond901) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond901) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond901) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond901) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond901) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond901) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond901) CFA_SP SP+-2
          CFI (cfiCond901) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond902 Using cfiCommon0
          CFI (cfiCond902) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond902) Conditional ??CrossCallReturnLabel_499
          CFI (cfiCond902) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond902) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond902) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond902) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond902) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond902) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond902) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond902) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond902) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond902) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond902) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond902) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond902) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond902) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond902) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond902) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond902) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond902) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond902) CFA_SP SP+-2
          CFI (cfiCond902) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker903 Using cfiCommon1
          CFI (cfiPicker903) NoFunction
          CFI (cfiPicker903) Picker
        LCALL     ?Subroutine157 & 0xFFFF
??CrossCallReturnLabel_502:
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond900
          CFI EndBlock cfiCond901
          CFI EndBlock cfiCond902
          CFI EndBlock cfiPicker903

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine157:
          CFI Block cfiCond904 Using cfiCommon0
          CFI Function ZDO_ProcessParentAnnce
          CFI Conditional ??CrossCallReturnLabel_501
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond905 Using cfiCommon0
          CFI (cfiCond905) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond905) Conditional ??CrossCallReturnLabel_502, ??CrossCallReturnLabel_498
          CFI (cfiCond905) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond905) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond905) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond905) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond905) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond905) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond905) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond905) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond905) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond905) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond905) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond905) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond905) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond905) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond905) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond905) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond905) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond905) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond905) CFA_SP SP+-4
          CFI (cfiCond905) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond906 Using cfiCommon0
          CFI (cfiCond906) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond906) Conditional ??CrossCallReturnLabel_502, ??CrossCallReturnLabel_499
          CFI (cfiCond906) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond906) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond906) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond906) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond906) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond906) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond906) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond906) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond906) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond906) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond906) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond906) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond906) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond906) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond906) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond906) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond906) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond906) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond906) CFA_SP SP+-4
          CFI (cfiCond906) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond907 Using cfiCommon0
          CFI (cfiCond907) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond907) Conditional ??CrossCallReturnLabel_502, ??CrossCallReturnLabel_500
          CFI (cfiCond907) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond907) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond907) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond907) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond907) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond907) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond907) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond907) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond907) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond907) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond907) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond907) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond907) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond907) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond907) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond907) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond907) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond907) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond907) CFA_SP SP+-4
          CFI (cfiCond907) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker908 Using cfiCommon1
          CFI (cfiPicker908) NoFunction
          CFI (cfiPicker908) Picker
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV       DPL,?V2
        MOV       DPH,?V3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond904
          CFI EndBlock cfiCond905
          CFI EndBlock cfiCond906
          CFI EndBlock cfiCond907
          CFI EndBlock cfiPicker908

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine7:
          CFI Block cfiBlock909 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock909
        REQUIRE ??Subroutine225_0
        ; // Fall through to label ??Subroutine225_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine225_0:
          CFI Block cfiBlock910 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0xa
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock910
// 2953 #endif
// 2954 
// 2955 /*********************************************************************
// 2956  * @fn          ZDO_ParseBindUnbindReq
// 2957  *
// 2958  * @brief       This function parses the Bind_req or Unbind_req message.
// 2959  *
// 2960  * @param       inMsg  - incoming message (request)
// 2961  * @param       pReq - place to put parsed information
// 2962  *
// 2963  * @return      none
// 2964  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2965 void ZDO_ParseBindUnbindReq( zdoIncomingMsg_t *inMsg, ZDO_BindUnbindReq_t *pReq )
ZDO_ParseBindUnbindReq:
          CFI Block cfiBlock911 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
        CODE
// 2966 {
        FUNCALL ZDO_ParseBindUnbindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseBindUnbindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV       A,R4
        MOV       R6,A
        MOV       A,R5
        MOV       R7,A
// 2967   uint8 *msg;
// 2968 
// 2969   msg = inMsg->asdu;
        LCALL     ?Subroutine121 & 0xFFFF
??CrossCallReturnLabel_213:
        LCALL     ?Subroutine85 & 0xFFFF
// 2970   osal_cpyExtAddr( pReq->srcAddress, msg );
??CrossCallReturnLabel_322:
        ; Setup parameters for call to function sAddrExtCpy
        MOV       R4,?V0
        MOV       R5,A
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        LCALL     ?Subroutine51 & 0xFFFF
// 2971   msg += Z_EXTADDR_LEN;
// 2972   pReq->srcEndpoint = *msg++;
??CrossCallReturnLabel_82:
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,?V0
        ADD       A,#0x9
        MOV       ?V0,A
        JNC       ??ZDO_ParseBindUnbindReq_0
        INC       ?V1
// 2973   pReq->clusterID = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseBindUnbindReq_0:
        MOV       DPL,A
        MOV       DPH,?V1
        LCALL     ?Subroutine61 & 0xFFFF
??CrossCallReturnLabel_98:
        LCALL     ?Subroutine35 & 0xFFFF
// 2974   msg += 2;
// 2975   pReq->dstAddress.addrMode = *msg++;
??CrossCallReturnLabel_56:
        MOV       R0,A
        MOV       A,R6
        LCALL     ?Subroutine118 & 0xFFFF
??CrossCallReturnLabel_204:
        MOV       A,?V0
        ADD       A,#0x3
        MOV       ?V0,A
        JNC       ??ZDO_ParseBindUnbindReq_1
        INC       ?V1
// 2976   if ( pReq->dstAddress.addrMode == Addr64Bit )
??ZDO_ParseBindUnbindReq_1:
        LCALL     ?Subroutine137 & 0xFFFF
??CrossCallReturnLabel_247:
        JNZ       ??ZDO_ParseBindUnbindReq_2
// 2977   {
// 2978     osal_cpyExtAddr( pReq->dstAddress.addr.extAddr, msg );
        ; Setup parameters for call to function sAddrExtCpy
        MOV       R4,?V0
        MOV       R5,?V1
        LCALL     ?Subroutine51 & 0xFFFF
// 2979     msg += Z_EXTADDR_LEN;
// 2980     pReq->dstEndpoint = *msg;
// 2981   }
??CrossCallReturnLabel_83:
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine141 & 0xFFFF
??CrossCallReturnLabel_504:
        POP       A
          CFI CFA_SP SP+0
        SJMP      ??ZDO_ParseBindUnbindReq_3
// 2982   else
// 2983   {
// 2984     // copy group address
// 2985     pReq->dstAddress.addr.shortAddr = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseBindUnbindReq_2:
        MOV       DPL,?V0
        MOV       DPH,?V1
        LCALL     ?Subroutine92 & 0xFFFF
// 2986   }
??CrossCallReturnLabel_156:
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
??ZDO_ParseBindUnbindReq_3:
        MOVX      @DPTR,A
// 2987 }
        LJMP      ??Subroutine189_0 & 0xFFFF
          CFI EndBlock cfiBlock911

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine141:
          CFI Block cfiCond912 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_504
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond913 Using cfiCommon0
          CFI (cfiCond913) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond913) Conditional ??CrossCallReturnLabel_505
          CFI (cfiCond913) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond913) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond913) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond913) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond913) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond913) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond913) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond913) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond913) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond913) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond913) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond913) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond913) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond913) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond913) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond913) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond913) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond913) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond913) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker914 Using cfiCommon1
          CFI (cfiPicker914) NoFunction
          CFI (cfiPicker914) Picker
        MOV       A,R6
          CFI EndBlock cfiCond912
          CFI EndBlock cfiCond913
          CFI EndBlock cfiPicker914
        REQUIRE ??Subroutine226_0
        ; // Fall through to label ??Subroutine226_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine226_0:
          CFI Block cfiCond915 Using cfiCommon0
          CFI Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_503
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond916 Using cfiCommon0
          CFI (cfiCond916) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond916) Conditional ??CrossCallReturnLabel_504
          CFI (cfiCond916) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond916) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond916) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond916) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond916) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond916) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond916) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond916) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond916) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond916) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond916) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond917 Using cfiCommon0
          CFI (cfiCond917) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond917) Conditional ??CrossCallReturnLabel_505
          CFI (cfiCond917) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond917) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond917) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond917) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond917) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond917) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond917) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond917) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond917) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond917) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond917) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond917) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond917) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond917) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond917) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond917) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond917) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond917) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond917) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker918 Using cfiCommon1
          CFI (cfiPicker918) NoFunction
          CFI (cfiPicker918) Picker
        LCALL     ??Subroutine227_0 & 0xFFFF
??CrossCallReturnLabel_509:
        ADDC      A,R7
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond915
          CFI EndBlock cfiCond916
          CFI EndBlock cfiCond917
          CFI EndBlock cfiPicker918

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine176:
          CFI Block cfiCond919 Using cfiCommon0
          CFI Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_507
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond920 Using cfiCommon0
          CFI (cfiCond920) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond920) Conditional ??CrossCallReturnLabel_508
          CFI (cfiCond920) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond920) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond920) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond920) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond920) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond920) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond920) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond920) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond920) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond920) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond920) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond920) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond920) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond920) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond920) CFA_SP SP+-2
          CFI (cfiCond920) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker921 Using cfiCommon1
          CFI (cfiPicker921) NoFunction
          CFI (cfiPicker921) Picker
        MOV       A,R0
          CFI EndBlock cfiCond919
          CFI EndBlock cfiCond920
          CFI EndBlock cfiPicker921
        REQUIRE ??Subroutine227_0
        ; // Fall through to label ??Subroutine227_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine227_0:
          CFI Block cfiCond922 Using cfiCommon0
          CFI Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_506
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond923 Using cfiCommon0
          CFI (cfiCond923) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond923) Conditional ??CrossCallReturnLabel_509, ??CrossCallReturnLabel_504
          CFI (cfiCond923) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond923) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond923) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond923) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond923) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond923) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond923) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond923) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond923) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond923) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond923) CFA_SP SP+-5
          CFI (cfiCond923) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond924 Using cfiCommon0
          CFI (cfiCond924) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond924) Conditional ??CrossCallReturnLabel_509, ??CrossCallReturnLabel_505
          CFI (cfiCond924) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond924) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond924) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond924) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond924) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond924) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond924) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond924) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond924) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond924) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond924) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond924) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond924) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond924) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond924) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond924) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond924) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond924) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond924) CFA_SP SP+-5
          CFI (cfiCond924) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond925 Using cfiCommon0
          CFI (cfiCond925) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond925) Conditional ??CrossCallReturnLabel_509, ??CrossCallReturnLabel_503
          CFI (cfiCond925) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond925) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond925) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond925) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond925) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond925) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond925) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond925) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond925) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond925) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond925) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond925) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond925) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond925) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond925) CFA_SP SP+-4
          CFI (cfiCond925) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond926 Using cfiCommon0
          CFI (cfiCond926) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond926) Conditional ??CrossCallReturnLabel_507
          CFI (cfiCond926) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond926) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond926) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond926) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond926) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond926) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond926) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond926) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond926) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond926) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond926) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond926) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond926) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond926) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond926) CFA_SP SP+-2
          CFI (cfiCond926) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond927 Using cfiCommon0
          CFI (cfiCond927) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond927) Conditional ??CrossCallReturnLabel_508
          CFI (cfiCond927) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond927) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond927) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond927) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond927) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond927) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond927) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond927) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond927) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond927) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond927) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond927) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond927) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond927) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond927) CFA_SP SP+-2
          CFI (cfiCond927) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker928 Using cfiCommon1
          CFI (cfiPicker928) NoFunction
          CFI (cfiPicker928) Picker
        ADD       A,#0x14
        MOV       DPL,A
        CLR       A
        RET
          CFI EndBlock cfiCond922
          CFI EndBlock cfiCond923
          CFI EndBlock cfiCond924
          CFI EndBlock cfiCond925
          CFI EndBlock cfiCond926
          CFI EndBlock cfiCond927
          CFI EndBlock cfiPicker928

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine121:
          CFI Block cfiCond929 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_212
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond930 Using cfiCommon0
          CFI (cfiCond930) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond930) Conditional ??CrossCallReturnLabel_213
          CFI (cfiCond930) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond930) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond930) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond930) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond930) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond930) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond930) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond930) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond930) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond930) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond930) CFA_SP SP+-2
          CFI (cfiCond930) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond931 Using cfiCommon0
          CFI (cfiCond931) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond931) Conditional ??CrossCallReturnLabel_214
          CFI (cfiCond931) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond931) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond931) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond931) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond931) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond931) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond931) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond931) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond931) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond931) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond931) CFA_SP SP+-2
          CFI (cfiCond931) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker932 Using cfiCommon1
          CFI (cfiPicker932) NoFunction
          CFI (cfiPicker932) Picker
        LCALL     ?Subroutine174 & 0xFFFF
??CrossCallReturnLabel_514:
        RET
          CFI EndBlock cfiCond929
          CFI EndBlock cfiCond930
          CFI EndBlock cfiCond931
          CFI EndBlock cfiPicker932

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine174:
          CFI Block cfiCond933 Using cfiCommon0
          CFI Function ZDO_ParseUserDescRsp
          CFI Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_331
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond934 Using cfiCommon0
          CFI (cfiCond934) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond934) Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_332
          CFI (cfiCond934) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond934) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond934) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond934) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond934) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond934) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond934) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond934) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond934) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond934) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond934) CFA_SP SP+-4
          CFI (cfiCond934) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond935 Using cfiCommon0
          CFI (cfiCond935) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond935) Conditional ??CrossCallReturnLabel_514, ??CrossCallReturnLabel_212
          CFI (cfiCond935) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond935) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond935) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond935) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond935) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond935) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond935) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond935) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond935) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond935) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond935) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond935) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond935) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond935) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond935) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond935) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond935) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond935) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond935) CFA_SP SP+-4
          CFI (cfiCond935) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond936 Using cfiCommon0
          CFI (cfiCond936) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond936) Conditional ??CrossCallReturnLabel_514, ??CrossCallReturnLabel_213
          CFI (cfiCond936) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond936) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond936) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond936) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond936) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond936) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond936) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond936) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond936) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond936) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond936) CFA_SP SP+-4
          CFI (cfiCond936) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond937 Using cfiCommon0
          CFI (cfiCond937) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond937) Conditional ??CrossCallReturnLabel_514, ??CrossCallReturnLabel_214
          CFI (cfiCond937) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond937) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond937) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond937) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond937) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond937) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond937) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond937) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond937) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond937) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond937) CFA_SP SP+-4
          CFI (cfiCond937) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond938 Using cfiCommon0
          CFI (cfiCond938) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond938) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_0
          CFI (cfiCond938) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond938) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond938) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond938) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond938) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond938) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond938) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond938) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond938) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond938) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond938) CFA_SP SP+-4
          CFI (cfiCond938) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond939 Using cfiCommon0
          CFI (cfiCond939) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond939) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_1
          CFI (cfiCond939) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond939) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond939) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond939) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond939) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond939) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond939) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond939) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond939) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond939) CFA_SP SP+-4
          CFI (cfiCond939) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond940 Using cfiCommon0
          CFI (cfiCond940) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond940) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_110
          CFI (cfiCond940) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond940) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond940) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond940) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond940) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond940) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond940) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond940) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond940) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond940) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond940) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond940) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond940) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond940) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond940) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond940) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond940) CFA_SP SP+-4
          CFI (cfiCond940) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond941 Using cfiCommon0
          CFI (cfiCond941) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond941) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_111
          CFI (cfiCond941) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond941) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond941) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond941) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond941) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond941) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond941) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond941) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond941) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond941) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond941) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond941) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond941) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond941) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond941) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond941) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond941) CFA_SP SP+-4
          CFI (cfiCond941) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond942 Using cfiCommon0
          CFI (cfiCond942) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond942) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_112
          CFI (cfiCond942) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond942) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond942) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond942) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond942) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond942) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond942) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond942) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond942) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond942) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond942) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond942) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond942) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond942) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond942) CFA_SP SP+-4
          CFI (cfiCond942) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker943 Using cfiCommon1
          CFI (cfiPicker943) NoFunction
          CFI (cfiPicker943) Picker
        MOV       A,R2
          CFI EndBlock cfiCond933
          CFI EndBlock cfiCond934
          CFI EndBlock cfiCond935
          CFI EndBlock cfiCond936
          CFI EndBlock cfiCond937
          CFI EndBlock cfiCond938
          CFI EndBlock cfiCond939
          CFI EndBlock cfiCond940
          CFI EndBlock cfiCond941
          CFI EndBlock cfiCond942
          CFI EndBlock cfiPicker943
        REQUIRE ??Subroutine228_0
        ; // Fall through to label ??Subroutine228_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine228_0:
          CFI Block cfiCond944 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_338
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond945 Using cfiCommon0
          CFI (cfiCond945) Function ZDO_ParseParentAnnce
          CFI (cfiCond945) Conditional ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_339
          CFI (cfiCond945) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond945) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond945) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond945) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond945) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond945) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond945) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond945) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond945) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond945) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond945) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond945) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond945) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond945) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond945) CFA_SP SP+-4
          CFI (cfiCond945) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond946 Using cfiCommon0
          CFI (cfiCond946) Function ZDO_ParseUserDescRsp
          CFI (cfiCond946) Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_331
          CFI (cfiCond946) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond946) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond946) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond946) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond946) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond946) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond946) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond946) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond946) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond946) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond946) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond946) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond946) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond946) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond946) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond946) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond946) CFA_SP SP+-4
          CFI (cfiCond946) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond947 Using cfiCommon0
          CFI (cfiCond947) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond947) Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_332
          CFI (cfiCond947) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond947) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond947) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond947) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond947) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond947) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond947) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond947) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond947) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond947) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond947) CFA_SP SP+-4
          CFI (cfiCond947) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond948 Using cfiCommon0
          CFI (cfiCond948) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond948) Conditional ??CrossCallReturnLabel_514, ??CrossCallReturnLabel_212
          CFI (cfiCond948) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond948) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond948) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond948) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond948) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond948) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond948) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond948) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond948) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond948) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond948) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond948) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond948) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond948) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond948) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond948) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond948) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond948) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond948) CFA_SP SP+-4
          CFI (cfiCond948) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond949 Using cfiCommon0
          CFI (cfiCond949) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond949) Conditional ??CrossCallReturnLabel_514, ??CrossCallReturnLabel_213
          CFI (cfiCond949) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond949) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond949) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond949) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond949) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond949) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond949) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond949) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond949) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond949) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond949) CFA_SP SP+-4
          CFI (cfiCond949) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond950 Using cfiCommon0
          CFI (cfiCond950) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond950) Conditional ??CrossCallReturnLabel_514, ??CrossCallReturnLabel_214
          CFI (cfiCond950) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond950) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond950) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond950) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond950) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond950) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond950) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond950) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond950) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond950) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond950) CFA_SP SP+-4
          CFI (cfiCond950) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond951 Using cfiCommon0
          CFI (cfiCond951) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond951) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_0
          CFI (cfiCond951) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond951) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond951) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond951) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond951) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond951) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond951) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond951) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond951) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond951) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond951) CFA_SP SP+-4
          CFI (cfiCond951) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond952 Using cfiCommon0
          CFI (cfiCond952) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond952) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_1
          CFI (cfiCond952) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond952) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond952) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond952) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond952) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond952) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond952) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond952) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond952) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond952) CFA_SP SP+-4
          CFI (cfiCond952) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond953 Using cfiCommon0
          CFI (cfiCond953) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond953) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_110
          CFI (cfiCond953) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond953) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond953) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond953) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond953) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond953) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond953) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond953) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond953) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond953) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond953) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond953) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond953) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond953) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond953) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond953) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond953) CFA_SP SP+-4
          CFI (cfiCond953) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond954 Using cfiCommon0
          CFI (cfiCond954) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond954) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_111
          CFI (cfiCond954) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond954) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond954) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond954) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond954) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond954) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond954) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond954) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond954) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond954) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond954) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond954) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond954) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond954) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond954) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond954) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond954) CFA_SP SP+-4
          CFI (cfiCond954) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond955 Using cfiCommon0
          CFI (cfiCond955) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond955) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_112
          CFI (cfiCond955) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond955) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond955) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond955) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond955) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond955) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond955) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond955) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond955) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond955) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond955) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond955) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond955) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond955) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond955) CFA_SP SP+-4
          CFI (cfiCond955) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker956 Using cfiCommon1
          CFI (cfiPicker956) NoFunction
          CFI (cfiPicker956) Picker
        LCALL     ??Subroutine212_0 & 0xFFFF
??CrossCallReturnLabel_518:
        ADDC      A,R3
        RET
          CFI EndBlock cfiCond944
          CFI EndBlock cfiCond945
          CFI EndBlock cfiCond946
          CFI EndBlock cfiCond947
          CFI EndBlock cfiCond948
          CFI EndBlock cfiCond949
          CFI EndBlock cfiCond950
          CFI EndBlock cfiCond951
          CFI EndBlock cfiCond952
          CFI EndBlock cfiCond953
          CFI EndBlock cfiCond954
          CFI EndBlock cfiCond955
          CFI EndBlock cfiPicker956

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine51:
          CFI Block cfiCond957 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_82
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond958 Using cfiCommon0
          CFI (cfiCond958) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond958) Conditional ??CrossCallReturnLabel_83
          CFI (cfiCond958) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond958) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond958) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond958) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond958) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond958) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond958) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond958) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond958) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond958) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond958) CFA_SP SP+-2
          CFI (cfiCond958) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker959 Using cfiCommon1
          CFI (cfiPicker959) NoFunction
          CFI (cfiPicker959) Picker
        LCALL     ?Subroutine158 & 0xFFFF
??CrossCallReturnLabel_283:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond957
          CFI EndBlock cfiCond958
          CFI EndBlock cfiPicker959

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine158:
          CFI Block cfiCond960 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_282
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond961 Using cfiCommon0
          CFI (cfiCond961) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond961) Conditional ??CrossCallReturnLabel_283, ??CrossCallReturnLabel_82
          CFI (cfiCond961) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond961) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond961) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond961) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond961) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond961) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond961) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond961) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond961) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond961) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond961) CFA_SP SP+-4
          CFI (cfiCond961) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond962 Using cfiCommon0
          CFI (cfiCond962) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond962) Conditional ??CrossCallReturnLabel_283, ??CrossCallReturnLabel_83
          CFI (cfiCond962) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond962) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond962) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond962) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond962) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond962) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond962) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond962) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond962) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond962) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond962) CFA_SP SP+-4
          CFI (cfiCond962) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker963 Using cfiCommon1
          CFI (cfiPicker963) NoFunction
          CFI (cfiPicker963) Picker
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        ; Setup parameters for call to function ZDP_BindUnbindReq
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        RET
          CFI EndBlock cfiCond960
          CFI EndBlock cfiCond961
          CFI EndBlock cfiCond962
          CFI EndBlock cfiPicker963

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine35:
          CFI Block cfiCond964 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_55
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond965 Using cfiCommon0
          CFI (cfiCond965) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond965) Conditional ??CrossCallReturnLabel_56
          CFI (cfiCond965) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond965) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond965) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond965) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond965) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond965) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond965) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond965) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond965) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond965) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond965) CFA_SP SP+-2
          CFI (cfiCond965) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker966 Using cfiCommon1
          CFI (cfiPicker966) NoFunction
          CFI (cfiPicker966) Picker
        MOVX      @DPTR,A
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond964
          CFI EndBlock cfiCond965
          CFI EndBlock cfiPicker966
// 2988 
// 2989 /*********************************************************************
// 2990  * @fn      ZDO_ParseAddrRsp
// 2991  *
// 2992  * @brief   Turns the inMsg (incoming message) into the out parsed
// 2993  *          structure.
// 2994  *
// 2995  * @param   inMsg - incoming message
// 2996  *
// 2997  * @return  pointer to parsed structures.  This structure was
// 2998  *          allocated using osal_mem_alloc, so it must be freed
// 2999  *          by the calling function [osal_mem_free()].
// 3000  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3001 ZDO_NwkIEEEAddrResp_t *ZDO_ParseAddrRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseAddrRsp:
          CFI Block cfiBlock967 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
        CODE
// 3002 {
        FUNCALL ZDO_ParseAddrRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseAddrRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV       A,#-0xe
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
// 3003   ZDO_NwkIEEEAddrResp_t *rsp;
// 3004   uint8 *msg;
// 3005   byte cnt = 0;
        MOV       ?V2,#0x0
// 3006 
// 3007   // Calculate the number of items in the list
// 3008   if ( inMsg->asduLen > (1 + Z_EXTADDR_LEN + 2) )
        MOV       A,R2
        ADD       A,#0x13
        LCALL     ?Subroutine133 & 0xFFFF
??CrossCallReturnLabel_244:
        MOV       A,R2
        ADD       A,#0x10
        MOV       DPL,A
        CLR       A
        ADDC      A,R3
        MOV       DPH,A
        MOVX      A,@DPTR
        CLR       C
        SUBB      A,#0xc
        JC        ??ZDO_ParseAddrRsp_0
// 3009   {
// 3010     cnt = inMsg->asdu[1 + Z_EXTADDR_LEN + 2];
        MOV       DPL,R0
        MOV       DPH,R1
        LCALL     ?Subroutine73 & 0xFFFF
// 3011   }
??CrossCallReturnLabel_125:
        MOV       ?V2,A
// 3012   else
// 3013   {
// 3014     cnt = 0;
// 3015   }
// 3016 
// 3017   // Make buffer
// 3018   rsp = (ZDO_NwkIEEEAddrResp_t *)osal_mem_alloc( sizeof(ZDO_NwkIEEEAddrResp_t) + (cnt * sizeof ( uint16 )) );
??ZDO_ParseAddrRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R0,?V2
        MOV       A,R0
        ADD       A,R0
        MOV       R0,A
        CLR       A
        RLC       A
        MOV       R1,A
        MOV       A,R0
        ADD       A,#0xd
        LCALL     ?Subroutine123 & 0xFFFF
// 3019 
// 3020   if ( rsp )
??CrossCallReturnLabel_215:
        JNZ       $+5
        LJMP      ??ZDO_ParseAddrRsp_1 & 0xFFFF
// 3021   {
// 3022     msg = inMsg->asdu;
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ??Subroutine195_0 & 0xFFFF
// 3023 
// 3024     rsp->status = *msg++;
??CrossCallReturnLabel_336:
        MOV       DPL,R6
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       DPL,R2
        MOV       DPH,R3
        LCALL     ?Subroutine153 & 0xFFFF
??CrossCallReturnLabel_589:
        MOV       R6,DPL
        MOV       R7,DPH
// 3025     if ( rsp->status == ZDO_SUCCESS )
        JZ        $+5
        LJMP      ??ZDO_ParseAddrRsp_1 & 0xFFFF
// 3026     {
// 3027       osal_cpyExtAddr( rsp->extAddr, msg );
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        MOV       A,R2
        ADD       A,#0x3
        LCALL     ?Subroutine50 & 0xFFFF
// 3028       msg += Z_EXTADDR_LEN;
??CrossCallReturnLabel_533:
        JNC       ??ZDO_ParseAddrRsp_2
        INC       R7
// 3029       rsp->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseAddrRsp_2:
        MOV       DPL,A
        MOV       DPH,R7
        LCALL     ??Subroutine235_0 & 0xFFFF
??CrossCallReturnLabel_562:
        MOV       R1,A
        MOV       A,R2
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        LCALL     ??Subroutine246_0 & 0xFFFF
// 3030 
// 3031       msg += 2;
// 3032       rsp->numAssocDevs = 0;
??CrossCallReturnLabel_613:
        MOV       A,?V0
        ADD       A,#0xb
        MOV       R0,A
        CLR       A
        ADDC      A,?V1
        MOV       R1,A
        MOV       A,R0
        MOV       R2,A
        MOV       A,R1
        MOV       R3,A
        MOV       DPL,R0
        MOV       DPH,A
        CLR       A
        MOVX      @DPTR,A
// 3033 
// 3034       // StartIndex field is only present if NumAssocDev field is non-zero.
// 3035       if ( cnt > 0 )
        MOV       A,?V2
        JZ        ??ZDO_ParseAddrRsp_1
// 3036       {
// 3037         uint16 *pList = &(rsp->devList[0]);
        MOV       A,?V0
        ADD       A,#0xd
        MOV       R0,A
        CLR       A
        ADDC      A,?V1
        MOV       R1,A
// 3038         byte n = cnt;
// 3039 
// 3040         rsp->numAssocDevs = *msg++;
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        LCALL     ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_609:
        LCALL     ?Subroutine12 & 0xFFFF
// 3041         rsp->startIndex = *msg++;
??CrossCallReturnLabel_6:
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine138 & 0xFFFF
??CrossCallReturnLabel_582:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        MOV       A,R6
        ADD       A,#0x4
        MOV       R6,A
        JNC       ??ZDO_ParseAddrRsp_3
        INC       R7
??ZDO_ParseAddrRsp_3:
        MOV       ?V3,?V2
// 3042 
// 3043         while ( n != 0 )
// 3044         {
// 3045           *pList++ = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseAddrRsp_4:
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        MOV       R4,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R3,A
        MOV       A,R4
        MOV       DPL,R0
        MOV       DPH,R1
        LCALL     ??Subroutine197_0 & 0xFFFF
??CrossCallReturnLabel_340:
        MOV       A,R0
        ADD       A,#0x2
        MOV       R0,A
        JNC       ??ZDO_ParseAddrRsp_5
        INC       R1
// 3046           msg += sizeof( uint16 );
??ZDO_ParseAddrRsp_5:
        MOV       A,R6
        ADD       A,#0x2
        MOV       R6,A
        JNC       ??ZDO_ParseAddrRsp_6
        INC       R7
// 3047           n--;
// 3048         }
??ZDO_ParseAddrRsp_6:
        DEC       ?V3
        MOV       A,?V3
        JNZ       ??ZDO_ParseAddrRsp_4
// 3049       }
// 3050     }
// 3051   }
// 3052 
// 3053   return ( rsp );
??ZDO_ParseAddrRsp_1:
        MOV       R2,?V0
        MOV       R3,?V1
        LJMP      ??Subroutine214_0 & 0xFFFF
// 3054 }
          CFI EndBlock cfiBlock967

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine73:
          CFI Block cfiCond968 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_124
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond969 Using cfiCommon0
          CFI (cfiCond969) Function ZDO_ParseAddrRsp
          CFI (cfiCond969) Conditional ??CrossCallReturnLabel_125
          CFI (cfiCond969) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond969) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond969) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond969) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond969) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond969) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond969) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond969) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond969) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond969) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond969) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond969) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond969) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond969) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond969) CFA_SP SP+-2
          CFI (cfiCond969) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker970 Using cfiCommon1
          CFI (cfiPicker970) NoFunction
          CFI (cfiPicker970) Picker
        LCALL     ??Subroutine229_0 & 0xFFFF
??CrossCallReturnLabel_519:
        ADD       A,#0xb
        LCALL     ??Subroutine223_0 & 0xFFFF
??CrossCallReturnLabel_493:
        RET
          CFI EndBlock cfiCond968
          CFI EndBlock cfiCond969
          CFI EndBlock cfiPicker970

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine164:
          CFI Block cfiCond971 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_522, ??CrossCallReturnLabel_126
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond972 Using cfiCommon0
          CFI (cfiCond972) Function ZDMatchSendState
          CFI (cfiCond972) Conditional ??CrossCallReturnLabel_522, ??CrossCallReturnLabel_127
          CFI (cfiCond972) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond972) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond972) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond972) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond972) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond972) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond972) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond972) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond972) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond972) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond972) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond972) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond972) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond972) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond972) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond972) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond972) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond972) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond972) CFA_SP SP+-4
          CFI (cfiCond972) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond973 Using cfiCommon0
          CFI (cfiCond973) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond973) Conditional ??CrossCallReturnLabel_521, ??CrossCallReturnLabel_106
          CFI (cfiCond973) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond973) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond973) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond973) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond973) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond973) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond973) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond973) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond973) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond973) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond973) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond973) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond973) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond973) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond973) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond973) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond973) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond973) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond973) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond973) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond973) CFA_SP SP+-4
          CFI (cfiCond973) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond974 Using cfiCommon0
          CFI (cfiCond974) Function ZDMatchSendState
          CFI (cfiCond974) Conditional ??CrossCallReturnLabel_521, ??CrossCallReturnLabel_107
          CFI (cfiCond974) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond974) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond974) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond974) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond974) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond974) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond974) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond974) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond974) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond974) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond974) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond974) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond974) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond974) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond974) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond974) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond974) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond974) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond974) CFA_SP SP+-4
          CFI (cfiCond974) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker975 Using cfiCommon1
          CFI (cfiPicker975) NoFunction
          CFI (cfiPicker975) Picker
        MOV       DPTR,#matchED
          CFI EndBlock cfiCond971
          CFI EndBlock cfiCond972
          CFI EndBlock cfiCond973
          CFI EndBlock cfiCond974
          CFI EndBlock cfiPicker975
        REQUIRE ??Subroutine229_0
        ; // Fall through to label ??Subroutine229_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine229_0:
          CFI Block cfiCond976 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_463
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond977 Using cfiCommon0
          CFI (cfiCond977) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond977) Conditional ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_464
          CFI (cfiCond977) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond977) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond977) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond977) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond977) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond977) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond977) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond977) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond977) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond977) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond977) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond977) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond977) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond977) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond977) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond977) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond977) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond977) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond977) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond977) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond977) CFA_SP SP+-4
          CFI (cfiCond977) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond978 Using cfiCommon0
          CFI (cfiCond978) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond978) Conditional ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_443
          CFI (cfiCond978) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond978) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond978) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond978) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond978) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond978) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond978) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond978) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond978) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond978) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond978) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond978) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond978) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond978) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond978) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond978) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond978) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond978) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond978) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond978) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond978) CFA_SP SP+-4
          CFI (cfiCond978) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond979 Using cfiCommon0
          CFI (cfiCond979) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond979) Conditional ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_444
          CFI (cfiCond979) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond979) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond979) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond979) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond979) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond979) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond979) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond979) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond979) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond979) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond979) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond979) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond979) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond979) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond979) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond979) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond979) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond979) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond979) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond979) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond979) CFA_SP SP+-4
          CFI (cfiCond979) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond980 Using cfiCommon0
          CFI (cfiCond980) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond980) Conditional ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_445
          CFI (cfiCond980) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond980) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond980) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond980) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond980) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond980) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond980) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond980) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond980) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond980) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond980) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond980) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond980) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond980) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond980) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond980) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond980) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond980) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond980) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond980) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond980) CFA_SP SP+-4
          CFI (cfiCond980) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond981 Using cfiCommon0
          CFI (cfiCond981) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond981) Conditional ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_446
          CFI (cfiCond981) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond981) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond981) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond981) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond981) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond981) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond981) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond981) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond981) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond981) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond981) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond981) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond981) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond981) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond981) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond981) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond981) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond981) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond981) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond981) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond981) CFA_SP SP+-4
          CFI (cfiCond981) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond982 Using cfiCommon0
          CFI (cfiCond982) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond982) Conditional ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_447
          CFI (cfiCond982) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond982) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond982) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond982) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond982) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond982) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond982) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond982) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond982) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond982) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond982) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond982) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond982) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond982) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond982) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond982) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond982) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond982) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond982) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond982) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond982) CFA_SP SP+-4
          CFI (cfiCond982) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond983 Using cfiCommon0
          CFI (cfiCond983) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond983) Conditional ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_448
          CFI (cfiCond983) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond983) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond983) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond983) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond983) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond983) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond983) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond983) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond983) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond983) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond983) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond983) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond983) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond983) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond983) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond983) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond983) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond983) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond983) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond983) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond983) CFA_SP SP+-4
          CFI (cfiCond983) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond984 Using cfiCommon0
          CFI (cfiCond984) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond984) Conditional ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_449
          CFI (cfiCond984) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond984) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond984) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond984) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond984) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond984) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond984) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond984) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond984) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond984) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond984) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond984) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond984) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond984) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond984) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond984) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond984) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond984) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond984) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond984) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond984) CFA_SP SP+-4
          CFI (cfiCond984) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond985 Using cfiCommon0
          CFI (cfiCond985) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond985) Conditional ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_450
          CFI (cfiCond985) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond985) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond985) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond985) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond985) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond985) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond985) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond985) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond985) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond985) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond985) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond985) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond985) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond985) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond985) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond985) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond985) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond985) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond985) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond985) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond985) CFA_SP SP+-4
          CFI (cfiCond985) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond986 Using cfiCommon0
          CFI (cfiCond986) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond986) Conditional ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_451
          CFI (cfiCond986) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond986) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond986) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond986) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond986) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond986) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond986) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond986) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond986) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond986) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond986) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond986) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond986) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond986) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond986) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond986) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond986) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond986) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond986) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond986) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond986) CFA_SP SP+-4
          CFI (cfiCond986) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond987 Using cfiCommon0
          CFI (cfiCond987) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond987) Conditional ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_452
          CFI (cfiCond987) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond987) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond987) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond987) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond987) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond987) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond987) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond987) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond987) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond987) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond987) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond987) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond987) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond987) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond987) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond987) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond987) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond987) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond987) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond987) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond987) CFA_SP SP+-4
          CFI (cfiCond987) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond988 Using cfiCommon0
          CFI (cfiCond988) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond988) Conditional ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_453
          CFI (cfiCond988) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond988) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond988) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond988) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond988) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond988) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond988) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond988) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond988) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond988) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond988) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond988) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond988) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond988) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond988) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond988) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond988) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond988) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond988) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond988) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond988) CFA_SP SP+-4
          CFI (cfiCond988) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond989 Using cfiCommon0
          CFI (cfiCond989) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond989) Conditional ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_454
          CFI (cfiCond989) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond989) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond989) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond989) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond989) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond989) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond989) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond989) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond989) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond989) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond989) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond989) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond989) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond989) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond989) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond989) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond989) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond989) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond989) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond989) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond989) CFA_SP SP+-4
          CFI (cfiCond989) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond990 Using cfiCommon0
          CFI (cfiCond990) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond990) Conditional ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_455
          CFI (cfiCond990) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond990) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond990) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond990) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond990) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond990) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond990) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond990) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond990) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond990) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond990) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond990) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond990) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond990) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond990) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond990) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond990) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond990) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond990) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond990) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond990) CFA_SP SP+-4
          CFI (cfiCond990) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond991 Using cfiCommon0
          CFI (cfiCond991) Function ZDO_RemoveMatchMemory
          CFI (cfiCond991) Conditional ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_456
          CFI (cfiCond991) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond991) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond991) CFA_SP SP+-9
          CFI Block cfiCond992 Using cfiCommon0
          CFI (cfiCond992) Function ZDO_RemoveMatchMemory
          CFI (cfiCond992) Conditional ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_457
          CFI (cfiCond992) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond992) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond992) CFA_SP SP+-9
          CFI Block cfiCond993 Using cfiCommon0
          CFI (cfiCond993) Function ZDO_RemoveMatchMemory
          CFI (cfiCond993) Conditional ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_458
          CFI (cfiCond993) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond993) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond993) CFA_SP SP+-9
          CFI Block cfiCond994 Using cfiCommon0
          CFI (cfiCond994) Function ZDO_RemoveMatchMemory
          CFI (cfiCond994) Conditional ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_459
          CFI (cfiCond994) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond994) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond994) CFA_SP SP+-9
          CFI Block cfiCond995 Using cfiCommon0
          CFI (cfiCond995) Function ZDO_RemoveMatchMemory
          CFI (cfiCond995) Conditional ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_460
          CFI (cfiCond995) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond995) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond995) CFA_SP SP+-9
          CFI Block cfiCond996 Using cfiCommon0
          CFI (cfiCond996) Function ZDMatchSendState
          CFI (cfiCond996) Conditional ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_461
          CFI (cfiCond996) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond996) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond996) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond996) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond996) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond996) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond996) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond996) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond996) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond996) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond996) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond996) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond996) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond996) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond996) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond996) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond996) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond996) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond996) CFA_SP SP+-5
          CFI (cfiCond996) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond997 Using cfiCommon0
          CFI (cfiCond997) Function ZDMatchSendState
          CFI (cfiCond997) Conditional ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_462
          CFI (cfiCond997) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond997) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond997) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond997) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond997) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond997) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond997) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond997) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond997) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond997) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond997) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond997) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond997) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond997) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond997) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond997) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond997) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond997) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond997) CFA_SP SP+-4
          CFI (cfiCond997) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond998 Using cfiCommon0
          CFI (cfiCond998) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond998) Conditional ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_441
          CFI (cfiCond998) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond998) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond998) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond998) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond998) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond998) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond998) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond998) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond998) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond998) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond998) CFA_SP SP+-4
          CFI (cfiCond998) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond999 Using cfiCommon0
          CFI (cfiCond999) Function ZDMatchSendState
          CFI (cfiCond999) Conditional ??CrossCallReturnLabel_523, ??CrossCallReturnLabel_442
          CFI (cfiCond999) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond999) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond999) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond999) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond999) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond999) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond999) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond999) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond999) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond999) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond999) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond999) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond999) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond999) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond999) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond999) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond999) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond999) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond999) CFA_SP SP+-4
          CFI (cfiCond999) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1000 Using cfiCommon0
          CFI (cfiCond1000) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1000) Conditional ??CrossCallReturnLabel_520, ??CrossCallReturnLabel_128
          CFI (cfiCond1000) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1000) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1000) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1000) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1000) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1000) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1000) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1000) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1000) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1000) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1000) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1000) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1000) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1000) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1000) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1000) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1000) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1000) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1000) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1000) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1000) CFA_SP SP+-4
          CFI (cfiCond1000) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond1001 Using cfiCommon0
          CFI (cfiCond1001) Function ZDMatchSendState
          CFI (cfiCond1001) Conditional ??CrossCallReturnLabel_520, ??CrossCallReturnLabel_129
          CFI (cfiCond1001) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1001) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1001) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1001) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1001) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1001) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1001) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1001) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1001) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1001) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1001) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1001) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1001) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1001) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1001) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1001) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1001) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1001) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1001) CFA_SP SP+-4
          CFI (cfiCond1001) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1002 Using cfiCommon0
          CFI (cfiCond1002) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1002) Conditional ??CrossCallReturnLabel_519, ??CrossCallReturnLabel_124
          CFI (cfiCond1002) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1002) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1002) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1002) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1002) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1002) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1002) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1002) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1002) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1002) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1002) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1002) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1002) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1002) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1002) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1002) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1002) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1002) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1002) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1002) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1002) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1002) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1002) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1002) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1002) CFA_SP SP+-4
          CFI (cfiCond1002) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond1003 Using cfiCommon0
          CFI (cfiCond1003) Function ZDO_ParseAddrRsp
          CFI (cfiCond1003) Conditional ??CrossCallReturnLabel_519, ??CrossCallReturnLabel_125
          CFI (cfiCond1003) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1003) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1003) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1003) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1003) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1003) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1003) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1003) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1003) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1003) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1003) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1003) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1003) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1003) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1003) CFA_SP SP+-4
          CFI (cfiCond1003) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1004 Using cfiCommon0
          CFI (cfiCond1004) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1004) Conditional ??CrossCallReturnLabel_522, ??CrossCallReturnLabel_126
          CFI (cfiCond1004) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1004) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1004) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1004) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1004) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1004) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1004) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1004) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1004) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1004) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1004) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1004) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1004) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1004) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1004) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1004) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1004) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1004) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1004) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1004) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1004) CFA_SP SP+-4
          CFI (cfiCond1004) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond1005 Using cfiCommon0
          CFI (cfiCond1005) Function ZDMatchSendState
          CFI (cfiCond1005) Conditional ??CrossCallReturnLabel_522, ??CrossCallReturnLabel_127
          CFI (cfiCond1005) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1005) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1005) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1005) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1005) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1005) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1005) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1005) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1005) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1005) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1005) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1005) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1005) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1005) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1005) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1005) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1005) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1005) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1005) CFA_SP SP+-4
          CFI (cfiCond1005) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1006 Using cfiCommon0
          CFI (cfiCond1006) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1006) Conditional ??CrossCallReturnLabel_521, ??CrossCallReturnLabel_106
          CFI (cfiCond1006) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1006) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1006) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1006) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1006) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1006) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1006) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1006) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1006) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1006) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1006) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1006) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1006) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1006) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1006) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1006) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1006) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1006) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1006) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1006) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1006) CFA_SP SP+-4
          CFI (cfiCond1006) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond1007 Using cfiCommon0
          CFI (cfiCond1007) Function ZDMatchSendState
          CFI (cfiCond1007) Conditional ??CrossCallReturnLabel_521, ??CrossCallReturnLabel_107
          CFI (cfiCond1007) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1007) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1007) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1007) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1007) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1007) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1007) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1007) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1007) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1007) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1007) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1007) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1007) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1007) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1007) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1007) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1007) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1007) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1007) CFA_SP SP+-4
          CFI (cfiCond1007) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker1008 Using cfiCommon1
          CFI (cfiPicker1008) NoFunction
          CFI (cfiPicker1008) Picker
        LCALL     ?Subroutine181 & 0xFFFF
??CrossCallReturnLabel_532:
        XCH       A,R0
        RET
          CFI EndBlock cfiCond976
          CFI EndBlock cfiCond977
          CFI EndBlock cfiCond978
          CFI EndBlock cfiCond979
          CFI EndBlock cfiCond980
          CFI EndBlock cfiCond981
          CFI EndBlock cfiCond982
          CFI EndBlock cfiCond983
          CFI EndBlock cfiCond984
          CFI EndBlock cfiCond985
          CFI EndBlock cfiCond986
          CFI EndBlock cfiCond987
          CFI EndBlock cfiCond988
          CFI EndBlock cfiCond989
          CFI EndBlock cfiCond990
          CFI EndBlock cfiCond991
          CFI EndBlock cfiCond992
          CFI EndBlock cfiCond993
          CFI EndBlock cfiCond994
          CFI EndBlock cfiCond995
          CFI EndBlock cfiCond996
          CFI EndBlock cfiCond997
          CFI EndBlock cfiCond998
          CFI EndBlock cfiCond999
          CFI EndBlock cfiCond1000
          CFI EndBlock cfiCond1001
          CFI EndBlock cfiCond1002
          CFI EndBlock cfiCond1003
          CFI EndBlock cfiCond1004
          CFI EndBlock cfiCond1005
          CFI EndBlock cfiCond1006
          CFI EndBlock cfiCond1007
          CFI EndBlock cfiPicker1008

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine50:
          CFI Block cfiCond1009 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_533
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1010 Using cfiCommon0
          CFI (cfiCond1010) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1010) Conditional ??CrossCallReturnLabel_534
          CFI (cfiCond1010) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1010) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1010) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1010) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1010) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1010) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1010) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1010) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1010) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1010) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1010) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1010) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1010) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1010) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1010) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1010) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1010) CFA_SP SP+-2
          CFI (cfiCond1010) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1011 Using cfiCommon0
          CFI (cfiCond1011) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1011) Conditional ??CrossCallReturnLabel_535
          CFI (cfiCond1011) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1011) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1011) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1011) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1011) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1011) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1011) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1011) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1011) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1011) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1011) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1011) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1011) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1011) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1011) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1011) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1011) CFA_SP SP+-2
          CFI (cfiCond1011) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1012 Using cfiCommon1
          CFI (cfiPicker1012) NoFunction
          CFI (cfiPicker1012) Picker
        MOV       R2,A
        CLR       A
        ADDC      A,?V1
        MOV       R3,A
          CFI EndBlock cfiCond1009
          CFI EndBlock cfiCond1010
          CFI EndBlock cfiCond1011
          CFI EndBlock cfiPicker1012
        REQUIRE ??Subroutine230_0
        ; // Fall through to label ??Subroutine230_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine230_0:
          CFI Block cfiCond1013 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_536
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1014 Using cfiCommon0
          CFI (cfiCond1014) Function ZDO_ParseParentAnnce
          CFI (cfiCond1014) Conditional ??CrossCallReturnLabel_537
          CFI (cfiCond1014) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1014) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1014) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1014) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1014) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1014) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1014) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1014) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1014) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1014) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1014) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1014) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1014) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1014) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1014) CFA_SP SP+-2
          CFI (cfiCond1014) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1015 Using cfiCommon0
          CFI (cfiCond1015) Function ZDO_ParseAddrRsp
          CFI (cfiCond1015) Conditional ??CrossCallReturnLabel_533
          CFI (cfiCond1015) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1015) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1015) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1015) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1015) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1015) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1015) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1015) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1015) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1015) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1015) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1015) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1015) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1015) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1015) CFA_SP SP+-2
          CFI (cfiCond1015) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1016 Using cfiCommon0
          CFI (cfiCond1016) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1016) Conditional ??CrossCallReturnLabel_534
          CFI (cfiCond1016) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1016) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1016) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1016) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1016) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1016) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1016) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1016) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1016) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1016) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1016) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1016) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1016) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1016) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1016) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1016) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1016) CFA_SP SP+-2
          CFI (cfiCond1016) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1017 Using cfiCommon0
          CFI (cfiCond1017) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1017) Conditional ??CrossCallReturnLabel_535
          CFI (cfiCond1017) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1017) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1017) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1017) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1017) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1017) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1017) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1017) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1017) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1017) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1017) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1017) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1017) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1017) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1017) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1017) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1017) CFA_SP SP+-2
          CFI (cfiCond1017) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1018 Using cfiCommon1
          CFI (cfiPicker1018) NoFunction
          CFI (cfiPicker1018) Picker
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV       A,R6
        ADD       A,#0x8
        MOV       R6,A
        RET
          CFI EndBlock cfiCond1013
          CFI EndBlock cfiCond1014
          CFI EndBlock cfiCond1015
          CFI EndBlock cfiCond1016
          CFI EndBlock cfiCond1017
          CFI EndBlock cfiPicker1018
// 3055 
// 3056 /*********************************************************************
// 3057  * @fn          ZDO_ParseNodeDescRsp
// 3058  *
// 3059  * @brief       This function parses the Node_Desc_rsp message.
// 3060  *
// 3061  * @param       inMsg - incoming message
// 3062  * @param       pNDRsp - place to parse the message into
// 3063  *
// 3064  * @return      none
// 3065  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3066 void ZDO_ParseNodeDescRsp( zdoIncomingMsg_t *inMsg, ZDO_NodeDescRsp_t *pNDRsp )
ZDO_ParseNodeDescRsp:
          CFI Block cfiBlock1019 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
        CODE
// 3067 {
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
// 3068   uint8 *msg;
// 3069 
// 3070   msg = inMsg->asdu;
        LCALL     ?Subroutine9 & 0xFFFF
// 3071 
// 3072   pNDRsp->status = *msg++;
// 3073   pNDRsp->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
// 3074 
// 3075   if ( pNDRsp->status == ZDP_SUCCESS )
??CrossCallReturnLabel_0:
        JZ        $+5
        LJMP      ??ZDO_ParseNodeDescRsp_0 & 0xFFFF
// 3076   {
// 3077     msg += 2;
// 3078     pNDRsp->nodeDesc.LogicalType = *msg & 0x07;
        MOV       A,R0
        LCALL     ?Subroutine130 & 0xFFFF
??CrossCallReturnLabel_240:
        ADDC      A,R1
        MOV       R3,A
        MOV       A,R4
        ADD       A,#0x3
        MOV       R6,A
        CLR       A
        ADDC      A,R5
        MOV       R7,A
        MOV       DPL,R2
        MOV       DPH,R3
        MOVX      A,@DPTR
        ANL       A,#0x7
        MOV       ?V0,A
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        ANL       A,#0xf8
        ORL       A,?V0
        MOV       ?V1,A
        LCALL     ?Subroutine42 & 0xFFFF
// 3079 
// 3080     pNDRsp->nodeDesc.ComplexDescAvail = ( *msg & 0x08 ) >> 3;
??CrossCallReturnLabel_67:
        MOV       C,0xE0 /* A   */.3
        CLR       A
        RLC       A
        MOV       ?V0,A
        MOV       C,0xE0 /* A   */.0
        CLR       A
        RLC       A
        RLC       A
        RLC       A
        RLC       A
        MOV       ?V0,A
        MOV       A,#-0x9
        ANL       A,?V1
        ORL       A,?V0
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ?Subroutine42 & 0xFFFF
// 3081     pNDRsp->nodeDesc.UserDescAvail = ( *msg & 0x10 ) >> 4;
??CrossCallReturnLabel_68:
        MOV       C,0xE0 /* A   */.4
        CLR       A
        RLC       A
        MOV       R2,A
        MOV       C,0xE0 /* A   */.0
        CLR       A
        RLC       A
        SWAP      A
        MOV       R2,A
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        ANL       A,#0xef
        ORL       A,R2
        MOVX      @DPTR,A
// 3082 
// 3083     msg++;  // Reserved bits.
// 3084     pNDRsp->nodeDesc.FrequencyBand = (*msg >> 3) & 0x1f;
        MOV       A,R0
        ADD       A,#0x3
        MOV       R2,A
        CLR       A
        ADDC      A,R1
        MOV       R3,A
        MOV       A,R4
        ADD       A,#0x4
        INC       R6
        CLR       A
        ADDC      A,R5
        MOV       R7,A
        MOV       DPL,R2
        MOV       DPH,R3
        MOVX      A,@DPTR
        ANL       A,#0xf8
        MOV       ?V0,A
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        ANL       A,#0x7
        ORL       A,?V0
        MOV       ?V0,A
        LCALL     ?Subroutine42 & 0xFFFF
// 3085     pNDRsp->nodeDesc.APSFlags = *msg++ & 0x07;
??CrossCallReturnLabel_69:
        ANL       A,#0x7
        MOV       R2,A
        MOV       A,#-0x8
        ANL       A,?V0
        ORL       A,R2
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ?Subroutine33 & 0xFFFF
// 3086     pNDRsp->nodeDesc.CapabilityFlags = *msg++;
??CrossCallReturnLabel_50:
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine34 & 0xFFFF
// 3087     pNDRsp->nodeDesc.ManufacturerCode[0] = *msg++;
??CrossCallReturnLabel_53:
        INC       DPTR
        LCALL     ?Subroutine105 & 0xFFFF
??CrossCallReturnLabel_569:
        LCALL     ?Subroutine28 & 0xFFFF
// 3088     pNDRsp->nodeDesc.ManufacturerCode[1] = *msg++;
??CrossCallReturnLabel_38:
        LCALL     ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_140:
        LCALL     ?Subroutine28 & 0xFFFF
// 3089     pNDRsp->nodeDesc.MaxBufferSize = *msg++;
??CrossCallReturnLabel_39:
        LCALL     ?Subroutine105 & 0xFFFF
??CrossCallReturnLabel_570:
        LCALL     ?Subroutine20 & 0xFFFF
// 3090     pNDRsp->nodeDesc.MaxInTransferSize[0] = *msg++;
??CrossCallReturnLabel_27:
        LCALL     ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_141:
        LCALL     ?Subroutine20 & 0xFFFF
// 3091     pNDRsp->nodeDesc.MaxInTransferSize[1] = *msg++;
??CrossCallReturnLabel_28:
        INC       DPTR
        LCALL     ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_142:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,R0
        ADD       A,#0xa
        MOV       R0,A
        JNC       ??ZDO_ParseNodeDescRsp_1
        INC       R1
// 3092     pNDRsp->nodeDesc.ServerMask = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseNodeDescRsp_1:
        MOV       DPL,A
        MOV       DPH,R1
        LCALL     ??Subroutine231_0 & 0xFFFF
??CrossCallReturnLabel_539:
        MOV       R3,A
        MOV       A,R4
        ADD       A,#0xb
        MOV       DPL,A
        CLR       A
        ADDC      A,R5
        MOV       DPH,A
        MOV       A,R6
        LCALL     ??Subroutine197_0 & 0xFFFF
// 3093     msg += 2;
// 3094     pNDRsp->nodeDesc.MaxOutTransferSize[0] = *msg++;
??CrossCallReturnLabel_341:
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,R4
        ADD       A,#0xd
        MOV       DPL,A
        CLR       A
        ADDC      A,R5
        MOV       DPH,A
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine34 & 0xFFFF
// 3095     pNDRsp->nodeDesc.MaxOutTransferSize[1] = *msg++;
// 3096     pNDRsp->nodeDesc.DescriptorCapability = *msg;
// 3097   }
??CrossCallReturnLabel_54:
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,R4
        LCALL     ?Subroutine125 & 0xFFFF
??CrossCallReturnLabel_222:
        ADDC      A,R5
        MOV       DPH,A
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine33 & 0xFFFF
??CrossCallReturnLabel_51:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,R4
        LCALL     ?Subroutine129 & 0xFFFF
??CrossCallReturnLabel_235:
        ADDC      A,R5
        MOV       DPH,A
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 3098 }
??ZDO_ParseNodeDescRsp_0:
        LJMP      ??Subroutine189_0 & 0xFFFF
          CFI EndBlock cfiBlock1019

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine125:
          CFI Block cfiCond1020 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescSet
          CFI Conditional ??CrossCallReturnLabel_219
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond1021 Using cfiCommon0
          CFI (cfiCond1021) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1021) Conditional ??CrossCallReturnLabel_220
          CFI (cfiCond1021) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1021) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1021) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1021) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1021) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1021) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1021) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1021) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1021) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1021) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1021) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1021) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1021) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1021) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1021) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1021) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1021) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1021) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1021) CFA_SP SP+-2
          CFI (cfiCond1021) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1022 Using cfiCommon0
          CFI (cfiCond1022) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1022) Conditional ??CrossCallReturnLabel_221
          CFI (cfiCond1022) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1022) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1022) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1022) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1022) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1022) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1022) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1022) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1022) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1022) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1022) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1022) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1022) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1022) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1022) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1022) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1022) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1022) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1022) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1023 Using cfiCommon0
          CFI (cfiCond1023) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1023) Conditional ??CrossCallReturnLabel_222
          CFI (cfiCond1023) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1023) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1023) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1023) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1023) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1023) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1023) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1023) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1023) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1023) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1023) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1024 Using cfiCommon0
          CFI (cfiCond1024) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1024) Conditional ??CrossCallReturnLabel_223
          CFI (cfiCond1024) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1024) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1024) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1024) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1024) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1024) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1024) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1024) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1024) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1024) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1024) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1024) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1024) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1024) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1024) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1024) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1024) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1025 Using cfiCommon1
          CFI (cfiPicker1025) NoFunction
          CFI (cfiPicker1025) Picker
        ADD       A,#0xe
        MOV       DPL,A
        CLR       A
        RET
          CFI EndBlock cfiCond1020
          CFI EndBlock cfiCond1021
          CFI EndBlock cfiCond1022
          CFI EndBlock cfiCond1023
          CFI EndBlock cfiCond1024
          CFI EndBlock cfiPicker1025

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine81:
          CFI Block cfiCond1026 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_139
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1027 Using cfiCommon0
          CFI (cfiCond1027) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1027) Conditional ??CrossCallReturnLabel_140
          CFI (cfiCond1027) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1027) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1027) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1027) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1027) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1027) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1027) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1027) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1027) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1027) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1027) CFA_SP SP+-2
          CFI (cfiCond1027) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1028 Using cfiCommon0
          CFI (cfiCond1028) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1028) Conditional ??CrossCallReturnLabel_141
          CFI (cfiCond1028) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1028) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1028) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1028) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1028) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1028) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1028) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1028) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1028) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1028) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1028) CFA_SP SP+-2
          CFI (cfiCond1028) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1029 Using cfiCommon0
          CFI (cfiCond1029) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1029) Conditional ??CrossCallReturnLabel_142
          CFI (cfiCond1029) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1029) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1029) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1029) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1029) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1029) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1029) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1029) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1029) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1029) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1029) CFA_SP SP+-2
          CFI (cfiCond1029) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1030 Using cfiCommon1
          CFI (cfiPicker1030) NoFunction
          CFI (cfiPicker1030) Picker
        MOVX      A,@DPTR
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        RET
          CFI EndBlock cfiCond1026
          CFI EndBlock cfiCond1027
          CFI EndBlock cfiCond1028
          CFI EndBlock cfiCond1029
          CFI EndBlock cfiPicker1030

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine42:
          CFI Block cfiCond1031 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_67
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1032 Using cfiCommon0
          CFI (cfiCond1032) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1032) Conditional ??CrossCallReturnLabel_68
          CFI (cfiCond1032) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1032) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1032) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1032) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1032) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1032) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1032) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1032) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1032) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1032) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1032) CFA_SP SP+-2
          CFI (cfiCond1032) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1033 Using cfiCommon0
          CFI (cfiCond1033) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1033) Conditional ??CrossCallReturnLabel_69
          CFI (cfiCond1033) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1033) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1033) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1033) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1033) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1033) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1033) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1033) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1033) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1033) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1033) CFA_SP SP+-2
          CFI (cfiCond1033) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1034 Using cfiCommon1
          CFI (cfiPicker1034) NoFunction
          CFI (cfiPicker1034) Picker
        LCALL     ?Subroutine154 & 0xFFFF
??CrossCallReturnLabel_551:
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1031
          CFI EndBlock cfiCond1032
          CFI EndBlock cfiCond1033
          CFI EndBlock cfiPicker1034

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine34:
          CFI Block cfiCond1035 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescSet
          CFI Conditional ??CrossCallReturnLabel_52
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond1036 Using cfiCommon0
          CFI (cfiCond1036) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1036) Conditional ??CrossCallReturnLabel_53
          CFI (cfiCond1036) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1036) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1036) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1036) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1036) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1036) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1036) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1036) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1036) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1036) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1036) CFA_SP SP+-2
          CFI (cfiCond1036) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1037 Using cfiCommon0
          CFI (cfiCond1037) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1037) Conditional ??CrossCallReturnLabel_54
          CFI (cfiCond1037) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1037) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1037) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1037) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1037) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1037) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1037) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1037) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1037) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1037) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1037) CFA_SP SP+-2
          CFI (cfiCond1037) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1038 Using cfiCommon1
          CFI (cfiPicker1038) NoFunction
          CFI (cfiPicker1038) Picker
        LCALL     ?Subroutine155 & 0xFFFF
??CrossCallReturnLabel_278:
        RET
          CFI EndBlock cfiCond1035
          CFI EndBlock cfiCond1036
          CFI EndBlock cfiCond1037
          CFI EndBlock cfiPicker1038

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine155:
          CFI Block cfiCond1039 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescSet
          CFI Conditional ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_52
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond1040 Using cfiCommon0
          CFI (cfiCond1040) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1040) Conditional ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_53
          CFI (cfiCond1040) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1040) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1040) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1040) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1040) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1040) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1040) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1040) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1040) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1040) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1040) CFA_SP SP+-4
          CFI (cfiCond1040) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1041 Using cfiCommon0
          CFI (cfiCond1041) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1041) Conditional ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_54
          CFI (cfiCond1041) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1041) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1041) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1041) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1041) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1041) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1041) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1041) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1041) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1041) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1041) CFA_SP SP+-4
          CFI (cfiCond1041) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1042 Using cfiCommon0
          CFI (cfiCond1042) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1042) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_50
          CFI (cfiCond1042) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1042) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1042) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1042) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1042) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1042) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1042) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1042) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1042) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1042) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1042) CFA_SP SP+-4
          CFI (cfiCond1042) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1043 Using cfiCommon0
          CFI (cfiCond1043) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1043) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_51
          CFI (cfiCond1043) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1043) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1043) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1043) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1043) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1043) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1043) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1043) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1043) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1043) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1043) CFA_SP SP+-4
          CFI (cfiCond1043) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1044 Using cfiCommon1
          CFI (cfiPicker1044) NoFunction
          CFI (cfiPicker1044) Picker
        LCALL     ?Subroutine178 & 0xFFFF
??CrossCallReturnLabel_301:
        RET
          CFI EndBlock cfiCond1039
          CFI EndBlock cfiCond1040
          CFI EndBlock cfiCond1041
          CFI EndBlock cfiCond1042
          CFI EndBlock cfiCond1043
          CFI EndBlock cfiPicker1044

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine178:
          CFI Block cfiCond1045 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescSet
          CFI Conditional ??CrossCallReturnLabel_301, ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_52
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond1046 Using cfiCommon0
          CFI (cfiCond1046) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1046) Conditional ??CrossCallReturnLabel_301, ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_53
          CFI (cfiCond1046) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1046) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1046) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1046) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1046) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1046) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1046) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1046) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1046) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1046) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1046) CFA_SP SP+-6
          CFI (cfiCond1046) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1047 Using cfiCommon0
          CFI (cfiCond1047) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1047) Conditional ??CrossCallReturnLabel_301, ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_54
          CFI (cfiCond1047) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1047) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1047) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1047) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1047) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1047) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1047) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1047) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1047) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1047) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1047) CFA_SP SP+-6
          CFI (cfiCond1047) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1048 Using cfiCommon0
          CFI (cfiCond1048) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1048) Conditional ??CrossCallReturnLabel_301, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_50
          CFI (cfiCond1048) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1048) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1048) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1048) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1048) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1048) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1048) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1048) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1048) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1048) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1048) CFA_SP SP+-6
          CFI (cfiCond1048) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1049 Using cfiCommon0
          CFI (cfiCond1049) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1049) Conditional ??CrossCallReturnLabel_301, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_51
          CFI (cfiCond1049) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1049) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1049) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1049) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1049) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1049) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1049) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1049) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1049) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1049) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1049) CFA_SP SP+-6
          CFI (cfiCond1049) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1050 Using cfiCommon0
          CFI (cfiCond1050) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1050) Conditional ??CrossCallReturnLabel_302, ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_38
          CFI (cfiCond1050) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1050) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1050) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1050) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1050) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1050) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1050) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1050) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1050) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1050) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1050) CFA_SP SP+-6
          CFI (cfiCond1050) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1051 Using cfiCommon0
          CFI (cfiCond1051) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1051) Conditional ??CrossCallReturnLabel_302, ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_39
          CFI (cfiCond1051) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1051) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1051) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1051) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1051) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1051) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1051) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1051) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1051) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1051) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1051) CFA_SP SP+-6
          CFI (cfiCond1051) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1052 Using cfiCommon0
          CFI (cfiCond1052) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1052) Conditional ??CrossCallReturnLabel_302, ??CrossCallReturnLabel_272, ??CrossCallReturnLabel_27
          CFI (cfiCond1052) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1052) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1052) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1052) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1052) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1052) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1052) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1052) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1052) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1052) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1052) CFA_SP SP+-6
          CFI (cfiCond1052) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1053 Using cfiCommon0
          CFI (cfiCond1053) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1053) Conditional ??CrossCallReturnLabel_302, ??CrossCallReturnLabel_272, ??CrossCallReturnLabel_28
          CFI (cfiCond1053) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1053) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1053) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1053) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1053) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1053) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1053) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1053) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1053) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1053) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1053) CFA_SP SP+-6
          CFI (cfiCond1053) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1054 Using cfiCommon1
          CFI (cfiPicker1054) NoFunction
          CFI (cfiPicker1054) Picker
        MOVX      @DPTR,A
        ; Setup parameters for call to function osal_memcpy
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond1045
          CFI EndBlock cfiCond1046
          CFI EndBlock cfiCond1047
          CFI EndBlock cfiCond1048
          CFI EndBlock cfiCond1049
          CFI EndBlock cfiCond1050
          CFI EndBlock cfiCond1051
          CFI EndBlock cfiCond1052
          CFI EndBlock cfiCond1053
          CFI EndBlock cfiPicker1054

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine33:
          CFI Block cfiCond1055 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_50
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1056 Using cfiCommon0
          CFI (cfiCond1056) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1056) Conditional ??CrossCallReturnLabel_51
          CFI (cfiCond1056) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1056) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1056) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1056) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1056) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1056) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1056) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1056) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1056) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1056) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1056) CFA_SP SP+-2
          CFI (cfiCond1056) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1057 Using cfiCommon1
          CFI (cfiPicker1057) NoFunction
          CFI (cfiPicker1057) Picker
        LCALL     ?Subroutine155 & 0xFFFF
??CrossCallReturnLabel_279:
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1055
          CFI EndBlock cfiCond1056
          CFI EndBlock cfiPicker1057

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine28:
          CFI Block cfiCond1058 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_38
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1059 Using cfiCommon0
          CFI (cfiCond1059) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1059) Conditional ??CrossCallReturnLabel_39
          CFI (cfiCond1059) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1059) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1059) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1059) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1059) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1059) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1059) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1059) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1059) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1059) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1059) CFA_SP SP+-2
          CFI (cfiCond1059) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1060 Using cfiCommon1
          CFI (cfiPicker1060) NoFunction
          CFI (cfiPicker1060) Picker
        LCALL     ?Subroutine150 & 0xFFFF
??CrossCallReturnLabel_271:
        RET
          CFI EndBlock cfiCond1058
          CFI EndBlock cfiCond1059
          CFI EndBlock cfiPicker1060

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine150:
          CFI Block cfiCond1061 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_38
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1062 Using cfiCommon0
          CFI (cfiCond1062) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1062) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_39
          CFI (cfiCond1062) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1062) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1062) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1062) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1062) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1062) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1062) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1062) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1062) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1062) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1062) CFA_SP SP+-4
          CFI (cfiCond1062) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1063 Using cfiCommon0
          CFI (cfiCond1063) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1063) Conditional ??CrossCallReturnLabel_272, ??CrossCallReturnLabel_27
          CFI (cfiCond1063) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1063) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1063) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1063) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1063) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1063) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1063) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1063) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1063) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1063) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1063) CFA_SP SP+-4
          CFI (cfiCond1063) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1064 Using cfiCommon0
          CFI (cfiCond1064) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1064) Conditional ??CrossCallReturnLabel_272, ??CrossCallReturnLabel_28
          CFI (cfiCond1064) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1064) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1064) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1064) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1064) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1064) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1064) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1064) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1064) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1064) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1064) CFA_SP SP+-4
          CFI (cfiCond1064) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1065 Using cfiCommon1
          CFI (cfiPicker1065) NoFunction
          CFI (cfiPicker1065) Picker
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine178 & 0xFFFF
??CrossCallReturnLabel_302:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond1061
          CFI EndBlock cfiCond1062
          CFI EndBlock cfiCond1063
          CFI EndBlock cfiCond1064
          CFI EndBlock cfiPicker1065

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine20:
          CFI Block cfiCond1066 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_27
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1067 Using cfiCommon0
          CFI (cfiCond1067) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1067) Conditional ??CrossCallReturnLabel_28
          CFI (cfiCond1067) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1067) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1067) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1067) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1067) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1067) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1067) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1067) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1067) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1067) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1067) CFA_SP SP+-2
          CFI (cfiCond1067) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1068 Using cfiCommon1
          CFI (cfiPicker1068) NoFunction
          CFI (cfiPicker1068) Picker
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine150 & 0xFFFF
??CrossCallReturnLabel_272:
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond1066
          CFI EndBlock cfiCond1067
          CFI EndBlock cfiPicker1068
// 3099 
// 3100 /*********************************************************************
// 3101  * @fn          ZDO_ParsePowerDescRsp
// 3102  *
// 3103  * @brief       This function parses the Power_Desc_rsp message.
// 3104  *
// 3105  * @param       inMsg  - incoming message
// 3106  * @param       pNPRsp - place to parse the message into
// 3107  *
// 3108  * @return      none
// 3109  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3110 void ZDO_ParsePowerDescRsp( zdoIncomingMsg_t *inMsg, ZDO_PowerRsp_t *pNPRsp )
ZDO_ParsePowerDescRsp:
          CFI Block cfiBlock1069 Using cfiCommon0
          CFI Function ZDO_ParsePowerDescRsp
        CODE
// 3111 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
// 3112   uint8 *msg;
// 3113 
// 3114   msg = inMsg->asdu;
        LCALL     ?Subroutine120 & 0xFFFF
??CrossCallReturnLabel_210:
        LCALL     ??Subroutine206_0 & 0xFFFF
// 3115   pNPRsp->status = *msg++;
??CrossCallReturnLabel_401:
        LCALL     ?Subroutine43 & 0xFFFF
??CrossCallReturnLabel_549:
        INC       DPTR
        MOV       R2,DPL
        MOV       R3,DPH
// 3116   pNPRsp->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
        LCALL     ??Subroutine231_0 & 0xFFFF
??CrossCallReturnLabel_540:
        MOV       R1,A
        MOV       A,R6
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
        LCALL     ?Subroutine16 & 0xFFFF
// 3117 
// 3118   if ( pNPRsp->status == ZDP_SUCCESS )
??CrossCallReturnLabel_22:
        MOVX      A,@DPTR
        JZ        $+5
        LJMP      ??ZDO_ParsePowerDescRsp_0 & 0xFFFF
// 3119   {
// 3120     msg += 2;
// 3121     pNPRsp->pwrDesc.AvailablePowerSources = *msg >> 4;
        MOV       A,R2
        ADD       A,#0x2
        LCALL     ?Subroutine133 & 0xFFFF
??CrossCallReturnLabel_245:
        MOV       A,R4
        ADD       A,#0x3
        CLR       A
        ADDC      A,R5
        INC       R4
        INC       R4
        INC       R4
        MOV       R5,A
        MOV       DPL,R4
        MOV       DPH,A
        MOVX      A,@DPTR
        ANL       A,#0xf
        MOV       ?V0,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V1,A
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      A,@DPTR
        SWAP      A
        ANL       A,#0xf
        MOV       ?V2,A
        MOV       ?V3,#0x0
        MOV       A,#0x4
        MOV       R0,#?V2
        LCALL     ?S_SHL
        MOV       A,?V0
        ORL       A,?V2
        MOV       R0,A
        MOV       R1,?V1
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ??Subroutine246_0 & 0xFFFF
// 3122     pNPRsp->pwrDesc.PowerMode = *msg++ & 0x0F;
??CrossCallReturnLabel_614:
        MOV       A,R0
        ANL       A,#0xf0
        MOV       R0,A
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        ANL       A,#0xf
        MOV       R6,A
        MOV       A,R0
        ORL       A,R6
        MOV       ?V0,A
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ??Subroutine246_0 & 0xFFFF
// 3123     pNPRsp->pwrDesc.CurrentPowerSourceLevel = *msg >> 4;
??CrossCallReturnLabel_615:
        MOV       A,R2
        ADD       A,#0x3
        LCALL     ?Subroutine133 & 0xFFFF
// 3124     pNPRsp->pwrDesc.CurrentPowerSource = *msg++ & 0x0F;
// 3125   }
??CrossCallReturnLabel_246:
        MOV       A,?V1
        ANL       A,#0xf
        MOV       ?V1,A
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      A,@DPTR
        SWAP      A
        ANL       A,#0xf
        MOV       ?V2,A
        MOV       A,#0xc
        MOV       R0,#?V2
        LCALL     ?S_SHL
        MOV       A,?V1
        ORL       A,?V3
        MOV       R1,A
        MOV       DPL,R4
        MOV       DPH,R5
        MOV       A,?V0
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
        LCALL     ??Subroutine241_0 & 0xFFFF
??CrossCallReturnLabel_596:
        ANL       A,#0xf
        MOV       R0,A
        MOV       A,R2
        ADD       A,#0x4
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        MOVX      A,@DPTR
        ANL       A,#0xf0
        MOVX      @DPTR,A
        MOV       A,R0
        MOV       R1,A
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        MOVX      A,@DPTR
        ORL       A,R1
        MOVX      @DPTR,A
// 3126 }
??ZDO_ParsePowerDescRsp_0:
        LJMP      ??Subroutine185_0 & 0xFFFF
          CFI EndBlock cfiBlock1069

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine165:
          CFI Block cfiCond1070 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_544, ??CrossCallReturnLabel_110
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1071 Using cfiCommon0
          CFI (cfiCond1071) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1071) Conditional ??CrossCallReturnLabel_544, ??CrossCallReturnLabel_111
          CFI (cfiCond1071) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1071) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1071) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1071) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1071) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1071) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1071) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1071) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1071) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1071) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1071) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1071) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1071) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1071) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1071) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1071) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1071) CFA_SP SP+-4
          CFI (cfiCond1071) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1072 Using cfiCommon0
          CFI (cfiCond1072) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1072) Conditional ??CrossCallReturnLabel_544, ??CrossCallReturnLabel_112
          CFI (cfiCond1072) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1072) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1072) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1072) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1072) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1072) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1072) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1072) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1072) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1072) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1072) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1072) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1072) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1072) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1072) CFA_SP SP+-4
          CFI (cfiCond1072) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1073 Using cfiCommon0
          CFI (cfiCond1073) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond1073) Conditional ??CrossCallReturnLabel_543, ??CrossCallReturnLabel_100
          CFI (cfiCond1073) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1073) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1073) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1073) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1073) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1073) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1073) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1073) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1073) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1073) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1073) CFA_SP SP+-4
          CFI (cfiCond1073) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1074 Using cfiCommon0
          CFI (cfiCond1074) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1074) Conditional ??CrossCallReturnLabel_543, ??CrossCallReturnLabel_101
          CFI (cfiCond1074) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1074) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1074) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1074) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1074) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1074) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1074) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1074) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1074) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1074) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1074) CFA_SP SP+-4
          CFI (cfiCond1074) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1075 Using cfiCommon1
          CFI (cfiPicker1075) NoFunction
          CFI (cfiPicker1075) Picker
        MOV       DPH,A
          CFI EndBlock cfiCond1070
          CFI EndBlock cfiCond1071
          CFI EndBlock cfiCond1072
          CFI EndBlock cfiCond1073
          CFI EndBlock cfiCond1074
          CFI EndBlock cfiPicker1075
        REQUIRE ??Subroutine231_0
        ; // Fall through to label ??Subroutine231_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine231_0:
          CFI Block cfiCond1076 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_538
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1077 Using cfiCommon0
          CFI (cfiCond1077) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1077) Conditional ??CrossCallReturnLabel_545, ??CrossCallReturnLabel_338
          CFI (cfiCond1077) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1077) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1077) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1077) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1077) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1077) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1077) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1077) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1077) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1077) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1077) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1077) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1077) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1077) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1077) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1077) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1077) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1077) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1077) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1077) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1077) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1077) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1077) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1077) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1077) CFA_SP SP+-4
          CFI (cfiCond1077) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond1078 Using cfiCommon0
          CFI (cfiCond1078) Function ZDO_ParseParentAnnce
          CFI (cfiCond1078) Conditional ??CrossCallReturnLabel_545, ??CrossCallReturnLabel_339
          CFI (cfiCond1078) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1078) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1078) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1078) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1078) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1078) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1078) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1078) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1078) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1078) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1078) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1078) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1078) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1078) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1078) CFA_SP SP+-4
          CFI (cfiCond1078) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1079 Using cfiCommon0
          CFI (cfiCond1079) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond1079) Conditional ??CrossCallReturnLabel_545, ??CrossCallReturnLabel_337
          CFI (cfiCond1079) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1079) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1079) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1079) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1079) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1079) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1079) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1079) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1079) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1079) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1079) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1079) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1079) CFA_SP SP+-4
          CFI (cfiCond1079) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1080 Using cfiCommon0
          CFI (cfiCond1080) Function ZDO_ParseAddrRsp
          CFI (cfiCond1080) Conditional ??CrossCallReturnLabel_545, ??CrossCallReturnLabel_336
          CFI (cfiCond1080) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1080) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1080) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1080) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1080) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1080) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1080) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1080) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1080) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1080) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1080) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1080) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1080) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1080) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1080) CFA_SP SP+-4
          CFI (cfiCond1080) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1081 Using cfiCommon0
          CFI (cfiCond1081) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond1081) Conditional ??CrossCallReturnLabel_542, ??CrossCallReturnLabel_174
          CFI (cfiCond1081) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1081) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1081) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1081) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1081) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1081) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1081) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1081) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1081) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1081) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1081) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1081) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1081) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1081) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1081) CFA_SP SP+-4
          CFI (cfiCond1081) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1082 Using cfiCommon0
          CFI (cfiCond1082) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond1082) Conditional ??CrossCallReturnLabel_542, ??CrossCallReturnLabel_175
          CFI (cfiCond1082) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1082) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1082) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1082) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1082) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1082) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1082) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1082) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1082) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1082) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1082) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1082) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1082) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1082) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1082) CFA_SP SP+-4
          CFI (cfiCond1082) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1083 Using cfiCommon0
          CFI (cfiCond1083) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1083) Conditional ??CrossCallReturnLabel_539
          CFI (cfiCond1083) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1083) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1083) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1083) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1083) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1083) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1083) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1083) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1083) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1083) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1083) CFA_SP SP+-2
          CFI (cfiCond1083) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1084 Using cfiCommon0
          CFI (cfiCond1084) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond1084) Conditional ??CrossCallReturnLabel_540
          CFI (cfiCond1084) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1084) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1084) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1084) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1084) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1084) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1084) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1084) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1084) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1084) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1084) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1084) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1084) CFA_SP SP+-2
          CFI (cfiCond1084) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1085 Using cfiCommon0
          CFI (cfiCond1085) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1085) Conditional ??CrossCallReturnLabel_541, ??CrossCallReturnLabel_0
          CFI (cfiCond1085) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1085) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1085) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1085) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1085) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1085) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1085) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1085) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1085) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1085) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1085) CFA_SP SP+-4
          CFI (cfiCond1085) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1086 Using cfiCommon0
          CFI (cfiCond1086) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond1086) Conditional ??CrossCallReturnLabel_541, ??CrossCallReturnLabel_1
          CFI (cfiCond1086) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1086) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1086) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1086) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1086) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1086) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1086) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1086) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1086) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1086) CFA_SP SP+-4
          CFI (cfiCond1086) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1087 Using cfiCommon0
          CFI (cfiCond1087) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1087) Conditional ??CrossCallReturnLabel_544, ??CrossCallReturnLabel_110
          CFI (cfiCond1087) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1087) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1087) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1087) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1087) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1087) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1087) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1087) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1087) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1087) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1087) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1087) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1087) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1087) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1087) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1087) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1087) CFA_SP SP+-4
          CFI (cfiCond1087) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1088 Using cfiCommon0
          CFI (cfiCond1088) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1088) Conditional ??CrossCallReturnLabel_544, ??CrossCallReturnLabel_111
          CFI (cfiCond1088) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1088) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1088) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1088) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1088) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1088) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1088) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1088) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1088) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1088) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1088) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1088) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1088) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1088) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1088) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1088) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1088) CFA_SP SP+-4
          CFI (cfiCond1088) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1089 Using cfiCommon0
          CFI (cfiCond1089) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1089) Conditional ??CrossCallReturnLabel_544, ??CrossCallReturnLabel_112
          CFI (cfiCond1089) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1089) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1089) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1089) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1089) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1089) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1089) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1089) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1089) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1089) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1089) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1089) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1089) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1089) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1089) CFA_SP SP+-4
          CFI (cfiCond1089) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1090 Using cfiCommon0
          CFI (cfiCond1090) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond1090) Conditional ??CrossCallReturnLabel_543, ??CrossCallReturnLabel_100
          CFI (cfiCond1090) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1090) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1090) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1090) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1090) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1090) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1090) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1090) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1090) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1090) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1090) CFA_SP SP+-4
          CFI (cfiCond1090) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1091 Using cfiCommon0
          CFI (cfiCond1091) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1091) Conditional ??CrossCallReturnLabel_543, ??CrossCallReturnLabel_101
          CFI (cfiCond1091) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1091) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1091) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1091) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1091) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1091) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1091) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1091) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1091) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1091) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1091) CFA_SP SP+-4
          CFI (cfiCond1091) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1092 Using cfiCommon1
          CFI (cfiPicker1092) NoFunction
          CFI (cfiPicker1092) Picker
        MOVX      A,@DPTR
        MOV       R6,A
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1076
          CFI EndBlock cfiCond1077
          CFI EndBlock cfiCond1078
          CFI EndBlock cfiCond1079
          CFI EndBlock cfiCond1080
          CFI EndBlock cfiCond1081
          CFI EndBlock cfiCond1082
          CFI EndBlock cfiCond1083
          CFI EndBlock cfiCond1084
          CFI EndBlock cfiCond1085
          CFI EndBlock cfiCond1086
          CFI EndBlock cfiCond1087
          CFI EndBlock cfiCond1088
          CFI EndBlock cfiCond1089
          CFI EndBlock cfiCond1090
          CFI EndBlock cfiCond1091
          CFI EndBlock cfiPicker1092

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine133:
          CFI Block cfiCond1093 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_244
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1094 Using cfiCommon0
          CFI (cfiCond1094) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond1094) Conditional ??CrossCallReturnLabel_245
          CFI (cfiCond1094) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1094) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1094) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1094) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1094) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1094) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1094) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1094) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1094) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1094) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1094) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1094) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1094) CFA_SP SP+-2
          CFI (cfiCond1094) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1095 Using cfiCommon0
          CFI (cfiCond1095) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond1095) Conditional ??CrossCallReturnLabel_246
          CFI (cfiCond1095) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1095) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1095) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1095) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1095) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1095) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1095) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1095) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1095) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1095) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1095) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1095) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1095) CFA_SP SP+-2
          CFI (cfiCond1095) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1096 Using cfiCommon1
          CFI (cfiPicker1096) NoFunction
          CFI (cfiPicker1096) Picker
        MOV       R0,A
        CLR       A
        ADDC      A,R3
        MOV       R1,A
        MOV       A,R0
        MOV       R6,A
        MOV       A,R1
        MOV       R7,A
        RET
          CFI EndBlock cfiCond1093
          CFI EndBlock cfiCond1094
          CFI EndBlock cfiCond1095
          CFI EndBlock cfiPicker1096

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine43:
          CFI Block cfiCond1097 Using cfiCommon0
          CFI Function ZDO_ParsePowerDescRsp
          CFI Conditional ??CrossCallReturnLabel_549
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1098 Using cfiCommon0
          CFI (cfiCond1098) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1098) Conditional ??CrossCallReturnLabel_550
          CFI (cfiCond1098) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1098) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1098) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1098) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1098) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1098) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1098) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1098) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1098) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1098) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1098) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1098) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1098) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1098) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1098) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1098) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1098) CFA_SP SP+-2
          CFI (cfiCond1098) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1099 Using cfiCommon1
          CFI (cfiPicker1099) NoFunction
          CFI (cfiPicker1099) Picker
        MOV       DPL,R2
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       DPL,R4
        MOV       DPH,R5
          CFI EndBlock cfiCond1097
          CFI EndBlock cfiCond1098
          CFI EndBlock cfiPicker1099
        REQUIRE ??Subroutine232_0
        ; // Fall through to label ??Subroutine232_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine232_0:
          CFI Block cfiCond1100 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_546
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond1101 Using cfiCommon0
          CFI (cfiCond1101) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1101) Conditional ??CrossCallReturnLabel_547
          CFI (cfiCond1101) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1101) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1101) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1101) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1101) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1101) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1101) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1101) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1101) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1101) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1101) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1101) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1101) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1101) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1101) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1101) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1101) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1101) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1101) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1101) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1101) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1101) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1101) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1101) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1101) CFA_SP SP+-2
          CFI (cfiCond1101) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond1102 Using cfiCommon0
          CFI (cfiCond1102) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1102) Conditional ??CrossCallReturnLabel_548
          CFI (cfiCond1102) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1102) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1102) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1102) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1102) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1102) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1102) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1102) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1102) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1102) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1102) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1102) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1102) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1102) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1102) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1102) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1102) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1102) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1102) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1102) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1102) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1102) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1102) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1102) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1102) CFA_SP SP+-2
          CFI (cfiCond1102) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond1103 Using cfiCommon0
          CFI (cfiCond1103) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond1103) Conditional ??CrossCallReturnLabel_549
          CFI (cfiCond1103) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1103) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1103) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1103) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1103) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1103) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1103) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1103) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1103) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1103) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1103) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1103) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1103) CFA_SP SP+-2
          CFI (cfiCond1103) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1104 Using cfiCommon0
          CFI (cfiCond1104) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1104) Conditional ??CrossCallReturnLabel_550
          CFI (cfiCond1104) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1104) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1104) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1104) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1104) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1104) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1104) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1104) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1104) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1104) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1104) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1104) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1104) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1104) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1104) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1104) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1104) CFA_SP SP+-2
          CFI (cfiCond1104) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1105 Using cfiCommon1
          CFI (cfiPicker1105) NoFunction
          CFI (cfiPicker1105) Picker
        LCALL     ?Subroutine154 & 0xFFFF
??CrossCallReturnLabel_552:
        RET
          CFI EndBlock cfiCond1100
          CFI EndBlock cfiCond1101
          CFI EndBlock cfiCond1102
          CFI EndBlock cfiCond1103
          CFI EndBlock cfiCond1104
          CFI EndBlock cfiPicker1105

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine154:
          CFI Block cfiCond1106 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_551, ??CrossCallReturnLabel_67
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1107 Using cfiCommon0
          CFI (cfiCond1107) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1107) Conditional ??CrossCallReturnLabel_551, ??CrossCallReturnLabel_68
          CFI (cfiCond1107) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1107) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1107) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1107) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1107) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1107) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1107) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1107) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1107) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1107) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1107) CFA_SP SP+-4
          CFI (cfiCond1107) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1108 Using cfiCommon0
          CFI (cfiCond1108) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1108) Conditional ??CrossCallReturnLabel_551, ??CrossCallReturnLabel_69
          CFI (cfiCond1108) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1108) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1108) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1108) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1108) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1108) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1108) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1108) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1108) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1108) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1108) CFA_SP SP+-4
          CFI (cfiCond1108) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1109 Using cfiCommon0
          CFI (cfiCond1109) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond1109) Conditional ??CrossCallReturnLabel_552, ??CrossCallReturnLabel_549
          CFI (cfiCond1109) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1109) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1109) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1109) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1109) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1109) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1109) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1109) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1109) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1109) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1109) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1109) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1109) CFA_SP SP+-4
          CFI (cfiCond1109) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1110 Using cfiCommon0
          CFI (cfiCond1110) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1110) Conditional ??CrossCallReturnLabel_552, ??CrossCallReturnLabel_550
          CFI (cfiCond1110) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1110) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1110) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1110) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1110) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1110) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1110) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1110) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1110) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1110) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1110) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1110) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1110) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1110) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1110) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1110) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1110) CFA_SP SP+-4
          CFI (cfiCond1110) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1111 Using cfiCommon0
          CFI (cfiCond1111) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1111) Conditional ??CrossCallReturnLabel_552, ??CrossCallReturnLabel_546
          CFI (cfiCond1111) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1111) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1111) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1111) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1111) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1111) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1111) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1111) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1111) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1111) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1111) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1111) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1111) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1111) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1111) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1111) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1111) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1111) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1111) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1111) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1111) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1111) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1111) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1111) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1111) CFA_SP SP+-4
          CFI (cfiCond1111) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond1112 Using cfiCommon0
          CFI (cfiCond1112) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1112) Conditional ??CrossCallReturnLabel_552, ??CrossCallReturnLabel_547
          CFI (cfiCond1112) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1112) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1112) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1112) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1112) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1112) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1112) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1112) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1112) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1112) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1112) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1112) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1112) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1112) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1112) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1112) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1112) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1112) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1112) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1112) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1112) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1112) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1112) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1112) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1112) CFA_SP SP+-4
          CFI (cfiCond1112) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond1113 Using cfiCommon0
          CFI (cfiCond1113) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1113) Conditional ??CrossCallReturnLabel_552, ??CrossCallReturnLabel_548
          CFI (cfiCond1113) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1113) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1113) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1113) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1113) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1113) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1113) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1113) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1113) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1113) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1113) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1113) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1113) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1113) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1113) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1113) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1113) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1113) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1113) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1113) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1113) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1113) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1113) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1113) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1113) CFA_SP SP+-4
          CFI (cfiCond1113) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond1114 Using cfiCommon0
          CFI (cfiCond1114) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1114) Conditional ??CrossCallReturnLabel_553, ??CrossCallReturnLabel_64
          CFI (cfiCond1114) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1114) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1114) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1114) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1114) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1114) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1114) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1114) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1114) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1114) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1114) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1114) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1114) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1114) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1114) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1114) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1114) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1114) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1114) CFA_SP SP+-4
          CFI (cfiCond1114) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1115 Using cfiCommon0
          CFI (cfiCond1115) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1115) Conditional ??CrossCallReturnLabel_553, ??CrossCallReturnLabel_65
          CFI (cfiCond1115) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1115) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1115) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1115) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1115) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1115) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1115) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1115) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1115) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1115) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1115) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1115) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1115) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1115) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1115) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1115) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1115) CFA_SP SP+-4
          CFI (cfiCond1115) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1116 Using cfiCommon0
          CFI (cfiCond1116) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1116) Conditional ??CrossCallReturnLabel_553, ??CrossCallReturnLabel_66
          CFI (cfiCond1116) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1116) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1116) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1116) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1116) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1116) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1116) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1116) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1116) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1116) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1116) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1116) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1116) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1116) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1116) CFA_SP SP+-4
          CFI (cfiCond1116) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1117 Using cfiCommon0
          CFI (cfiCond1117) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1117) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_2
          CFI (cfiCond1117) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1117) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1117) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1117) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1117) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1117) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1117) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1117) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1117) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1117) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1117) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1117) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1117) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1117) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1117) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1117) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1117) CFA_SP SP+-4
          CFI (cfiCond1117) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1118 Using cfiCommon0
          CFI (cfiCond1118) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1118) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_3
          CFI (cfiCond1118) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1118) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1118) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1118) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1118) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1118) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1118) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1118) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1118) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1118) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1118) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1118) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1118) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1118) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1118) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1118) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1118) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1118) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1118) CFA_SP SP+-4
          CFI (cfiCond1118) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1119 Using cfiCommon1
          CFI (cfiPicker1119) NoFunction
          CFI (cfiPicker1119) Picker
        MOVX      @DPTR,A
        MOV       DPL,R2
        MOV       DPH,R3
        RET
          CFI EndBlock cfiCond1106
          CFI EndBlock cfiCond1107
          CFI EndBlock cfiCond1108
          CFI EndBlock cfiCond1109
          CFI EndBlock cfiCond1110
          CFI EndBlock cfiCond1111
          CFI EndBlock cfiCond1112
          CFI EndBlock cfiCond1113
          CFI EndBlock cfiCond1114
          CFI EndBlock cfiCond1115
          CFI EndBlock cfiCond1116
          CFI EndBlock cfiCond1117
          CFI EndBlock cfiCond1118
          CFI EndBlock cfiPicker1119
// 3127 
// 3128 /*********************************************************************
// 3129  * @fn          ZDO_ParseSimpleDescRsp
// 3130  *
// 3131  * @brief       This function parse the Simple_Desc_rsp message.
// 3132  *
// 3133  *   NOTE: The pAppInClusterList and pAppOutClusterList fields
// 3134  *         in the SimpleDescriptionFormat_t structure are allocated
// 3135  *         and the calling function needs to free [osal_msg_free()]
// 3136  *         these buffers.
// 3137  *
// 3138  * @param       inMsg  - incoming message
// 3139  * @param       pSimpleDescRsp - place to parse the message into
// 3140  *
// 3141  * @return      none
// 3142  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3143 void ZDO_ParseSimpleDescRsp( zdoIncomingMsg_t *inMsg, ZDO_SimpleDescRsp_t *pSimpleDescRsp )
ZDO_ParseSimpleDescRsp:
          CFI Block cfiBlock1120 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescRsp
        CODE
// 3144 {
        FUNCALL ZDO_ParseSimpleDescRsp, ZDO_ParseSimpleDescBuf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV       A,#-0x9
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
// 3145   uint8 *msg;
// 3146 
// 3147   msg = inMsg->asdu;
        LCALL     ?Subroutine9 & 0xFFFF
// 3148   pSimpleDescRsp->status = *msg++;
// 3149   pSimpleDescRsp->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
// 3150   msg += sizeof ( uint16 );
// 3151   msg++; // Skip past the length field.
// 3152 
// 3153   if ( pSimpleDescRsp->status == ZDP_SUCCESS )
??CrossCallReturnLabel_1:
        JNZ       ??ZDO_ParseSimpleDescRsp_0
// 3154   {
// 3155     ZDO_ParseSimpleDescBuf( msg, &(pSimpleDescRsp->simpleDesc) );
        ; Setup parameters for call to function ZDO_ParseSimpleDescBuf
        MOV       A,R4
        ADD       A,#0x3
        MOV       R4,A
        JNC       ??ZDO_ParseSimpleDescRsp_1
        INC       R5
??ZDO_ParseSimpleDescRsp_1:
        MOV       A,R0
        ADD       A,#0x3
        MOV       R2,A
        CLR       A
        ADDC      A,R1
        MOV       R3,A
        LCALL     `??ZDO_ParseSimpleDescBuf::?relay`; Banked call to: ZDO_ParseSimpleDescBuf
// 3156   }
// 3157 }
??ZDO_ParseSimpleDescRsp_0:
        LJMP      ?Subroutine3 & 0xFFFF
          CFI EndBlock cfiBlock1120

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine9:
          CFI Block cfiCond1121 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_0
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1122 Using cfiCommon0
          CFI (cfiCond1122) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond1122) Conditional ??CrossCallReturnLabel_1
          CFI (cfiCond1122) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1122) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1122) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1122) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1122) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1122) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1122) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1122) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1122) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1122) CFA_SP SP+-2
          CFI (cfiCond1122) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker1123 Using cfiCommon1
          CFI (cfiPicker1123) NoFunction
          CFI (cfiPicker1123) Picker
        LCALL     ?Subroutine174 & 0xFFFF
??CrossCallReturnLabel_511:
        LCALL     ?Subroutine167 & 0xFFFF
??CrossCallReturnLabel_293:
        MOV       DPL,R4
        MOV       DPH,R5
        MOVX      @DPTR,A
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        MOV       R0,DPL
        MOV       R1,DPH
        LCALL     ??Subroutine231_0 & 0xFFFF
??CrossCallReturnLabel_541:
        MOV       R3,A
        MOV       A,R6
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R3
        MOVX      @DPTR,A
        MOV       DPL,R4
        MOV       DPH,R5
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1121
          CFI EndBlock cfiCond1122
          CFI EndBlock cfiPicker1123

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine167:
          CFI Block cfiCond1124 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_133
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1125 Using cfiCommon0
          CFI (cfiCond1125) Function ZDO_ProcessUserDescSet
          CFI (cfiCond1125) Conditional ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_132
          CFI (cfiCond1125) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1125) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1125) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1125) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1125) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1125) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1125) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1125) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1125) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1125) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1125) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1125) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1125) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1125) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1125) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1125) CFA_SP SP+-4
          CFI (cfiCond1125) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond1126 Using cfiCommon0
          CFI (cfiCond1126) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1126) Conditional ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_0
          CFI (cfiCond1126) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1126) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1126) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1126) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1126) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1126) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1126) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1126) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1126) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1126) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1126) CFA_SP SP+-4
          CFI (cfiCond1126) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1127 Using cfiCommon0
          CFI (cfiCond1127) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond1127) Conditional ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_1
          CFI (cfiCond1127) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1127) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1127) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1127) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1127) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1127) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1127) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1127) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1127) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1127) CFA_SP SP+-4
          CFI (cfiCond1127) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker1128 Using cfiCommon1
          CFI (cfiPicker1128) NoFunction
          CFI (cfiPicker1128) Picker
        MOV       DPH,A
        LCALL     ?Subroutine181 & 0xFFFF
??CrossCallReturnLabel_527:
        MOV       R1,A
        MOV       DPL,R0
        MOV       DPH,A
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1124
          CFI EndBlock cfiCond1125
          CFI EndBlock cfiCond1126
          CFI EndBlock cfiCond1127
          CFI EndBlock cfiPicker1128
// 3158 
// 3159 /*********************************************************************
// 3160  * @fn          ZDO_ParseEPListRsp
// 3161  *
// 3162  * @brief       This parse the Active_EP_rsp or Match_Desc_rsp message.
// 3163  *
// 3164  * @param       inMsg  - incoming message
// 3165  *
// 3166  * @return      none
// 3167  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3168 ZDO_ActiveEndpointRsp_t *ZDO_ParseEPListRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseEPListRsp:
          CFI Block cfiBlock1129 Using cfiCommon0
          CFI Function ZDO_ParseEPListRsp
        CODE
// 3169 {
        FUNCALL ZDO_ParseEPListRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseEPListRsp, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
// 3170   ZDO_ActiveEndpointRsp_t *pRsp;
// 3171   uint8 *msg;
// 3172   uint8 Status;
// 3173   uint8 cnt;
// 3174 
// 3175   msg = inMsg->asdu;
        LCALL     ?Subroutine87 & 0xFFFF
// 3176   Status = *msg++;
??CrossCallReturnLabel_147:
        MOV       ?V5,A
        INC       DPTR
        MOV       ?V2,DPL
        MOV       ?V3,DPH
// 3177   cnt = msg[2];
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V4,A
// 3178 
// 3179   pRsp = (ZDO_ActiveEndpointRsp_t *)osal_mem_alloc( sizeof(  ZDO_ActiveEndpointRsp_t ) + cnt );
        MOV       ?V0,A
        ; Setup parameters for call to function osal_mem_alloc
        LCALL     ?Subroutine132 & 0xFFFF
??CrossCallReturnLabel_555:
        MOV       ?V6,R2
        MOV       ?V7,R3
        MOV       R6,?V6
        MOV       R7,?V7
// 3180   if ( pRsp )
        MOV       A,R2
        ORL       A,R7
        JZ        ??ZDO_ParseEPListRsp_0
// 3181   {
// 3182     pRsp->status = Status;
        MOV       DPL,R2
        MOV       DPH,R3
        MOV       A,?V5
        MOVX      @DPTR,A
// 3183     pRsp->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
        MOV       DPL,?V2
        MOV       DPH,?V3
        LCALL     ?Subroutine97 & 0xFFFF
??CrossCallReturnLabel_559:
        MOV       DPL,R6
        MOV       DPH,R3
        INC       DPTR
        LCALL     ??Subroutine246_0 & 0xFFFF
// 3184     msg += sizeof( uint16 );
// 3185     pRsp->cnt = cnt;
??CrossCallReturnLabel_616:
        MOV       DPL,R6
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOV       A,?V4
        LCALL     ?Subroutine26 & 0xFFFF
// 3186     msg++; // pass cnt
// 3187     osal_memcpy( pRsp->epList, msg, cnt );
// 3188   }
??CrossCallReturnLabel_33:
        INC       DPTR
        INC       DPTR
        MOV       R1,DPL
        MOV       R2,DPH
        MOV       ?V4,R1
        MOV       ?V5,R2
        MOV       ?V6,R0
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       R4,?V0
        MOV       R5,#0x0
        MOV       A,R6
        ADD       A,#0x4
        MOV       R2,A
        CLR       A
        ADDC      A,R7
        MOV       R3,A
        LCALL     ??Subroutine242_0 & 0xFFFF
??CrossCallReturnLabel_602:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
// 3189 
// 3190   return ( pRsp );
??ZDO_ParseEPListRsp_0:
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        LJMP      ??Subroutine210_0 & 0xFFFF
// 3191 }
          CFI EndBlock cfiBlock1129

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine132:
          CFI Block cfiCond1130 Using cfiCommon0
          CFI Function ZDO_ParseEPListRsp
          CFI Conditional ??CrossCallReturnLabel_555
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1131 Using cfiCommon0
          CFI (cfiCond1131) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1131) Conditional ??CrossCallReturnLabel_556
          CFI (cfiCond1131) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1131) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1131) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1131) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1131) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1131) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1131) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1131) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1131) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1131) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1131) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1131) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1131) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1131) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1131) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1131) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1131) CFA_SP SP+-2
          CFI (cfiCond1131) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1132 Using cfiCommon1
          CFI (cfiPicker1132) NoFunction
          CFI (cfiPicker1132) Picker
        ADD       A,#0x4
          CFI EndBlock cfiCond1130
          CFI EndBlock cfiCond1131
          CFI EndBlock cfiPicker1132
        REQUIRE ??Subroutine233_0
        ; // Fall through to label ??Subroutine233_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine233_0:
          CFI Block cfiCond1133 Using cfiCommon0
          CFI Function ZDO_ParseMgmtNwkUpdateNotify
          CFI Conditional ??CrossCallReturnLabel_557
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1134 Using cfiCommon0
          CFI (cfiCond1134) Function ZDO_ParseEPListRsp
          CFI (cfiCond1134) Conditional ??CrossCallReturnLabel_555
          CFI (cfiCond1134) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1134) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1134) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1134) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1134) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1134) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1134) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1134) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1134) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1134) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1134) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1134) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1134) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1134) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1134) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1134) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1134) CFA_SP SP+-2
          CFI (cfiCond1134) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1135 Using cfiCommon0
          CFI (cfiCond1135) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1135) Conditional ??CrossCallReturnLabel_556
          CFI (cfiCond1135) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1135) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1135) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1135) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1135) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1135) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1135) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1135) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1135) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1135) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1135) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1135) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1135) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1135) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1135) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1135) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1135) CFA_SP SP+-2
          CFI (cfiCond1135) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1136 Using cfiCommon1
          CFI (cfiPicker1136) NoFunction
          CFI (cfiPicker1136) Picker
        MOV       R2,A
        CLR       A
        ADDC      A,#0x0
        MOV       R3,A
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        RET
          CFI EndBlock cfiCond1133
          CFI EndBlock cfiCond1134
          CFI EndBlock cfiCond1135
          CFI EndBlock cfiPicker1136

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine97:
          CFI Block cfiCond1137 Using cfiCommon0
          CFI Function ZDO_ParseEPListRsp
          CFI Conditional ??CrossCallReturnLabel_559
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1138 Using cfiCommon0
          CFI (cfiCond1138) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1138) Conditional ??CrossCallReturnLabel_560
          CFI (cfiCond1138) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1138) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1138) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1138) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1138) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1138) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1138) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1138) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1138) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1138) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1138) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1138) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1138) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1138) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1138) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1138) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1138) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1138) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1138) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1138) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1138) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1138) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1138) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1138) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1138) CFA_SP SP+-2
          CFI (cfiCond1138) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker1139 Using cfiCommon1
          CFI (cfiPicker1139) NoFunction
          CFI (cfiPicker1139) Picker
        MOVX      A,@DPTR
        MOV       R2,A
          CFI EndBlock cfiCond1137
          CFI EndBlock cfiCond1138
          CFI EndBlock cfiPicker1139
        REQUIRE ??Subroutine234_0
        ; // Fall through to label ??Subroutine234_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine234_0:
          CFI Block cfiCond1140 Using cfiCommon0
          CFI Function ZDO_ParseUserDescRsp
          CFI Conditional ??CrossCallReturnLabel_558
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1141 Using cfiCommon0
          CFI (cfiCond1141) Function ZDO_ParseEPListRsp
          CFI (cfiCond1141) Conditional ??CrossCallReturnLabel_559
          CFI (cfiCond1141) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1141) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1141) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1141) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1141) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1141) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1141) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1141) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1141) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1141) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1141) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1141) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1141) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1141) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1141) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1141) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1141) CFA_SP SP+-2
          CFI (cfiCond1141) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1142 Using cfiCommon0
          CFI (cfiCond1142) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1142) Conditional ??CrossCallReturnLabel_560
          CFI (cfiCond1142) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1142) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1142) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1142) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1142) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1142) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1142) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1142) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1142) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1142) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1142) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1142) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1142) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1142) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1142) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1142) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1142) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1142) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1142) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1142) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1142) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1142) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1142) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1142) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1142) CFA_SP SP+-2
          CFI (cfiCond1142) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker1143 Using cfiCommon1
          CFI (cfiPicker1143) NoFunction
          CFI (cfiPicker1143) Picker
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R0,A
        CLR       A
        XCH       A,R0
        MOV       R1,A
        MOV       A,R2
        RET
          CFI EndBlock cfiCond1140
          CFI EndBlock cfiCond1141
          CFI EndBlock cfiCond1142
          CFI EndBlock cfiPicker1143

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine26:
          CFI Block cfiCond1144 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_35
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1145 Using cfiCommon0
          CFI (cfiCond1145) Function ZDO_ParseEPListRsp
          CFI (cfiCond1145) Conditional ??CrossCallReturnLabel_33
          CFI (cfiCond1145) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1145) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1145) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1145) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1145) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1145) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1145) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1145) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1145) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1145) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1145) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1145) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1145) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1145) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1145) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1145) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1145) CFA_SP SP+-2
          CFI (cfiCond1145) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1146 Using cfiCommon0
          CFI (cfiCond1146) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1146) Conditional ??CrossCallReturnLabel_34
          CFI (cfiCond1146) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1146) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1146) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1146) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1146) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1146) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1146) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1146) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1146) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1146) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1146) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1146) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1146) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1146) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1146) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1146) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1146) CFA_SP SP+-2
          CFI (cfiCond1146) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1147 Using cfiCommon1
          CFI (cfiPicker1147) NoFunction
          CFI (cfiPicker1147) Picker
        LCALL     ?Subroutine156 & 0xFFFF
??CrossCallReturnLabel_280:
        RET
          CFI EndBlock cfiCond1144
          CFI EndBlock cfiCond1145
          CFI EndBlock cfiCond1146
          CFI EndBlock cfiPicker1147

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine156:
          CFI Block cfiCond1148 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_35
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1149 Using cfiCommon0
          CFI (cfiCond1149) Function ZDO_ParseEPListRsp
          CFI (cfiCond1149) Conditional ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_33
          CFI (cfiCond1149) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1149) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1149) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1149) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1149) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1149) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1149) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1149) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1149) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1149) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1149) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1149) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1149) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1149) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1149) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1149) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1149) CFA_SP SP+-4
          CFI (cfiCond1149) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1150 Using cfiCommon0
          CFI (cfiCond1150) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1150) Conditional ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_34
          CFI (cfiCond1150) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1150) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1150) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1150) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1150) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1150) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1150) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1150) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1150) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1150) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1150) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1150) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1150) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1150) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1150) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1150) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1150) CFA_SP SP+-4
          CFI (cfiCond1150) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1151 Using cfiCommon0
          CFI (cfiCond1151) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1151) Conditional ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_31
          CFI (cfiCond1151) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1151) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1151) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1151) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1151) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1151) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1151) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1151) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1151) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1151) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1151) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1151) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1151) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1151) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1151) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1151) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1151) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1151) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1151) CFA_SP SP+-4
          CFI (cfiCond1151) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1152 Using cfiCommon0
          CFI (cfiCond1152) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1152) Conditional ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_32
          CFI (cfiCond1152) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1152) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1152) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1152) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1152) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1152) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1152) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1152) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1152) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1152) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1152) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1152) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1152) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1152) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1152) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1152) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1152) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1152) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1152) CFA_SP SP+-4
          CFI (cfiCond1152) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1153 Using cfiCommon1
          CFI (cfiPicker1153) NoFunction
          CFI (cfiPicker1153) Picker
        MOVX      @DPTR,A
        ; Setup parameters for call to function osal_memcpy
        MOV       DPL,?V2
        MOV       DPH,?V3
        INC       DPTR
        RET
          CFI EndBlock cfiCond1148
          CFI EndBlock cfiCond1149
          CFI EndBlock cfiCond1150
          CFI EndBlock cfiCond1151
          CFI EndBlock cfiCond1152
          CFI EndBlock cfiPicker1153
// 3192 
// 3193 /*********************************************************************
// 3194  * @fn          ZDO_ParseServerDiscRsp
// 3195  *
// 3196  * @brief       Parse the Server_Discovery_rsp message.
// 3197  *
// 3198  * @param       inMsg - incoming message.
// 3199  * @param       pRsp - place to put the parsed information.
// 3200  *
// 3201  * @return      none
// 3202  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3203 void ZDO_ParseServerDiscRsp( zdoIncomingMsg_t *inMsg, ZDO_ServerDiscRsp_t *pRsp )
ZDO_ParseServerDiscRsp:
          CFI Block cfiBlock1154 Using cfiCommon0
          CFI Function ZDO_ParseServerDiscRsp
        CODE
// 3204 {
        MOV       A,#-0x9
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
// 3205   pRsp->status = inMsg->asdu[0];
        MOV       A,R2
        ADD       A,#0x13
        MOV       R0,A
        CLR       A
        ADDC      A,R3
        MOV       R1,A
        MOV       DPL,R0
        MOV       DPH,A
        LCALL     ??Subroutine235_0 & 0xFFFF
??CrossCallReturnLabel_563:
        MOV       DPH,A
        MOV       DPL,R2
        LCALL     ??Subroutine236_0 & 0xFFFF
??CrossCallReturnLabel_568:
        LCALL     ?Subroutine45 & 0xFFFF
// 3206   pRsp->serverMask = BUILD_UINT16( inMsg->asdu[1], inMsg->asdu[2] );
??CrossCallReturnLabel_75:
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       DPL,R0
        MOV       DPH,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R2,A
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       A,R2
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        LCALL     ??Subroutine246_0 & 0xFFFF
// 3207 }
??CrossCallReturnLabel_617:
        LJMP      ?Subroutine3 & 0xFFFF
          CFI EndBlock cfiBlock1154

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine109:
          CFI Block cfiCond1155 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_565
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1156 Using cfiCommon0
          CFI (cfiCond1156) Function ZDMatchSendState
          CFI (cfiCond1156) Conditional ??CrossCallReturnLabel_566
          CFI (cfiCond1156) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1156) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1156) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1156) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1156) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1156) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1156) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1156) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1156) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1156) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1156) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1156) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1156) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1156) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1156) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1156) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1156) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1156) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1156) CFA_SP SP+-2
          CFI (cfiCond1156) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker1157 Using cfiCommon1
          CFI (cfiPicker1157) NoFunction
          CFI (cfiPicker1157) Picker
        MOV       A,R0
        ADD       A,R0
        MOV       R0,A
        CLR       A
        RLC       A
        MOV       R1,A
        MOV       DPTR,#matchED
          CFI EndBlock cfiCond1155
          CFI EndBlock cfiCond1156
          CFI EndBlock cfiPicker1157
        REQUIRE ??Subroutine235_0
        ; // Fall through to label ??Subroutine235_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine235_0:
          CFI Block cfiCond1158 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_561
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1159 Using cfiCommon0
          CFI (cfiCond1159) Function ZDO_ParseAddrRsp
          CFI (cfiCond1159) Conditional ??CrossCallReturnLabel_562
          CFI (cfiCond1159) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1159) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1159) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1159) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1159) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1159) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1159) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1159) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1159) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1159) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1159) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1159) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1159) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1159) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1159) CFA_SP SP+-2
          CFI (cfiCond1159) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1160 Using cfiCommon0
          CFI (cfiCond1160) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond1160) Conditional ??CrossCallReturnLabel_563
          CFI (cfiCond1160) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1160) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1160) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1160) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1160) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1160) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1160) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1160) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1160) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1160) CFA_SP SP+-2
          CFI (cfiCond1160) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1161 Using cfiCommon0
          CFI (cfiCond1161) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1161) Conditional ??CrossCallReturnLabel_564
          CFI (cfiCond1161) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1161) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1161) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1161) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1161) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1161) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1161) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1161) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1161) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1161) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1161) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1161) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1161) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1161) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1161) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1161) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1161) CFA_SP SP+-2
          CFI (cfiCond1161) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1162 Using cfiCommon0
          CFI (cfiCond1162) Function ZDMatchSendState
          CFI (cfiCond1162) Conditional ??CrossCallReturnLabel_565
          CFI (cfiCond1162) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1162) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1162) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1162) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1162) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1162) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1162) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1162) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1162) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1162) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1162) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1162) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1162) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1162) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1162) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1162) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1162) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1162) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1162) CFA_SP SP+-2
          CFI (cfiCond1162) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1163 Using cfiCommon0
          CFI (cfiCond1163) Function ZDMatchSendState
          CFI (cfiCond1163) Conditional ??CrossCallReturnLabel_566
          CFI (cfiCond1163) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1163) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1163) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1163) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1163) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1163) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1163) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1163) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1163) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1163) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1163) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1163) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1163) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1163) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1163) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1163) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1163) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1163) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1163) CFA_SP SP+-2
          CFI (cfiCond1163) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker1164 Using cfiCommon1
          CFI (cfiPicker1164) NoFunction
          CFI (cfiPicker1164) Picker
        MOVX      A,@DPTR
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1158
          CFI EndBlock cfiCond1159
          CFI EndBlock cfiCond1160
          CFI EndBlock cfiCond1161
          CFI EndBlock cfiCond1162
          CFI EndBlock cfiCond1163
          CFI EndBlock cfiPicker1164

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine105:
          CFI Block cfiCond1165 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_569
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1166 Using cfiCommon0
          CFI (cfiCond1166) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1166) Conditional ??CrossCallReturnLabel_570
          CFI (cfiCond1166) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1166) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1166) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1166) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1166) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1166) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1166) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1166) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1166) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1166) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1166) CFA_SP SP+-2
          CFI (cfiCond1166) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1167 Using cfiCommon1
          CFI (cfiPicker1167) NoFunction
          CFI (cfiPicker1167) Picker
        INC       DPTR
          CFI EndBlock cfiCond1165
          CFI EndBlock cfiCond1166
          CFI EndBlock cfiPicker1167
        REQUIRE ??Subroutine236_0
        ; // Fall through to label ??Subroutine236_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine236_0:
          CFI Block cfiCond1168 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_567
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1169 Using cfiCommon0
          CFI (cfiCond1169) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond1169) Conditional ??CrossCallReturnLabel_568
          CFI (cfiCond1169) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1169) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1169) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1169) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1169) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1169) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1169) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1169) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1169) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1169) CFA_SP SP+-2
          CFI (cfiCond1169) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1170 Using cfiCommon0
          CFI (cfiCond1170) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1170) Conditional ??CrossCallReturnLabel_569
          CFI (cfiCond1170) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1170) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1170) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1170) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1170) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1170) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1170) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1170) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1170) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1170) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1170) CFA_SP SP+-2
          CFI (cfiCond1170) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1171 Using cfiCommon0
          CFI (cfiCond1171) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1171) Conditional ??CrossCallReturnLabel_570
          CFI (cfiCond1171) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1171) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1171) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1171) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1171) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1171) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1171) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1171) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1171) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1171) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1171) CFA_SP SP+-2
          CFI (cfiCond1171) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1172 Using cfiCommon1
          CFI (cfiPicker1172) NoFunction
          CFI (cfiPicker1172) Picker
        MOVX      A,@DPTR
        MOV       DPL,R4
        MOV       DPH,R5
        RET
          CFI EndBlock cfiCond1168
          CFI EndBlock cfiCond1169
          CFI EndBlock cfiCond1170
          CFI EndBlock cfiCond1171
          CFI EndBlock cfiPicker1172

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine45:
          CFI Block cfiCond1173 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_72
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond1174 Using cfiCommon0
          CFI (cfiCond1174) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1174) Conditional ??CrossCallReturnLabel_73
          CFI (cfiCond1174) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1174) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1174) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1174) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1174) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1174) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1174) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1174) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1174) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1174) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1174) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1174) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1174) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1174) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1174) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1174) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1174) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1174) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1174) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1174) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1174) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1174) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1174) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1174) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1174) CFA_SP SP+-2
          CFI (cfiCond1174) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond1175 Using cfiCommon0
          CFI (cfiCond1175) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1175) Conditional ??CrossCallReturnLabel_74
          CFI (cfiCond1175) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1175) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1175) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1175) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1175) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1175) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1175) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1175) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1175) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1175) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1175) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1175) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1175) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1175) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1175) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1175) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1175) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1175) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1175) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1175) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1175) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1175) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1175) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1175) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1175) CFA_SP SP+-2
          CFI (cfiCond1175) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond1176 Using cfiCommon0
          CFI (cfiCond1176) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond1176) Conditional ??CrossCallReturnLabel_75
          CFI (cfiCond1176) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1176) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1176) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1176) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1176) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1176) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1176) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1176) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1176) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1176) CFA_SP SP+-2
          CFI (cfiCond1176) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker1177 Using cfiCommon1
          CFI (cfiPicker1177) NoFunction
          CFI (cfiPicker1177) Picker
        LCALL     ?Subroutine151 & 0xFFFF
??CrossCallReturnLabel_274:
        RET
          CFI EndBlock cfiCond1173
          CFI EndBlock cfiCond1174
          CFI EndBlock cfiCond1175
          CFI EndBlock cfiCond1176
          CFI EndBlock cfiPicker1177

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine151:
          CFI Block cfiCond1178 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_29
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1179 Using cfiCommon0
          CFI (cfiCond1179) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond1179) Conditional ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_30
          CFI (cfiCond1179) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1179) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1179) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1179) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1179) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1179) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1179) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1179) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1179) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1179) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1179) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1179) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1179) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1179) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1179) CFA_SP SP+-4
          CFI (cfiCond1179) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1180 Using cfiCommon0
          CFI (cfiCond1180) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1180) Conditional ??CrossCallReturnLabel_274, ??CrossCallReturnLabel_72
          CFI (cfiCond1180) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1180) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1180) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1180) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1180) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1180) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1180) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1180) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1180) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1180) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1180) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1180) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1180) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1180) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1180) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1180) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1180) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1180) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1180) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1180) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1180) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1180) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1180) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1180) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1180) CFA_SP SP+-4
          CFI (cfiCond1180) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond1181 Using cfiCommon0
          CFI (cfiCond1181) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1181) Conditional ??CrossCallReturnLabel_274, ??CrossCallReturnLabel_73
          CFI (cfiCond1181) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1181) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1181) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1181) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1181) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1181) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1181) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1181) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1181) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1181) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1181) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1181) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1181) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1181) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1181) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1181) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1181) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1181) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1181) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1181) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1181) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1181) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1181) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1181) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1181) CFA_SP SP+-4
          CFI (cfiCond1181) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond1182 Using cfiCommon0
          CFI (cfiCond1182) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1182) Conditional ??CrossCallReturnLabel_274, ??CrossCallReturnLabel_74
          CFI (cfiCond1182) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1182) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1182) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1182) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1182) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1182) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1182) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1182) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1182) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1182) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1182) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1182) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1182) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1182) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1182) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1182) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1182) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1182) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1182) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1182) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1182) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1182) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1182) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1182) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1182) CFA_SP SP+-4
          CFI (cfiCond1182) CFA_XSP16 add(XSP16, 61)
          CFI Block cfiCond1183 Using cfiCommon0
          CFI (cfiCond1183) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond1183) Conditional ??CrossCallReturnLabel_274, ??CrossCallReturnLabel_75
          CFI (cfiCond1183) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1183) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1183) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1183) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1183) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1183) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1183) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1183) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1183) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1183) CFA_SP SP+-4
          CFI (cfiCond1183) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1184 Using cfiCommon0
          CFI (cfiCond1184) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1184) Conditional ??CrossCallReturnLabel_275, ??CrossCallReturnLabel_70
          CFI (cfiCond1184) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1184) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1184) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1184) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1184) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1184) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1184) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1184) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1184) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1184) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1184) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1184) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1184) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1184) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1184) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1184) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1184) CFA_SP SP+-4
          CFI (cfiCond1184) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1185 Using cfiCommon0
          CFI (cfiCond1185) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1185) Conditional ??CrossCallReturnLabel_275, ??CrossCallReturnLabel_71
          CFI (cfiCond1185) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1185) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1185) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1185) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1185) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1185) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1185) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1185) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1185) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1185) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1185) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1185) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1185) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1185) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1185) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1185) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1185) CFA_SP SP+-4
          CFI (cfiCond1185) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1186 Using cfiCommon1
          CFI (cfiPicker1186) NoFunction
          CFI (cfiPicker1186) Picker
        MOVX      @DPTR,A
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1178
          CFI EndBlock cfiCond1179
          CFI EndBlock cfiCond1180
          CFI EndBlock cfiCond1181
          CFI EndBlock cfiCond1182
          CFI EndBlock cfiCond1183
          CFI EndBlock cfiCond1184
          CFI EndBlock cfiCond1185
          CFI EndBlock cfiPicker1186
// 3208 
// 3209 /*********************************************************************
// 3210  * @fn          ZDO_ParseMgmtLqiRsp
// 3211  *
// 3212  * @brief       This function parses the incoming Management
// 3213  *              LQI response
// 3214  *
// 3215  * @param       inMsg - incoming message
// 3216  *
// 3217  * @return      a pointer to parsed response structure (NULL if not allocated).
// 3218  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 3219  *          by the calling function [osal_mem_free()].
// 3220  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3221 ZDO_MgmtLqiRsp_t *ZDO_ParseMgmtLqiRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseMgmtLqiRsp:
          CFI Block cfiBlock1187 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
        CODE
// 3222 {
        FUNCALL ZDO_ParseMgmtLqiRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtLqiRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtLqiRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
// 3223   ZDO_MgmtLqiRsp_t *pRsp;
// 3224   uint8 status;
// 3225   uint8 startIndex = 0;
        MOV       ?V5,#0x0
// 3226   uint8 neighborLqiCount = 0;
        MOV       ?V4,#0x0
// 3227   uint8 neighborLqiEntries = 0;
        MOV       ?V6,#0x0
// 3228   uint8 *msg;
// 3229 
// 3230   msg = inMsg->asdu;
        LCALL     ?Subroutine67 & 0xFFFF
// 3231 
// 3232   status = *msg++;
??CrossCallReturnLabel_110:
        MOV       ?V7,A
        INC       DPTR
        MOV       R6,DPL
        MOV       R7,DPH
// 3233   if ( status == ZSuccess )
        JNZ       ??ZDO_ParseMgmtLqiRsp_0
// 3234   {
// 3235     neighborLqiEntries = *msg++;
        LCALL     ?Subroutine99 & 0xFFFF
// 3236     startIndex = *msg++;
??CrossCallReturnLabel_162:
        MOV       ?V5,A
// 3237     neighborLqiCount = *msg++;
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V4,A
        MOV       A,R6
        ADD       A,#0x3
        MOV       R6,A
        JNC       ??ZDO_ParseMgmtLqiRsp_0
        INC       R7
// 3238   }
// 3239 
// 3240   // Allocate a buffer big enough to handle the list.
// 3241   pRsp = (ZDO_MgmtLqiRsp_t *)osal_mem_alloc(
// 3242             sizeof( ZDO_MgmtLqiRsp_t ) + (neighborLqiCount * sizeof( ZDP_MgmtLqiItem_t )) );
??ZDO_ParseMgmtLqiRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV       A,?V4
        MOV       B,#0x1a
        MUL       AB
        MOV       R1,B
        ADD       A,#0x4
        MOV       R2,A
        CLR       A
        ADDC      A,R1
        LCALL     ?Subroutine134 & 0xFFFF
// 3243   if ( pRsp )
??CrossCallReturnLabel_590:
        JNZ       $+5
        LJMP      ??ZDO_ParseMgmtLqiRsp_1 & 0xFFFF
// 3244   {
// 3245     uint8 x;
// 3246     ZDP_MgmtLqiItem_t *pList = pRsp->list;
        LCALL     ?Subroutine144 & 0xFFFF
// 3247     pRsp->status = status;
??CrossCallReturnLabel_260:
        LCALL     ?Subroutine10 & 0xFFFF
// 3248     pRsp->neighborLqiEntries = neighborLqiEntries;
// 3249     pRsp->startIndex = startIndex;
// 3250     pRsp->neighborLqiCount = neighborLqiCount;
// 3251 
// 3252     for ( x = 0; x < neighborLqiCount; x++ )
??CrossCallReturnLabel_2:
        LJMP      ??ZDO_ParseMgmtLqiRsp_2 & 0xFFFF
// 3253     {
// 3254       uint8 tmp;
// 3255 
// 3256       pList->panID = 0; // This isn't in the record, why is it in the structure?
??ZDO_ParseMgmtLqiRsp_3:
        MOV       DPL,?V0
        MOV       DPH,?V1
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
// 3257       osal_cpyExtAddr(pList->extPanID, msg);   //Copy extended PAN ID
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        MOV       A,?V0
        ADD       A,#0x2
        LCALL     ?Subroutine50 & 0xFFFF
// 3258       msg += Z_EXTADDR_LEN;
??CrossCallReturnLabel_534:
        JNC       ??ZDO_ParseMgmtLqiRsp_4
        INC       R7
// 3259 
// 3260       osal_cpyExtAddr(pList->extAddr, msg);   //Copy extended address
??ZDO_ParseMgmtLqiRsp_4:
        ; Setup parameters for call to function sAddrExtCpy
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        MOV       A,?V0
        ADD       A,#0xa
        LCALL     ?Subroutine50 & 0xFFFF
// 3261       msg += Z_EXTADDR_LEN;
??CrossCallReturnLabel_535:
        JNC       ??ZDO_ParseMgmtLqiRsp_5
        INC       R7
// 3262 
// 3263       pList->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseMgmtLqiRsp_5:
        MOV       DPL,A
        MOV       DPH,R7
        LCALL     ??Subroutine235_0 & 0xFFFF
??CrossCallReturnLabel_564:
        MOV       R1,A
        MOV       A,?V0
        ADD       A,#0x12
        LCALL     ??Subroutine237_0 & 0xFFFF
??CrossCallReturnLabel_573:
        MOV       A,R2
        LCALL     ?Subroutine21 & 0xFFFF
// 3264       msg += 2;
// 3265 
// 3266       tmp = *msg++;
??CrossCallReturnLabel_584:
        MOV       R0,A
// 3267       pList->devType = tmp & 0x03;
        MOV       A,#0x3
        ANL       A,R0
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,?V0
        ADD       A,#0x14
        LCALL     ??Subroutine237_0 & 0xFFFF
??CrossCallReturnLabel_574:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 3268       pList->rxOnIdle = (tmp >> 2) & 0x03;
        MOV       A,R0
        RRC       A
        RRC       A
        ANL       A,#0x3f
        ANL       A,#0x3
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,?V0
        ADD       A,#0x15
        LCALL     ??Subroutine237_0 & 0xFFFF
??CrossCallReturnLabel_575:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 3269       pList->relation = (tmp >> 4) & 0x07;
        MOV       A,R0
        SWAP      A
        ANL       A,#0xf
        ANL       A,#0x7
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,?V0
        ADD       A,#0x16
        LCALL     ??Subroutine237_0 & 0xFFFF
??CrossCallReturnLabel_576:
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine12 & 0xFFFF
// 3270 
// 3271       pList->permit = (*msg++) & 0x03;
??CrossCallReturnLabel_7:
        ANL       A,#0x3
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,?V0
        ADD       A,#0x17
        LCALL     ??Subroutine237_0 & 0xFFFF
??CrossCallReturnLabel_577:
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine46 & 0xFFFF
// 3272 
// 3273       pList->depth = *msg++;
??CrossCallReturnLabel_77:
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,?V0
        ADD       A,#0x18
        LCALL     ??Subroutine237_0 & 0xFFFF
??CrossCallReturnLabel_578:
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine29 & 0xFFFF
// 3274 
// 3275       pList->lqi = *msg++;
??CrossCallReturnLabel_41:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,?V0
        ADD       A,#0x19
        LCALL     ??Subroutine237_0 & 0xFFFF
??CrossCallReturnLabel_579:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        MOV       A,R6
        ADD       A,#0x6
        MOV       R6,A
        JNC       ??ZDO_ParseMgmtLqiRsp_6
        INC       R7
// 3276       pList++;
??ZDO_ParseMgmtLqiRsp_6:
        MOV       A,?V0
        ADD       A,#0x1a
        MOV       ?V0,A
        JNC       ??ZDO_ParseMgmtLqiRsp_7
        INC       ?V1
// 3277     }
??ZDO_ParseMgmtLqiRsp_7:
        INC       ?V5
??ZDO_ParseMgmtLqiRsp_2:
        MOV       A,?V5
        CLR       C
        SUBB      A,?V4
        JNC       $+5
        LJMP      ??ZDO_ParseMgmtLqiRsp_3 & 0xFFFF
// 3278   }
// 3279 
// 3280   return ( pRsp );
??ZDO_ParseMgmtLqiRsp_1:
        LJMP      ?Subroutine4 & 0xFFFF
// 3281 }
          CFI EndBlock cfiBlock1187

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine138:
          CFI Block cfiCond1188 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_582
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1189 Using cfiCommon0
          CFI (cfiCond1189) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1189) Conditional ??CrossCallReturnLabel_583
          CFI (cfiCond1189) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1189) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1189) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1189) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1189) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1189) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1189) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1189) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1189) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1189) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1189) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1189) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1189) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1189) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1189) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1189) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1189) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1190 Using cfiCommon1
          CFI (cfiPicker1190) NoFunction
          CFI (cfiPicker1190) Picker
        MOV       A,?V0
        ADD       A,#0xc
          CFI EndBlock cfiCond1188
          CFI EndBlock cfiCond1189
          CFI EndBlock cfiPicker1190
        REQUIRE ??Subroutine237_0
        ; // Fall through to label ??Subroutine237_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine237_0:
          CFI Block cfiCond1191 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtRtgReq
          CFI Conditional ??CrossCallReturnLabel_572
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1192 Using cfiCommon0
          CFI (cfiCond1192) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1192) Conditional ??CrossCallReturnLabel_573
          CFI (cfiCond1192) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1192) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1192) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1192) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1192) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1192) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1192) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1192) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1192) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1192) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1192) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1192) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1192) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1192) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1192) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1192) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1192) CFA_SP SP+-2
          CFI (cfiCond1192) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1193 Using cfiCommon0
          CFI (cfiCond1193) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1193) Conditional ??CrossCallReturnLabel_574
          CFI (cfiCond1193) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1193) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1193) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1193) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1193) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1193) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1193) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1193) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1193) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1193) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1193) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1193) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1193) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1193) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1193) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1193) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1193) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1194 Using cfiCommon0
          CFI (cfiCond1194) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1194) Conditional ??CrossCallReturnLabel_575
          CFI (cfiCond1194) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1194) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1194) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1194) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1194) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1194) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1194) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1194) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1194) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1194) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1194) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1194) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1194) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1194) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1194) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1194) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1194) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1195 Using cfiCommon0
          CFI (cfiCond1195) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1195) Conditional ??CrossCallReturnLabel_576
          CFI (cfiCond1195) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1195) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1195) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1195) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1195) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1195) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1195) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1195) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1195) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1195) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1195) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1195) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1195) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1195) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1195) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1195) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1195) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1196 Using cfiCommon0
          CFI (cfiCond1196) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1196) Conditional ??CrossCallReturnLabel_577
          CFI (cfiCond1196) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1196) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1196) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1196) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1196) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1196) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1196) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1196) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1196) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1196) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1196) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1196) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1196) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1196) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1196) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1196) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1196) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1197 Using cfiCommon0
          CFI (cfiCond1197) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1197) Conditional ??CrossCallReturnLabel_578
          CFI (cfiCond1197) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1197) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1197) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1197) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1197) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1197) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1197) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1197) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1197) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1197) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1197) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1197) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1197) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1197) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1197) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1197) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1197) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1198 Using cfiCommon0
          CFI (cfiCond1198) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1198) Conditional ??CrossCallReturnLabel_579
          CFI (cfiCond1198) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1198) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1198) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1198) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1198) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1198) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1198) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1198) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1198) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1198) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1198) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1198) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1198) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1198) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1198) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1198) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1198) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1199 Using cfiCommon0
          CFI (cfiCond1199) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1199) Conditional ??CrossCallReturnLabel_580
          CFI (cfiCond1199) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1199) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1199) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1199) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1199) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1199) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1199) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1199) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1199) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1199) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1199) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1199) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1199) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1199) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1199) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1199) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1199) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1200 Using cfiCommon0
          CFI (cfiCond1200) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1200) Conditional ??CrossCallReturnLabel_581
          CFI (cfiCond1200) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1200) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1200) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1200) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1200) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1200) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1200) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1200) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1200) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1200) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1200) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1200) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1200) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1200) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1200) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1200) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1200) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1201 Using cfiCommon0
          CFI (cfiCond1201) Function ZDO_ParseAddrRsp
          CFI (cfiCond1201) Conditional ??CrossCallReturnLabel_582
          CFI (cfiCond1201) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1201) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1201) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1201) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1201) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1201) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1201) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1201) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1201) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1201) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1201) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1201) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1201) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1201) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1201) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1202 Using cfiCommon0
          CFI (cfiCond1202) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1202) Conditional ??CrossCallReturnLabel_583
          CFI (cfiCond1202) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1202) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1202) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1202) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1202) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1202) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1202) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1202) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1202) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1202) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1202) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1202) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1202) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1202) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1202) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1202) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1202) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1203 Using cfiCommon1
          CFI (cfiPicker1203) NoFunction
          CFI (cfiPicker1203) Picker
        MOV       DPL,A
        CLR       A
          CFI EndBlock cfiCond1191
          CFI EndBlock cfiCond1192
          CFI EndBlock cfiCond1193
          CFI EndBlock cfiCond1194
          CFI EndBlock cfiCond1195
          CFI EndBlock cfiCond1196
          CFI EndBlock cfiCond1197
          CFI EndBlock cfiCond1198
          CFI EndBlock cfiCond1199
          CFI EndBlock cfiCond1200
          CFI EndBlock cfiCond1201
          CFI EndBlock cfiCond1202
          CFI EndBlock cfiPicker1203
        REQUIRE ??Subroutine238_0
        ; // Fall through to label ??Subroutine238_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine238_0:
          CFI Block cfiCond1204 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_571
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1205 Using cfiCommon0
          CFI (cfiCond1205) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond1205) Conditional ??CrossCallReturnLabel_572
          CFI (cfiCond1205) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1205) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1205) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1205) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1205) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1205) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1205) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1205) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1205) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1205) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1205) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1205) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1205) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1205) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1205) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1205) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1205) CFA_SP SP+-2
          CFI (cfiCond1205) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1206 Using cfiCommon0
          CFI (cfiCond1206) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1206) Conditional ??CrossCallReturnLabel_573
          CFI (cfiCond1206) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1206) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1206) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1206) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1206) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1206) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1206) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1206) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1206) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1206) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1206) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1206) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1206) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1206) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1206) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1206) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1206) CFA_SP SP+-2
          CFI (cfiCond1206) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1207 Using cfiCommon0
          CFI (cfiCond1207) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1207) Conditional ??CrossCallReturnLabel_574
          CFI (cfiCond1207) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1207) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1207) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1207) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1207) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1207) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1207) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1207) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1207) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1207) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1207) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1207) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1207) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1207) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1207) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1207) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1207) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1208 Using cfiCommon0
          CFI (cfiCond1208) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1208) Conditional ??CrossCallReturnLabel_575
          CFI (cfiCond1208) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1208) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1208) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1208) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1208) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1208) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1208) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1208) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1208) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1208) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1208) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1208) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1208) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1208) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1208) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1208) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1208) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1209 Using cfiCommon0
          CFI (cfiCond1209) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1209) Conditional ??CrossCallReturnLabel_576
          CFI (cfiCond1209) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1209) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1209) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1209) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1209) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1209) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1209) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1209) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1209) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1209) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1209) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1209) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1209) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1209) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1209) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1209) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1209) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1210 Using cfiCommon0
          CFI (cfiCond1210) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1210) Conditional ??CrossCallReturnLabel_577
          CFI (cfiCond1210) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1210) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1210) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1210) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1210) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1210) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1210) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1210) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1210) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1210) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1210) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1210) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1210) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1210) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1210) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1210) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1210) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1211 Using cfiCommon0
          CFI (cfiCond1211) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1211) Conditional ??CrossCallReturnLabel_578
          CFI (cfiCond1211) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1211) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1211) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1211) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1211) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1211) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1211) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1211) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1211) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1211) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1211) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1211) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1211) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1211) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1211) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1211) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1211) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1212 Using cfiCommon0
          CFI (cfiCond1212) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1212) Conditional ??CrossCallReturnLabel_579
          CFI (cfiCond1212) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1212) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1212) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1212) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1212) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1212) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1212) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1212) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1212) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1212) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1212) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1212) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1212) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1212) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1212) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1212) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1212) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1213 Using cfiCommon0
          CFI (cfiCond1213) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1213) Conditional ??CrossCallReturnLabel_580
          CFI (cfiCond1213) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1213) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1213) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1213) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1213) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1213) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1213) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1213) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1213) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1213) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1213) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1213) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1213) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1213) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1213) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1213) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1213) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1214 Using cfiCommon0
          CFI (cfiCond1214) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1214) Conditional ??CrossCallReturnLabel_581
          CFI (cfiCond1214) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1214) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1214) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1214) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1214) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1214) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1214) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1214) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1214) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1214) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1214) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1214) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1214) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1214) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1214) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1214) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1214) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1215 Using cfiCommon0
          CFI (cfiCond1215) Function ZDO_ParseAddrRsp
          CFI (cfiCond1215) Conditional ??CrossCallReturnLabel_582
          CFI (cfiCond1215) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1215) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1215) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1215) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1215) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1215) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1215) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1215) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1215) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1215) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1215) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1215) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1215) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1215) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1215) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1216 Using cfiCommon0
          CFI (cfiCond1216) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1216) Conditional ??CrossCallReturnLabel_583
          CFI (cfiCond1216) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1216) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1216) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1216) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1216) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1216) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1216) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1216) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1216) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1216) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1216) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1216) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1216) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1216) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1216) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1216) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1216) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1217 Using cfiCommon1
          CFI (cfiPicker1217) NoFunction
          CFI (cfiPicker1217) Picker
        ADDC      A,?V1
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond1204
          CFI EndBlock cfiCond1205
          CFI EndBlock cfiCond1206
          CFI EndBlock cfiCond1207
          CFI EndBlock cfiCond1208
          CFI EndBlock cfiCond1209
          CFI EndBlock cfiCond1210
          CFI EndBlock cfiCond1211
          CFI EndBlock cfiCond1212
          CFI EndBlock cfiCond1213
          CFI EndBlock cfiCond1214
          CFI EndBlock cfiCond1215
          CFI EndBlock cfiCond1216
          CFI EndBlock cfiPicker1217

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine46:
          CFI Block cfiCond1218 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLeaveReq
          CFI Conditional ??CrossCallReturnLabel_76
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1219 Using cfiCommon0
          CFI (cfiCond1219) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1219) Conditional ??CrossCallReturnLabel_77
          CFI (cfiCond1219) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1219) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1219) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1219) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1219) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1219) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1219) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1219) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1219) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1219) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1219) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1219) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1219) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1219) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1219) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1219) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1219) CFA_SP SP+-2
          CFI (cfiCond1219) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1220 Using cfiCommon1
          CFI (cfiPicker1220) NoFunction
          CFI (cfiPicker1220) Picker
        LCALL     ?Subroutine152 & 0xFFFF
??CrossCallReturnLabel_276:
        RET
          CFI EndBlock cfiCond1218
          CFI EndBlock cfiCond1219
          CFI EndBlock cfiPicker1220

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine152:
          CFI Block cfiCond1221 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLeaveReq
          CFI Conditional ??CrossCallReturnLabel_276, ??CrossCallReturnLabel_76
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1222 Using cfiCommon0
          CFI (cfiCond1222) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1222) Conditional ??CrossCallReturnLabel_276, ??CrossCallReturnLabel_77
          CFI (cfiCond1222) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1222) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1222) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1222) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1222) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1222) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1222) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1222) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1222) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1222) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1222) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1222) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1222) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1222) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1222) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1222) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1222) CFA_SP SP+-4
          CFI (cfiCond1222) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1223 Using cfiCommon0
          CFI (cfiCond1223) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond1223) Conditional ??CrossCallReturnLabel_277, ??CrossCallReturnLabel_40
          CFI (cfiCond1223) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1223) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1223) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1223) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1223) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1223) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1223) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1223) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1223) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1223) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1223) CFA_SP SP+-4
          CFI (cfiCond1223) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1224 Using cfiCommon0
          CFI (cfiCond1224) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1224) Conditional ??CrossCallReturnLabel_277, ??CrossCallReturnLabel_41
          CFI (cfiCond1224) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1224) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1224) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1224) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1224) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1224) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1224) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1224) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1224) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1224) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1224) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1224) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1224) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1224) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1224) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1224) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1224) CFA_SP SP+-4
          CFI (cfiCond1224) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1225 Using cfiCommon1
          CFI (cfiPicker1225) NoFunction
          CFI (cfiPicker1225) Picker
        MOVX      @DPTR,A
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond1221
          CFI EndBlock cfiCond1222
          CFI EndBlock cfiCond1223
          CFI EndBlock cfiCond1224
          CFI EndBlock cfiPicker1225

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine29:
          CFI Block cfiCond1226 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_40
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1227 Using cfiCommon0
          CFI (cfiCond1227) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1227) Conditional ??CrossCallReturnLabel_41
          CFI (cfiCond1227) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1227) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1227) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1227) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1227) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1227) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1227) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1227) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1227) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1227) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1227) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1227) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1227) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1227) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1227) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1227) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1227) CFA_SP SP+-2
          CFI (cfiCond1227) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1228 Using cfiCommon1
          CFI (cfiPicker1228) NoFunction
          CFI (cfiPicker1228) Picker
        LCALL     ?Subroutine152 & 0xFFFF
??CrossCallReturnLabel_277:
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1226
          CFI EndBlock cfiCond1227
          CFI EndBlock cfiPicker1228

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine21:
          CFI Block cfiCond1229 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_584
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1230 Using cfiCommon0
          CFI (cfiCond1230) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1230) Conditional ??CrossCallReturnLabel_585
          CFI (cfiCond1230) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1230) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1230) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1230) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1230) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1230) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1230) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1230) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1230) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1230) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1230) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1230) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1230) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1230) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1230) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1230) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1230) CFA_SP SP+-2
          CFI (cfiCond1230) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1231 Using cfiCommon1
          CFI (cfiPicker1231) NoFunction
          CFI (cfiPicker1231) Picker
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
          CFI EndBlock cfiCond1229
          CFI EndBlock cfiCond1230
          CFI EndBlock cfiPicker1231
        REQUIRE ??Subroutine239_0
        ; // Fall through to label ??Subroutine239_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine239_0:
          CFI Block cfiCond1232 Using cfiCommon0
          CFI Function ZDO_ParseMgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_586
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1233 Using cfiCommon0
          CFI (cfiCond1233) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1233) Conditional ??CrossCallReturnLabel_584
          CFI (cfiCond1233) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1233) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1233) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1233) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1233) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1233) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1233) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1233) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1233) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1233) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1233) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1233) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1233) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1233) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1233) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1233) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1233) CFA_SP SP+-2
          CFI (cfiCond1233) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1234 Using cfiCommon0
          CFI (cfiCond1234) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1234) Conditional ??CrossCallReturnLabel_585
          CFI (cfiCond1234) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1234) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1234) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1234) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1234) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1234) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1234) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1234) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1234) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1234) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1234) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1234) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1234) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1234) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1234) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1234) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1234) CFA_SP SP+-2
          CFI (cfiCond1234) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1235 Using cfiCommon1
          CFI (cfiPicker1235) NoFunction
          CFI (cfiPicker1235) Picker
        LCALL     ?Subroutine153 & 0xFFFF
??CrossCallReturnLabel_587:
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1232
          CFI EndBlock cfiCond1233
          CFI EndBlock cfiCond1234
          CFI EndBlock cfiPicker1235

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine153:
          CFI Block cfiCond1236 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_589
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1237 Using cfiCommon0
          CFI (cfiCond1237) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1237) Conditional ??CrossCallReturnLabel_587, ??CrossCallReturnLabel_584
          CFI (cfiCond1237) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1237) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1237) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1237) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1237) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1237) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1237) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1237) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1237) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1237) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1237) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1237) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1237) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1237) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1237) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1237) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1237) CFA_SP SP+-4
          CFI (cfiCond1237) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1238 Using cfiCommon0
          CFI (cfiCond1238) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1238) Conditional ??CrossCallReturnLabel_587, ??CrossCallReturnLabel_585
          CFI (cfiCond1238) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1238) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1238) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1238) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1238) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1238) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1238) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1238) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1238) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1238) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1238) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1238) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1238) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1238) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1238) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1238) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1238) CFA_SP SP+-4
          CFI (cfiCond1238) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1239 Using cfiCommon0
          CFI (cfiCond1239) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1239) Conditional ??CrossCallReturnLabel_587, ??CrossCallReturnLabel_586
          CFI (cfiCond1239) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1239) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1239) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1239) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1239) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1239) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1239) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1239) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1239) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1239) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1239) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1239) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1239) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1239) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1239) CFA_SP SP+-4
          CFI (cfiCond1239) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1240 Using cfiCommon0
          CFI (cfiCond1240) Function ZDO_ParseAddrRsp
          CFI (cfiCond1240) Conditional ??CrossCallReturnLabel_588, ??CrossCallReturnLabel_6
          CFI (cfiCond1240) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1240) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1240) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1240) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1240) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1240) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1240) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1240) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1240) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1240) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1240) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1240) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1240) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1240) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1240) CFA_SP SP+-4
          CFI (cfiCond1240) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1241 Using cfiCommon0
          CFI (cfiCond1241) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1241) Conditional ??CrossCallReturnLabel_588, ??CrossCallReturnLabel_7
          CFI (cfiCond1241) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1241) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1241) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1241) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1241) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1241) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1241) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1241) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1241) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1241) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1241) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1241) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1241) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1241) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1241) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1241) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1241) CFA_SP SP+-4
          CFI (cfiCond1241) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1242 Using cfiCommon0
          CFI (cfiCond1242) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1242) Conditional ??CrossCallReturnLabel_588, ??CrossCallReturnLabel_8
          CFI (cfiCond1242) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1242) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1242) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1242) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1242) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1242) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1242) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1242) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1242) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1242) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1242) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1242) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1242) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1242) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1242) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1242) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1242) CFA_SP SP+-4
          CFI (cfiCond1242) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1243 Using cfiCommon0
          CFI (cfiCond1243) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1243) Conditional ??CrossCallReturnLabel_588, ??CrossCallReturnLabel_9
          CFI (cfiCond1243) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1243) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1243) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1243) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1243) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1243) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1243) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1243) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1243) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1243) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1243) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1243) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1243) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1243) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1243) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1243) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1243) CFA_SP SP+-4
          CFI (cfiCond1243) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1244 Using cfiCommon1
          CFI (cfiPicker1244) NoFunction
          CFI (cfiPicker1244) Picker
        MOVX      @DPTR,A
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        RET
          CFI EndBlock cfiCond1236
          CFI EndBlock cfiCond1237
          CFI EndBlock cfiCond1238
          CFI EndBlock cfiCond1239
          CFI EndBlock cfiCond1240
          CFI EndBlock cfiCond1241
          CFI EndBlock cfiCond1242
          CFI EndBlock cfiCond1243
          CFI EndBlock cfiPicker1244
// 3282 
// 3283 /*********************************************************************
// 3284  * @fn          ZDO_ParseMgmNwkDiscRsp
// 3285  *
// 3286  * @brief       This function parses the incoming Management
// 3287  *              Network Discover response.
// 3288  *
// 3289  * @param       inMsg - incoming message
// 3290  *
// 3291  * @return      pointer to parsed response.  This structure was
// 3292  *          allocated using osal_mem_alloc, so it must be freed
// 3293  *          by the calling function [osal_mem_free()].
// 3294  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3295 ZDO_MgmNwkDiscRsp_t *ZDO_ParseMgmNwkDiscRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseMgmNwkDiscRsp:
          CFI Block cfiBlock1245 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
        CODE
// 3296 {
        FUNCALL ZDO_ParseMgmNwkDiscRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmNwkDiscRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
// 3297   ZDO_MgmNwkDiscRsp_t *pRsp;
// 3298   uint8 status;
// 3299   uint8 networkCount = 0;
        MOV       ?V1,#0x0
// 3300   uint8 startIndex = 0;
        MOV       ?V0,#0x0
// 3301   uint8 networkListCount = 0;
        MOV       ?V4,#0x0
// 3302   uint8 *msg;
// 3303 
// 3304   msg = inMsg->asdu;
        LCALL     ?Subroutine67 & 0xFFFF
// 3305   status = *msg++;
??CrossCallReturnLabel_111:
        MOV       ?V5,A
        INC       DPTR
        MOV       R6,DPL
        MOV       R7,DPH
// 3306 
// 3307   if ( status == ZSuccess )
        JNZ       ??ZDO_ParseMgmNwkDiscRsp_0
// 3308   {
// 3309     networkCount = *msg++;
        MOVX      A,@DPTR
        MOV       ?V1,A
// 3310     startIndex = *msg++;
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V0,A
// 3311     networkListCount = *msg++;
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V4,A
        MOV       A,R6
        ADD       A,#0x3
        MOV       R6,A
        JNC       ??ZDO_ParseMgmNwkDiscRsp_0
        INC       R7
// 3312   }
// 3313 
// 3314   // Allocate a buffer big enough to handle the list.
// 3315   pRsp = (ZDO_MgmNwkDiscRsp_t *)osal_mem_alloc( sizeof( ZDO_MgmNwkDiscRsp_t )
// 3316                                   + (networkListCount * sizeof( mgmtNwkDiscItem_t )) );
??ZDO_ParseMgmNwkDiscRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV       A,?V4
        MOV       ?V2,A
        MOV       ?V3,#0x0
        MOV       A,#0x4
        MOV       R0,#?V2
        LCALL     ?S_SHL
        MOV       A,?V2
        ADD       A,#0x4
        MOV       R2,A
        CLR       A
        ADDC      A,?V3
        LCALL     ?Subroutine134 & 0xFFFF
// 3317   if ( pRsp )
??CrossCallReturnLabel_591:
        JNZ       $+5
        LJMP      ??ZDO_ParseMgmNwkDiscRsp_1 & 0xFFFF
// 3318   {
// 3319     uint8 x;
// 3320     mgmtNwkDiscItem_t *pList;
// 3321 
// 3322     pRsp->status = status;
        MOV       DPL,R2
        MOV       DPH,R3
        MOV       A,?V5
        MOVX      @DPTR,A
// 3323     pRsp->networkCount = networkCount;
        INC       DPTR
        MOV       A,?V1
        LCALL     ?Subroutine41 & 0xFFFF
// 3324     pRsp->startIndex = startIndex;
??CrossCallReturnLabel_65:
        MOV       A,?V0
        LCALL     ?Subroutine40 & 0xFFFF
// 3325     pRsp->networkListCount = networkListCount;
??CrossCallReturnLabel_61:
        MOV       A,?V4
        MOVX      @DPTR,A
// 3326     pList = pRsp->list;
        LCALL     ?Subroutine144 & 0xFFFF
// 3327 
// 3328     for ( x = 0; x < networkListCount; x++ )
??CrossCallReturnLabel_261:
        MOV       ?V5,#0x0
        LJMP      ??ZDO_ParseMgmNwkDiscRsp_2 & 0xFFFF
// 3329     {
// 3330       osal_cpyExtAddr(pList->extendedPANID, msg);   //Copy extended PAN ID
??ZDO_ParseMgmNwkDiscRsp_3:
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        MOV       R2,?V0
        MOV       R3,?V1
        LCALL     ??Subroutine230_0 & 0xFFFF
// 3331       msg += Z_EXTADDR_LEN;
??CrossCallReturnLabel_536:
        JNC       ??ZDO_ParseMgmNwkDiscRsp_4
        INC       R7
// 3332       pList->PANId = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseMgmNwkDiscRsp_4:
        MOV       DPL,A
        LCALL     ?Subroutine63 & 0xFFFF
??CrossCallReturnLabel_102:
        INC       DPTR
        LCALL     ??Subroutine246_0 & 0xFFFF
// 3333       if ( !notdoSCANCmd ) {
??CrossCallReturnLabel_618:
        MOV       DPTR,#notdoSCANCmd
        MOVX      A,@DPTR
        JNZ       ??ZDO_ParseMgmNwkDiscRsp_5
// 3334         msg = msg + 2;
        MOV       A,R6
        ADD       A,#0x2
        MOV       R6,A
        JNC       ??ZDO_ParseMgmNwkDiscRsp_5
        INC       R7
// 3335       }    
// 3336 
// 3337       pList->logicalChannel = *msg++;
??ZDO_ParseMgmNwkDiscRsp_5:
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ?Subroutine64 & 0xFFFF
// 3338       pList->stackProfile = (*msg) & 0x0F;
??CrossCallReturnLabel_104:
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        MOV       R0,DPL
        MOV       R1,DPH
        MOVX      A,@DPTR
        ANL       A,#0xf
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,?V0
        ADD       A,#0xb
        LCALL     ??Subroutine237_0 & 0xFFFF
??CrossCallReturnLabel_580:
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine44 & 0xFFFF
// 3339       pList->version = (*msg++ >> 4) & 0x0F;
??CrossCallReturnLabel_70:
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine138 & 0xFFFF
??CrossCallReturnLabel_583:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 3340       pList->beaconOrder = (*msg) & 0x0F;
        MOV       A,R6
        ADD       A,#0x2
        MOV       R0,A
        CLR       A
        ADDC      A,R7
        MOV       R1,A
        MOV       DPL,R0
        MOV       DPH,A
        MOVX      A,@DPTR
        ANL       A,#0xf
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,?V0
        ADD       A,#0xd
        LCALL     ??Subroutine237_0 & 0xFFFF
??CrossCallReturnLabel_581:
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine44 & 0xFFFF
// 3341       pList->superFrameOrder = (*msg++ >> 4) & 0x0F;
??CrossCallReturnLabel_71:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,?V0
        LCALL     ?Subroutine125 & 0xFFFF
??CrossCallReturnLabel_223:
        LCALL     ??Subroutine238_0 & 0xFFFF
??CrossCallReturnLabel_571:
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine12 & 0xFFFF
// 3342       pList->permitJoining = *msg++;
??CrossCallReturnLabel_8:
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine128 & 0xFFFF
??CrossCallReturnLabel_229:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        MOV       A,R6
        ADD       A,#0x4
        MOV       R6,A
        JNC       ??ZDO_ParseMgmNwkDiscRsp_6
        INC       R7
// 3343       pList++;
??ZDO_ParseMgmNwkDiscRsp_6:
        MOV       A,?V0
        ADD       A,#0x10
        MOV       ?V0,A
        JNC       ??ZDO_ParseMgmNwkDiscRsp_7
        INC       ?V1
// 3344     }
??ZDO_ParseMgmNwkDiscRsp_7:
        INC       ?V5
??ZDO_ParseMgmNwkDiscRsp_2:
        MOV       A,?V5
        CLR       C
        SUBB      A,?V4
        JNC       $+5
        LJMP      ??ZDO_ParseMgmNwkDiscRsp_3 & 0xFFFF
// 3345   }
// 3346 
// 3347   return ( pRsp );
??ZDO_ParseMgmNwkDiscRsp_1:
        LJMP      ?Subroutine4 & 0xFFFF
// 3348 }
          CFI EndBlock cfiBlock1245

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine144:
          CFI Block cfiCond1246 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_260
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1247 Using cfiCommon0
          CFI (cfiCond1247) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1247) Conditional ??CrossCallReturnLabel_261
          CFI (cfiCond1247) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1247) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1247) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1247) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1247) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1247) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1247) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1247) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1247) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1247) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1247) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1247) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1247) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1247) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1247) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1247) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1247) CFA_SP SP+-2
          CFI (cfiCond1247) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1248 Using cfiCommon1
          CFI (cfiPicker1248) NoFunction
          CFI (cfiPicker1248) Picker
        MOV       A,R2
        ADD       A,#0x4
        MOV       ?V0,A
        CLR       A
        ADDC      A,?V3
        MOV       ?V1,A
        RET
          CFI EndBlock cfiCond1246
          CFI EndBlock cfiCond1247
          CFI EndBlock cfiPicker1248

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine134:
          CFI Block cfiCond1249 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_590
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1250 Using cfiCommon0
          CFI (cfiCond1250) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1250) Conditional ??CrossCallReturnLabel_591
          CFI (cfiCond1250) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1250) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1250) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1250) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1250) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1250) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1250) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1250) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1250) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1250) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1250) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1250) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1250) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1250) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1250) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1250) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1250) CFA_SP SP+-2
          CFI (cfiCond1250) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1251 Using cfiCommon0
          CFI (cfiCond1251) Function ZDO_ParseParentAnnce
          CFI (cfiCond1251) Conditional ??CrossCallReturnLabel_592
          CFI (cfiCond1251) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1251) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1251) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1251) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1251) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1251) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1251) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1251) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1251) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1251) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1251) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1251) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1251) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1251) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1251) CFA_SP SP+-2
          CFI (cfiCond1251) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1252 Using cfiCommon1
          CFI (cfiPicker1252) NoFunction
          CFI (cfiPicker1252) Picker
        MOV       R3,A
          CFI EndBlock cfiCond1249
          CFI EndBlock cfiCond1250
          CFI EndBlock cfiCond1251
          CFI EndBlock cfiPicker1252
        REQUIRE ??Subroutine240_0
        ; // Fall through to label ??Subroutine240_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine240_0:
          CFI Block cfiCond1253 Using cfiCommon0
          CFI Function ZDO_ProcessParentAnnce
          CFI Conditional ??CrossCallReturnLabel_593
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond1254 Using cfiCommon0
          CFI (cfiCond1254) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1254) Conditional ??CrossCallReturnLabel_590
          CFI (cfiCond1254) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1254) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1254) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1254) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1254) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1254) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1254) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1254) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1254) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1254) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1254) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1254) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1254) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1254) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1254) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1254) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1254) CFA_SP SP+-2
          CFI (cfiCond1254) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1255 Using cfiCommon0
          CFI (cfiCond1255) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1255) Conditional ??CrossCallReturnLabel_591
          CFI (cfiCond1255) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1255) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1255) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1255) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1255) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1255) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1255) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1255) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1255) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1255) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1255) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1255) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1255) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1255) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1255) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1255) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1255) CFA_SP SP+-2
          CFI (cfiCond1255) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1256 Using cfiCommon0
          CFI (cfiCond1256) Function ZDO_ParseParentAnnce
          CFI (cfiCond1256) Conditional ??CrossCallReturnLabel_592
          CFI (cfiCond1256) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1256) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1256) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1256) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1256) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1256) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1256) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1256) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1256) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1256) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1256) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1256) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1256) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1256) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1256) CFA_SP SP+-2
          CFI (cfiCond1256) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1257 Using cfiCommon1
          CFI (cfiPicker1257) NoFunction
          CFI (cfiPicker1257) Picker
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V2,R2
        MOV       ?V3,R3
        MOV       A,R2
        ORL       A,R3
        RET
          CFI EndBlock cfiCond1253
          CFI EndBlock cfiCond1254
          CFI EndBlock cfiCond1255
          CFI EndBlock cfiCond1256
          CFI EndBlock cfiPicker1257

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine128:
          CFI Block cfiCond1258 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_228
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1259 Using cfiCommon0
          CFI (cfiCond1259) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1259) Conditional ??CrossCallReturnLabel_229
          CFI (cfiCond1259) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1259) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1259) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1259) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1259) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1259) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1259) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1259) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1259) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1259) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1259) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1259) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1259) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1259) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1259) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1259) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1259) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1260 Using cfiCommon1
          CFI (cfiPicker1260) NoFunction
          CFI (cfiPicker1260) Picker
        MOV       A,?V0
        ADD       A,#0xf
        MOV       DPL,A
        CLR       A
        ADDC      A,?V1
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond1258
          CFI EndBlock cfiCond1259
          CFI EndBlock cfiPicker1260

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine67:
          CFI Block cfiCond1261 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_110
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1262 Using cfiCommon0
          CFI (cfiCond1262) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1262) Conditional ??CrossCallReturnLabel_111
          CFI (cfiCond1262) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1262) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1262) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1262) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1262) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1262) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1262) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1262) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1262) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1262) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1262) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1262) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1262) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1262) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1262) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1262) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1262) CFA_SP SP+-2
          CFI (cfiCond1262) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1263 Using cfiCommon0
          CFI (cfiCond1263) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1263) Conditional ??CrossCallReturnLabel_112
          CFI (cfiCond1263) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1263) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1263) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1263) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1263) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1263) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1263) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1263) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1263) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1263) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1263) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1263) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1263) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1263) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1263) CFA_SP SP+-2
          CFI (cfiCond1263) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1264 Using cfiCommon1
          CFI (cfiPicker1264) NoFunction
          CFI (cfiPicker1264) Picker
        LCALL     ?Subroutine174 & 0xFFFF
??CrossCallReturnLabel_512:
        LCALL     ?Subroutine165 & 0xFFFF
??CrossCallReturnLabel_544:
        MOV       DPL,R6
        MOV       DPH,A
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1261
          CFI EndBlock cfiCond1262
          CFI EndBlock cfiCond1263
          CFI EndBlock cfiPicker1264

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine44:
          CFI Block cfiCond1265 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_70
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1266 Using cfiCommon0
          CFI (cfiCond1266) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1266) Conditional ??CrossCallReturnLabel_71
          CFI (cfiCond1266) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1266) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1266) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1266) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1266) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1266) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1266) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1266) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1266) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1266) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1266) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1266) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1266) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1266) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1266) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1266) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1266) CFA_SP SP+-2
          CFI (cfiCond1266) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1267 Using cfiCommon1
          CFI (cfiPicker1267) NoFunction
          CFI (cfiPicker1267) Picker
        LCALL     ?Subroutine151 & 0xFFFF
??CrossCallReturnLabel_275:
        SWAP      A
        ANL       A,#0xf
        RET
          CFI EndBlock cfiCond1265
          CFI EndBlock cfiCond1266
          CFI EndBlock cfiPicker1267

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine41:
          CFI Block cfiCond1268 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_64
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1269 Using cfiCommon0
          CFI (cfiCond1269) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1269) Conditional ??CrossCallReturnLabel_65
          CFI (cfiCond1269) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1269) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1269) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1269) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1269) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1269) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1269) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1269) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1269) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1269) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1269) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1269) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1269) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1269) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1269) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1269) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1269) CFA_SP SP+-2
          CFI (cfiCond1269) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1270 Using cfiCommon0
          CFI (cfiCond1270) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1270) Conditional ??CrossCallReturnLabel_66
          CFI (cfiCond1270) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1270) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1270) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1270) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1270) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1270) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1270) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1270) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1270) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1270) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1270) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1270) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1270) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1270) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1270) CFA_SP SP+-2
          CFI (cfiCond1270) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1271 Using cfiCommon1
          CFI (cfiPicker1271) NoFunction
          CFI (cfiPicker1271) Picker
        LCALL     ?Subroutine154 & 0xFFFF
??CrossCallReturnLabel_553:
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond1268
          CFI EndBlock cfiCond1269
          CFI EndBlock cfiCond1270
          CFI EndBlock cfiPicker1271

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine12:
          CFI Block cfiCond1272 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_6
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1273 Using cfiCommon0
          CFI (cfiCond1273) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1273) Conditional ??CrossCallReturnLabel_7
          CFI (cfiCond1273) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1273) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1273) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1273) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1273) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1273) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1273) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1273) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1273) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1273) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1273) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1273) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1273) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1273) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1273) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1273) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1273) CFA_SP SP+-2
          CFI (cfiCond1273) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1274 Using cfiCommon0
          CFI (cfiCond1274) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1274) Conditional ??CrossCallReturnLabel_8
          CFI (cfiCond1274) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1274) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1274) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1274) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1274) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1274) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1274) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1274) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1274) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1274) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1274) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1274) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1274) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1274) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1274) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1274) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1274) CFA_SP SP+-2
          CFI (cfiCond1274) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1275 Using cfiCommon0
          CFI (cfiCond1275) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1275) Conditional ??CrossCallReturnLabel_9
          CFI (cfiCond1275) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1275) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1275) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1275) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1275) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1275) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1275) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1275) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1275) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1275) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1275) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1275) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1275) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1275) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1275) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1275) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1275) CFA_SP SP+-2
          CFI (cfiCond1275) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1276 Using cfiCommon1
          CFI (cfiPicker1276) NoFunction
          CFI (cfiPicker1276) Picker
        LCALL     ?Subroutine153 & 0xFFFF
??CrossCallReturnLabel_588:
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1272
          CFI EndBlock cfiCond1273
          CFI EndBlock cfiCond1274
          CFI EndBlock cfiCond1275
          CFI EndBlock cfiPicker1276
// 3349 
// 3350 /*********************************************************************
// 3351  * @fn          ZDO_ParseMgmtRtgRsp
// 3352  *
// 3353  * @brief       This function parses the incoming Management
// 3354  *              Routing response.
// 3355  *
// 3356  * @param       inMsg - incoming message
// 3357  *
// 3358  * @return      a pointer to parsed response structure (NULL if not allocated).
// 3359  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 3360  *          by the calling function [osal_mem_free()].
// 3361  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3362 ZDO_MgmtRtgRsp_t *ZDO_ParseMgmtRtgRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseMgmtRtgRsp:
          CFI Block cfiBlock1277 Using cfiCommon0
          CFI Function ZDO_ParseMgmtRtgRsp
        CODE
// 3363 {
        FUNCALL ZDO_ParseMgmtRtgRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV       A,#-0xe
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
// 3364   ZDO_MgmtRtgRsp_t *pRsp;
// 3365   uint8 status;
// 3366   uint8 rtgCount = 0;
        MOV       ?V2,#0x0
// 3367   uint8 startIndex = 0;
        MOV       ?V1,#0x0
// 3368   uint8 rtgListCount = 0;
        MOV       ?V0,#0x0
// 3369   uint8 *msg;
// 3370 
// 3371   msg = inMsg->asdu;
        LCALL     ?Subroutine67 & 0xFFFF
// 3372 
// 3373   status = *msg++;
??CrossCallReturnLabel_112:
        MOV       ?V3,A
        INC       DPTR
        MOV       R6,DPL
        MOV       R7,DPH
// 3374   if ( status == ZSuccess )
        JNZ       ??ZDO_ParseMgmtRtgRsp_0
// 3375   {
// 3376     rtgCount = *msg++;
        LCALL     ??Subroutine203_0 & 0xFFFF
// 3377     startIndex = *msg++;
??CrossCallReturnLabel_384:
        MOV       ?V1,A
// 3378     rtgListCount = *msg++;
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V0,A
        MOV       A,R6
        ADD       A,#0x3
        MOV       R6,A
        JNC       ??ZDO_ParseMgmtRtgRsp_0
        INC       R7
// 3379   }
// 3380 
// 3381   // Allocate a buffer big enough to handle the list
// 3382   pRsp = (ZDO_MgmtRtgRsp_t *)osal_mem_alloc(
// 3383           sizeof( ZDO_MgmtRtgRsp_t ) + (rtgListCount * sizeof( rtgItem_t )) );
??ZDO_ParseMgmtRtgRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV       A,?V0
        MOV       B,#0x7
        MUL       AB
        MOV       R1,B
        ADD       A,#0x4
        MOV       R2,A
        CLR       A
        ADDC      A,R1
        MOV       R3,A
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
// 3384   if ( pRsp )
        MOV       A,R2
        ORL       A,R3
        JZ        ??ZDO_ParseMgmtRtgRsp_1
// 3385   {
// 3386     uint8 x;
// 3387     rtgItem_t *pList = pRsp->list;
        MOV       A,R2
        ADD       A,#0x4
        MOV       R0,A
        CLR       A
        ADDC      A,R3
        MOV       R1,A
// 3388     pRsp->status = status;
        MOV       DPL,R2
        MOV       DPH,R3
        MOV       A,?V3
        MOVX      @DPTR,A
// 3389     pRsp->rtgCount = rtgCount;
        INC       DPTR
        MOV       A,?V2
        LCALL     ?Subroutine41 & 0xFFFF
// 3390     pRsp->startIndex = startIndex;
??CrossCallReturnLabel_66:
        MOV       A,?V1
        LCALL     ?Subroutine40 & 0xFFFF
// 3391     pRsp->rtgListCount = rtgListCount;
??CrossCallReturnLabel_62:
        MOV       A,?V0
        MOVX      @DPTR,A
// 3392 
// 3393     for ( x = 0; x < rtgListCount; x++ )
        MOV       R4,#0x0
        SJMP      ??ZDO_ParseMgmtRtgRsp_2
// 3394     {
// 3395       uint8 statOpt;
// 3396 
// 3397       pList->dstAddress = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseMgmtRtgRsp_3:
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        LCALL     ?Subroutine102 & 0xFFFF
??CrossCallReturnLabel_170:
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V3
        LCALL     ??Subroutine239_0 & 0xFFFF
// 3398       msg += 2;
// 3399       statOpt = *msg++;
??CrossCallReturnLabel_586:
        MOV       R5,A
        MOV       A,R6
        ADD       A,#0x3
        MOV       R6,A
        JNC       ??ZDO_ParseMgmtRtgRsp_4
        INC       R7
// 3400       pList->status = (statOpt & 0x07);
??ZDO_ParseMgmtRtgRsp_4:
        MOV       A,#0x7
        ANL       A,R5
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
// 3401       pList->options = ((statOpt >> 3) & 0x07);
        MOV       A,R5
        RRC       A
        RRC       A
        RRC       A
        ANL       A,#0x1f
        ANL       A,#0x7
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ??Subroutine241_0 & 0xFFFF
// 3402       pList->nextHopAddress = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_597:
        LCALL     ?Subroutine102 & 0xFFFF
??CrossCallReturnLabel_171:
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V3
        MOVX      @DPTR,A
// 3403       msg += 2;
        MOV       A,R6
        ADD       A,#0x2
        MOV       R6,A
        JNC       ??ZDO_ParseMgmtRtgRsp_5
        INC       R7
// 3404       pList++;
??ZDO_ParseMgmtRtgRsp_5:
        MOV       A,R0
        ADD       A,#0x7
        MOV       R0,A
        JNC       ??ZDO_ParseMgmtRtgRsp_6
        INC       R1
// 3405     }
??ZDO_ParseMgmtRtgRsp_6:
        INC       R4
??ZDO_ParseMgmtRtgRsp_2:
        MOV       A,R4
        CLR       C
        SUBB      A,?V0
        JC        ??ZDO_ParseMgmtRtgRsp_3
// 3406   }
// 3407 
// 3408   return ( pRsp );
??ZDO_ParseMgmtRtgRsp_1:
        LJMP      ??Subroutine214_0 & 0xFFFF
// 3409 }
          CFI EndBlock cfiBlock1277

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine102:
          CFI Block cfiCond1278 Using cfiCommon0
          CFI Function ZDO_ParseMgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_170
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1279 Using cfiCommon0
          CFI (cfiCond1279) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1279) Conditional ??CrossCallReturnLabel_171
          CFI (cfiCond1279) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1279) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1279) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1279) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1279) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1279) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1279) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1279) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1279) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1279) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1279) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1279) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1279) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1279) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1279) CFA_SP SP+-2
          CFI (cfiCond1279) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1280 Using cfiCommon1
          CFI (cfiPicker1280) NoFunction
          CFI (cfiPicker1280) Picker
        MOV       ?V4,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V3,A
        MOV       A,?V4
        MOV       DPL,R0
        MOV       DPH,R1
        RET
          CFI EndBlock cfiCond1278
          CFI EndBlock cfiCond1279
          CFI EndBlock cfiPicker1280

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine40:
          CFI Block cfiCond1281 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_61
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1282 Using cfiCommon0
          CFI (cfiCond1282) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1282) Conditional ??CrossCallReturnLabel_62
          CFI (cfiCond1282) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1282) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1282) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1282) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1282) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1282) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1282) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1282) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1282) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1282) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1282) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1282) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1282) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1282) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1282) CFA_SP SP+-2
          CFI (cfiCond1282) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1283 Using cfiCommon0
          CFI (cfiCond1283) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1283) Conditional ??CrossCallReturnLabel_63
          CFI (cfiCond1283) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1283) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1283) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1283) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1283) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1283) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1283) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1283) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1283) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1283) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1283) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1283) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1283) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1283) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1283) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1283) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1283) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1283) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1283) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1283) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1283) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1283) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1283) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1283) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1283) CFA_SP SP+-2
          CFI (cfiCond1283) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker1284 Using cfiCommon1
          CFI (cfiPicker1284) NoFunction
          CFI (cfiPicker1284) Picker
        LCALL     ?Subroutine149 & 0xFFFF
??CrossCallReturnLabel_268:
        RET
          CFI EndBlock cfiCond1281
          CFI EndBlock cfiCond1282
          CFI EndBlock cfiCond1283
          CFI EndBlock cfiPicker1284

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine149:
          CFI Block cfiCond1285 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_61
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1286 Using cfiCommon0
          CFI (cfiCond1286) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1286) Conditional ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_62
          CFI (cfiCond1286) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1286) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1286) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1286) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1286) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1286) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1286) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1286) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1286) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1286) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1286) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1286) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1286) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1286) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1286) CFA_SP SP+-4
          CFI (cfiCond1286) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1287 Using cfiCommon0
          CFI (cfiCond1287) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1287) Conditional ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_63
          CFI (cfiCond1287) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1287) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1287) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1287) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1287) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1287) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1287) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1287) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1287) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1287) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1287) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1287) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1287) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1287) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1287) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1287) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1287) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1287) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1287) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1287) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1287) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1287) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1287) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1287) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1287) CFA_SP SP+-4
          CFI (cfiCond1287) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1288 Using cfiCommon0
          CFI (cfiCond1288) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1288) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_2
          CFI (cfiCond1288) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1288) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1288) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1288) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1288) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1288) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1288) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1288) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1288) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1288) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1288) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1288) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1288) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1288) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1288) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1288) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1288) CFA_SP SP+-4
          CFI (cfiCond1288) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1289 Using cfiCommon0
          CFI (cfiCond1289) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1289) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_3
          CFI (cfiCond1289) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1289) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1289) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1289) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1289) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1289) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1289) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1289) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1289) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1289) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1289) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1289) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1289) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1289) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1289) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1289) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1289) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1289) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1289) CFA_SP SP+-4
          CFI (cfiCond1289) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1290 Using cfiCommon0
          CFI (cfiCond1290) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1290) Conditional ??CrossCallReturnLabel_270, ??CrossCallReturnLabel_14
          CFI (cfiCond1290) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1290) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1290) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1290) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1290) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1290) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1290) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1290) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1290) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1290) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1290) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1290) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1290) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1290) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1290) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1290) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1290) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1290) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1290) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1290) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1290) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1290) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1290) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1290) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1290) CFA_SP SP+-4
          CFI (cfiCond1290) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond1291 Using cfiCommon0
          CFI (cfiCond1291) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1291) Conditional ??CrossCallReturnLabel_270, ??CrossCallReturnLabel_15
          CFI (cfiCond1291) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1291) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1291) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1291) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1291) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1291) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1291) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1291) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1291) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1291) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1291) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1291) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1291) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1291) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1291) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1291) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1291) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1291) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1291) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1291) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1291) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1291) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1291) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1291) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1291) CFA_SP SP+-4
          CFI (cfiCond1291) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker1292 Using cfiCommon1
          CFI (cfiPicker1292) NoFunction
          CFI (cfiPicker1292) Picker
        MOVX      @DPTR,A
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond1285
          CFI EndBlock cfiCond1286
          CFI EndBlock cfiCond1287
          CFI EndBlock cfiCond1288
          CFI EndBlock cfiCond1289
          CFI EndBlock cfiCond1290
          CFI EndBlock cfiCond1291
          CFI EndBlock cfiPicker1292

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine24:
          CFI Block cfiCond1293 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_594
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1294 Using cfiCommon0
          CFI (cfiCond1294) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond1294) Conditional ??CrossCallReturnLabel_595
          CFI (cfiCond1294) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1294) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1294) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1294) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1294) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1294) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1294) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1294) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1294) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1294) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1294) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1294) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1294) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1294) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1294) CFA_SP SP+-2
          CFI (cfiCond1294) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1295 Using cfiCommon1
          CFI (cfiPicker1295) NoFunction
          CFI (cfiPicker1295) Picker
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        MOVX      A,@DPTR
        MOV       DPL,R2
        MOV       DPH,R3
          CFI EndBlock cfiCond1293
          CFI EndBlock cfiCond1294
          CFI EndBlock cfiPicker1295
        REQUIRE ??Subroutine241_0
        ; // Fall through to label ??Subroutine241_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine241_0:
          CFI Block cfiCond1296 Using cfiCommon0
          CFI Function ZDO_ParsePowerDescRsp
          CFI Conditional ??CrossCallReturnLabel_596
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1297 Using cfiCommon0
          CFI (cfiCond1297) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1297) Conditional ??CrossCallReturnLabel_597
          CFI (cfiCond1297) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1297) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1297) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1297) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1297) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1297) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1297) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1297) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1297) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1297) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1297) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1297) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1297) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1297) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1297) CFA_SP SP+-2
          CFI (cfiCond1297) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1298 Using cfiCommon0
          CFI (cfiCond1298) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond1298) Conditional ??CrossCallReturnLabel_594
          CFI (cfiCond1298) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1298) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1298) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1298) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1298) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1298) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1298) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1298) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1298) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1298) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1298) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1298) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1298) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1298) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1298) CFA_SP SP+-2
          CFI (cfiCond1298) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1299 Using cfiCommon0
          CFI (cfiCond1299) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond1299) Conditional ??CrossCallReturnLabel_595
          CFI (cfiCond1299) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1299) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1299) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1299) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1299) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1299) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1299) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1299) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1299) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1299) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1299) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1299) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1299) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1299) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1299) CFA_SP SP+-2
          CFI (cfiCond1299) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1300 Using cfiCommon1
          CFI (cfiPicker1300) NoFunction
          CFI (cfiPicker1300) Picker
        MOVX      @DPTR,A
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1296
          CFI EndBlock cfiCond1297
          CFI EndBlock cfiCond1298
          CFI EndBlock cfiCond1299
          CFI EndBlock cfiPicker1300
// 3410 
// 3411 /*********************************************************************
// 3412  * @fn          ZDO_ParseMgmtBindRsp
// 3413  *
// 3414  * @brief       This function parses the incoming Management
// 3415  *              Binding response.
// 3416  *
// 3417  * @param       inMsg - pointer to message to parse
// 3418  *
// 3419  * @return      a pointer to parsed response structure (NULL if not allocated).
// 3420  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 3421  *          by the calling function [osal_mem_free()].
// 3422  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3423 ZDO_MgmtBindRsp_t *ZDO_ParseMgmtBindRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseMgmtBindRsp:
          CFI Block cfiBlock1301 Using cfiCommon0
          CFI Function ZDO_ParseMgmtBindRsp
        CODE
// 3424 {
        FUNCALL ZDO_ParseMgmtBindRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtBindRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtBindRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        MOV       A,#-0x12
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 0
// 3425   ZDO_MgmtBindRsp_t *pRsp;
// 3426   uint8 status;
// 3427   uint8 bindingCount = 0;
        MOV       ?V6,#0x0
// 3428   uint8 startIndex = 0;
        MOV       ?V5,#0x0
// 3429   uint8 bindingListCount = 0;
        MOV       ?V4,#0x0
// 3430   uint8 *msg;
// 3431 
// 3432   msg = inMsg->asdu;
        LCALL     ?Subroutine87 & 0xFFFF
// 3433 
// 3434   status = *msg++;
??CrossCallReturnLabel_148:
        MOV       ?V7,A
        INC       DPTR
        MOV       ?V2,DPL
        MOV       ?V3,DPH
// 3435   if ( status == ZSuccess )
        JNZ       ??ZDO_ParseMgmtBindRsp_0
// 3436   {
// 3437     bindingCount = *msg++;
        LCALL     ?Subroutine99 & 0xFFFF
// 3438     startIndex = *msg++;
??CrossCallReturnLabel_163:
        MOV       ?V5,A
// 3439     bindingListCount = *msg++;
        MOV       DPL,?V2
        MOV       DPH,?V3
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V4,A
        MOV       A,?V2
        ADD       A,#0x3
        MOV       ?V2,A
        JNC       ??ZDO_ParseMgmtBindRsp_0
        INC       ?V3
// 3440   }
// 3441 
// 3442   // Allocate a buffer big enough to handle the list
// 3443   pRsp = (ZDO_MgmtBindRsp_t *)osal_mem_alloc(
// 3444           (sizeof ( ZDO_MgmtBindRsp_t ) + (bindingListCount * sizeof( apsBindingItem_t ))) );
??ZDO_ParseMgmtBindRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV       A,?V4
        MOV       B,#0x15
        MUL       AB
        MOV       R1,B
        ADD       A,#0x4
        LCALL     ?Subroutine123 & 0xFFFF
// 3445   if ( pRsp )
??CrossCallReturnLabel_216:
        JZ        ??ZDO_ParseMgmtBindRsp_1
// 3446   {
// 3447     uint8 x;
// 3448     apsBindingItem_t *pList = pRsp->list;
        MOV       A,R2
        ADD       A,#0x4
        MOV       R6,A
        CLR       A
        ADDC      A,?V1
        MOV       R7,A
// 3449     pRsp->status = status;
        LCALL     ?Subroutine10 & 0xFFFF
// 3450     pRsp->bindingCount = bindingCount;
// 3451     pRsp->startIndex = startIndex;
// 3452     pRsp->bindingListCount = bindingListCount;
// 3453 
// 3454     for ( x = 0; x < bindingListCount; x++ )
??CrossCallReturnLabel_3:
        SJMP      ??ZDO_ParseMgmtBindRsp_2
// 3455     {
// 3456       osal_cpyExtAddr( pList->srcAddr, msg );
// 3457       msg += Z_EXTADDR_LEN;
// 3458       pList->srcEP = *msg++;
// 3459 
// 3460       // Get the Cluster ID
// 3461 
// 3462       pList->clusterID = BUILD_UINT16( msg[0], msg[1] );
// 3463       msg += 2;
// 3464       pList->dstAddr.addrMode = *msg++;
// 3465       if ( pList->dstAddr.addrMode == Addr64Bit )
// 3466       {
// 3467         osal_cpyExtAddr( pList->dstAddr.addr.extAddr, msg );
// 3468         msg += Z_EXTADDR_LEN;
// 3469         pList->dstEP = *msg++;
// 3470       }
// 3471       else
// 3472       {
// 3473         pList->dstAddr.addr.shortAddr = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseMgmtBindRsp_3:
        MOV       DPL,?V2
        MOV       DPH,?V3
        LCALL     ?Subroutine92 & 0xFFFF
// 3474         msg += 2;
// 3475       }
??CrossCallReturnLabel_157:
        LCALL     ?Subroutine32 & 0xFFFF
??CrossCallReturnLabel_49:
        JNC       ??ZDO_ParseMgmtBindRsp_4
        INC       ?V3
// 3476 
// 3477       pList++;
??ZDO_ParseMgmtBindRsp_4:
        MOV       A,R6
        ADD       A,#0x15
        MOV       R6,A
        JNC       ??ZDO_ParseMgmtBindRsp_5
        INC       R7
??ZDO_ParseMgmtBindRsp_5:
        INC       ?V5
??ZDO_ParseMgmtBindRsp_2:
        MOV       A,?V5
        CLR       C
        SUBB      A,?V4
        JNC       ??ZDO_ParseMgmtBindRsp_1
        ; Setup parameters for call to function sAddrExtCpy
        MOV       R4,?V2
        MOV       R5,?V3
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        LCALL     ?Subroutine49 & 0xFFFF
??CrossCallReturnLabel_499:
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine31 & 0xFFFF
??CrossCallReturnLabel_46:
        JNC       ??ZDO_ParseMgmtBindRsp_6
        INC       ?V3
??ZDO_ParseMgmtBindRsp_6:
        MOV       DPL,A
        MOV       DPH,?V3
        LCALL     ?Subroutine61 & 0xFFFF
??CrossCallReturnLabel_99:
        LCALL     ?Subroutine25 & 0xFFFF
??CrossCallReturnLabel_32:
        LCALL     ?Subroutine118 & 0xFFFF
??CrossCallReturnLabel_205:
        MOV       A,?V2
        ADD       A,#0x3
        MOV       ?V2,A
        JNC       ??ZDO_ParseMgmtBindRsp_7
        INC       ?V3
??ZDO_ParseMgmtBindRsp_7:
        LCALL     ?Subroutine137 & 0xFFFF
??CrossCallReturnLabel_248:
        JNZ       ??ZDO_ParseMgmtBindRsp_3
        ; Setup parameters for call to function sAddrExtCpy
        MOV       R4,?V2
        MOV       R5,?V3
        LCALL     ??Subroutine224_0 & 0xFFFF
// 3478     }
// 3479   }
??CrossCallReturnLabel_500:
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine141 & 0xFFFF
??CrossCallReturnLabel_505:
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine31 & 0xFFFF
??CrossCallReturnLabel_47:
        JNC       ??ZDO_ParseMgmtBindRsp_4
        INC       ?V3
??ZDO_ParseMgmtBindRsp_8:
        SJMP      ??ZDO_ParseMgmtBindRsp_4
// 3480 
// 3481   return ( pRsp );
??ZDO_ParseMgmtBindRsp_1:
        MOV       R2,?V0
        MOV       R3,?V1
        LJMP      ??Subroutine225_0 & 0xFFFF
// 3482 }
          CFI EndBlock cfiBlock1301

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine137:
          CFI Block cfiCond1302 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_247
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1303 Using cfiCommon0
          CFI (cfiCond1303) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1303) Conditional ??CrossCallReturnLabel_248
          CFI (cfiCond1303) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1303) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1303) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1303) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1303) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1303) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1303) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1303) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1303) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1303) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1303) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1303) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1303) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1303) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1303) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1303) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1303) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1303) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1303) CFA_SP SP+-2
          CFI (cfiCond1303) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1304 Using cfiCommon1
          CFI (cfiPicker1304) NoFunction
          CFI (cfiPicker1304) Picker
        MOV       A,R6
        ADD       A,#0xb
        MOV       R2,A
        CLR       A
        ADDC      A,R7
        MOV       R3,A
        MOV       A,#0x3
        XRL       A,R0
        RET
          CFI EndBlock cfiCond1302
          CFI EndBlock cfiCond1303
          CFI EndBlock cfiPicker1304

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine123:
          CFI Block cfiCond1305 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_215
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1306 Using cfiCommon0
          CFI (cfiCond1306) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1306) Conditional ??CrossCallReturnLabel_216
          CFI (cfiCond1306) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1306) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1306) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1306) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1306) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1306) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1306) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1306) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1306) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1306) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1306) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1306) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1306) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1306) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1306) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1306) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1306) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1306) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1306) CFA_SP SP+-2
          CFI (cfiCond1306) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1307 Using cfiCommon1
          CFI (cfiPicker1307) NoFunction
          CFI (cfiPicker1307) Picker
        MOV       R2,A
        CLR       A
        ADDC      A,R1
        MOV       R3,A
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V0,R2
        MOV       ?V1,R3
        MOV       A,R2
        ORL       A,R3
        RET
          CFI EndBlock cfiCond1305
          CFI EndBlock cfiCond1306
          CFI EndBlock cfiPicker1307

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine118:
          CFI Block cfiCond1308 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_204
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1309 Using cfiCommon0
          CFI (cfiCond1309) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1309) Conditional ??CrossCallReturnLabel_205
          CFI (cfiCond1309) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1309) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1309) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1309) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1309) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1309) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1309) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1309) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1309) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1309) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1309) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1309) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1309) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1309) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1309) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1309) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1309) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1309) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1309) CFA_SP SP+-2
          CFI (cfiCond1309) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1310 Using cfiCommon1
          CFI (cfiPicker1310) NoFunction
          CFI (cfiPicker1310) Picker
        LCALL     ?Subroutine182 & 0xFFFF
??CrossCallReturnLabel_308:
        MOV       A,R0
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond1308
          CFI EndBlock cfiCond1309
          CFI EndBlock cfiPicker1310

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine182:
          CFI Block cfiCond1311 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_309, ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_94
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1312 Using cfiCommon0
          CFI (cfiCond1312) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond1312) Conditional ??CrossCallReturnLabel_309, ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_95
          CFI (cfiCond1312) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1312) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1312) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1312) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1312) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1312) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1312) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1312) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1312) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1312) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1312) CFA_SP SP+-6
          CFI (cfiCond1312) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1313 Using cfiCommon0
          CFI (cfiCond1313) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond1313) Conditional ??CrossCallReturnLabel_309, ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_137
          CFI (cfiCond1313) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1313) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1313) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1313) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1313) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1313) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1313) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1313) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1313) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1313) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1313) CFA_SP SP+-6
          CFI (cfiCond1313) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1314 Using cfiCommon0
          CFI (cfiCond1314) Function ZDO_ProcessUserDescReq
          CFI (cfiCond1314) Conditional ??CrossCallReturnLabel_309, ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_138
          CFI (cfiCond1314) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1314) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1314) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1314) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1314) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1314) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1314) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1314) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1314) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1314) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1314) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1314) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1314) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1314) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1314) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1314) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1314) CFA_SP SP+-6
          CFI (cfiCond1314) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond1315 Using cfiCommon0
          CFI (cfiCond1315) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1315) Conditional ??CrossCallReturnLabel_308, ??CrossCallReturnLabel_204
          CFI (cfiCond1315) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1315) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1315) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1315) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1315) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1315) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1315) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1315) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1315) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1315) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1315) CFA_SP SP+-4
          CFI (cfiCond1315) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1316 Using cfiCommon0
          CFI (cfiCond1316) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1316) Conditional ??CrossCallReturnLabel_308, ??CrossCallReturnLabel_205
          CFI (cfiCond1316) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1316) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1316) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1316) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1316) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1316) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1316) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1316) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1316) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1316) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1316) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1316) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1316) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1316) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1316) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1316) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1316) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1316) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1316) CFA_SP SP+-4
          CFI (cfiCond1316) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1317 Using cfiCommon1
          CFI (cfiPicker1317) NoFunction
          CFI (cfiPicker1317) Picker
        ADD       A,#0x13
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond1311
          CFI EndBlock cfiCond1312
          CFI EndBlock cfiCond1313
          CFI EndBlock cfiCond1314
          CFI EndBlock cfiCond1315
          CFI EndBlock cfiCond1316
          CFI EndBlock cfiPicker1317

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine99:
          CFI Block cfiCond1318 Using cfiCommon0
          CFI Function ZDO_CompareClusterLists
          CFI Conditional ??CrossCallReturnLabel_164
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1319 Using cfiCommon0
          CFI (cfiCond1319) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1319) Conditional ??CrossCallReturnLabel_162
          CFI (cfiCond1319) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1319) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1319) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1319) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1319) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1319) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1319) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1319) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1319) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1319) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1319) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1319) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1319) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1319) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1319) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1319) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1319) CFA_SP SP+-2
          CFI (cfiCond1319) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1320 Using cfiCommon0
          CFI (cfiCond1320) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1320) Conditional ??CrossCallReturnLabel_163
          CFI (cfiCond1320) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1320) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1320) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1320) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1320) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1320) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1320) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1320) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1320) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1320) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1320) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1320) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1320) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1320) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1320) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1320) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1320) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1320) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1320) CFA_SP SP+-2
          CFI (cfiCond1320) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1321 Using cfiCommon0
          CFI (cfiCond1321) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1321) Conditional ??CrossCallReturnLabel_165
          CFI (cfiCond1321) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1321) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1321) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1321) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1321) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1321) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1321) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1321) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1321) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1321) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1321) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1321) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1321) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1321) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1321) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1321) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1321) CFA_SP SP+-2
          CFI (cfiCond1321) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1322 Using cfiCommon1
          CFI (cfiPicker1322) NoFunction
          CFI (cfiPicker1322) Picker
        MOVX      A,@DPTR
        MOV       ?V6,A
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1318
          CFI EndBlock cfiCond1319
          CFI EndBlock cfiCond1320
          CFI EndBlock cfiCond1321
          CFI EndBlock cfiPicker1322

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine92:
          CFI Block cfiCond1323 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_156
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1324 Using cfiCommon0
          CFI (cfiCond1324) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1324) Conditional ??CrossCallReturnLabel_157
          CFI (cfiCond1324) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1324) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1324) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1324) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1324) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1324) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1324) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1324) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1324) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1324) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1324) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1324) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1324) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1324) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1324) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1324) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1324) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1324) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1324) CFA_SP SP+-2
          CFI (cfiCond1324) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1325 Using cfiCommon1
          CFI (cfiPicker1325) NoFunction
          CFI (cfiPicker1325) Picker
        MOVX      A,@DPTR
        MOV       R4,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       A,R4
        MOV       DPL,R2
        MOV       DPH,R3
        RET
          CFI EndBlock cfiCond1323
          CFI EndBlock cfiCond1324
          CFI EndBlock cfiPicker1325

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine87:
          CFI Block cfiCond1326 Using cfiCommon0
          CFI Function ZDO_ParseEPListRsp
          CFI Conditional ??CrossCallReturnLabel_147
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1327 Using cfiCommon0
          CFI (cfiCond1327) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1327) Conditional ??CrossCallReturnLabel_148
          CFI (cfiCond1327) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1327) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1327) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1327) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1327) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1327) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1327) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1327) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1327) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1327) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1327) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1327) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1327) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1327) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1327) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1327) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1327) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1327) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1327) CFA_SP SP+-2
          CFI (cfiCond1327) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1328 Using cfiCommon1
          CFI (cfiPicker1328) NoFunction
          CFI (cfiPicker1328) Picker
        LCALL     ?Subroutine173 & 0xFFFF
??CrossCallReturnLabel_299:
        MOVX      A,@DPTR
        MOV       ?V2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       DPL,?V2
        MOV       DPH,A
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1326
          CFI EndBlock cfiCond1327
          CFI EndBlock cfiPicker1328

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine61:
          CFI Block cfiCond1329 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_98
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1330 Using cfiCommon0
          CFI (cfiCond1330) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1330) Conditional ??CrossCallReturnLabel_99
          CFI (cfiCond1330) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1330) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1330) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1330) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1330) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1330) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1330) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1330) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1330) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1330) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1330) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1330) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1330) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1330) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1330) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1330) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1330) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1330) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1330) CFA_SP SP+-2
          CFI (cfiCond1330) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1331 Using cfiCommon1
          CFI (cfiPicker1331) NoFunction
          CFI (cfiPicker1331) Picker
        LCALL     ?Subroutine179 & 0xFFFF
??CrossCallReturnLabel_303:
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
        RET
          CFI EndBlock cfiCond1329
          CFI EndBlock cfiCond1330
          CFI EndBlock cfiPicker1331

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine32:
          CFI Block cfiCond1332 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_48
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1333 Using cfiCommon0
          CFI (cfiCond1333) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1333) Conditional ??CrossCallReturnLabel_49
          CFI (cfiCond1333) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1333) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1333) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1333) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1333) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1333) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1333) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1333) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1333) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1333) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1333) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1333) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1333) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1333) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1333) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1333) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1333) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1333) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1333) CFA_SP SP+-2
          CFI (cfiCond1333) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1334 Using cfiCommon1
          CFI (cfiPicker1334) NoFunction
          CFI (cfiPicker1334) Picker
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
        MOVX      @DPTR,A
        MOV       A,?V2
        ADD       A,#0x2
        MOV       ?V2,A
        RET
          CFI EndBlock cfiCond1332
          CFI EndBlock cfiCond1333
          CFI EndBlock cfiPicker1334

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine31:
          CFI Block cfiCond1335 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_45
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1336 Using cfiCommon0
          CFI (cfiCond1336) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1336) Conditional ??CrossCallReturnLabel_46
          CFI (cfiCond1336) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1336) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1336) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1336) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1336) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1336) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1336) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1336) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1336) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1336) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1336) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1336) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1336) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1336) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1336) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1336) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1336) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1336) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1336) CFA_SP SP+-2
          CFI (cfiCond1336) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1337 Using cfiCommon0
          CFI (cfiCond1337) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1337) Conditional ??CrossCallReturnLabel_47
          CFI (cfiCond1337) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1337) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1337) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1337) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1337) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1337) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1337) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1337) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1337) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1337) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1337) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1337) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1337) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1337) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1337) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1337) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1337) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1337) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1337) CFA_SP SP+-2
          CFI (cfiCond1337) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1338 Using cfiCommon1
          CFI (cfiPicker1338) NoFunction
          CFI (cfiPicker1338) Picker
        MOVX      @DPTR,A
        MOV       A,?V2
        ADD       A,#0x9
        MOV       ?V2,A
        RET
          CFI EndBlock cfiCond1335
          CFI EndBlock cfiCond1336
          CFI EndBlock cfiCond1337
          CFI EndBlock cfiPicker1338

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine25:
          CFI Block cfiCond1339 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_31
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1340 Using cfiCommon0
          CFI (cfiCond1340) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1340) Conditional ??CrossCallReturnLabel_32
          CFI (cfiCond1340) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1340) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1340) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1340) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1340) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1340) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1340) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1340) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1340) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1340) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1340) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1340) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1340) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1340) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1340) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1340) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1340) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1340) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1340) CFA_SP SP+-2
          CFI (cfiCond1340) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1341 Using cfiCommon1
          CFI (cfiPicker1341) NoFunction
          CFI (cfiPicker1341) Picker
        LCALL     ?Subroutine156 & 0xFFFF
??CrossCallReturnLabel_281:
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       A,R6
        RET
          CFI EndBlock cfiCond1339
          CFI EndBlock cfiCond1340
          CFI EndBlock cfiPicker1341

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine10:
          CFI Block cfiCond1342 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_2
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1343 Using cfiCommon0
          CFI (cfiCond1343) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1343) Conditional ??CrossCallReturnLabel_3
          CFI (cfiCond1343) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1343) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1343) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1343) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1343) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1343) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1343) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1343) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1343) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1343) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1343) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1343) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1343) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1343) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1343) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1343) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1343) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1343) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1343) CFA_SP SP+-2
          CFI (cfiCond1343) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1344 Using cfiCommon1
          CFI (cfiPicker1344) NoFunction
          CFI (cfiPicker1344) Picker
        MOV       DPL,R2
        MOV       DPH,R3
        MOV       A,?V7
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V6
        LCALL     ?Subroutine154 & 0xFFFF
??CrossCallReturnLabel_554:
        INC       DPTR
        INC       DPTR
        MOV       A,?V5
        LCALL     ?Subroutine149 & 0xFFFF
??CrossCallReturnLabel_269:
        MOV       A,?V4
        MOVX      @DPTR,A
        MOV       ?V5,#0x0
        RET
          CFI EndBlock cfiCond1342
          CFI EndBlock cfiCond1343
          CFI EndBlock cfiPicker1344
// 3483 
// 3484 /*********************************************************************
// 3485  * @fn          ZDO_ParseUserDescRsp
// 3486  *
// 3487  * @brief       This function parses the incoming User
// 3488  *              Descriptor Response.
// 3489  *
// 3490  * @param       inMsg - incoming response message
// 3491  *
// 3492  * @return      a pointer to parsed response structure (NULL if not allocated).
// 3493  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 3494  *          by the calling function [osal_mem_free()].
// 3495  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3496 ZDO_UserDescRsp_t *ZDO_ParseUserDescRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseUserDescRsp:
          CFI Block cfiBlock1345 Using cfiCommon0
          CFI Function ZDO_ParseUserDescRsp
        CODE
// 3497 {
        FUNCALL ZDO_ParseUserDescRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseUserDescRsp, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
// 3498   ZDO_UserDescRsp_t *pRsp;
// 3499   uint8 *msg;
// 3500   uint8 descLen = 0;
        MOV       ?V4,#0x0
// 3501 
// 3502   msg = inMsg->asdu;
        LCALL     ?Subroutine110 & 0xFFFF
??CrossCallReturnLabel_331:
        MOV       ?V2,R0
        MOV       ?V3,A
// 3503 
// 3504   if ( msg[0] == ZSuccess )
        MOV       DPL,R0
        MOV       DPH,A
        MOVX      A,@DPTR
        JNZ       ??ZDO_ParseUserDescRsp_0
// 3505   {
// 3506     descLen = msg[3];
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V4,A
// 3507   }
// 3508 
// 3509   pRsp = (ZDO_UserDescRsp_t *)osal_mem_alloc( sizeof ( ZDO_UserDescRsp_t ) + descLen );
??ZDO_ParseUserDescRsp_0:
        MOV       R6,?V4
        ; Setup parameters for call to function osal_mem_alloc
        MOV       A,R6
        LCALL     ?Subroutine132 & 0xFFFF
??CrossCallReturnLabel_556:
        MOV       ?V0,R2
        MOV       ?V1,R3
// 3510   if ( pRsp )
        MOV       A,R2
        ORL       A,R3
        JZ        ??ZDO_ParseUserDescRsp_1
// 3511   {
// 3512     pRsp->status = msg[0];
        MOV       DPL,?V2
        MOV       DPH,?V3
        LCALL     ??Subroutine243_0 & 0xFFFF
??CrossCallReturnLabel_607:
        LCALL     ?Subroutine26 & 0xFFFF
// 3513     pRsp->nwkAddr = BUILD_UINT16( msg[1], msg[2] );
??CrossCallReturnLabel_34:
        MOVX      A,@DPTR
        MOV       R2,A
        MOV       DPL,?V2
        MOV       DPH,?V3
        INC       DPTR
        LCALL     ??Subroutine234_0 & 0xFFFF
??CrossCallReturnLabel_558:
        MOV       DPL,?V0
        MOV       DPH,R3
        INC       DPTR
        LCALL     ??Subroutine246_0 & 0xFFFF
// 3514     pRsp->length = descLen;
??CrossCallReturnLabel_619:
        MOV       DPL,?V0
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOV       A,R6
        MOVX      @DPTR,A
// 3515     if ( descLen )
        JZ        ??ZDO_ParseUserDescRsp_1
// 3516     {
// 3517       osal_memcpy( pRsp->desc, &msg[4], descLen );
        ; Setup parameters for call to function osal_memcpy
        MOV       A,?V2
        ADD       A,#0x4
        MOV       ?V4,A
        CLR       A
        ADDC      A,?V3
        MOV       ?V5,A
        MOV       ?V6,R0
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,R6
        MOV       R4,A
        MOV       R5,#0x0
        MOV       A,?V0
        ADD       A,#0x4
        MOV       R2,A
        CLR       A
        ADDC      A,?V1
        MOV       R3,A
        LCALL     ??Subroutine242_0 & 0xFFFF
// 3518     }
// 3519   }
??CrossCallReturnLabel_603:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
// 3520 
// 3521   return ( pRsp );
??ZDO_ParseUserDescRsp_1:
        MOV       R2,?V0
        MOV       R3,?V1
        LJMP      ??Subroutine210_0 & 0xFFFF
// 3522 }
          CFI EndBlock cfiBlock1345

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine135:
          CFI Block cfiCond1346 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_598
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond1347 Using cfiCommon0
          CFI (cfiCond1347) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1347) Conditional ??CrossCallReturnLabel_599
          CFI (cfiCond1347) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1347) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1347) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1347) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1347) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1347) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1347) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1347) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1347) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1347) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1347) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1347) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1347) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1347) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1347) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1347) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1347) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1347) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1347) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1347) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1347) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1347) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1347) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1347) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1347) CFA_SP SP+-2
          CFI (cfiCond1347) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker1348 Using cfiCommon1
          CFI (cfiPicker1348) NoFunction
          CFI (cfiPicker1348) Picker
        MOV       A,R4
        ADD       A,R4
        MOV       R4,A
        CLR       A
        RLC       A
        MOV       R5,A
          CFI EndBlock cfiCond1346
          CFI EndBlock cfiCond1347
          CFI EndBlock cfiPicker1348
        REQUIRE ??Subroutine242_0
        ; // Fall through to label ??Subroutine242_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine242_0:
          CFI Block cfiCond1349 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescSet
          CFI Conditional ??CrossCallReturnLabel_600
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 39)
          CFI Block cfiCond1350 Using cfiCommon0
          CFI (cfiCond1350) Function ZDO_CopyMatchInfo
          CFI (cfiCond1350) Conditional ??CrossCallReturnLabel_601
          CFI (cfiCond1350) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1350) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1350) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1350) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1350) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1350) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1350) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1350) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1350) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1350) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1350) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1350) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1350) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1350) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1350) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1350) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1350) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1350) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1350) CFA_SP SP+-2
          CFI (cfiCond1350) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1351 Using cfiCommon0
          CFI (cfiCond1351) Function ZDO_ParseEPListRsp
          CFI (cfiCond1351) Conditional ??CrossCallReturnLabel_602
          CFI (cfiCond1351) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1351) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1351) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1351) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1351) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1351) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1351) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1351) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1351) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1351) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1351) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1351) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1351) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1351) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1351) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1351) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1351) CFA_SP SP+-2
          CFI (cfiCond1351) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond1352 Using cfiCommon0
          CFI (cfiCond1352) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1352) Conditional ??CrossCallReturnLabel_603
          CFI (cfiCond1352) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1352) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1352) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1352) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1352) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1352) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1352) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1352) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1352) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1352) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1352) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1352) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1352) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1352) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1352) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1352) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1352) CFA_SP SP+-2
          CFI (cfiCond1352) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond1353 Using cfiCommon0
          CFI (cfiCond1353) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1353) Conditional ??CrossCallReturnLabel_604
          CFI (cfiCond1353) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1353) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1353) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1353) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1353) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1353) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1353) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1353) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1353) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1353) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1353) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1353) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1353) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1353) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1353) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1353) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1353) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1353) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1353) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1353) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1353) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1353) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1353) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1353) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1353) CFA_SP SP+-2
          CFI (cfiCond1353) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1354 Using cfiCommon0
          CFI (cfiCond1354) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1354) Conditional ??CrossCallReturnLabel_598
          CFI (cfiCond1354) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1354) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1354) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1354) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1354) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1354) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1354) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1354) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1354) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1354) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1354) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1354) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1354) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1354) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1354) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1354) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1354) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1354) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1354) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1354) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1354) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1354) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1354) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1354) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1354) CFA_SP SP+-2
          CFI (cfiCond1354) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond1355 Using cfiCommon0
          CFI (cfiCond1355) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1355) Conditional ??CrossCallReturnLabel_599
          CFI (cfiCond1355) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1355) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1355) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1355) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1355) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1355) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1355) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1355) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1355) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1355) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1355) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1355) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1355) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1355) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1355) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1355) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1355) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1355) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1355) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1355) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1355) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1355) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1355) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1355) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1355) CFA_SP SP+-2
          CFI (cfiCond1355) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker1356 Using cfiCommon1
          CFI (cfiPicker1356) NoFunction
          CFI (cfiPicker1356) Picker
        LCALL     `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV       A,#0x3
        RET
          CFI EndBlock cfiCond1349
          CFI EndBlock cfiCond1350
          CFI EndBlock cfiCond1351
          CFI EndBlock cfiCond1352
          CFI EndBlock cfiCond1353
          CFI EndBlock cfiCond1354
          CFI EndBlock cfiCond1355
          CFI EndBlock cfiPicker1356

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine89:
          CFI Block cfiCond1357 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_608
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1358 Using cfiCommon0
          CFI (cfiCond1358) Function ZDO_ParseAddrRsp
          CFI (cfiCond1358) Conditional ??CrossCallReturnLabel_609
          CFI (cfiCond1358) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1358) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1358) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1358) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1358) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1358) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1358) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1358) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1358) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1358) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1358) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1358) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1358) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1358) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1358) CFA_SP SP+-2
          CFI (cfiCond1358) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1359 Using cfiCommon1
          CFI (cfiPicker1359) NoFunction
          CFI (cfiPicker1359) Picker
        INC       DPTR
          CFI EndBlock cfiCond1357
          CFI EndBlock cfiCond1358
          CFI EndBlock cfiPicker1359
        REQUIRE ??Subroutine243_0
        ; // Fall through to label ??Subroutine243_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine243_0:
          CFI Block cfiCond1360 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_605
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1361 Using cfiCommon0
          CFI (cfiCond1361) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond1361) Conditional ??CrossCallReturnLabel_606
          CFI (cfiCond1361) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1361) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1361) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1361) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1361) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1361) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1361) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1361) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1361) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1361) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1361) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1361) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1361) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1361) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1361) CFA_SP SP+-2
          CFI (cfiCond1361) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1362 Using cfiCommon0
          CFI (cfiCond1362) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1362) Conditional ??CrossCallReturnLabel_607
          CFI (cfiCond1362) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1362) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1362) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1362) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1362) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1362) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1362) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1362) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1362) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1362) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1362) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1362) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1362) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1362) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1362) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1362) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1362) CFA_SP SP+-2
          CFI (cfiCond1362) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1363 Using cfiCommon0
          CFI (cfiCond1363) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond1363) Conditional ??CrossCallReturnLabel_608
          CFI (cfiCond1363) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1363) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1363) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1363) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1363) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1363) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1363) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1363) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1363) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1363) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1363) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1363) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1363) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1363) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1363) CFA_SP SP+-2
          CFI (cfiCond1363) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1364 Using cfiCommon0
          CFI (cfiCond1364) Function ZDO_ParseAddrRsp
          CFI (cfiCond1364) Conditional ??CrossCallReturnLabel_609
          CFI (cfiCond1364) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1364) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1364) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1364) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1364) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1364) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1364) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1364) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1364) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1364) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1364) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1364) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1364) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1364) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1364) CFA_SP SP+-2
          CFI (cfiCond1364) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1365 Using cfiCommon1
          CFI (cfiPicker1365) NoFunction
          CFI (cfiPicker1365) Picker
        MOVX      A,@DPTR
        MOV       DPL,R2
        MOV       DPH,R3
        RET
          CFI EndBlock cfiCond1360
          CFI EndBlock cfiCond1361
          CFI EndBlock cfiCond1362
          CFI EndBlock cfiCond1363
          CFI EndBlock cfiCond1364
          CFI EndBlock cfiPicker1365
// 3523 
// 3524 /*********************************************************************
// 3525  * @fn          ZDO_ParseSimpleDescBuf
// 3526  *
// 3527  * @brief       Parse a byte sequence representation of a Simple Descriptor.
// 3528  *
// 3529  * @param       buf  - pointer to a byte array representing a Simple Desc.
// 3530  * @param       desc - SimpleDescriptionFormat_t *
// 3531  *
// 3532  *              This routine allocates storage for the cluster IDs because
// 3533  *              they are 16-bit and need to be aligned to be properly processed.
// 3534  *              This routine returns non-zero if an allocation fails.
// 3535  *
// 3536  *              NOTE: This means that the caller or user of the input structure
// 3537  *                    is responsible for freeing the memory
// 3538  *
// 3539  * @return      0: success
// 3540  *              1: failure due to malloc failure.
// 3541  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3542 uint8 ZDO_ParseSimpleDescBuf( uint8 *buf, SimpleDescriptionFormat_t *desc )
ZDO_ParseSimpleDescBuf:
          CFI Block cfiBlock1366 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
        CODE
// 3543 {
        FUNCALL ZDO_ParseSimpleDescBuf, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseSimpleDescBuf, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseSimpleDescBuf, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
        MOV       A,R3
        MOV       ?V0,R4
        MOV       ?V1,R5
// 3544   uint8 num, i;
// 3545 
// 3546   desc->EndPoint = *buf++;
        LCALL     ?Subroutine43 & 0xFFFF
??CrossCallReturnLabel_550:
        INC       DPTR
        MOV       R6,DPL
        MOV       R7,DPH
// 3547   desc->AppProfId = BUILD_UINT16( buf[0], buf[1] );
        LCALL     ?Subroutine91 & 0xFFFF
??CrossCallReturnLabel_154:
        INC       DPTR
        LCALL     ??Subroutine202_0 & 0xFFFF
// 3548   buf += 2;
??CrossCallReturnLabel_383:
        ADD       A,#0x2
        MOV       R6,A
        JNC       ??ZDO_ParseSimpleDescBuf_0
        INC       R7
// 3549   desc->AppDeviceId = BUILD_UINT16( buf[0], buf[1] );
??ZDO_ParseSimpleDescBuf_0:
        MOV       DPL,A
        MOV       DPH,R7
        LCALL     ?Subroutine77 & 0xFFFF
??CrossCallReturnLabel_131:
        LCALL     ?Subroutine21 & 0xFFFF
// 3550   buf += 2;
// 3551   desc->AppDevVer = *buf >> 4;
??CrossCallReturnLabel_585:
        SWAP      A
        ANL       A,#0xf
// 3552 
// 3553   desc->Reserved = 0;
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine12 & 0xFFFF
// 3554   buf++;
// 3555 
// 3556   // move in input cluster list (if any). allocate aligned memory.
// 3557   num = desc->AppNumInClusters = *buf++;
??CrossCallReturnLabel_9:
        MOV       ?V4,A
        MOV       A,R6
        ADD       A,#0x4
        MOV       R6,A
        JNC       ??ZDO_ParseSimpleDescBuf_1
        INC       R7
??ZDO_ParseSimpleDescBuf_1:
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOV       A,?V4
        MOVX      @DPTR,A
// 3558   if ( num )
        MOV       A,R4
        ADD       A,#0x7
        MOV       ?V2,A
        CLR       A
        ADDC      A,?V1
        MOV       ?V3,A
        MOV       A,?V4
        JZ        ??ZDO_ParseSimpleDescBuf_2
// 3559   {
// 3560     if (!(desc->pAppInClusterList = (uint16 *)osal_mem_alloc(num*sizeof(uint16))))
        ; Setup parameters for call to function osal_mem_alloc
        LCALL     ?Subroutine116 & 0xFFFF
??CrossCallReturnLabel_196:
        MOV       R0,?V6
        MOV       R1,?V7
        MOV       DPL,?V2
        MOV       DPH,?V3
        LCALL     ?Subroutine36 & 0xFFFF
??CrossCallReturnLabel_59:
        ORL       A,R1
        JNZ       $+5
        LJMP      ??ZDO_ParseSimpleDescBuf_3 & 0xFFFF
// 3561     {
// 3562       // malloc failed. we're done.
// 3563       return 1;
// 3564     }
// 3565     for (i=0; i<num; ++i)
        MOV       R2,#0x0
        SJMP      ??ZDO_ParseSimpleDescBuf_4
// 3566     {
// 3567       desc->pAppInClusterList[i] = BUILD_UINT16( buf[0], buf[1] );
??ZDO_ParseSimpleDescBuf_5:
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_165:
        MOV       R4,A
        CLR       A
        XCH       A,R4
        MOV       R5,A
        MOV       A,?V6
        ADD       A,R4
        CLR       A
        ADDC      A,R5
        MOV       ?V7,A
        LCALL     ?Subroutine172 & 0xFFFF
??CrossCallReturnLabel_610:
        MOV       A,R0
        ADD       A,R4
        MOV       DPL,A
        MOV       A,R3
        ADDC      A,R5
        MOV       DPH,A
        MOV       A,?V6
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V7
        MOVX      @DPTR,A
// 3568       buf += 2;
        MOV       A,R6
        ADD       A,#0x2
        MOV       R6,A
        JNC       ??ZDO_ParseSimpleDescBuf_6
        INC       R7
// 3569     }
??ZDO_ParseSimpleDescBuf_6:
        INC       R2
??ZDO_ParseSimpleDescBuf_4:
        MOV       A,R2
        CLR       C
        SUBB      A,?V4
        JC        ??ZDO_ParseSimpleDescBuf_5
// 3570   }
// 3571 
// 3572   // move in output cluster list (if any). allocate aligned memory.
// 3573   num = desc->AppNumOutClusters = *buf++;
??ZDO_ParseSimpleDescBuf_2:
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        MOV       ?V4,A
        INC       DPTR
        MOV       R6,DPL
        MOV       R7,DPH
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
// 3574   if (num)
        JZ        ??ZDO_ParseSimpleDescBuf_7
// 3575   {
// 3576     if (!(desc->pAppOutClusterList = (uint16 *)osal_mem_alloc(num*sizeof(uint16))))
        ; Setup parameters for call to function osal_mem_alloc
        LCALL     ?Subroutine116 & 0xFFFF
??CrossCallReturnLabel_197:
        MOV       R1,?V7
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine36 & 0xFFFF
??CrossCallReturnLabel_60:
        ORL       A,R1
        JNZ       ??ZDO_ParseSimpleDescBuf_8
// 3577     {
// 3578       // malloc failed. free input cluster list memory if there is any
// 3579       if ( desc->pAppInClusterList != NULL )
        MOV       DPL,?V2
        MOV       DPH,?V3
        LCALL     ??Subroutine200_0 & 0xFFFF
??CrossCallReturnLabel_357:
        JZ        ??ZDO_ParseSimpleDescBuf_3
// 3580       {
// 3581         osal_mem_free(desc->pAppInClusterList);
        ; Setup parameters for call to function osal_mem_free
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 3582 
// 3583         desc->pAppInClusterList = NULL;
        MOV       DPL,?V2
        MOV       DPH,?V3
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
// 3584       }
// 3585       return 1;
??ZDO_ParseSimpleDescBuf_3:
        MOV       R1,#0x1
        SJMP      ??ZDO_ParseSimpleDescBuf_9
// 3586     }
// 3587     for (i=0; i<num; ++i)
??ZDO_ParseSimpleDescBuf_8:
        MOV       R2,#0x0
        SJMP      ??ZDO_ParseSimpleDescBuf_10
// 3588     {
// 3589       desc->pAppOutClusterList[i] = BUILD_UINT16( buf[0], buf[1] );
??ZDO_ParseSimpleDescBuf_11:
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ?Subroutine169 & 0xFFFF
??CrossCallReturnLabel_324:
        MOV       R4,A
        CLR       A
        XCH       A,R4
        MOV       R5,A
        MOV       A,?V0
        ADD       A,R4
        CLR       A
        ADDC      A,R5
        MOV       ?V1,A
        LCALL     ?Subroutine172 & 0xFFFF
??CrossCallReturnLabel_611:
        MOV       A,?V6
        ADD       A,R4
        MOV       DPL,A
        MOV       A,R3
        ADDC      A,R5
        MOV       DPH,A
        MOV       A,?V0
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V1
        MOVX      @DPTR,A
// 3590       buf += 2;
        MOV       A,R6
        ADD       A,#0x2
        MOV       R6,A
        JNC       ??ZDO_ParseSimpleDescBuf_12
        INC       R7
// 3591     }
??ZDO_ParseSimpleDescBuf_12:
        INC       R2
??ZDO_ParseSimpleDescBuf_10:
        MOV       A,R2
        CLR       C
        SUBB      A,?V4
        JC        ??ZDO_ParseSimpleDescBuf_11
// 3592   }
// 3593   return 0;
??ZDO_ParseSimpleDescBuf_7:
        MOV       R1,#0x0
??ZDO_ParseSimpleDescBuf_9:
        LJMP      ??Subroutine210_0 & 0xFFFF
// 3594 }
          CFI EndBlock cfiBlock1366

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine172:
          CFI Block cfiCond1367 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_610
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1368 Using cfiCommon0
          CFI (cfiCond1368) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1368) Conditional ??CrossCallReturnLabel_611
          CFI (cfiCond1368) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1368) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1368) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1368) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1368) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1368) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1368) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1368) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1368) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1368) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1368) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1368) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1368) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1368) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1368) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1368) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1368) CFA_SP SP+-2
          CFI (cfiCond1368) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1369 Using cfiCommon1
          CFI (cfiPicker1369) NoFunction
          CFI (cfiPicker1369) Picker
        MOV       A,R2
          CFI EndBlock cfiCond1367
          CFI EndBlock cfiCond1368
          CFI EndBlock cfiPicker1369
        REQUIRE ??Subroutine244_0
        ; // Fall through to label ??Subroutine244_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine244_0:
          CFI Block cfiCond1370 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_612, ??CrossCallReturnLabel_475
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond1371 Using cfiCommon0
          CFI (cfiCond1371) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1371) Conditional ??CrossCallReturnLabel_612, ??CrossCallReturnLabel_476
          CFI (cfiCond1371) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1371) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1371) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1371) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1371) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1371) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1371) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1371) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1371) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1371) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1371) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1371) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1371) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1371) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1371) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1371) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1371) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1371) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1371) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1371) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1371) CFA_SP SP+-4
          CFI (cfiCond1371) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond1372 Using cfiCommon0
          CFI (cfiCond1372) Function ZDO_CopyMatchInfo
          CFI (cfiCond1372) Conditional ??CrossCallReturnLabel_612, ??CrossCallReturnLabel_477
          CFI (cfiCond1372) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1372) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1372) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1372) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1372) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1372) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1372) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1372) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1372) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1372) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1372) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1372) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1372) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1372) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1372) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1372) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1372) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1372) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1372) CFA_SP SP+-4
          CFI (cfiCond1372) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1373 Using cfiCommon0
          CFI (cfiCond1373) Function ZDO_CopyMatchInfo
          CFI (cfiCond1373) Conditional ??CrossCallReturnLabel_612, ??CrossCallReturnLabel_478
          CFI (cfiCond1373) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1373) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1373) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1373) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1373) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1373) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1373) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1373) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1373) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1373) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1373) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1373) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1373) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1373) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1373) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1373) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1373) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1373) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1373) CFA_SP SP+-4
          CFI (cfiCond1373) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1374 Using cfiCommon0
          CFI (cfiCond1374) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1374) Conditional ??CrossCallReturnLabel_610
          CFI (cfiCond1374) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1374) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1374) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1374) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1374) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1374) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1374) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1374) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1374) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1374) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1374) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1374) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1374) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1374) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1374) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1374) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1374) CFA_SP SP+-2
          CFI (cfiCond1374) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1375 Using cfiCommon0
          CFI (cfiCond1375) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1375) Conditional ??CrossCallReturnLabel_611
          CFI (cfiCond1375) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1375) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1375) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1375) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1375) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1375) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1375) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1375) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1375) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1375) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1375) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1375) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1375) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1375) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1375) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1375) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1375) CFA_SP SP+-2
          CFI (cfiCond1375) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1376 Using cfiCommon1
          CFI (cfiPicker1376) NoFunction
          CFI (cfiPicker1376) Picker
        ADD       A,0xE0 /* A   */
        MOV       R4,A
        CLR       A
        RLC       A
        MOV       R5,A
        RET
          CFI EndBlock cfiCond1370
          CFI EndBlock cfiCond1371
          CFI EndBlock cfiCond1372
          CFI EndBlock cfiCond1373
          CFI EndBlock cfiCond1374
          CFI EndBlock cfiCond1375
          CFI EndBlock cfiPicker1376

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine116:
          CFI Block cfiCond1377 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_196
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1378 Using cfiCommon0
          CFI (cfiCond1378) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1378) Conditional ??CrossCallReturnLabel_197
          CFI (cfiCond1378) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1378) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1378) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1378) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1378) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1378) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1378) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1378) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1378) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1378) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1378) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1378) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1378) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1378) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1378) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1378) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1378) CFA_SP SP+-2
          CFI (cfiCond1378) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1379 Using cfiCommon1
          CFI (cfiPicker1379) NoFunction
          CFI (cfiPicker1379) Picker
        LCALL     ?Subroutine171 & 0xFFFF
??CrossCallReturnLabel_298:
        MOV       ?V6,R2
        MOV       ?V7,R3
        RET
          CFI EndBlock cfiCond1377
          CFI EndBlock cfiCond1378
          CFI EndBlock cfiPicker1379

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine77:
          CFI Block cfiCond1380 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_130
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1381 Using cfiCommon0
          CFI (cfiCond1381) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1381) Conditional ??CrossCallReturnLabel_131
          CFI (cfiCond1381) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1381) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1381) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1381) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1381) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1381) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1381) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1381) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1381) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1381) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1381) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1381) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1381) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1381) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1381) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1381) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1381) CFA_SP SP+-2
          CFI (cfiCond1381) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1382 Using cfiCommon1
          CFI (cfiPicker1382) NoFunction
          CFI (cfiPicker1382) Picker
        LCALL     ?Subroutine166 & 0xFFFF
??CrossCallReturnLabel_290:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond1380
          CFI EndBlock cfiCond1381
          CFI EndBlock cfiPicker1382

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine36:
          CFI Block cfiCond1383 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_57
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1384 Using cfiCommon0
          CFI (cfiCond1384) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1384) Conditional ??CrossCallReturnLabel_58
          CFI (cfiCond1384) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1384) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1384) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1384) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1384) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1384) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1384) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1384) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1384) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1384) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1384) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1384) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1384) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1384) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1384) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1384) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1384) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1384) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1384) CFA_SP SP+-2
          CFI (cfiCond1384) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1385 Using cfiCommon0
          CFI (cfiCond1385) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1385) Conditional ??CrossCallReturnLabel_59
          CFI (cfiCond1385) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1385) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1385) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1385) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1385) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1385) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1385) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1385) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1385) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1385) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1385) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1385) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1385) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1385) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1385) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1385) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1385) CFA_SP SP+-2
          CFI (cfiCond1385) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1386 Using cfiCommon0
          CFI (cfiCond1386) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1386) Conditional ??CrossCallReturnLabel_60
          CFI (cfiCond1386) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1386) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1386) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1386) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1386) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1386) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1386) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1386) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1386) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1386) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1386) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1386) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1386) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1386) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1386) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1386) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1386) CFA_SP SP+-2
          CFI (cfiCond1386) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1387 Using cfiCommon1
          CFI (cfiPicker1387) NoFunction
          CFI (cfiPicker1387) Picker
        MOV       A,R2
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R3
        MOVX      @DPTR,A
        MOV       A,R2
        RET
          CFI EndBlock cfiCond1383
          CFI EndBlock cfiCond1384
          CFI EndBlock cfiCond1385
          CFI EndBlock cfiCond1386
          CFI EndBlock cfiPicker1387
// 3595 
// 3596 /*********************************************************************
// 3597  * @fn          ZDO_ParseDeviceAnnce
// 3598  *
// 3599  * @brief       Parse a Device Announce message.
// 3600  *
// 3601  * @param       inMsg - Incoming message
// 3602  * @param       pAnnce - place to put the parsed information
// 3603  *
// 3604  * @return      none
// 3605  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3606 void ZDO_ParseDeviceAnnce( zdoIncomingMsg_t *inMsg, ZDO_DeviceAnnce_t *pAnnce )
ZDO_ParseDeviceAnnce:
          CFI Block cfiBlock1388 Using cfiCommon0
          CFI Function ZDO_ParseDeviceAnnce
        CODE
// 3607 {
        FUNCALL ZDO_ParseDeviceAnnce, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV       ?V0,R4
        MOV       ?V1,R5
// 3608   uint8 *msg;
// 3609 
// 3610   // Parse incoming message
// 3611   msg = inMsg->asdu;
        LCALL     ?Subroutine110 & 0xFFFF
??CrossCallReturnLabel_332:
        MOV       R7,A
// 3612   pAnnce->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
        MOV       DPL,R0
        MOV       DPH,A
        LCALL     ?Subroutine91 & 0xFFFF
??CrossCallReturnLabel_155:
        LCALL     ??Subroutine246_0 & 0xFFFF
// 3613   msg += 2;
??CrossCallReturnLabel_620:
        MOV       A,R0
        ADD       A,#0x2
        MOV       R6,A
        JNC       ??ZDO_ParseDeviceAnnce_0
        INC       R7
// 3614   osal_cpyExtAddr( pAnnce->extAddr, msg );
??ZDO_ParseDeviceAnnce_0:
        ; Setup parameters for call to function sAddrExtCpy
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        MOV       A,?V0
        LCALL     ?Subroutine130 & 0xFFFF
??CrossCallReturnLabel_241:
        ADDC      A,?V1
        MOV       R3,A
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 3615   msg += Z_EXTADDR_LEN;
// 3616   pAnnce->capabilities = *msg;
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine64 & 0xFFFF
// 3617 }
??CrossCallReturnLabel_105:
        LJMP      ??Subroutine189_0 & 0xFFFF
          CFI EndBlock cfiBlock1388

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine91:
          CFI Block cfiCond1389 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_154
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1390 Using cfiCommon0
          CFI (cfiCond1390) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1390) Conditional ??CrossCallReturnLabel_155
          CFI (cfiCond1390) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1390) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1390) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1390) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1390) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1390) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1390) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1390) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1390) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1390) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1390) CFA_SP SP+-2
          CFI (cfiCond1390) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1391 Using cfiCommon1
          CFI (cfiPicker1391) NoFunction
          CFI (cfiPicker1391) Picker
        LCALL     ?Subroutine166 & 0xFFFF
??CrossCallReturnLabel_291:
        RET
          CFI EndBlock cfiCond1389
          CFI EndBlock cfiCond1390
          CFI EndBlock cfiPicker1391

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine166:
          CFI Block cfiCond1392 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_290, ??CrossCallReturnLabel_130
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1393 Using cfiCommon0
          CFI (cfiCond1393) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1393) Conditional ??CrossCallReturnLabel_290, ??CrossCallReturnLabel_131
          CFI (cfiCond1393) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1393) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1393) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1393) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1393) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1393) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1393) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1393) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1393) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1393) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1393) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1393) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1393) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1393) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1393) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1393) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1393) CFA_SP SP+-4
          CFI (cfiCond1393) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1394 Using cfiCommon0
          CFI (cfiCond1394) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1394) Conditional ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_154
          CFI (cfiCond1394) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1394) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1394) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1394) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1394) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1394) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1394) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1394) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1394) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1394) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1394) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1394) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1394) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1394) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1394) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1394) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1394) CFA_SP SP+-4
          CFI (cfiCond1394) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1395 Using cfiCommon0
          CFI (cfiCond1395) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1395) Conditional ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_155
          CFI (cfiCond1395) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1395) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1395) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1395) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1395) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1395) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1395) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1395) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1395) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1395) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1395) CFA_SP SP+-4
          CFI (cfiCond1395) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1396 Using cfiCommon1
          CFI (cfiPicker1396) NoFunction
          CFI (cfiPicker1396) Picker
        LCALL     ?Subroutine179 & 0xFFFF
??CrossCallReturnLabel_305:
        MOV       DPL,R4
        MOV       DPH,R5
        RET
          CFI EndBlock cfiCond1392
          CFI EndBlock cfiCond1393
          CFI EndBlock cfiCond1394
          CFI EndBlock cfiCond1395
          CFI EndBlock cfiPicker1396

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine179:
          CFI Block cfiCond1397 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_303, ??CrossCallReturnLabel_98
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1398 Using cfiCommon0
          CFI (cfiCond1398) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1398) Conditional ??CrossCallReturnLabel_303, ??CrossCallReturnLabel_99
          CFI (cfiCond1398) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1398) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1398) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1398) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1398) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1398) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1398) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1398) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1398) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1398) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1398) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1398) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1398) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1398) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1398) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1398) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1398) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1398) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1398) CFA_SP SP+-4
          CFI (cfiCond1398) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1399 Using cfiCommon0
          CFI (cfiCond1399) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1399) Conditional ??CrossCallReturnLabel_305, ??CrossCallReturnLabel_290, ??CrossCallReturnLabel_130
          CFI (cfiCond1399) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1399) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1399) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1399) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1399) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1399) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1399) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1399) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1399) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1399) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1399) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1399) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1399) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1399) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1399) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1399) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1399) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1399) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1399) CFA_SP SP+-6
          CFI (cfiCond1399) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1400 Using cfiCommon0
          CFI (cfiCond1400) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1400) Conditional ??CrossCallReturnLabel_305, ??CrossCallReturnLabel_290, ??CrossCallReturnLabel_131
          CFI (cfiCond1400) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1400) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1400) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1400) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1400) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1400) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1400) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1400) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1400) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1400) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1400) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1400) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1400) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1400) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1400) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1400) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1400) CFA_SP SP+-6
          CFI (cfiCond1400) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1401 Using cfiCommon0
          CFI (cfiCond1401) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1401) Conditional ??CrossCallReturnLabel_305, ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_154
          CFI (cfiCond1401) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1401) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1401) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1401) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1401) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1401) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1401) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1401) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1401) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1401) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1401) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1401) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1401) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1401) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1401) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1401) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1401) CFA_SP SP+-6
          CFI (cfiCond1401) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1402 Using cfiCommon0
          CFI (cfiCond1402) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1402) Conditional ??CrossCallReturnLabel_305, ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_155
          CFI (cfiCond1402) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1402) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1402) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1402) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1402) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1402) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1402) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1402) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1402) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1402) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1402) CFA_SP SP+-6
          CFI (cfiCond1402) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1403 Using cfiCommon0
          CFI (cfiCond1403) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1403) Conditional ??CrossCallReturnLabel_304, ??CrossCallReturnLabel_102
          CFI (cfiCond1403) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1403) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1403) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1403) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1403) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1403) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1403) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1403) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1403) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1403) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1403) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1403) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1403) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1403) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1403) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1403) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1403) CFA_SP SP+-4
          CFI (cfiCond1403) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1404 Using cfiCommon0
          CFI (cfiCond1404) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1404) Conditional ??CrossCallReturnLabel_304, ??CrossCallReturnLabel_103
          CFI (cfiCond1404) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1404) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1404) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1404) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1404) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1404) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1404) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1404) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1404) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1404) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1404) CFA_SP SP+-4
          CFI (cfiCond1404) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1405 Using cfiCommon1
          CFI (cfiPicker1405) NoFunction
          CFI (cfiPicker1405) Picker
        MOVX      A,@DPTR
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       A,R2
        RET
          CFI EndBlock cfiCond1397
          CFI EndBlock cfiCond1398
          CFI EndBlock cfiCond1399
          CFI EndBlock cfiCond1400
          CFI EndBlock cfiCond1401
          CFI EndBlock cfiCond1402
          CFI EndBlock cfiCond1403
          CFI EndBlock cfiCond1404
          CFI EndBlock cfiPicker1405

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine64:
          CFI Block cfiCond1406 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_104
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1407 Using cfiCommon0
          CFI (cfiCond1407) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1407) Conditional ??CrossCallReturnLabel_105
          CFI (cfiCond1407) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1407) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1407) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1407) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1407) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1407) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1407) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1407) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1407) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1407) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1407) CFA_SP SP+-2
          CFI (cfiCond1407) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1408 Using cfiCommon1
          CFI (cfiPicker1408) NoFunction
          CFI (cfiPicker1408) Picker
        LCALL     ?Subroutine163 & 0xFFFF
??CrossCallReturnLabel_288:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond1406
          CFI EndBlock cfiCond1407
          CFI EndBlock cfiPicker1408

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine39:
          CFI Block cfiCond1409 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_630
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond1410 Using cfiCommon0
          CFI (cfiCond1410) Function ZDO_ProcessParentAnnce
          CFI (cfiCond1410) Conditional ??CrossCallReturnLabel_631
          CFI (cfiCond1410) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1410) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1410) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1410) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1410) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1410) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1410) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1410) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1410) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1410) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1410) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1410) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1410) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1410) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1410) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1410) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1410) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1410) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1410) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1410) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1410) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1410) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1410) CFA_SP SP+-2
          CFI (cfiCond1410) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiPicker1411 Using cfiCommon1
          CFI (cfiPicker1411) NoFunction
          CFI (cfiPicker1411) Picker
        MOV       R1,A
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
          CFI EndBlock cfiCond1409
          CFI EndBlock cfiCond1410
          CFI EndBlock cfiPicker1411
        REQUIRE ??Subroutine245_0
        ; // Fall through to label ??Subroutine245_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine245_0:
          CFI Block cfiCond1412 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_621
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond1413 Using cfiCommon0
          CFI (cfiCond1413) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1413) Conditional ??CrossCallReturnLabel_622
          CFI (cfiCond1413) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1413) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1413) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1413) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1413) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1413) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1413) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1413) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1413) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1413) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1413) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1413) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1413) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1413) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1413) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1413) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1413) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1413) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1413) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1413) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1413) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1413) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1413) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1413) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1413) CFA_SP SP+-2
          CFI (cfiCond1413) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond1414 Using cfiCommon0
          CFI (cfiCond1414) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1414) Conditional ??CrossCallReturnLabel_623
          CFI (cfiCond1414) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1414) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1414) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1414) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1414) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1414) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1414) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1414) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1414) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1414) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1414) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1414) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1414) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1414) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1414) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1414) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1414) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1414) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1414) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1414) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1414) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1414) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1414) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1414) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1414) CFA_SP SP+-2
          CFI (cfiCond1414) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond1415 Using cfiCommon0
          CFI (cfiCond1415) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond1415) Conditional ??CrossCallReturnLabel_624
          CFI (cfiCond1415) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1415) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1415) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1415) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1415) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1415) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1415) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1415) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1415) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1415) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1415) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1415) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1415) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1415) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1415) CFA_SP SP+-2
          CFI (cfiCond1415) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1416 Using cfiCommon0
          CFI (cfiCond1416) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond1416) Conditional ??CrossCallReturnLabel_625
          CFI (cfiCond1416) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1416) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1416) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1416) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1416) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1416) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1416) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1416) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1416) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1416) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1416) CFA_SP SP+-2
          CFI (cfiCond1416) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond1417 Using cfiCommon0
          CFI (cfiCond1417) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond1417) Conditional ??CrossCallReturnLabel_626
          CFI (cfiCond1417) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1417) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1417) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1417) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1417) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1417) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1417) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1417) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1417) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1417) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1417) CFA_SP SP+-2
          CFI (cfiCond1417) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond1418 Using cfiCommon0
          CFI (cfiCond1418) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond1418) Conditional ??CrossCallReturnLabel_627
          CFI (cfiCond1418) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1418) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1418) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1418) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1418) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1418) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1418) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1418) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1418) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1418) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1418) CFA_SP SP+-2
          CFI (cfiCond1418) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond1419 Using cfiCommon0
          CFI (cfiCond1419) Function ZDMatchSendState
          CFI (cfiCond1419) Conditional ??CrossCallReturnLabel_628
          CFI (cfiCond1419) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1419) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1419) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1419) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1419) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1419) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1419) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1419) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1419) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1419) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1419) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1419) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1419) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1419) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1419) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1419) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1419) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1419) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1419) CFA_SP SP+-2
          CFI (cfiCond1419) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1420 Using cfiCommon0
          CFI (cfiCond1420) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1420) Conditional ??CrossCallReturnLabel_629
          CFI (cfiCond1420) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1420) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1420) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1420) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1420) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1420) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1420) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1420) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1420) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1420) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1420) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1420) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1420) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1420) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1420) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1420) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1420) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1420) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1420) CFA_SP SP+-2
          CFI (cfiCond1420) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1421 Using cfiCommon0
          CFI (cfiCond1421) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1421) Conditional ??CrossCallReturnLabel_630
          CFI (cfiCond1421) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1421) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1421) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1421) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1421) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1421) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1421) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1421) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1421) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1421) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1421) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1421) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1421) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1421) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1421) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1421) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1421) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1421) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1421) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1421) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1421) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1421) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1421) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1421) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1421) CFA_SP SP+-2
          CFI (cfiCond1421) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond1422 Using cfiCommon0
          CFI (cfiCond1422) Function ZDO_ProcessParentAnnce
          CFI (cfiCond1422) Conditional ??CrossCallReturnLabel_631
          CFI (cfiCond1422) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1422) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1422) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1422) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1422) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1422) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1422) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1422) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1422) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1422) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1422) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1422) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1422) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1422) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1422) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1422) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1422) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1422) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1422) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1422) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1422) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1422) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1422) CFA_SP SP+-2
          CFI (cfiCond1422) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiPicker1423 Using cfiCommon1
          CFI (cfiPicker1423) NoFunction
          CFI (cfiPicker1423) Picker
        MOV       A,R0
          CFI EndBlock cfiCond1412
          CFI EndBlock cfiCond1413
          CFI EndBlock cfiCond1414
          CFI EndBlock cfiCond1415
          CFI EndBlock cfiCond1416
          CFI EndBlock cfiCond1417
          CFI EndBlock cfiCond1418
          CFI EndBlock cfiCond1419
          CFI EndBlock cfiCond1420
          CFI EndBlock cfiCond1421
          CFI EndBlock cfiCond1422
          CFI EndBlock cfiPicker1423
        REQUIRE ??Subroutine246_0
        ; // Fall through to label ??Subroutine246_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine246_0:
          CFI Block cfiCond1424 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_613
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1425 Using cfiCommon0
          CFI (cfiCond1425) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond1425) Conditional ??CrossCallReturnLabel_614
          CFI (cfiCond1425) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1425) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1425) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1425) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1425) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1425) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1425) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1425) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1425) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1425) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1425) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1425) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1425) CFA_SP SP+-2
          CFI (cfiCond1425) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1426 Using cfiCommon0
          CFI (cfiCond1426) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond1426) Conditional ??CrossCallReturnLabel_615
          CFI (cfiCond1426) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1426) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1426) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1426) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1426) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1426) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1426) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1426) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1426) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1426) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1426) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1426) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1426) CFA_SP SP+-2
          CFI (cfiCond1426) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1427 Using cfiCommon0
          CFI (cfiCond1427) Function ZDO_ParseEPListRsp
          CFI (cfiCond1427) Conditional ??CrossCallReturnLabel_616
          CFI (cfiCond1427) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1427) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1427) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1427) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1427) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1427) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1427) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1427) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1427) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1427) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1427) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1427) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1427) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1427) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1427) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1427) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1427) CFA_SP SP+-2
          CFI (cfiCond1427) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1428 Using cfiCommon0
          CFI (cfiCond1428) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond1428) Conditional ??CrossCallReturnLabel_617
          CFI (cfiCond1428) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1428) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1428) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1428) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1428) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1428) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1428) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1428) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1428) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1428) CFA_SP SP+-2
          CFI (cfiCond1428) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1429 Using cfiCommon0
          CFI (cfiCond1429) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1429) Conditional ??CrossCallReturnLabel_618
          CFI (cfiCond1429) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1429) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1429) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1429) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1429) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1429) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1429) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1429) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1429) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1429) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1429) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1429) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1429) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1429) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1429) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1429) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1429) CFA_SP SP+-2
          CFI (cfiCond1429) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1430 Using cfiCommon0
          CFI (cfiCond1430) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1430) Conditional ??CrossCallReturnLabel_619
          CFI (cfiCond1430) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1430) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1430) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1430) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1430) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1430) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1430) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1430) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1430) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1430) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1430) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1430) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1430) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1430) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1430) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1430) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1430) CFA_SP SP+-2
          CFI (cfiCond1430) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1431 Using cfiCommon0
          CFI (cfiCond1431) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1431) Conditional ??CrossCallReturnLabel_620
          CFI (cfiCond1431) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1431) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1431) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1431) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1431) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1431) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1431) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1431) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1431) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1431) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1431) CFA_SP SP+-2
          CFI (cfiCond1431) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1432 Using cfiCommon0
          CFI (cfiCond1432) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1432) Conditional ??CrossCallReturnLabel_621
          CFI (cfiCond1432) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1432) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1432) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1432) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1432) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1432) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1432) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1432) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1432) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1432) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1432) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1432) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1432) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1432) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1432) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1432) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1432) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1432) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1432) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1432) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1432) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1432) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1432) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1432) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1432) CFA_SP SP+-2
          CFI (cfiCond1432) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond1433 Using cfiCommon0
          CFI (cfiCond1433) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1433) Conditional ??CrossCallReturnLabel_622
          CFI (cfiCond1433) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1433) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1433) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1433) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1433) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1433) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1433) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1433) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1433) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1433) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1433) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1433) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1433) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1433) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1433) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1433) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1433) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1433) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1433) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1433) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1433) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1433) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1433) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1433) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1433) CFA_SP SP+-2
          CFI (cfiCond1433) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond1434 Using cfiCommon0
          CFI (cfiCond1434) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1434) Conditional ??CrossCallReturnLabel_623
          CFI (cfiCond1434) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1434) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1434) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1434) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1434) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1434) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1434) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1434) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1434) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1434) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1434) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1434) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1434) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1434) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1434) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1434) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1434) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1434) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1434) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1434) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1434) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1434) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1434) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1434) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1434) CFA_SP SP+-2
          CFI (cfiCond1434) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond1435 Using cfiCommon0
          CFI (cfiCond1435) Function ZDO_FinishProcessingMgmtNwkDiscReq
          CFI (cfiCond1435) Conditional ??CrossCallReturnLabel_624
          CFI (cfiCond1435) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1435) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1435) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1435) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1435) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1435) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1435) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1435) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1435) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1435) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1435) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1435) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1435) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1435) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1435) CFA_SP SP+-2
          CFI (cfiCond1435) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1436 Using cfiCommon0
          CFI (cfiCond1436) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond1436) Conditional ??CrossCallReturnLabel_625
          CFI (cfiCond1436) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1436) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1436) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1436) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1436) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1436) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1436) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1436) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1436) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1436) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1436) CFA_SP SP+-2
          CFI (cfiCond1436) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond1437 Using cfiCommon0
          CFI (cfiCond1437) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond1437) Conditional ??CrossCallReturnLabel_626
          CFI (cfiCond1437) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1437) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1437) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1437) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1437) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1437) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1437) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1437) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1437) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1437) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1437) CFA_SP SP+-2
          CFI (cfiCond1437) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond1438 Using cfiCommon0
          CFI (cfiCond1438) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond1438) Conditional ??CrossCallReturnLabel_627
          CFI (cfiCond1438) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1438) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1438) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1438) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1438) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1438) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1438) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1438) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1438) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1438) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1438) CFA_SP SP+-2
          CFI (cfiCond1438) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond1439 Using cfiCommon0
          CFI (cfiCond1439) Function ZDMatchSendState
          CFI (cfiCond1439) Conditional ??CrossCallReturnLabel_628
          CFI (cfiCond1439) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1439) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1439) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1439) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1439) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1439) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1439) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1439) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1439) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1439) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1439) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1439) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1439) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1439) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1439) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1439) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1439) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1439) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1439) CFA_SP SP+-2
          CFI (cfiCond1439) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1440 Using cfiCommon0
          CFI (cfiCond1440) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1440) Conditional ??CrossCallReturnLabel_629
          CFI (cfiCond1440) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1440) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1440) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1440) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1440) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1440) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1440) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1440) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1440) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1440) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1440) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1440) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1440) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1440) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1440) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1440) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1440) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1440) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1440) CFA_SP SP+-2
          CFI (cfiCond1440) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1441 Using cfiCommon0
          CFI (cfiCond1441) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1441) Conditional ??CrossCallReturnLabel_630
          CFI (cfiCond1441) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1441) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1441) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1441) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1441) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1441) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1441) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1441) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1441) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1441) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1441) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1441) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1441) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1441) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1441) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1441) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1441) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1441) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1441) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1441) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1441) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1441) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1441) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1441) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1441) CFA_SP SP+-2
          CFI (cfiCond1441) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond1442 Using cfiCommon0
          CFI (cfiCond1442) Function ZDO_ProcessParentAnnce
          CFI (cfiCond1442) Conditional ??CrossCallReturnLabel_631
          CFI (cfiCond1442) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1442) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1442) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1442) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1442) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1442) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1442) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1442) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1442) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1442) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1442) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1442) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1442) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1442) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1442) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1442) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1442) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1442) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1442) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1442) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1442) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1442) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1442) CFA_SP SP+-2
          CFI (cfiCond1442) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiPicker1443 Using cfiCommon1
          CFI (cfiPicker1443) NoFunction
          CFI (cfiPicker1443) Picker
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond1424
          CFI EndBlock cfiCond1425
          CFI EndBlock cfiCond1426
          CFI EndBlock cfiCond1427
          CFI EndBlock cfiCond1428
          CFI EndBlock cfiCond1429
          CFI EndBlock cfiCond1430
          CFI EndBlock cfiCond1431
          CFI EndBlock cfiCond1432
          CFI EndBlock cfiCond1433
          CFI EndBlock cfiCond1434
          CFI EndBlock cfiCond1435
          CFI EndBlock cfiCond1436
          CFI EndBlock cfiCond1437
          CFI EndBlock cfiCond1438
          CFI EndBlock cfiCond1439
          CFI EndBlock cfiCond1440
          CFI EndBlock cfiCond1441
          CFI EndBlock cfiCond1442
          CFI EndBlock cfiPicker1443
// 3618 
// 3619 /*********************************************************************
// 3620  * @fn          ZDO_ParseParentAnnce
// 3621  *
// 3622  * @brief       Parse Parent Announce and Parent Announce Rsp messages,
// 3623  *              both messages have the same payload.
// 3624  *
// 3625  * @param       inMsg - Incoming message
// 3626  *
// 3627  * @return      a pointer to parsed response structure (NULL if not allocated).
// 3628  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 3629  *          by the calling function [osal_mem_free()].
// 3630  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3631 ZDO_ParentAnnce_t *ZDO_ParseParentAnnce( zdoIncomingMsg_t *inMsg )
ZDO_ParseParentAnnce:
          CFI Block cfiBlock1444 Using cfiCommon0
          CFI Function ZDO_ParseParentAnnce
        CODE
// 3632 {
        FUNCALL ZDO_ParseParentAnnce, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseParentAnnce, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV       A,#-0xe
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
// 3633   ZDO_ParentAnnce_t *pRcvdMsg;
// 3634   uint8 *msg;
// 3635   uint8 numChildren;
// 3636 
// 3637   msg = inMsg->asdu;
        MOV       A,R2
        LCALL     ?Subroutine107 & 0xFFFF
// 3638   if ( inMsg->clusterID == Parent_annce_rsp)
??CrossCallReturnLabel_339:
        MOV       A,R2
        ADD       A,#0xc
        MOV       DPL,A
        CLR       A
        ADDC      A,R3
        MOV       DPH,A
        MOVX      A,@DPTR
        XRL       A,#0x1f
        JNZ       ??ZDO_ParseParentAnnce_0
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,#0x80
??ZDO_ParseParentAnnce_0:
        JNZ       ??ZDO_ParseParentAnnce_1
// 3639   {
// 3640     *msg++;
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        MOV       R6,DPL
        MOV       R7,DPH
// 3641   }
// 3642   numChildren = *msg++;
??ZDO_ParseParentAnnce_1:
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        MOV       ?V5,A
        INC       DPTR
        MOV       R6,DPL
        MOV       R7,DPH
// 3643 
// 3644   // Allocate a buffer big enough to handle the list
// 3645   pRcvdMsg = (ZDO_ParentAnnce_t *)osal_mem_alloc(
// 3646              (sizeof(ZDO_ParentAnnce_t) + (numChildren * sizeof(ZDO_ChildInfo_t))));
        ; Setup parameters for call to function osal_mem_alloc
        MOV       ?V0,A
        MOV       ?V1,#0x0
        MOV       A,#0x3
        MOV       R0,#?V0
        LCALL     ?S_SHL
        MOV       A,?V0
        ADD       A,#0x1
        MOV       R2,A
        CLR       A
        ADDC      A,?V1
        LCALL     ?Subroutine134 & 0xFFFF
// 3647 
// 3648   if ( pRcvdMsg )
??CrossCallReturnLabel_592:
        JZ        ??ZDO_ParseParentAnnce_2
// 3649   {
// 3650     uint8 x;
// 3651     ZDO_ChildInfo_t *pList = pRcvdMsg->childInfo;
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        MOV       ?V0,DPL
        MOV       ?V1,DPH
// 3652 
// 3653     pRcvdMsg->numOfChildren = numChildren;
        MOV       DPL,R2
        MOV       DPH,R3
        MOV       A,?V5
        MOVX      @DPTR,A
// 3654 
// 3655     for ( x = 0; x < numChildren; x++ )
        MOV       ?V4,#0x0
        SJMP      ??ZDO_ParseParentAnnce_3
// 3656     {
// 3657       osal_cpyExtAddr( pList->extAddr, msg );
??ZDO_ParseParentAnnce_4:
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        MOV       R2,?V0
        MOV       R3,?V1
        LCALL     ??Subroutine230_0 & 0xFFFF
// 3658       msg += Z_EXTADDR_LEN;
??CrossCallReturnLabel_537:
        JNC       ??ZDO_ParseParentAnnce_5
        INC       R7
// 3659 
// 3660       pList++;
??ZDO_ParseParentAnnce_5:
        MOV       A,?V0
        ADD       A,#0x8
        MOV       ?V0,A
        JNC       ??ZDO_ParseParentAnnce_6
        INC       ?V1
// 3661     }
??ZDO_ParseParentAnnce_6:
        INC       ?V4
??ZDO_ParseParentAnnce_3:
        MOV       A,?V4
        CLR       C
        SUBB      A,?V5
        JC        ??ZDO_ParseParentAnnce_4
// 3662   }
// 3663 
// 3664   return ( pRcvdMsg );
??ZDO_ParseParentAnnce_2:
        MOV       R2,?V2
        MOV       R3,?V3
        LJMP      ??Subroutine214_0 & 0xFFFF
// 3665 }
          CFI EndBlock cfiBlock1444
// 3666 
// 3667 /*********************************************************************
// 3668  * @fn          ZDO_ParseMgmtNwkUpdateNotify
// 3669  *
// 3670  * @brief       This function handles parsing of the incoming Management
// 3671  *              Network Update notify.
// 3672  *
// 3673  * @param       inMsg - incoming message (request)
// 3674  *
// 3675  * @return      a pointer to parsed response structure (NULL if not allocated).
// 3676  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 3677  *          by the calling function [osal_mem_free()].
// 3678  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3679 ZDO_MgmtNwkUpdateNotify_t *ZDO_ParseMgmtNwkUpdateNotify( zdoIncomingMsg_t *inMsg )
ZDO_ParseMgmtNwkUpdateNotify:
          CFI Block cfiBlock1445 Using cfiCommon0
          CFI Function ZDO_ParseMgmtNwkUpdateNotify
        CODE
// 3680 {
        FUNCALL ZDO_ParseMgmtNwkUpdateNotify, osal_build_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtNwkUpdateNotify, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtNwkUpdateNotify, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        REQUIRE ?V14
        REQUIRE ?V15
        MOV       A,#-0x18
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 0
// 3681   uint8 status;
// 3682   uint32 scannedChannels = 0;
        MOV       ?V4,#0x0
        MOV       ?V5,#0x0
        MOV       ?V6,#0x0
        MOV       ?V7,#0x0
// 3683   uint16 totalTransmissions = 0;
        MOV       ?V0,#0x0
        MOV       ?V1,#0x0
// 3684   uint16 transmissionFailures = 0;
        MOV       ?V2,#0x0
        MOV       ?V3,#0x0
// 3685   uint8 listCount = 0;
        MOV       ?V10,#0x0
// 3686   uint8 *msg = inMsg->asdu;
        LCALL     ?Subroutine120 & 0xFFFF
??CrossCallReturnLabel_211:
        MOVX      A,@DPTR
        MOV       ?V8,A
        INC       DPTR
        MOVX      A,@DPTR
// 3687   ZDO_MgmtNwkUpdateNotify_t *pRsp;
// 3688 
// 3689   status = *msg++;
        MOV       DPL,?V8
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       ?V11,A
        INC       DPTR
        MOV       ?V8,DPL
        MOV       ?V9,DPH
// 3690   if ( status == ZSuccess )
        JNZ       ??ZDO_ParseMgmtNwkUpdateNotify_0
// 3691   {
// 3692     scannedChannels = osal_build_uint32( msg, 4 );
        ; Setup parameters for call to function osal_build_uint32
        MOV       R1,#0x4
        MOV       R2,?V8
        MOV       R3,?V9
        LCALL     `??osal_build_uint32::?relay`; Banked call to: osal_build_uint32
        MOV       ?V4,R2
        MOV       ?V5,R3
        MOV       ?V6,R4
        MOV       ?V7,R5
// 3693     msg += 4;
        MOV       A,?V8
        ADD       A,#0x4
        MOV       ?V8,A
        JNC       ??ZDO_ParseMgmtNwkUpdateNotify_1
        INC       ?V9
// 3694     totalTransmissions = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseMgmtNwkUpdateNotify_1:
        MOV       DPL,A
        MOV       DPH,?V9
        LCALL     ?Subroutine97 & 0xFFFF
??CrossCallReturnLabel_560:
        ADD       A,R0
        MOV       ?V0,A
        CLR       A
        ADDC      A,R1
        MOV       ?V1,A
// 3695     msg += 2;
        MOV       A,?V8
        ADD       A,#0x2
        MOV       ?V8,A
        JNC       ??ZDO_ParseMgmtNwkUpdateNotify_2
        INC       ?V9
// 3696     transmissionFailures = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseMgmtNwkUpdateNotify_2:
        MOV       DPL,A
        MOV       DPH,?V9
        LCALL     ??Subroutine192_0 & 0xFFFF
// 3697     msg += 2;
// 3698     listCount = *msg++;
??CrossCallReturnLabel_333:
        MOV       DPL,?V8
        MOV       DPH,?V9
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V10,A
        MOV       A,?V8
        ADD       A,#0x3
        MOV       ?V8,A
        JNC       ??ZDO_ParseMgmtNwkUpdateNotify_0
        INC       ?V9
// 3699   }
// 3700 
// 3701   pRsp = (ZDO_MgmtNwkUpdateNotify_t *)osal_mem_alloc( sizeof ( ZDO_MgmtNwkUpdateNotify_t ) + listCount );
??ZDO_ParseMgmtNwkUpdateNotify_0:
        MOV       R6,?V10
        ; Setup parameters for call to function osal_mem_alloc
        MOV       A,R6
        ADD       A,#0xa
        LCALL     ??Subroutine233_0 & 0xFFFF
??CrossCallReturnLabel_557:
        MOV       ?V14,R2
        MOV       ?V15,R3
// 3702 
// 3703   if ( pRsp )
        MOV       A,R2
        ORL       A,R3
        JZ        ??ZDO_ParseMgmtNwkUpdateNotify_3
// 3704   {
// 3705     pRsp->status = status;
        MOV       DPL,R2
        MOV       DPH,R3
        MOV       A,?V11
        MOVX      @DPTR,A
// 3706     pRsp->scannedChannels = scannedChannels;
        INC       DPTR
        MOV       R0,#?V4
        LCALL     ?L_MOV_TO_X
// 3707     pRsp->totalTransmissions = totalTransmissions;
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOV       A,?V0
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V1
        LCALL     ?Subroutine15 & 0xFFFF
// 3708     pRsp->transmissionFailures = transmissionFailures;
??CrossCallReturnLabel_15:
        INC       DPTR
        MOV       A,?V3
        LCALL     ?Subroutine40 & 0xFFFF
// 3709     pRsp->listCount = listCount;
??CrossCallReturnLabel_63:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOV       A,R6
        MOVX      @DPTR,A
// 3710 
// 3711     // Allocate a buffer big enough to handle the list.
// 3712     if ( listCount > 0 )
        JZ        ??ZDO_ParseMgmtNwkUpdateNotify_3
// 3713     {
// 3714       osal_memcpy( pRsp->energyValues, msg, listCount );
        ; Setup parameters for call to function osal_memcpy
        MOV       ?V10,#0x0
        MOV       R0,#?V8
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 27)
        MOV       A,R6
        MOV       R4,A
        MOV       R5,#0x0
        MOV       A,R2
        ADD       A,#0xa
        MOV       R2,A
        CLR       A
        ADDC      A,?V15
        MOV       R3,A
        LCALL     ??Subroutine242_0 & 0xFFFF
// 3715     }
// 3716   }
??CrossCallReturnLabel_604:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
// 3717 
// 3718   return ( pRsp );
??ZDO_ParseMgmtNwkUpdateNotify_3:
        MOV       R2,?V14
        MOV       R3,?V15
        LJMP      ??Subroutine193_0 & 0xFFFF
// 3719 }
          CFI EndBlock cfiBlock1445

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine120:
          CFI Block cfiCond1446 Using cfiCommon0
          CFI Function ZDO_ParsePowerDescRsp
          CFI Conditional ??CrossCallReturnLabel_210
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1447 Using cfiCommon0
          CFI (cfiCond1447) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1447) Conditional ??CrossCallReturnLabel_211
          CFI (cfiCond1447) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1447) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1447) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1447) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1447) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1447) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1447) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1447) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1447) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1447) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1447) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1447) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1447) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1447) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1447) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1447) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1447) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1447) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1447) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1447) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1447) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1447) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1447) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1447) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1447) CFA_SP SP+-2
          CFI (cfiCond1447) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker1448 Using cfiCommon1
          CFI (cfiPicker1448) NoFunction
          CFI (cfiPicker1448) Picker
        LCALL     ?Subroutine173 & 0xFFFF
??CrossCallReturnLabel_300:
        RET
          CFI EndBlock cfiCond1446
          CFI EndBlock cfiCond1447
          CFI EndBlock cfiPicker1448

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine173:
          CFI Block cfiCond1449 Using cfiCommon0
          CFI Function ZDO_ParseEPListRsp
          CFI Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_147
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1450 Using cfiCommon0
          CFI (cfiCond1450) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1450) Conditional ??CrossCallReturnLabel_299, ??CrossCallReturnLabel_148
          CFI (cfiCond1450) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1450) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1450) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1450) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1450) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1450) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1450) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1450) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1450) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1450) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1450) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1450) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1450) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1450) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1450) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1450) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1450) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1450) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1450) CFA_SP SP+-4
          CFI (cfiCond1450) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1451 Using cfiCommon0
          CFI (cfiCond1451) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond1451) Conditional ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_210
          CFI (cfiCond1451) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1451) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1451) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1451) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1451) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1451) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1451) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1451) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1451) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1451) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1451) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1451) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1451) CFA_SP SP+-4
          CFI (cfiCond1451) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1452 Using cfiCommon0
          CFI (cfiCond1452) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1452) Conditional ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_211
          CFI (cfiCond1452) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1452) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1452) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1452) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1452) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1452) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1452) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1452) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1452) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1452) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1452) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1452) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1452) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1452) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1452) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1452) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1452) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1452) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1452) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1452) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1452) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1452) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1452) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1452) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1452) CFA_SP SP+-4
          CFI (cfiCond1452) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker1453 Using cfiCommon1
          CFI (cfiPicker1453) NoFunction
          CFI (cfiPicker1453) Picker
        LCALL     ?Subroutine183 & 0xFFFF
??CrossCallReturnLabel_516:
        ADDC      A,R3
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond1449
          CFI EndBlock cfiCond1450
          CFI EndBlock cfiCond1451
          CFI EndBlock cfiCond1452
          CFI EndBlock cfiPicker1453

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine15:
          CFI Block cfiCond1454 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_14
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond1455 Using cfiCommon0
          CFI (cfiCond1455) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1455) Conditional ??CrossCallReturnLabel_15
          CFI (cfiCond1455) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1455) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1455) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1455) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1455) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1455) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1455) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1455) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1455) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1455) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1455) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1455) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1455) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1455) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1455) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1455) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1455) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1455) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1455) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1455) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1455) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1455) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1455) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1455) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1455) CFA_SP SP+-2
          CFI (cfiCond1455) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker1456 Using cfiCommon1
          CFI (cfiPicker1456) NoFunction
          CFI (cfiPicker1456) Picker
        LCALL     ?Subroutine149 & 0xFFFF
??CrossCallReturnLabel_270:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOV       A,?V2
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond1454
          CFI EndBlock cfiCond1455
          CFI EndBlock cfiPicker1456
// 3720 
// 3721 /*********************************************************************
// 3722  * @fn          ZDO_ParseMgmtNwkUpdateReq
// 3723  *
// 3724  * @brief       This function handles parsing the incoming Management
// 3725  *              Network Update request and starts the request (if needed).
// 3726  *
// 3727  * @param       inMsg - incoming message (request)
// 3728  * @param       pReq - pointer to place to parse message to
// 3729  *
// 3730  * @return      none
// 3731  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3732 void ZDO_ParseMgmtNwkUpdateReq( zdoIncomingMsg_t *inMsg, ZDO_MgmtNwkUpdateReq_t *pReq )
ZDO_ParseMgmtNwkUpdateReq:
          CFI Block cfiBlock1457 Using cfiCommon0
          CFI Function ZDO_ParseMgmtNwkUpdateReq
        CODE
// 3733 {
        FUNCALL ZDO_ParseMgmtNwkUpdateReq, osal_build_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV       ?V0,R4
        MOV       ?V1,R5
// 3734   uint8 *msg = inMsg->asdu;
        LCALL     ?Subroutine121 & 0xFFFF
??CrossCallReturnLabel_214:
        LCALL     ?Subroutine62 & 0xFFFF
// 3735 
// 3736   pReq->channelMask = osal_build_uint32( msg, 4 );
??CrossCallReturnLabel_101:
        MOV       DPL,?V0
        MOV       DPH,?V1
        LCALL     ?XSTORE_R0123
// 3737   msg += 4;
// 3738   pReq->scanDuration = *msg++;
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R2,A
        MOV       A,?V0
        ADD       A,#0x4
        MOV       R0,A
        CLR       A
        ADDC      A,?V1
        MOV       R1,A
        MOV       A,R2
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      @DPTR,A
// 3739 
// 3740   if ( pReq->scanDuration <= 0x05 )
        CLR       C
        SUBB      A,#0x6
        JNC       ??ZDO_ParseMgmtNwkUpdateReq_0
// 3741   {
// 3742     // Request is to scan over channelMask
// 3743     pReq->scanCount = *msg;
        LCALL     ?Subroutine82 & 0xFFFF
// 3744   }
??CrossCallReturnLabel_143:
        SJMP      ??ZDO_ParseMgmtNwkUpdateReq_1
// 3745   else if ( ( pReq->scanDuration == 0xFE ) || ( pReq->scanDuration == 0xFF ) )
??ZDO_ParseMgmtNwkUpdateReq_0:
        MOV       A,#-0x2
        XRL       A,R2
        JZ        ??ZDO_ParseMgmtNwkUpdateReq_2
        MOV       A,#-0x1
        XRL       A,R2
        JNZ       ??ZDO_ParseMgmtNwkUpdateReq_3
// 3746   {
// 3747     // Request is to change Channel (0xFE) or apsChannelMask and NwkManagerAddr (0xFF)
// 3748     pReq->nwkUpdateId = *msg++;
??ZDO_ParseMgmtNwkUpdateReq_2:
        LCALL     ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_144:
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,R6
        ADD       A,#0x6
        MOV       R6,A
        JNC       ??ZDO_ParseMgmtNwkUpdateReq_4
        INC       R7
// 3749 
// 3750     if ( pReq->scanDuration == 0xFF )
??ZDO_ParseMgmtNwkUpdateReq_4:
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      A,@DPTR
        CPL       A
        JNZ       ??ZDO_ParseMgmtNwkUpdateReq_3
// 3751     {
// 3752       pReq->nwkManagerAddr = BUILD_UINT16( msg[0], msg[1] );
        MOV       DPL,R6
        LCALL     ?Subroutine63 & 0xFFFF
// 3753     }
// 3754   }
??CrossCallReturnLabel_103:
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
??ZDO_ParseMgmtNwkUpdateReq_1:
        MOVX      @DPTR,A
// 3755 }
??ZDO_ParseMgmtNwkUpdateReq_3:
        LJMP      ??Subroutine189_0 & 0xFFFF
          CFI EndBlock cfiBlock1457

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine82:
          CFI Block cfiCond1458 Using cfiCommon0
          CFI Function ZDO_ParseMgmtNwkUpdateReq
          CFI Conditional ??CrossCallReturnLabel_143
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1459 Using cfiCommon0
          CFI (cfiCond1459) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1459) Conditional ??CrossCallReturnLabel_144
          CFI (cfiCond1459) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1459) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1459) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1459) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1459) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1459) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1459) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1459) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1459) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1459) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1459) CFA_SP SP+-2
          CFI (cfiCond1459) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1460 Using cfiCommon1
          CFI (cfiPicker1460) NoFunction
          CFI (cfiPicker1460) Picker
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine163 & 0xFFFF
??CrossCallReturnLabel_289:
        RET
          CFI EndBlock cfiCond1458
          CFI EndBlock cfiCond1459
          CFI EndBlock cfiPicker1460

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine163:
          CFI Block cfiCond1461 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_104
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1462 Using cfiCommon0
          CFI (cfiCond1462) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1462) Conditional ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_105
          CFI (cfiCond1462) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1462) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1462) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1462) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1462) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1462) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1462) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1462) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1462) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1462) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1462) CFA_SP SP+-4
          CFI (cfiCond1462) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1463 Using cfiCommon0
          CFI (cfiCond1463) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1463) Conditional ??CrossCallReturnLabel_289, ??CrossCallReturnLabel_143
          CFI (cfiCond1463) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1463) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1463) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1463) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1463) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1463) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1463) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1463) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1463) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1463) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1463) CFA_SP SP+-4
          CFI (cfiCond1463) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1464 Using cfiCommon0
          CFI (cfiCond1464) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1464) Conditional ??CrossCallReturnLabel_289, ??CrossCallReturnLabel_144
          CFI (cfiCond1464) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1464) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1464) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1464) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1464) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1464) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1464) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1464) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1464) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1464) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1464) CFA_SP SP+-4
          CFI (cfiCond1464) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1465 Using cfiCommon1
          CFI (cfiPicker1465) NoFunction
          CFI (cfiPicker1465) Picker
        MOVX      A,@DPTR
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond1461
          CFI EndBlock cfiCond1462
          CFI EndBlock cfiCond1463
          CFI EndBlock cfiCond1464
          CFI EndBlock cfiPicker1465

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine63:
          CFI Block cfiCond1466 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_102
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1467 Using cfiCommon0
          CFI (cfiCond1467) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1467) Conditional ??CrossCallReturnLabel_103
          CFI (cfiCond1467) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1467) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1467) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1467) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1467) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1467) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1467) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1467) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1467) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1467) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1467) CFA_SP SP+-2
          CFI (cfiCond1467) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1468 Using cfiCommon1
          CFI (cfiPicker1468) NoFunction
          CFI (cfiPicker1468) Picker
        MOV       DPH,R7
        LCALL     ?Subroutine179 & 0xFFFF
??CrossCallReturnLabel_304:
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond1466
          CFI EndBlock cfiCond1467
          CFI EndBlock cfiPicker1468

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine62:
          CFI Block cfiCond1469 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_100
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1470 Using cfiCommon0
          CFI (cfiCond1470) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1470) Conditional ??CrossCallReturnLabel_101
          CFI (cfiCond1470) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1470) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1470) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1470) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1470) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1470) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1470) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1470) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1470) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1470) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1470) CFA_SP SP+-2
          CFI (cfiCond1470) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1471 Using cfiCommon1
          CFI (cfiPicker1471) NoFunction
          CFI (cfiPicker1471) Picker
        LCALL     ?Subroutine165 & 0xFFFF
??CrossCallReturnLabel_543:
        MOV       R7,A
        ; Setup parameters for call to function osal_build_uint32
        ; Setup parameters for call to function osal_build_uint32
        MOV       R1,#0x4
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        LCALL     `??osal_build_uint32::?relay`; Banked call to: osal_build_uint32
        MOV       A,R2
        MOV       R0,A
        MOV       A,R3
        MOV       R1,A
        MOV       A,R4
        MOV       R2,A
        MOV       A,R5
        MOV       R3,A
        RET
          CFI EndBlock cfiCond1469
          CFI EndBlock cfiCond1470
          CFI EndBlock cfiPicker1471

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for zdpExternalStateTaskID>`:
        DATA16
        DW -1

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_Init::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_Init

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_StartDevice::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_StartDevice

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zdoSendStateChangeMsg::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zdoSendStateChangeMsg

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_UpdateNwkStatus::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_UpdateNwkStatus

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_CompareClusterLists::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_CompareClusterLists

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_AnyClusterMatches::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_AnyClusterMatches

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessNodeDescRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessNodeDescRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessNodeDescReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessNodeDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessPowerDescReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessPowerDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessSimpleDescReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessSimpleDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessSimpleDescRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessSimpleDescRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessActiveEPReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessActiveEPReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ConvertOTAClusters::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ConvertOTAClusters

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMatchDescReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMatchDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessBindUnbindReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessBindUnbindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_UpdateAddrManager::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_UpdateAddrManager

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessServerDiscReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessServerDiscReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_EndDeviceTimeoutCB::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_EndDeviceTimeoutCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMgmtLqiReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtLqiReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMgmtNwkDiscReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtNwkDiscReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_FinishProcessingMgmtNwkDiscReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_FinishProcessingMgmtNwkDiscReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMgmtRtgReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtRtgReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMgmtBindReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtBindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMgmtDirectJoinReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtDirectJoinReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMgmtLeaveReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtLeaveReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMgmtPermitJoinReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtPermitJoinReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??NLME_PermitJoiningTimeout::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    NLME_PermitJoiningTimeout

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessUserDescReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessUserDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessUserDescSet::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessUserDescSet

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessDeviceAnnce::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessDeviceAnnce

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessParentAnnce::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessParentAnnce

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessParentAnnceRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessParentAnnceRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_BuildSimpleDescBuf::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_BuildSimpleDescBuf

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_MatchEndDeviceBind::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_MatchEndDeviceBind

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_RemoveMatchMemory::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_RemoveMatchMemory

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_CopyMatchInfo::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_CopyMatchInfo

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDMatchSendState::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDMatchSendState

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_EndDeviceBindMatchTimeoutCB::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_EndDeviceBindMatchTimeoutCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseEndDeviceBindReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseEndDeviceBindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseBindUnbindReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseBindUnbindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseAddrRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseAddrRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseNodeDescRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseNodeDescRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParsePowerDescRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParsePowerDescRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseSimpleDescRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseSimpleDescRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseEPListRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseEPListRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseServerDiscRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseServerDiscRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseMgmtLqiRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmtLqiRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseMgmNwkDiscRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmNwkDiscRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseMgmtRtgRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmtRtgRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseMgmtBindRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmtBindRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseUserDescRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseUserDescRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseSimpleDescBuf::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseSimpleDescBuf

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseDeviceAnnce::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseDeviceAnnce

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseParentAnnce::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseParentAnnce

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseMgmtNwkUpdateNotify::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmtNwkUpdateNotify

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseMgmtNwkUpdateReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmtNwkUpdateReq

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "StartDevice ERR">`:
        DB "StartDevice ERR"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "MODE unknown">`:
        DB "MODE unknown"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "End Device Bind">`:
        DB "End Device Bind"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "Success Sent">`:
        DB "Success Sent"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "Timeout">`:
        DB "Timeout"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "\\r\\nNodeDesc:%04X,%02X">`:
        DB "\015\012NodeDesc:%04X,%02X"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "\\r\\nType:%s">`:
        DB "\015\012Type:%s"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "COOR">`:
        DB "COOR"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "ROUTER">`:
        DB "ROUTER"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "ENDDEV">`:
        DB "ENDDEV"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "\\r\\nComplexDesc:%s">`:
        DB "\015\012ComplexDesc:%s"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
`?<Constant "Yes">`:
        DB "Yes"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "No">`:
        DB "No"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "\\r\\nUserDesc:%s">`:
        DB "\015\012UserDesc:%s"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "\\r\\nAPSFlags:%02X">`:
        DB "\015\012APSFlags:%02X"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "\\r\\nFreqBand:%02X">`:
        DB "\015\012FreqBand:%02X"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "\\r\\nMacCap:%02x">`:
        DB "\015\012MacCap:%02x"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "\\r\\nManufCode:%04X">`:
        DB "\015\012ManufCode:%04X"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "\\r\\nMaxBufSize:%02X">`:
        DB "\015\012MaxBufSize:%02X"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "\\r\\nMaxInSize:%04X">`:
        DB "\015\012MaxInSize:%04X"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "\\r\\nSrvMask:%02X">`:
        DB "\015\012SrvMask:%02X"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "\\r\\nMaxOutSize:%04X">`:
        DB "\015\012MaxOutSize:%04X"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "\\r\\nDescCap:%02X">`:
        DB "\015\012DescCap:%02X"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "\\r\\n">`:
        DB "\015\012"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "Match Desc Req">`:
        DB "Match Desc Req"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "Rsp Sent">`:
        DB "Rsp Sent"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "Rsp Non Matched">`:
        DB "Rsp Non Matched"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "Non Matched">`:
        DB "Non Matched"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_3e8:
        DD 1000

        END
// 3756 
// 3757 /*********************************************************************
// 3758 *********************************************************************/
// 
// 13 746 bytes in segment BANKED_CODE
//    336 bytes in segment BANK_RELAYS
//      2 bytes in segment XDATA_I
//      2 bytes in segment XDATA_ID
//    359 bytes in segment XDATA_ROM_C
//     60 bytes in segment XDATA_Z
// 
//    338 bytes of CODE     memory
//    355 bytes of CONST    memory (+ 4 bytes shared)
// 13 746 bytes of HUGECODE memory
//     62 bytes of XDATA    memory
//
//Errors: none
//Warnings: none
