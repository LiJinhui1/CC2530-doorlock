///////////////////////////////////////////////////////////////////////////////
//
// IAR C/C++ Compiler V10.30.1.6000 for 8051              23/Nov/2021  10:55:07
// Copyright 2004-2018 IAR Systems AB.
// PC-locked license - IAR Embedded Workbench for 8051
//
//    Core               =  plain
//    Code model         =  banked
//    Data model         =  large
//    Calling convention =  xdata reentrant
//    Constant location  =  data_rom
//    Dptr setup         =  1,16
//                          
//    Source file        =  
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Components\stack\zdo\ZDProfile.c
//    Command line       =  
//        -f C:\Users\ADMINI~1\AppData\Local\Temp\EWD6C9.tmp
//        (F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Components\stack\zdo\ZDProfile.c
//        -D ZIGBEEPRO -D INTER_PAN -D DISABLE_GREENPOWER_BASIC_PROXY -D
//        HAL_UART=TRUE -D HAL_UART_ISR=1 -D HAL_UART_DMA=0 -D
//        HAL_UART_ISR_RX_MAX=100 -D SECURE=1 -D TC_LINKKEY_JOIN -D NV_INIT -D
//        NV_RESTORE -D xZTOOL_P1 -D xMT_TASK -D xMT_APP_FUNC -D xMT_SYS_FUNC
//        -D xMT_ZDO_FUNC -D xMT_ZDO_MGMT -D xMT_APP_CNF_FUNC -D
//        LEGACY_LCD_DEBUG -D LCD_SUPPORTED=DEBUG -D MULTICAST_ENABLED=FALSE -D
//        ZCL_READ -D ZCL_WRITE -D ZCL_DISCOVER -D ZCL_BASIC -D ZCL_IDENTIFY -D
//        ZCL_SCENES -D ZCL_GROUPS -D ZCL_REPORT_CONFIGURING_DEVICE -D
//        ZCL_REPORT_DESTINATION_DEVICE -lC
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\CoordinatorEB\List
//        -lA
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\CoordinatorEB\List
//        --diag_suppress Pe001,Pa010 -o
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\CoordinatorEB\Obj
//        -e --debug --core=plain --dptr=16,1 --data_model=large
//        --code_model=banked --calling_convention=xdata_reentrant
//        --place_constants=data_rom --nr_virtual_regs 16 -f
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wCoord.cfg
//        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRUE
//        -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8 -DMAC_CFG_RX_MAX=5
//        -DZDO_COORDINATOR -DRTR_NWK) -f
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg
//        (-DZIGBEEPRO -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
//        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0xFFFF
//        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
//        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
//        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
//        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
//        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
//        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
//        -DAPS_MAX_GROUPS=10 -DMAX_RTG_ENTRIES=15 -DNWK_MAX_BINDING_ENTRIES=4
//        -DMAX_BINDING_CLUSTER_IDS=4 -DDEFAULT_KEY={0}
//        -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
//        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE
//        -DPOLL_RATE=300 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100
//        -DREJOIN_POLL_RATE=440 -DREJOIN_BACKOFF=900000 -DREJOIN_SCAN=900000)
//        -f
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cfg
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\Source\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\Source\ZCL\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\Source\UserAPI\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\Source\Controller\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\ZMain\TI2530DB\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\hal\include\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\mac\include\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\mac\high_level\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\mt\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\osal\include\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\services\saddr\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\services\sdata\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\stack\af\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\stack\bdb\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\stack\gp\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\stack\nwk\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\stack\sapi\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\stack\sec\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\stack\sys\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\stack\zcl\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\stack\zdo\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\zmac\
//        -I
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\zmac\f8w\
//        -Ohz --require_prototypes)
//    Locale             =  Chinese (Simplified)_CHN.936
//    List file          =  
//        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\CoordinatorEB\List\ZDProfile.s51
//
///////////////////////////////////////////////////////////////////////////////

        NAME ZDProfile

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__register_banks", "*"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?V0
        EXTERN ?V1
        EXTERN ?V2
        EXTERN ?V3
        EXTERN ?V4
        EXTERN ?V5
        EXTERN ?V6
        EXTERN ?V7
        EXTERN ?V8
        EXTERN ?V10
        EXTERN ?V11
        EXTERN ?V12
        EXTERN ?V13
        EXTERN ?V9
        EXTERN ?V14
        EXTERN ?V15
        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?CALL_IND
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?PUSH_XSTACK8_X_FOUR
        EXTERN ?PUSH_XSTACK8_X_TWO
        EXTERN ?PUSH_XSTACK_I_ONE
        EXTERN ?PUSH_XSTACK_I_THREE
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?S_SHL
        EXTERN ?US_SHR
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN ?XSTACK_DISP100_8
        EXTERN ?XSTACK_DISP101_8
        EXTERN ?XSTACK_DISP102_8
        EXTERN __INIT_XDATA_I
        EXTERN __INIT_XDATA_Z

        PUBLIC `??ZDO_RegisterForZDOMsg::?relay`
        FUNCTION `??ZDO_RegisterForZDOMsg::?relay`,0203H
        PUBLIC `??ZDO_RemoveRegisteredCB::?relay`
        FUNCTION `??ZDO_RemoveRegisteredCB::?relay`,0203H
        PUBLIC `??ZDO_SendMsgCBs::?relay`
        FUNCTION `??ZDO_SendMsgCBs::?relay`,0203H
        PUBLIC `??ZDP_BindUnbindReq::?relay`
        FUNCTION `??ZDP_BindUnbindReq::?relay`,0203H
        PUBLIC `??ZDP_DeviceAnnce::?relay`
        FUNCTION `??ZDP_DeviceAnnce::?relay`,0203H
        PUBLIC `??ZDP_EPRsp::?relay`
        FUNCTION `??ZDP_EPRsp::?relay`,0203H
        PUBLIC `??ZDP_EndDeviceBindReq::?relay`
        FUNCTION `??ZDP_EndDeviceBindReq::?relay`,0203H
        PUBLIC `??ZDP_GenericRsp::?relay`
        FUNCTION `??ZDP_GenericRsp::?relay`,0203H
        PUBLIC `??ZDP_IEEEAddrReq::?relay`
        FUNCTION `??ZDP_IEEEAddrReq::?relay`,0203H
        PUBLIC `??ZDP_IncomingData::?relay`
        FUNCTION `??ZDP_IncomingData::?relay`,0203H
        PUBLIC `??ZDP_MatchDescReq::?relay`
        FUNCTION `??ZDP_MatchDescReq::?relay`,0203H
        PUBLIC `??ZDP_MgmtBindRsp::?relay`
        FUNCTION `??ZDP_MgmtBindRsp::?relay`,0203H
        PUBLIC `??ZDP_MgmtDirectJoinReq::?relay`
        FUNCTION `??ZDP_MgmtDirectJoinReq::?relay`,0203H
        PUBLIC `??ZDP_MgmtLeaveReq::?relay`
        FUNCTION `??ZDP_MgmtLeaveReq::?relay`,0203H
        PUBLIC `??ZDP_MgmtLqiRsp::?relay`
        FUNCTION `??ZDP_MgmtLqiRsp::?relay`,0203H
        PUBLIC `??ZDP_MgmtNwkDiscReq::?relay`
        FUNCTION `??ZDP_MgmtNwkDiscReq::?relay`,0203H
        PUBLIC `??ZDP_MgmtNwkDiscRsp::?relay`
        FUNCTION `??ZDP_MgmtNwkDiscRsp::?relay`,0203H
        PUBLIC `??ZDP_MgmtNwkUpdateNotify::?relay`
        FUNCTION `??ZDP_MgmtNwkUpdateNotify::?relay`,0203H
        PUBLIC `??ZDP_MgmtNwkUpdateReq::?relay`
        FUNCTION `??ZDP_MgmtNwkUpdateReq::?relay`,0203H
        PUBLIC `??ZDP_MgmtPermitJoinReq::?relay`
        FUNCTION `??ZDP_MgmtPermitJoinReq::?relay`,0203H
        PUBLIC `??ZDP_MgmtRtgRsp::?relay`
        FUNCTION `??ZDP_MgmtRtgRsp::?relay`,0203H
        PUBLIC `??ZDP_NWKAddrOfInterestReq::?relay`
        FUNCTION `??ZDP_NWKAddrOfInterestReq::?relay`,0203H
        PUBLIC `??ZDP_NodeDescMsg::?relay`
        FUNCTION `??ZDP_NodeDescMsg::?relay`,0203H
        PUBLIC `??ZDP_NwkAddrReq::?relay`
        FUNCTION `??ZDP_NwkAddrReq::?relay`,0203H
        PUBLIC `??ZDP_ParentAnnce::?relay`
        FUNCTION `??ZDP_ParentAnnce::?relay`,0203H
        PUBLIC `??ZDP_PowerDescMsg::?relay`
        FUNCTION `??ZDP_PowerDescMsg::?relay`,0203H
        PUBLIC `??ZDP_SendData::?relay`
        FUNCTION `??ZDP_SendData::?relay`,0203H
        PUBLIC `??ZDP_ServerDiscReq::?relay`
        FUNCTION `??ZDP_ServerDiscReq::?relay`,0203H
        PUBLIC `??ZDP_ServerDiscRsp::?relay`
        FUNCTION `??ZDP_ServerDiscRsp::?relay`,0203H
        PUBLIC `??ZDP_SimpleDescMsg::?relay`
        FUNCTION `??ZDP_SimpleDescMsg::?relay`,0203H
        PUBLIC `??ZDP_SimpleDescReq::?relay`
        FUNCTION `??ZDP_SimpleDescReq::?relay`,0203H
        PUBLIC `??ZDP_UserDescRsp::?relay`
        FUNCTION `??ZDP_UserDescRsp::?relay`,0203H
        PUBLIC `??ZDP_UserDescSet::?relay`
        FUNCTION `??ZDP_UserDescSet::?relay`,0203H
        FUNCTION `??fillAndSend::?relay`,0203H
        PUBLIC `??zdpProcessAddrReq::?relay`
        FUNCTION `??zdpProcessAddrReq::?relay`,0203H
        PUBLIC ZDO_RegisterForZDOMsg
        FUNCTION ZDO_RegisterForZDOMsg,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_RemoveRegisteredCB
        FUNCTION ZDO_RemoveRegisteredCB,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC ZDO_SendMsgCBs
        FUNCTION ZDO_SendMsgCBs,0a1203H
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 21, STACK
        PUBLIC ZDP_AF_ENDPOINT
        PUBLIC ZDP_BindUnbindReq
        FUNCTION ZDP_BindUnbindReq,0a1203H
        ARGFRAME XSTACK, 8, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC ZDP_DeviceAnnce
        FUNCTION ZDP_DeviceAnnce,0a1203H
        ARGFRAME XSTACK, 1, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 21, STACK
        PUBLIC ZDP_EPRsp
        FUNCTION ZDP_EPRsp,0a1203H
        ARGFRAME XSTACK, 7, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 19, STACK
        PUBLIC ZDP_EndDeviceBindReq
        FUNCTION ZDP_EndDeviceBindReq,0a1203H
        ARGFRAME XSTACK, 9, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC ZDP_GenericRsp
        FUNCTION ZDP_GenericRsp,021203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDP_IEEEAddrReq
        FUNCTION ZDP_IEEEAddrReq,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 21, STACK
        PUBLIC ZDP_IncomingData
        FUNCTION ZDP_IncomingData,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 33, STACK
        PUBLIC ZDP_MatchDescReq
        FUNCTION ZDP_MatchDescReq,0a1203H
        ARGFRAME XSTACK, 8, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDP_MgmtBindRsp
        FUNCTION ZDP_MgmtBindRsp,0a1203H
        ARGFRAME XSTACK, 5, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 25, STACK
        PUBLIC ZDP_MgmtDirectJoinReq
        FUNCTION ZDP_MgmtDirectJoinReq,0a1203H
        ARGFRAME XSTACK, 1, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDP_MgmtLeaveReq
        FUNCTION ZDP_MgmtLeaveReq,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDP_MgmtLqiRsp
        FUNCTION ZDP_MgmtLqiRsp,0a1203H
        ARGFRAME XSTACK, 5, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 24, STACK
        PUBLIC ZDP_MgmtNwkDiscReq
        FUNCTION ZDP_MgmtNwkDiscReq,0a1203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDP_MgmtNwkDiscRsp
        FUNCTION ZDP_MgmtNwkDiscRsp,0a1203H
        ARGFRAME XSTACK, 5, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 25, STACK
        PUBLIC ZDP_MgmtNwkUpdateNotify
        FUNCTION ZDP_MgmtNwkUpdateNotify,0a1203H
        ARGFRAME XSTACK, 12, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC ZDP_MgmtNwkUpdateReq
        FUNCTION ZDP_MgmtNwkUpdateReq,0a1203H
        ARGFRAME XSTACK, 6, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBLIC ZDP_MgmtPermitJoinReq
        FUNCTION ZDP_MgmtPermitJoinReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC ZDP_MgmtRtgRsp
        FUNCTION ZDP_MgmtRtgRsp,0a1203H
        ARGFRAME XSTACK, 5, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC ZDP_NWKAddrOfInterestReq
        FUNCTION ZDP_NWKAddrOfInterestReq,0a1203H
        ARGFRAME XSTACK, 1, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDP_NodeDescMsg
        FUNCTION ZDP_NodeDescMsg,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDP_NwkAddrReq
        FUNCTION ZDP_NwkAddrReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC ZDP_ParentAnnce
        FUNCTION ZDP_ParentAnnce,0a1203H
        ARGFRAME XSTACK, 5, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 26, STACK
        PUBLIC ZDP_PowerDescMsg
        FUNCTION ZDP_PowerDescMsg,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDP_SendData
        FUNCTION ZDP_SendData,0a1203H
        ARGFRAME XSTACK, 5, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDP_ServerDiscReq
        FUNCTION ZDP_ServerDiscReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 21, STACK
        PUBLIC ZDP_ServerDiscRsp
        FUNCTION ZDP_ServerDiscRsp,0a1203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 13, STACK
        PUBLIC ZDP_SimpleDescMsg
        FUNCTION ZDP_SimpleDescMsg,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 22, STACK
        PUBLIC ZDP_SimpleDescReq
        FUNCTION ZDP_SimpleDescReq,0a1203H
        ARGFRAME XSTACK, 1, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDP_TransID
        PUBLIC ZDP_TxOptions
        PUBLIC ZDP_UserDescRsp
        FUNCTION ZDP_UserDescRsp,0a1203H
        ARGFRAME XSTACK, 3, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 22, STACK
        PUBLIC ZDP_UserDescSet
        FUNCTION ZDP_UserDescSet,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBWEAK __Constant_a
        PUBLIC childIndex
        FUNCTION fillAndSend,0a1203H
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 35, STACK
        PUBLIC zdoMsgCBs
        PUBLIC zdpMsgProcs
        PUBLIC zdpProcessAddrReq
        FUNCTION zdpProcessAddrReq,0a1603H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 48, STACK
        
          CFI Names cfiNames0
          CFI StackFrame CFA_SP SP IDATA
          CFI StackFrame CFA_PSP16 PSP16 XDATA
          CFI StackFrame CFA_XSP16 XSP16 XDATA
          CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
          CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
          CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
          CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
          CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
          CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
          CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
          CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
          CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
          CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
          CFI VirtualResource ?RET:24
          CFI Resource ?BRET_EXT:8
          CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
          CFI ResourceParts PSP16 PSPH, PSPL
          CFI ResourceParts XSP16 XSPH, XSPL
          CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-3
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B Undefined
          CFI A Undefined
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 Undefined
          CFI R5 Undefined
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon0
        
        
          CFI Common cfiCommon1 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-2
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B SameValue
          CFI A SameValue
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 SameValue
          CFI R1 SameValue
          CFI R2 SameValue
          CFI R3 SameValue
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT SameValue
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon1
        
AF_DataRequest      SYMBOL "AF_DataRequest"
`??AF_DataRequest::?relay` SYMBOL "?relay", AF_DataRequest
`?<Name AT_ZDO_ProcessMgmtNw 2>` SYMBOL "AT_ZDO_ProcessMgmtNwkDiscRsp"
`??AT_ZDO_ProcessMgmtNwkDiscRsp::?relay` SYMBOL "?relay", `?<Name AT_ZDO_ProcessMgmtNw 2>`
AddrMgrEntryGet     SYMBOL "AddrMgrEntryGet"
`??AddrMgrEntryGet::?relay` SYMBOL "?relay", AddrMgrEntryGet
AssocGetWithExt     SYMBOL "AssocGetWithExt"
`??AssocGetWithExt::?relay` SYMBOL "?relay", AssocGetWithExt
AssocGetWithShort   SYMBOL "AssocGetWithShort"
`??AssocGetWithShort::?relay` SYMBOL "?relay", AssocGetWithShort
AssocMakeList       SYMBOL "AssocMakeList"
`??AssocMakeList::?relay` SYMBOL "?relay", AssocMakeList
NLME_GetExtAddr     SYMBOL "NLME_GetExtAddr"
`??NLME_GetExtAddr::?relay` SYMBOL "?relay", NLME_GetExtAddr
NLME_GetShortAddr   SYMBOL "NLME_GetShortAddr"
`??NLME_GetShortAddr::?relay` SYMBOL "?relay", NLME_GetShortAddr
ZDApp_InMsgCB       SYMBOL "ZDApp_InMsgCB"
`??ZDApp_InMsgCB::?relay` SYMBOL "?relay", ZDApp_InMsgCB
ZDApp_SetParentAnnceTimer SYMBOL "ZDApp_SetParentAnnceTimer"
`??ZDApp_SetParentAnnceTimer::?relay` SYMBOL "?relay", ZDApp_SetParentAnnceTimer
`?<Name ZDO_ProcessActiveEPR 20>` SYMBOL "ZDO_ProcessActiveEPReq"
`??ZDO_ProcessActiveEPReq::?relay` SYMBOL "?relay", `?<Name ZDO_ProcessActiveEPR 20>`
`?<Name ZDO_ProcessDeviceAnn 22>` SYMBOL "ZDO_ProcessDeviceAnnce"
`??ZDO_ProcessDeviceAnnce::?relay` SYMBOL "?relay", `?<Name ZDO_ProcessDeviceAnn 22>`
`?<Name ZDO_ProcessMatchDesc 24>` SYMBOL "ZDO_ProcessMatchDescReq"
`??ZDO_ProcessMatchDescReq::?relay` SYMBOL "?relay", `?<Name ZDO_ProcessMatchDesc 24>`
`?<Name ZDO_ProcessMgmtBindR 26>` SYMBOL "ZDO_ProcessMgmtBindReq"
`??ZDO_ProcessMgmtBindReq::?relay` SYMBOL "?relay", `?<Name ZDO_ProcessMgmtBindR 26>`
`?<Name ZDO_ProcessMgmtLeave 28>` SYMBOL "ZDO_ProcessMgmtLeaveReq"
`??ZDO_ProcessMgmtLeaveReq::?relay` SYMBOL "?relay", `?<Name ZDO_ProcessMgmtLeave 28>`
`?<Name ZDO_ProcessMgmtLqiRe 30>` SYMBOL "ZDO_ProcessMgmtLqiReq"
`??ZDO_ProcessMgmtLqiReq::?relay` SYMBOL "?relay", `?<Name ZDO_ProcessMgmtLqiRe 30>`
`?<Name ZDO_ProcessMgmtNwkDi 32>` SYMBOL "ZDO_ProcessMgmtNwkDiscReq"
`??ZDO_ProcessMgmtNwkDiscReq::?relay` SYMBOL "?relay", `?<Name ZDO_ProcessMgmtNwkDi 32>`
`?<Name ZDO_ProcessMgmtPermi 34>` SYMBOL "ZDO_ProcessMgmtPermitJoinReq"
`??ZDO_ProcessMgmtPermitJoinReq::?relay` SYMBOL "?relay", `?<Name ZDO_ProcessMgmtPermi 34>`
`?<Name ZDO_ProcessMgmtRtgRe 36>` SYMBOL "ZDO_ProcessMgmtRtgReq"
`??ZDO_ProcessMgmtRtgReq::?relay` SYMBOL "?relay", `?<Name ZDO_ProcessMgmtRtgRe 36>`
`?<Name ZDO_ProcessNodeDescR 38>` SYMBOL "ZDO_ProcessNodeDescReq"
`??ZDO_ProcessNodeDescReq::?relay` SYMBOL "?relay", `?<Name ZDO_ProcessNodeDescR 38>`
`?<Name ZDO_ProcessNodeDescR 40>` SYMBOL "ZDO_ProcessNodeDescRsp"
`??ZDO_ProcessNodeDescRsp::?relay` SYMBOL "?relay", `?<Name ZDO_ProcessNodeDescR 40>`
`?<Name ZDO_ProcessParentAnn 42>` SYMBOL "ZDO_ProcessParentAnnce"
`??ZDO_ProcessParentAnnce::?relay` SYMBOL "?relay", `?<Name ZDO_ProcessParentAnn 42>`
`?<Name ZDO_ProcessParentAnn 44>` SYMBOL "ZDO_ProcessParentAnnceRsp"
`??ZDO_ProcessParentAnnceRsp::?relay` SYMBOL "?relay", `?<Name ZDO_ProcessParentAnn 44>`
`?<Name ZDO_ProcessPowerDesc 46>` SYMBOL "ZDO_ProcessPowerDescReq"
`??ZDO_ProcessPowerDescReq::?relay` SYMBOL "?relay", `?<Name ZDO_ProcessPowerDesc 46>`
`?<Name ZDO_ProcessSimpleDes 48>` SYMBOL "ZDO_ProcessSimpleDescReq"
`??ZDO_ProcessSimpleDescReq::?relay` SYMBOL "?relay", `?<Name ZDO_ProcessSimpleDes 48>`
`?<Name ZDO_ProcessSimpleDes 50>` SYMBOL "ZDO_ProcessSimpleDescRsp"
`??ZDO_ProcessSimpleDescRsp::?relay` SYMBOL "?relay", `?<Name ZDO_ProcessSimpleDes 50>`
osal_buffer_uint32  SYMBOL "osal_buffer_uint32"
`??osal_buffer_uint32::?relay` SYMBOL "?relay", osal_buffer_uint32
osal_mem_alloc      SYMBOL "osal_mem_alloc"
`??osal_mem_alloc::?relay` SYMBOL "?relay", osal_mem_alloc
osal_mem_free       SYMBOL "osal_mem_free"
`??osal_mem_free::?relay` SYMBOL "?relay", osal_mem_free
osal_memcpy         SYMBOL "osal_memcpy"
`??osal_memcpy::?relay` SYMBOL "?relay", osal_memcpy
osal_memset         SYMBOL "osal_memset"
`??osal_memset::?relay` SYMBOL "?relay", osal_memset
osal_msg_allocate   SYMBOL "osal_msg_allocate"
`??osal_msg_allocate::?relay` SYMBOL "?relay", osal_msg_allocate
osal_msg_send       SYMBOL "osal_msg_send"
`??osal_msg_send::?relay` SYMBOL "?relay", osal_msg_send
osal_start_timerEx  SYMBOL "osal_start_timerEx"
`??osal_start_timerEx::?relay` SYMBOL "?relay", osal_start_timerEx
sAddrExtCmp         SYMBOL "sAddrExtCmp"
`??sAddrExtCmp::?relay` SYMBOL "?relay", sAddrExtCmp
sAddrExtCpy         SYMBOL "sAddrExtCpy"
`??sAddrExtCpy::?relay` SYMBOL "?relay", sAddrExtCpy
ZDO_RegisterForZDOMsg SYMBOL "ZDO_RegisterForZDOMsg"
`??ZDO_RegisterForZDOMsg::?relay` SYMBOL "?relay", ZDO_RegisterForZDOMsg
ZDO_RemoveRegisteredCB SYMBOL "ZDO_RemoveRegisteredCB"
`??ZDO_RemoveRegisteredCB::?relay` SYMBOL "?relay", ZDO_RemoveRegisteredCB
ZDO_SendMsgCBs      SYMBOL "ZDO_SendMsgCBs"
`??ZDO_SendMsgCBs::?relay` SYMBOL "?relay", ZDO_SendMsgCBs
ZDP_BindUnbindReq   SYMBOL "ZDP_BindUnbindReq"
`??ZDP_BindUnbindReq::?relay` SYMBOL "?relay", ZDP_BindUnbindReq
ZDP_DeviceAnnce     SYMBOL "ZDP_DeviceAnnce"
`??ZDP_DeviceAnnce::?relay` SYMBOL "?relay", ZDP_DeviceAnnce
ZDP_EPRsp           SYMBOL "ZDP_EPRsp"
`??ZDP_EPRsp::?relay` SYMBOL "?relay", ZDP_EPRsp
ZDP_EndDeviceBindReq SYMBOL "ZDP_EndDeviceBindReq"
`??ZDP_EndDeviceBindReq::?relay` SYMBOL "?relay", ZDP_EndDeviceBindReq
ZDP_GenericRsp      SYMBOL "ZDP_GenericRsp"
`??ZDP_GenericRsp::?relay` SYMBOL "?relay", ZDP_GenericRsp
ZDP_IEEEAddrReq     SYMBOL "ZDP_IEEEAddrReq"
`??ZDP_IEEEAddrReq::?relay` SYMBOL "?relay", ZDP_IEEEAddrReq
ZDP_IncomingData    SYMBOL "ZDP_IncomingData"
`??ZDP_IncomingData::?relay` SYMBOL "?relay", ZDP_IncomingData
ZDP_MatchDescReq    SYMBOL "ZDP_MatchDescReq"
`??ZDP_MatchDescReq::?relay` SYMBOL "?relay", ZDP_MatchDescReq
ZDP_MgmtBindRsp     SYMBOL "ZDP_MgmtBindRsp"
`??ZDP_MgmtBindRsp::?relay` SYMBOL "?relay", ZDP_MgmtBindRsp
ZDP_MgmtDirectJoinReq SYMBOL "ZDP_MgmtDirectJoinReq"
`??ZDP_MgmtDirectJoinReq::?relay` SYMBOL "?relay", ZDP_MgmtDirectJoinReq
ZDP_MgmtLeaveReq    SYMBOL "ZDP_MgmtLeaveReq"
`??ZDP_MgmtLeaveReq::?relay` SYMBOL "?relay", ZDP_MgmtLeaveReq
ZDP_MgmtLqiRsp      SYMBOL "ZDP_MgmtLqiRsp"
`??ZDP_MgmtLqiRsp::?relay` SYMBOL "?relay", ZDP_MgmtLqiRsp
ZDP_MgmtNwkDiscReq  SYMBOL "ZDP_MgmtNwkDiscReq"
`??ZDP_MgmtNwkDiscReq::?relay` SYMBOL "?relay", ZDP_MgmtNwkDiscReq
ZDP_MgmtNwkDiscRsp  SYMBOL "ZDP_MgmtNwkDiscRsp"
`??ZDP_MgmtNwkDiscRsp::?relay` SYMBOL "?relay", ZDP_MgmtNwkDiscRsp
ZDP_MgmtNwkUpdateNotify SYMBOL "ZDP_MgmtNwkUpdateNotify"
`??ZDP_MgmtNwkUpdateNotify::?relay` SYMBOL "?relay", ZDP_MgmtNwkUpdateNotify
ZDP_MgmtNwkUpdateReq SYMBOL "ZDP_MgmtNwkUpdateReq"
`??ZDP_MgmtNwkUpdateReq::?relay` SYMBOL "?relay", ZDP_MgmtNwkUpdateReq
ZDP_MgmtPermitJoinReq SYMBOL "ZDP_MgmtPermitJoinReq"
`??ZDP_MgmtPermitJoinReq::?relay` SYMBOL "?relay", ZDP_MgmtPermitJoinReq
ZDP_MgmtRtgRsp      SYMBOL "ZDP_MgmtRtgRsp"
`??ZDP_MgmtRtgRsp::?relay` SYMBOL "?relay", ZDP_MgmtRtgRsp
ZDP_NWKAddrOfInterestReq SYMBOL "ZDP_NWKAddrOfInterestReq"
`??ZDP_NWKAddrOfInterestReq::?relay` SYMBOL "?relay", ZDP_NWKAddrOfInterestReq
ZDP_NodeDescMsg     SYMBOL "ZDP_NodeDescMsg"
`??ZDP_NodeDescMsg::?relay` SYMBOL "?relay", ZDP_NodeDescMsg
ZDP_NwkAddrReq      SYMBOL "ZDP_NwkAddrReq"
`??ZDP_NwkAddrReq::?relay` SYMBOL "?relay", ZDP_NwkAddrReq
ZDP_ParentAnnce     SYMBOL "ZDP_ParentAnnce"
`??ZDP_ParentAnnce::?relay` SYMBOL "?relay", ZDP_ParentAnnce
ZDP_PowerDescMsg    SYMBOL "ZDP_PowerDescMsg"
`??ZDP_PowerDescMsg::?relay` SYMBOL "?relay", ZDP_PowerDescMsg
ZDP_SendData        SYMBOL "ZDP_SendData"
`??ZDP_SendData::?relay` SYMBOL "?relay", ZDP_SendData
ZDP_ServerDiscReq   SYMBOL "ZDP_ServerDiscReq"
`??ZDP_ServerDiscReq::?relay` SYMBOL "?relay", ZDP_ServerDiscReq
ZDP_ServerDiscRsp   SYMBOL "ZDP_ServerDiscRsp"
`??ZDP_ServerDiscRsp::?relay` SYMBOL "?relay", ZDP_ServerDiscRsp
ZDP_SimpleDescMsg   SYMBOL "ZDP_SimpleDescMsg"
`??ZDP_SimpleDescMsg::?relay` SYMBOL "?relay", ZDP_SimpleDescMsg
ZDP_SimpleDescReq   SYMBOL "ZDP_SimpleDescReq"
`??ZDP_SimpleDescReq::?relay` SYMBOL "?relay", ZDP_SimpleDescReq
ZDP_UserDescRsp     SYMBOL "ZDP_UserDescRsp"
`??ZDP_UserDescRsp::?relay` SYMBOL "?relay", ZDP_UserDescRsp
ZDP_UserDescSet     SYMBOL "ZDP_UserDescSet"
`??ZDP_UserDescSet::?relay` SYMBOL "?relay", ZDP_UserDescSet
zdpProcessAddrReq   SYMBOL "zdpProcessAddrReq"
`??zdpProcessAddrReq::?relay` SYMBOL "?relay", zdpProcessAddrReq

        EXTERN `??AF_DataRequest::?relay`
        FUNCTION `??AF_DataRequest::?relay`,00H
        EXTERN `??AT_ZDO_ProcessMgmtNwkDiscRsp::?relay`
        FUNCTION `??AT_ZDO_ProcessMgmtNwkDiscRsp::?relay`,00H
        EXTERN `??AddrMgrEntryGet::?relay`
        FUNCTION `??AddrMgrEntryGet::?relay`,00H
        EXTERN `??AssocGetWithExt::?relay`
        FUNCTION `??AssocGetWithExt::?relay`,00H
        EXTERN `??AssocGetWithShort::?relay`
        FUNCTION `??AssocGetWithShort::?relay`,00H
        EXTERN `??AssocMakeList::?relay`
        FUNCTION `??AssocMakeList::?relay`,00H
        EXTERN `??NLME_GetExtAddr::?relay`
        FUNCTION `??NLME_GetExtAddr::?relay`,00H
        EXTERN `??NLME_GetShortAddr::?relay`
        FUNCTION `??NLME_GetShortAddr::?relay`,00H
        EXTERN `??ZDApp_InMsgCB::?relay`
        FUNCTION `??ZDApp_InMsgCB::?relay`,00H
        EXTERN `??ZDApp_SetParentAnnceTimer::?relay`
        FUNCTION `??ZDApp_SetParentAnnceTimer::?relay`,00H
        EXTERN `??ZDO_ProcessActiveEPReq::?relay`
        FUNCTION `??ZDO_ProcessActiveEPReq::?relay`,00H
        EXTERN `??ZDO_ProcessDeviceAnnce::?relay`
        FUNCTION `??ZDO_ProcessDeviceAnnce::?relay`,00H
        EXTERN `??ZDO_ProcessMatchDescReq::?relay`
        FUNCTION `??ZDO_ProcessMatchDescReq::?relay`,00H
        EXTERN `??ZDO_ProcessMgmtBindReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtBindReq::?relay`,00H
        EXTERN `??ZDO_ProcessMgmtLeaveReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtLeaveReq::?relay`,00H
        EXTERN `??ZDO_ProcessMgmtLqiReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtLqiReq::?relay`,00H
        EXTERN `??ZDO_ProcessMgmtNwkDiscReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtNwkDiscReq::?relay`,00H
        EXTERN `??ZDO_ProcessMgmtPermitJoinReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtPermitJoinReq::?relay`,00H
        EXTERN `??ZDO_ProcessMgmtRtgReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtRtgReq::?relay`,00H
        EXTERN `??ZDO_ProcessNodeDescReq::?relay`
        FUNCTION `??ZDO_ProcessNodeDescReq::?relay`,00H
        EXTERN `??ZDO_ProcessNodeDescRsp::?relay`
        FUNCTION `??ZDO_ProcessNodeDescRsp::?relay`,00H
        EXTERN `??ZDO_ProcessParentAnnce::?relay`
        FUNCTION `??ZDO_ProcessParentAnnce::?relay`,00H
        EXTERN `??ZDO_ProcessParentAnnceRsp::?relay`
        FUNCTION `??ZDO_ProcessParentAnnceRsp::?relay`,00H
        EXTERN `??ZDO_ProcessPowerDescReq::?relay`
        FUNCTION `??ZDO_ProcessPowerDescReq::?relay`,00H
        EXTERN `??ZDO_ProcessSimpleDescReq::?relay`
        FUNCTION `??ZDO_ProcessSimpleDescReq::?relay`,00H
        EXTERN `??ZDO_ProcessSimpleDescRsp::?relay`
        FUNCTION `??ZDO_ProcessSimpleDescRsp::?relay`,00H
        EXTERN `??osal_buffer_uint32::?relay`
        FUNCTION `??osal_buffer_uint32::?relay`,00H
        EXTERN `??osal_mem_alloc::?relay`
        FUNCTION `??osal_mem_alloc::?relay`,00H
        EXTERN `??osal_mem_free::?relay`
        FUNCTION `??osal_mem_free::?relay`,00H
        EXTERN `??osal_memcpy::?relay`
        FUNCTION `??osal_memcpy::?relay`,00H
        EXTERN `??osal_memset::?relay`
        FUNCTION `??osal_memset::?relay`,00H
        EXTERN `??osal_msg_allocate::?relay`
        FUNCTION `??osal_msg_allocate::?relay`,00H
        EXTERN `??osal_msg_send::?relay`
        FUNCTION `??osal_msg_send::?relay`,00H
        EXTERN `??osal_start_timerEx::?relay`
        FUNCTION `??osal_start_timerEx::?relay`,00H
        EXTERN `??sAddrExtCmp::?relay`
        FUNCTION `??sAddrExtCmp::?relay`,00H
        EXTERN `??sAddrExtCpy::?relay`
        FUNCTION `??sAddrExtCpy::?relay`,00H
        EXTERN AF_DataRequest
        FUNCTION AF_DataRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AddrMgrEntryGet
        FUNCTION AddrMgrEntryGet,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 46, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AssocGetWithExt
        FUNCTION AssocGetWithExt,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 46, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AssocGetWithShort
        FUNCTION AssocGetWithShort,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 46, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AssocMakeList
        FUNCTION AssocMakeList,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 46, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetExtAddr
        FUNCTION NLME_GetExtAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetShortAddr
        FUNCTION NLME_GetShortAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDAppNwkAddr
        EXTERN ZDAppTaskID
        EXTERN ZDApp_InMsgCB
        FUNCTION ZDApp_InMsgCB,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDApp_SetParentAnnceTimer
        FUNCTION ZDApp_SetParentAnnceTimer,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDApp_epDesc
        EXTERN notdoSCANCmd
        EXTERN osal_buffer_uint32
        FUNCTION osal_buffer_uint32,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_alloc
        FUNCTION osal_mem_alloc,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_free
        FUNCTION osal_mem_free,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 46, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memcpy
        FUNCTION osal_memcpy,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memset
        FUNCTION osal_memset,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 46, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_allocate
        FUNCTION osal_msg_allocate,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_send
        FUNCTION osal_msg_send,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_start_timerEx
        FUNCTION osal_start_timerEx,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN sAddrExtCmp
        FUNCTION sAddrExtCmp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 46, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN sAddrExtCpy
        FUNCTION sAddrExtCpy,0202H
        ARGFRAME ISTACK, 1, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 46, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN saveExtAddr

// F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Components\stack\zdo\ZDProfile.c
//    1 /**************************************************************************************************
//    2   Filename:       ZDProfile.c
//    3   Revised:        $Date: 2015-10-14 11:48:06 -0700 (Wed, 14 Oct 2015) $
//    4   Revision:       $Revision: 44530 $
//    5 
//    6   Description:    This is the Zigbee Device Profile.
//    7 
//    8 
//    9   Copyright 2004-2015 Texas Instruments Incorporated. All rights reserved.
//   10 
//   11   IMPORTANT: Your use of this Software is limited to those specific rights
//   12   granted under the terms of a software license agreement between the user
//   13   who downloaded the software, his/her employer (which must be your employer)
//   14   and Texas Instruments Incorporated (the "License").  You may not use this
//   15   Software unless you agree to abide by the terms of the License. The License
//   16   limits your use, and you acknowledge, that the Software may not be modified,
//   17   copied or distributed unless embedded on a Texas Instruments microcontroller
//   18   or used solely and exclusively in conjunction with a Texas Instruments radio
//   19   frequency transceiver, which is integrated into your product.  Other than for
//   20   the foregoing purpose, you may not use, reproduce, copy, prepare derivative
//   21   works of, modify, distribute, perform, display or sell this Software and/or
//   22   its documentation for any purpose.
//   23 
//   24   YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
//   25   PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
//   26   INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
//   27   NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
//   28   TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
//   29   NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
//   30   LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
//   31   INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
//   32   OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
//   33   OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
//   34   (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
//   35 
//   36   Should you have any questions regarding your right to use this Software,
//   37   contact Texas Instruments Incorporated at www.TI.com.
//   38 **************************************************************************************************/
//   39 
//   40 /*********************************************************************
//   41  * INCLUDES
//   42  */
//   43 #include "ZComDef.h"
//   44 #include "OSAL.h"
//   45 #include "AF.h"
//   46 #include "NLMEDE.h"
//   47 #include "nwk_util.h"
//   48 #include "APS.h"
//   49 
//   50 #include "AddrMgr.h"
//   51 #include "ZDConfig.h"
//   52 #include "ZDProfile.h"
//   53 #include "ZDObject.h"
//   54 #include "ZDNwkMgr.h"
//   55 
//   56 #if defined( LCD_SUPPORTED )
//   57   #include "OnBoard.h"
//   58 #endif
//   59 
//   60 #include "nwk_util.h"
//   61 
//   62 #if defined( MT_ZDO_FUNC )
//   63   #include "MT_ZDO.h"
//   64 #endif
//   65 
//   66 #include "AT_cmd.h"
//   67 #include "AT_uart.h"
//   68 
//   69 /*********************************************************************
//   70  * MACROS
//   71  */
//   72 
//   73 #define ZADDR_TO_AFADDR( pZADDR, AFADDR ) {                            \ 
//   74   (AFADDR).endPoint = ZDP_AF_ENDPOINT;                                 \ 
//   75   (AFADDR).addrMode = (afAddrMode_t)(pZADDR)->addrMode;                \ 
//   76   osal_memcpy((AFADDR).addr.extAddr, (pZADDR)->addr.extAddr, Z_EXTADDR_LEN); \ 
//   77 }
//   78 
//   79 #define FillAndSendBuffer( TRANSSEQ, ADDR, ID, LEN, BUF ) {     \ 
//   80   afStatus_t stat;                                    \ 
//   81   ZDP_TmpBuf = (BUF)+1;                               \ 
//   82   stat = fillAndSend( (TRANSSEQ), (ADDR), (ID), (LEN) );          \ 
//   83   osal_mem_free( (BUF) );                             \ 
//   84   ZDP_TmpBuf = ZDP_Buf+1;                             \ 
//   85   return stat;                                        \ 
//   86 }
//   87 
//   88 #define FillAndSendTxOptions( TRANSSEQ, ADDR, ID, LEN, TxO ) {  \ 
//   89   afStatus_t stat;                                    \ 
//   90   ZDP_TxOptions = (TxO);                              \ 
//   91   stat = fillAndSend( (TRANSSEQ), (ADDR), (ID), (LEN) );          \ 
//   92   ZDP_TxOptions = AF_TX_OPTIONS_NONE;                 \ 
//   93   return stat;                                        \ 
//   94 }
//   95 
//   96 #define FillAndSendBufferTxOptions( TRANSSEQ, ADDR, ID, LEN, BUF, TxO ) { \ 
//   97   afStatus_t stat;                                    \ 
//   98   ZDP_TmpBuf = (BUF)+1;                               \ 
//   99   ZDP_TxOptions = (TxO);                              \ 
//  100   stat = fillAndSend( (TRANSSEQ), (ADDR), (ID), (LEN) );          \ 
//  101   osal_mem_free( (BUF) );                             \ 
//  102   ZDP_TmpBuf = ZDP_Buf+1;                             \ 
//  103   ZDP_TxOptions = AF_TX_OPTIONS_NONE;                 \ 
//  104   return stat;                                        \ 
//  105 }
//  106 
//  107 /*********************************************************************
//  108  * CONSTANTS
//  109  */
//  110 
//  111 #define ZDP_BUF_SZ          80
//  112 

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA8
//  113 CONST byte ZDP_AF_ENDPOINT = 0;
ZDP_AF_ENDPOINT:
        DB 0
//  114 
//  115 // Routing table options
//  116 #define ZP_RTG_RECORD       0x04       // Routing table indication that a route record is needed
//  117 #define ZP_MTO_ROUTE_RC     0x08       // Concentrator with routing cache
//  118 #define ZP_MTO_ROUTE_NRC    0x10       // Concentrator with limited cache
//  119 
//  120 
//  121 /*********************************************************************
//  122  * TYPEDEFS
//  123  */
//  124 typedef struct
//  125 {
//  126   void *next;
//  127   uint8 taskID;
//  128   uint16 clusterID;
//  129 } ZDO_MsgCB_t;
//  130 
//  131 
//  132 /*********************************************************************
//  133  * GLOBAL VARIABLES
//  134  */
//  135 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  136 byte ZDP_TransID = 0;
ZDP_TransID:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  137 uint8 childIndex = 0;
childIndex:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  138 
//  139 /*********************************************************************
//  140  * EXTERNAL VARIABLES
//  141  */
//  142 
//  143 extern endPointDesc_t ZDApp_epDesc;
//  144 
//  145 /*********************************************************************
//  146  * EXTERNAL FUNCTIONS
//  147  */
//  148 extern void ZDApp_SetParentAnnceTimer( void );
//  149 
//  150 /*********************************************************************
//  151  * LOCAL FUNCTIONS
//  152  */
//  153 
//  154 static afStatus_t fillAndSend( uint8 *transSeq, zAddrType_t *addr, cId_t clusterID, byte len );
//  155 uint8 ZDO_SendMsgCBs( zdoIncomingMsg_t *inMsg );
//  156 void zdpProcessAddrReq( zdoIncomingMsg_t *inMsg );
//  157 
//  158 /*********************************************************************
//  159  * LOCAL VARIABLES
//  160  */
//  161 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  162 static uint8  ZDP_Buf[ ZDP_BUF_SZ ];
ZDP_Buf:
        DS 80
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_I:XDATA:NOROOT(0)
//  163 static uint8 *ZDP_TmpBuf = ZDP_Buf+1;
ZDP_TmpBuf:
        DATA16
        DS 2
        REQUIRE `?<Initializer for ZDP_TmpBuf>`
        REQUIRE __INIT_XDATA_I
//  164 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  165 byte ZDP_TxOptions = AF_TX_OPTIONS_NONE;
ZDP_TxOptions:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  166 ZDO_MsgCB_t *zdoMsgCBs = (ZDO_MsgCB_t *)NULL;
zdoMsgCBs:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  167 
//  168 /*********************************************************************
//  169  * ZDO Message Processing table
//  170  */
//  171 
//  172 typedef void (*pfnZDPMsgProcessor)( zdoIncomingMsg_t *inMsg );
//  173 
//  174 typedef struct
//  175 {
//  176   uint16                clusterID;
//  177   pfnZDPMsgProcessor    pFn;
//  178 } zdpMsgProcItem_t;
//  179 

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA8
//  180 CONST zdpMsgProcItem_t zdpMsgProcs[] =
zdpMsgProcs:
        DATA16
        DW 19
        DW `??ZDO_ProcessDeviceAnnce::?relay`
        DW 31
        DW `??ZDO_ProcessParentAnnce::?relay`
        DW 32799
        DW `??ZDO_ProcessParentAnnceRsp::?relay`
        DW 0
        DW `??zdpProcessAddrReq::?relay`
        DW 1
        DW `??zdpProcessAddrReq::?relay`
        DW 2
        DW `??ZDO_ProcessNodeDescReq::?relay`
        DW 32770
        DW `??ZDO_ProcessNodeDescRsp::?relay`
        DW 3
        DW `??ZDO_ProcessPowerDescReq::?relay`
        DW 4
        DW `??ZDO_ProcessSimpleDescReq::?relay`
        DW 32772
        DW `??ZDO_ProcessSimpleDescRsp::?relay`
        DW 5
        DW `??ZDO_ProcessActiveEPReq::?relay`
        DW 6
        DW `??ZDO_ProcessMatchDescReq::?relay`
        DW 48
        DW `??ZDO_ProcessMgmtNwkDiscReq::?relay`
        DW 32816
        DW `??AT_ZDO_ProcessMgmtNwkDiscRsp::?relay`
        DW 49
        DW `??ZDO_ProcessMgmtLqiReq::?relay`
        DW 50
        DW `??ZDO_ProcessMgmtRtgReq::?relay`
        DW 51
        DW `??ZDO_ProcessMgmtBindReq::?relay`
        DW 52
        DW `??ZDO_ProcessMgmtLeaveReq::?relay`
        DW 54
        DW `??ZDO_ProcessMgmtPermitJoinReq::?relay`
        DW 65535
        DW 0H
//  181 {
//  182 #if ( RFD_RCVC_ALWAYS_ON==TRUE ) || ( ZG_BUILD_RTR_TYPE )
//  183   // These aren't processed by sleeping end devices.
//  184   { Device_annce,           ZDO_ProcessDeviceAnnce },
//  185 #endif
//  186 #if ( ZG_BUILD_RTR_TYPE )
//  187   // These aren't processed by end devices.
//  188   { Parent_annce,           ZDO_ProcessParentAnnce },
//  189   { Parent_annce_rsp,       ZDO_ProcessParentAnnceRsp },
//  190 #endif
//  191   { NWK_addr_req,           zdpProcessAddrReq },
//  192   { IEEE_addr_req,          zdpProcessAddrReq },
//  193   { Node_Desc_req,          ZDO_ProcessNodeDescReq },
//  194   { Node_Desc_rsp,          ZDO_ProcessNodeDescRsp },
//  195   { Power_Desc_req,         ZDO_ProcessPowerDescReq },
//  196   { Simple_Desc_req,        ZDO_ProcessSimpleDescReq },
//  197   { Simple_Desc_rsp,        ZDO_ProcessSimpleDescRsp },
//  198   { Active_EP_req,          ZDO_ProcessActiveEPReq },
//  199   { Match_Desc_req,         ZDO_ProcessMatchDescReq },
//  200 #if defined ( ZDO_MGMT_NWKDISC_RESPONSE )
//  201   { Mgmt_NWK_Disc_req,      ZDO_ProcessMgmtNwkDiscReq },
//  202   { Mgmt_NWK_Disc_rsp,      AT_ZDO_ProcessMgmtNwkDiscRsp},
//  203 #endif
//  204 #if defined ( ZDO_MGMT_LQI_RESPONSE ) && ( ZG_BUILD_RTR_TYPE || ZG_BUILD_ENDDEVICE_TYPE )
//  205   { Mgmt_Lqi_req,           ZDO_ProcessMgmtLqiReq },
//  206 #endif
//  207 #if defined ( ZDO_MGMT_RTG_RESPONSE ) && ( ZG_BUILD_RTR_TYPE )
//  208   { Mgmt_Rtg_req,           ZDO_ProcessMgmtRtgReq },
//  209 #endif
//  210 #if defined ( ZDO_MGMT_BIND_RESPONSE ) && defined ( REFLECTOR )
//  211   { Mgmt_Bind_req,          ZDO_ProcessMgmtBindReq },
//  212 #endif
//  213 #if defined ( ZDO_MGMT_JOINDIRECT_RESPONSE ) && ( ZG_BUILD_RTR_TYPE )
//  214   { Mgmt_Direct_Join_req,   ZDO_ProcessMgmtDirectJoinReq },
//  215 #endif
//  216 #if defined ( ZDO_MGMT_LEAVE_RESPONSE )
//  217   { Mgmt_Leave_req,         ZDO_ProcessMgmtLeaveReq },
//  218 #endif
//  219 #if defined ( ZDO_MGMT_PERMIT_JOIN_RESPONSE )  && ( ZG_BUILD_RTR_TYPE )
//  220   { Mgmt_Permit_Join_req,   ZDO_ProcessMgmtPermitJoinReq },
//  221 #endif
//  222 #if defined ( ZDO_USERDESC_RESPONSE )
//  223   { User_Desc_req,          ZDO_ProcessUserDescReq },
//  224 #endif
//  225 #if defined ( ZDO_USERDESCSET_RESPONSE )
//  226   { User_Desc_set,          ZDO_ProcessUserDescSet },
//  227 #endif
//  228 #if defined ( ZDO_SERVERDISC_RESPONSE )
//  229   { Server_Discovery_req,   ZDO_ProcessServerDiscReq },
//  230 #endif
//  231   {0xFFFF, NULL} // Last
//  232 };
//  233 
//  234 /*********************************************************************
//  235  * @fn          fillAndSend
//  236  *
//  237  * @brief       Combined to reduce space
//  238  *
//  239  * @param
//  240  * @param
//  241  *
//  242  * @return      afStatus_t
//  243  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  244 static afStatus_t fillAndSend( uint8 *transSeq, zAddrType_t *addr, cId_t clusterID, byte len )
fillAndSend:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function fillAndSend
        CODE
//  245 {
        FUNCALL fillAndSend, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL fillAndSend, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL fillAndSend, AF_DataRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV       A,#-0xe
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 12
        MOV       A,#-0xc
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
        MOV       ?V4,R2
        MOV       ?V5,R3
        MOV       A,R4
        MOV       R6,A
        MOV       A,R5
        MOV       R7,A
        MOV       ?V3,R1
//  246   afAddrType_t afAddr;
//  247 
//  248   osal_memset( &afAddr, 0, sizeof(afAddrType_t) );
        ; Setup parameters for call to function osal_memset
        MOV       R4,#0xc
        MOV       R5,#0x0
        MOV       R1,#0x0
        MOV       R2,?XSP + 0
        MOV       R3,?XSP + 1
        LCALL     `??osal_memset::?relay`; Banked call to: osal_memset
//  249   ZADDR_TO_AFADDR( addr, afAddr );
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        CLR       A
        LCALL     ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_18:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        ; Setup parameters for call to function osal_memcpy
        MOV       ?V0,R6
        MOV       ?V1,R7
        MOV       ?V2,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       R4,#0x8
        MOV       R5,#0x0
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP101_8
        LCALL     ??Subroutine119_0 & 0xFFFF
??CrossCallReturnLabel_203:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
//  250 
//  251   *(ZDP_TmpBuf-1) = *transSeq;
        MOV       DPTR,#ZDP_TmpBuf
        MOVX      A,@DPTR
        ADD       A,#-0x1
        MOV       ?V0,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#-0x1
        MOV       ?V1,A
        MOV       DPL,?V4
        MOV       DPH,?V5
        LCALL     ?Subroutine67 & 0xFFFF
//  252 
//  253   return AF_DataRequest( &afAddr, &ZDApp_epDesc, clusterID,
//  254                            (uint16)(len+1), (uint8*)(ZDP_TmpBuf-1),
//  255                            transSeq, ZDP_TxOptions,  AF_DEFAULT_RADIUS );
??CrossCallReturnLabel_113:
        ; Setup parameters for call to function AF_DataRequest
        MOV       ?V2,#0x1e
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 27)
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV       A,?V3
        ADD       A,#0x1
        MOV       ?V0,A
        CLR       A
        ADDC      A,#0x0
        MOV       ?V1,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 33)
        MOV       A,#0x21
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 35)
        MOV       DPTR,#ZDP_TxOptions
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       R4,#ZDApp_epDesc & 0xff
        MOV       R5,#(ZDApp_epDesc >> 8) & 0xff
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??AF_DataRequest::?relay`; Banked call to: AF_DataRequest
        MOV       A,#0x9
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
        MOV       A,#0xc
        LJMP      ?Subroutine0 & 0xFFFF
//  256 
//  257 }
          CFI EndBlock cfiBlock0
//  258 
//  259 /*********************************************************************
//  260  * @fn          ZDP_SendData
//  261  *
//  262  * @brief       This builds and send a request message that has
//  263  *              NWKAddrOfInterest as its only parameter.
//  264  *
//  265  * @param       dstAddr - destination address
//  266  * @param       cmd - clusterID
//  267  * @param       dataLen - number of bytes of data
//  268  * @param       data - pointer to the data
//  269  * @param       SecurityEnable - Security Options
//  270  *
//  271  * @return      afStatus_t
//  272  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  273 afStatus_t ZDP_SendData( uint8 *TransSeq, zAddrType_t *dstAddr, uint16 cmd,
ZDP_SendData:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function ZDP_SendData
        CODE
//  274                         byte len, uint8 *buf, byte SecurityEnable )
//  275 {
        FUNCALL ZDP_SendData, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV       A,R1
        MOV       R7,A
//  276   uint8 *pBuf = ZDP_TmpBuf;
        MOV       DPTR,#ZDP_TmpBuf
        LCALL     ?Subroutine41 & 0xFFFF
//  277   byte cnt = len;
??CrossCallReturnLabel_66:
        MOV       A,R1
        MOV       R6,A
        MOV       A,#0xe
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine131_0 & 0xFFFF
??CrossCallReturnLabel_285:
        SJMP      ??ZDP_SendData_0
//  278 
//  279   while ( cnt-- )
//  280   {
//  281     *pBuf++ = *buf++;
??ZDP_SendData_1:
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      A,@DPTR
        MOV       DPL,?V2
        MOV       DPH,?V3
        LCALL     ?Subroutine29 & 0xFFFF
//  282   }
??CrossCallReturnLabel_37:
        MOV       R0,DPL
        MOV       R1,DPH
        MOV       DPL,?V2
        MOV       DPH,?V3
        INC       DPTR
        MOV       ?V2,DPL
        MOV       ?V3,DPH
??ZDP_SendData_0:
        MOV       A,#-0x1
        ADD       A,R6
        MOV       R6,A
        INC       A
        JNZ       ??ZDP_SendData_1
//  283 
//  284   FillAndSendTxOptions( TransSeq, dstAddr, cmd, len, ((SecurityEnable) ? AF_EN_SECURITY : 0) );
        MOV       A,#0x10
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       DPTR,#ZDP_TxOptions
        JZ        ??ZDP_SendData_2
        MOV       A,#0x40
        SJMP      ??ZDP_SendData_3
??ZDP_SendData_2:
        CLR       A
??ZDP_SendData_3:
        MOVX      @DPTR,A
        ; Setup parameters for call to function fillAndSend
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV       A,R7
        MOV       R1,A
        LCALL     ??Subroutine128_0 & 0xFFFF
??CrossCallReturnLabel_252:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       A,R1
        MOV       R1,A
        MOV       DPTR,#ZDP_TxOptions
        CLR       A
        MOVX      @DPTR,A
        LJMP      ??Subroutine107_0 & 0xFFFF
//  285 }
          CFI EndBlock cfiBlock1
//  286 
//  287 /*********************************************************************
//  288  * @fn          ZDP_NWKAddrOfInterestReq
//  289  *
//  290  * @brief       This builds and send a request message that has
//  291  *              NWKAddrOfInterest as its only parameter.
//  292  *
//  293  * @param       dstAddr - destination address
//  294  * @param       nwkAddr - 16 bit address
//  295  * @param       SecurityEnable - Security Options
//  296  *
//  297  * @return      afStatus_t
//  298  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  299 afStatus_t ZDP_NWKAddrOfInterestReq( zAddrType_t *dstAddr, uint16 nwkAddr,
ZDP_NWKAddrOfInterestReq:
          CFI Block cfiBlock2 Using cfiCommon0
          CFI Function ZDP_NWKAddrOfInterestReq
        CODE
//  300                                      byte cmd, byte SecurityEnable )
//  301 {
        FUNCALL ZDP_NWKAddrOfInterestReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
//  302   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  303 
//  304   ZDP_TmpBuf[0] = LO_UINT16( nwkAddr );
        LCALL     ?Subroutine16 & 0xFFFF
//  305   ZDP_TmpBuf[1] = HI_UINT16( nwkAddr );
??CrossCallReturnLabel_14:
        MOVX      @DPTR,A
//  306 
//  307   return fillAndSend( &ZDP_TransID, dstAddr, cmd, 2 );
        ; Setup parameters for call to function fillAndSend
        MOV       A,R1
        MOV       ?V0,A
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       R1,#0x2
        LJMP      ?Subroutine8 & 0xFFFF
//  308 }
          CFI EndBlock cfiBlock2
//  309 
//  310 /*********************************************************************
//  311  * Address Requests
//  312  */
//  313 
//  314 /*********************************************************************
//  315  * @fn          ZDP_NwkAddrReq
//  316  *
//  317  * @brief       This builds and send a NWK_addr_req message.  This
//  318  *              function sends a broadcast message looking for a 16
//  319  *              bit address with a 64 bit address as bait.
//  320  *
//  321  * @param       IEEEAddress - looking for this device
//  322  * @param       SecurityEnable - Security Options
//  323  *
//  324  * @return      afStatus_t
//  325  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  326 afStatus_t ZDP_NwkAddrReq( uint8 *IEEEAddress, byte ReqType,
ZDP_NwkAddrReq:
          CFI Block cfiBlock3 Using cfiCommon0
          CFI Function ZDP_NwkAddrReq
        CODE
//  327                            byte StartIndex, byte SecurityEnable )
//  328 {
        FUNCALL ZDP_NwkAddrReq, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_NwkAddrReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_NwkAddrReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 9
        MOV       A,#-0x9
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
        MOV       ?V2,R1
        MOV       ?V3,R4
//  329   uint8 *pBuf = ZDP_TmpBuf;
        MOV       DPTR,#ZDP_TmpBuf
        LCALL     ?Subroutine68 & 0xFFFF
//  330   byte len = Z_EXTADDR_LEN + 1 + 1;  // IEEEAddress + ReqType + StartIndex.
//  331   zAddrType_t dstAddr;
//  332 
//  333   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  334 
//  335   if ( osal_ExtAddrEqual( saveExtAddr, IEEEAddress ) == FALSE )
??CrossCallReturnLabel_115:
        MOV       R4,A
        MOV       A,R3
        MOV       R5,A
        MOV       R2,#saveExtAddr & 0xff
        MOV       R3,#(saveExtAddr >> 8) & 0xff
        LCALL     `??sAddrExtCmp::?relay`; Banked call to: sAddrExtCmp
        MOV       A,R1
        JNZ       ??ZDP_NwkAddrReq_0
//  336   {
//  337     dstAddr.addrMode = AddrBroadcast;
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine90 & 0xFFFF
//  338     dstAddr.addr.shortAddr = NWK_BROADCAST_SHORTADDR_DEVRXON;
//  339   }
??CrossCallReturnLabel_144:
        SJMP      ??ZDP_NwkAddrReq_1
//  340   else
//  341   {
//  342     dstAddr.addrMode = Addr16Bit;
??ZDP_NwkAddrReq_0:
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x2
        MOVX      @DPTR,A
//  343     dstAddr.addr.shortAddr = ZDAppNwkAddr.addr.shortAddr;
        MOV       DPTR,#ZDAppNwkAddr
        LCALL     ??Subroutine131_0 & 0xFFFF
//  344   }
??CrossCallReturnLabel_286:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,R0
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
??ZDP_NwkAddrReq_1:
        MOVX      @DPTR,A
//  345 
//  346   pBuf = osal_cpyExtAddr( pBuf, IEEEAddress );
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        MOV       R2,?V0
        MOV       R3,?V1
        LCALL     ?Subroutine98 & 0xFFFF
//  347 
//  348   *pBuf++ = ReqType;
??CrossCallReturnLabel_158:
        MOV       A,?V2
        MOVX      @DPTR,A
//  349   *pBuf++ = StartIndex;
        INC       DPTR
        MOV       A,?V3
        MOVX      @DPTR,A
//  350 
//  351   return fillAndSend( &ZDP_TransID, &dstAddr, NWK_addr_req, len );
        ; Setup parameters for call to function fillAndSend
        CLR       A
        MOV       ?V0,A
        MOV       ?V1,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       R1,#0xa
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP102_8
          CFI EndBlock cfiBlock3
        REQUIRE ?Subroutine9
        ; // Fall through to label ?Subroutine9
//  352 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine9:
          CFI Block cfiBlock4 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 23)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        LCALL     ??Subroutine127_0 & 0xFFFF
??CrossCallReturnLabel_245:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       A,#0x9
        SJMP      ??Subroutine106_0
          CFI EndBlock cfiBlock4

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine1:
          CFI Block cfiBlock5 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       ?V3,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV       R1,#0x9
          CFI EndBlock cfiBlock5
        REQUIRE ??Subroutine105_0
        ; // Fall through to label ??Subroutine105_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine105_0:
          CFI Block cfiBlock6 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        LCALL     ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_242:
          CFI EndBlock cfiBlock6
        REQUIRE ??Subroutine106_0
        ; // Fall through to label ??Subroutine106_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine106_0:
          CFI Block cfiBlock7 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock7
        REQUIRE ??Subroutine107_0
        ; // Fall through to label ??Subroutine107_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine107_0:
          CFI Block cfiBlock8 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0x4
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock8
//  353 
//  354 /*********************************************************************
//  355  * @fn          ZDP_IEEEAddrReq
//  356  *
//  357  * @brief       This builds and send a IEEE_addr_req message.  This
//  358  *              function sends a unicast message looking for a 64
//  359  *              bit IEEE address with a 16 bit address as bait.
//  360  *
//  361  * @param       nodeId - interest of short address
//  362  * @param       ReqType - ZDP_IEEEADDR_REQTYPE_SINGLE or
//  363  *                        ZDP_IEEEADDR_REQTYPE_EXTENDED
//  364  * @param       SecurityEnable - Security Options
//  365  *
//  366  * @return      afStatus_t
//  367  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  368 afStatus_t ZDP_IEEEAddrReq( uint16 shortAddr, uint16 nodeId, byte ReqType,
ZDP_IEEEAddrReq:
          CFI Block cfiBlock9 Using cfiCommon0
          CFI Function ZDP_IEEEAddrReq
        CODE
//  369                             byte StartIndex, byte SecurityEnable )
//  370 {
        FUNCALL ZDP_IEEEAddrReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 9
        MOV       A,#-0x9
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        LCALL     ?Subroutine61 & 0xFFFF
//  371   uint8 *pBuf = ZDP_TmpBuf;
//  372   byte len = 2 + 1 + 1;  // shortAddr + ReqType + StartIndex.
//  373   zAddrType_t dstAddr;
//  374 
//  375   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  376 
//  377   dstAddr.addrMode = (afAddrMode_t)Addr16Bit;
??CrossCallReturnLabel_281:
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x2
        MOVX      @DPTR,A
//  378   dstAddr.addr.shortAddr = shortAddr;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,R2
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R3
        MOVX      @DPTR,A
//  379 
//  380   *pBuf++ = LO_UINT16( nodeId );
        MOV       A,R4
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      @DPTR,A
//  381   *pBuf++ = HI_UINT16( nodeId );
        MOV       A,R5
        LCALL     ?Subroutine35 & 0xFFFF
//  382 
//  383   *pBuf++ = ReqType;
??CrossCallReturnLabel_52:
        MOVX      @DPTR,A
//  384   *pBuf++ = StartIndex;
        MOV       A,#0x13
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine62 & 0xFFFF
//  385 
//  386   return fillAndSend( &ZDP_TransID, &dstAddr, IEEE_addr_req, len );
??CrossCallReturnLabel_108:
        ; Setup parameters for call to function fillAndSend
        MOV       ?V0,#0x1
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       R1,#0x4
        LJMP      ?Subroutine2 & 0xFFFF
//  387 }
          CFI EndBlock cfiBlock9
//  388 
//  389 /*********************************************************************
//  390  * @fn          ZDP_MatchDescReq
//  391  *
//  392  * @brief       This builds and send a Match_Desc_req message.  This
//  393  *              function sends a broadcast or unicast message
//  394  *              requesting the list of endpoint/interfaces that
//  395  *              match profile ID and cluster IDs.
//  396  *
//  397  * @param       dstAddr - destination address
//  398  * @param       nwkAddr - network address of interest
//  399  * @param       ProfileID - Profile ID
//  400  * @param       NumInClusters - number of input clusters
//  401  * @param       InClusterList - input cluster ID list
//  402  * @param       NumOutClusters - number of output clusters
//  403  * @param       OutClusterList - output cluster ID list
//  404  * @param       SecurityEnable - Security Options
//  405  *
//  406  * @return      afStatus_t
//  407  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  408 afStatus_t ZDP_MatchDescReq( zAddrType_t *dstAddr, uint16 nwkAddr,
ZDP_MatchDescReq:
          CFI Block cfiBlock10 Using cfiCommon0
          CFI Function ZDP_MatchDescReq
        CODE
//  409                                 uint16 ProfileID,
//  410                                 byte NumInClusters, cId_t *InClusterList,
//  411                                 byte NumOutClusters, cId_t *OutClusterList,
//  412                                 byte SecurityEnable )
//  413 {
        FUNCALL ZDP_MatchDescReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV       A,#-0xe
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        LCALL     ?Subroutine61 & 0xFFFF
//  414   uint8 *pBuf = ZDP_TmpBuf;
??CrossCallReturnLabel_282:
        MOV       A,#0x12
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       ?V0,A
//  415   // nwkAddr+ProfileID+NumInClusters+NumOutClusters.
//  416   byte i, len = 2 + 2 + 1 + 1;  // nwkAddr+ProfileID+NumInClusters+NumOutClusters.
//  417 
//  418   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  419 
//  420   len += (NumInClusters + NumOutClusters) * sizeof(uint16);
        MOV       A,R6
        ADD       A,?V0
        CLR       C
        RLC       A
        ADD       A,#0x6
        MOV       R7,A
//  421 
//  422   if ( len >= ZDP_BUF_SZ-1 )
        CLR       C
        SUBB      A,#0x4f
        JC        ??ZDP_MatchDescReq_0
//  423   {
//  424     return afStatus_MEM_FAIL;
        MOV       R1,#0x10
        LJMP      ??ZDP_MatchDescReq_1 & 0xFFFF
//  425   }
//  426 
//  427   // The spec changed in Zigbee 2007 (2.4.3.1.7.1) to not allow sending
//  428   // this command to 0xFFFF.  So, here we will filter this and replace
//  429   // with 0xFFFD to only send to devices with RX ON.  This includes the
//  430   // network address of interest.
//  431   if ( ((dstAddr->addrMode == AddrBroadcast) || (dstAddr->addrMode == Addr16Bit))
//  432       && (dstAddr->addr.shortAddr == NWK_BROADCAST_SHORTADDR_DEVALL) )
??ZDP_MatchDescReq_0:
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V1,A
        MOV       A,#0xf
        XRL       A,?V1
        JZ        ??ZDP_MatchDescReq_2
        MOV       A,#0x2
        XRL       A,?V1
        JNZ       ??ZDP_MatchDescReq_3
??ZDP_MatchDescReq_2:
        MOV       DPL,R2
        MOV       DPH,R3
        MOVX      A,@DPTR
        CPL       A
        JNZ       ??ZDP_MatchDescReq_4
        INC       DPTR
        MOVX      A,@DPTR
        CPL       A
??ZDP_MatchDescReq_4:
        JNZ       ??ZDP_MatchDescReq_3
//  433   {
//  434     dstAddr->addr.shortAddr = NWK_BROADCAST_SHORTADDR_DEVRXON;
        MOV       DPL,R2
        MOV       DPH,R3
        MOV       A,#-0x3
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,#-0x1
        MOVX      @DPTR,A
//  435   }
//  436   if ( nwkAddr == NWK_BROADCAST_SHORTADDR_DEVALL )
??ZDP_MatchDescReq_3:
        MOV       A,#-0x1
        XRL       A,R4
        JNZ       ??ZDP_MatchDescReq_5
        MOV       A,#-0x1
        XRL       A,R5
??ZDP_MatchDescReq_5:
        JNZ       ??ZDP_MatchDescReq_6
//  437   {
//  438     nwkAddr = NWK_BROADCAST_SHORTADDR_DEVRXON;
        MOV       R4,#-0x3
        MOV       R5,#-0x1
//  439   }
//  440 
//  441   *pBuf++ = LO_UINT16( nwkAddr );   // NWKAddrOfInterest
??ZDP_MatchDescReq_6:
        MOV       A,R4
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      @DPTR,A
//  442   *pBuf++ = HI_UINT16( nwkAddr );
        MOV       A,R5
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,#0xe
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine51 & 0xFFFF
//  443 
//  444   *pBuf++ = LO_UINT16( ProfileID );   // Profile ID
??CrossCallReturnLabel_86:
        MOV       A,R4
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        LCALL     ?Subroutine36 & 0xFFFF
//  445   *pBuf++ = HI_UINT16( ProfileID );
??CrossCallReturnLabel_54:
        LCALL     ?Subroutine35 & 0xFFFF
//  446 
//  447   *pBuf++ = NumInClusters; // Input cluster list
??CrossCallReturnLabel_53:
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,R0
        ADD       A,#0x5
        MOV       R0,A
        JNC       ??ZDP_MatchDescReq_7
        INC       R1
//  448   if ( NumInClusters )
??ZDP_MatchDescReq_7:
        MOV       A,R6
        JZ        ??ZDP_MatchDescReq_8
//  449   {
//  450     for (i=0; i<NumInClusters; ++i)  {
        MOV       ?V1,#0x0
        MOV       A,#0x10
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine51 & 0xFFFF
//  451       *pBuf++ = LO_UINT16( InClusterList[i] );
??CrossCallReturnLabel_87:
        LCALL     ?Subroutine10 & 0xFFFF
//  452       *pBuf++ = HI_UINT16( InClusterList[i] );
//  453     }
??CrossCallReturnLabel_0:
        JNC       ??ZDP_MatchDescReq_9
        INC       R1
??ZDP_MatchDescReq_9:
        INC       ?V1
        MOV       A,?V1
        CLR       C
        SUBB      A,R6
        JC        ??CrossCallReturnLabel_87
//  454   }
//  455 
//  456   *pBuf++ = NumOutClusters; // Output cluster list
??ZDP_MatchDescReq_8:
        MOV       DPL,R0
        MOV       DPH,R1
        MOV       A,?V0
        LCALL     ?Subroutine32 & 0xFFFF
//  457   if ( NumOutClusters )
??CrossCallReturnLabel_48:
        JZ        ??ZDP_MatchDescReq_10
//  458   {
//  459     for (i=0; i<NumOutClusters; ++i)  {
        MOV       ?V1,#0x0
        MOV       A,#0x13
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine51 & 0xFFFF
//  460       *pBuf++ = LO_UINT16( OutClusterList[i] );
??CrossCallReturnLabel_88:
        LCALL     ?Subroutine10 & 0xFFFF
//  461       *pBuf++ = HI_UINT16( OutClusterList[i] );
//  462     }
??CrossCallReturnLabel_1:
        JNC       ??ZDP_MatchDescReq_11
        INC       R1
??ZDP_MatchDescReq_11:
        INC       ?V1
        MOV       A,?V1
        CLR       C
        SUBB      A,?V0
        JC        ??CrossCallReturnLabel_88
//  463   }
//  464 
//  465   return fillAndSend( &ZDP_TransID, dstAddr, Match_Desc_req, len );
??ZDP_MatchDescReq_10:
        ; Setup parameters for call to function fillAndSend
        MOV       ?V0,#0x6
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        MOV       A,R7
        MOV       R1,A
        MOV       A,R2
        MOV       R4,A
        MOV       A,R3
        LCALL     ??Subroutine126_0 & 0xFFFF
??CrossCallReturnLabel_244:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 14)
??ZDP_MatchDescReq_1:
        SJMP      ??Subroutine108_0
//  466 }
          CFI EndBlock cfiBlock10

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine35:
          CFI Block cfiCond11 Using cfiCommon0
          CFI Function ZDP_IEEEAddrReq
          CFI Conditional ??CrossCallReturnLabel_52
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond12 Using cfiCommon0
          CFI (cfiCond12) Function ZDP_MatchDescReq
          CFI (cfiCond12) Conditional ??CrossCallReturnLabel_53
          CFI (cfiCond12) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond12) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond12) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond12) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond12) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond12) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond12) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond12) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond12) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond12) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond12) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond12) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond12) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond12) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond12) CFA_SP SP+-2
          CFI (cfiCond12) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker13 Using cfiCommon1
          CFI (cfiPicker13) NoFunction
          CFI (cfiPicker13) Picker
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,R6
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond11
          CFI EndBlock cfiCond12
          CFI EndBlock cfiPicker13

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine10:
          CFI Block cfiCond14 Using cfiCommon0
          CFI Function ZDP_MatchDescReq
          CFI Conditional ??CrossCallReturnLabel_0
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond15 Using cfiCommon0
          CFI (cfiCond15) Function ZDP_MatchDescReq
          CFI (cfiCond15) Conditional ??CrossCallReturnLabel_1
          CFI (cfiCond15) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond15) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond15) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond15) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond15) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond15) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond15) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond15) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond15) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond15) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond15) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond15) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond15) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond15) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond15) CFA_SP SP+-2
          CFI (cfiCond15) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker16 Using cfiCommon1
          CFI (cfiPicker16) NoFunction
          CFI (cfiPicker16) Picker
        MOV       A,?V1
        LCALL     ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_162:
        MOV       A,R4
        ADD       A,?V2
        MOV       ?V2,A
        MOV       A,R5
        ADDC      A,?V3
        MOV       ?V3,A
        MOV       DPL,?V2
        MOV       DPH,A
        LCALL     ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_233:
        LCALL     ?Subroutine102 & 0xFFFF
??CrossCallReturnLabel_163:
        LCALL     ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_136:
        RET
          CFI EndBlock cfiCond14
          CFI EndBlock cfiCond15
          CFI EndBlock cfiPicker16

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine0:
          CFI Block cfiBlock17 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 26)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock17
        REQUIRE ??Subroutine108_0
        ; // Fall through to label ??Subroutine108_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine108_0:
          CFI Block cfiBlock18 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0x6
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock18
//  467 
//  468 /*********************************************************************
//  469  * @fn          ZDP_SimpleDescReq
//  470  *
//  471  * @brief       This builds and send a NWK_Simple_Desc_req
//  472  *              message.  This function sends unicast message to the
//  473  *              destination device.
//  474  *
//  475  * @param       dstAddr - destination address
//  476  * @param       nwkAddr - 16 bit address
//  477  * @param       epIntf - endpoint/interface
//  478  * @param       SecurityEnable - Security Options
//  479  *
//  480  * @return      afStatus_t
//  481  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  482 afStatus_t ZDP_SimpleDescReq( zAddrType_t *dstAddr, uint16 nwkAddr,
ZDP_SimpleDescReq:
          CFI Block cfiBlock19 Using cfiCommon0
          CFI Function ZDP_SimpleDescReq
        CODE
//  483                                     byte endPoint, byte SecurityEnable )
//  484 
//  485 {
        FUNCALL ZDP_SimpleDescReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
//  486   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  487 
//  488   ZDP_TmpBuf[0] = LO_UINT16( nwkAddr );
        LCALL     ?Subroutine16 & 0xFFFF
//  489   ZDP_TmpBuf[1] = HI_UINT16( nwkAddr );
??CrossCallReturnLabel_15:
        LCALL     ?Subroutine12 & 0xFFFF
//  490   ZDP_TmpBuf[2] = endPoint;
//  491 
//  492   return fillAndSend( &ZDP_TransID, dstAddr, Simple_Desc_req, 3 );
??CrossCallReturnLabel_4:
        ; Setup parameters for call to function fillAndSend
        MOV       ?V0,#0x4
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       R1,#0x3
        LJMP      ?Subroutine8 & 0xFFFF
//  493 }
          CFI EndBlock cfiBlock19

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine16:
          CFI Block cfiCond20 Using cfiCommon0
          CFI Function ZDP_NWKAddrOfInterestReq
          CFI Conditional ??CrossCallReturnLabel_14
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond21 Using cfiCommon0
          CFI (cfiCond21) Function ZDP_SimpleDescReq
          CFI (cfiCond21) Conditional ??CrossCallReturnLabel_15
          CFI (cfiCond21) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond21) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond21) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond21) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond21) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond21) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond21) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond21) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond21) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond21) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond21) CFA_SP SP+-2
          CFI (cfiCond21) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker22 Using cfiCommon1
          CFI (cfiPicker22) NoFunction
          CFI (cfiPicker22) Picker
        MOV       DPTR,#ZDP_TmpBuf
        LCALL     ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_214:
        MOV       A,R4
        LCALL     ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_129:
        MOV       A,R5
        RET
          CFI EndBlock cfiCond20
          CFI EndBlock cfiCond21
          CFI EndBlock cfiPicker22

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine2:
          CFI Block cfiBlock23 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP102_8
        LCALL     ??Subroutine127_0 & 0xFFFF
??CrossCallReturnLabel_246:
        LCALL     ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock23
        REQUIRE ??Subroutine109_0
        ; // Fall through to label ??Subroutine109_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine109_0:
          CFI Block cfiBlock24 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 19)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       A,#0x9
          CFI EndBlock cfiBlock24
        REQUIRE ??Subroutine110_0
        ; // Fall through to label ??Subroutine110_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine110_0:
          CFI Block cfiBlock25 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Valid
        MOV       R7,#0x2
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock25
//  494 
//  495 /*********************************************************************
//  496  * @fn          ZDP_UserDescSet
//  497  *
//  498  * @brief       This builds and send a User_Desc_set message to set
//  499  *              the user descriptor.  This function sends unicast
//  500  *              message to the destination device.
//  501  *
//  502  * @param       dstAddr - destination address
//  503  * @param       nwkAddr - 16 bit address
//  504  * @param       UserDescriptor - user descriptor
//  505  * @param       SecurityEnable - Security Options
//  506  *
//  507  * @return      afStatus_t
//  508  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  509 afStatus_t ZDP_UserDescSet( zAddrType_t *dstAddr, uint16 nwkAddr,
ZDP_UserDescSet:
          CFI Block cfiBlock26 Using cfiCommon0
          CFI Function ZDP_UserDescSet
        CODE
//  510                           UserDescriptorFormat_t *UserDescriptor,
//  511                           byte SecurityEnable )
//  512 {
        FUNCALL ZDP_UserDescSet, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_UserDescSet, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_UserDescSet, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        MOV       A,#-0xf
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 0
        LCALL     ?Subroutine87 & 0xFFFF
//  513   uint8 *pBuf = ZDP_TmpBuf;
??CrossCallReturnLabel_296:
        MOV       ?V2,R0
        MOV       ?V3,A
        MOV       A,#0xf
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine40 & 0xFFFF
//  514   byte len = (UserDescriptor->len < AF_MAX_USER_DESCRIPTOR_LEN) ?
//  515               UserDescriptor->len : AF_MAX_USER_DESCRIPTOR_LEN;
??CrossCallReturnLabel_63:
        MOV       R2,A
        CLR       C
        SUBB      A,#0x10
        JNC       ??ZDP_UserDescSet_0
        MOV       ?V0,R2
        SJMP      ??ZDP_UserDescSet_1
??ZDP_UserDescSet_0:
        MOV       ?V0,#0x10
//  516   byte addrLen = 2;
//  517 
//  518   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  519 
//  520   *pBuf++ = LO_UINT16( nwkAddr );
??ZDP_UserDescSet_1:
        MOV       A,R4
        MOV       DPL,?V2
        MOV       DPH,?V3
        MOVX      @DPTR,A
//  521   *pBuf++ = HI_UINT16( nwkAddr );
        MOV       A,R5
        LCALL     ?Subroutine94 & 0xFFFF
//  522 
//  523   *pBuf++ = len;
??CrossCallReturnLabel_150:
        INC       DPTR
        MOV       A,?V0
        LCALL     ?Subroutine29 & 0xFFFF
//  524   addrLen = 3;
//  525 
//  526   pBuf = osal_memcpy( pBuf, UserDescriptor->desc, len );
??CrossCallReturnLabel_35:
        MOV       R1,DPL
        MOV       R2,DPH
        MOV       ?V4,R1
        MOV       ?V5,R2
        MOV       ?V6,#0x0
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 18)
        MOV       R4,?V0
        MOV       R5,#0x0
        MOV       A,?V2
        ADD       A,#0x3
        MOV       R2,A
        CLR       A
        ADDC      A,?V3
        MOV       R3,A
        LCALL     ??Subroutine119_0 & 0xFFFF
??CrossCallReturnLabel_204:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
//  527   osal_memset( pBuf, AF_USER_DESCRIPTOR_FILL, AF_MAX_USER_DESCRIPTOR_LEN-len );
        ; Setup parameters for call to function osal_memset
        MOV       R0,?V0
        MOV       A,#0x10
        CLR       C
        SUBB      A,R0
        MOV       R4,A
        SUBB      A,0xE0 /* A   */
        MOV       R5,A
        MOV       R1,#0x20
        LCALL     `??osal_memset::?relay`; Banked call to: osal_memset
//  528 
//  529   return fillAndSend( &ZDP_TransID, dstAddr, User_Desc_set, (AF_MAX_USER_DESCRIPTOR_LEN + addrLen) );
        ; Setup parameters for call to function fillAndSend
        MOV       ?V2,#0x14
        MOV       ?V3,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV       R1,#0x13
        LCALL     ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_243:
          CFI EndBlock cfiBlock26
        REQUIRE ?Subroutine3
        ; // Fall through to label ?Subroutine3
//  530 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine3:
          CFI Block cfiBlock27 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 17)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Valid
        MOV       R7,#0x7
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock27

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine29:
          CFI Block cfiCond28 Using cfiCommon0
          CFI Function ZDP_SendData
          CFI Conditional ??CrossCallReturnLabel_37
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond29 Using cfiCommon0
          CFI (cfiCond29) Function ZDP_UserDescSet
          CFI (cfiCond29) Conditional ??CrossCallReturnLabel_35
          CFI (cfiCond29) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond29) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond29) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond29) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond29) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond29) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond29) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond29) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond29) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond29) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond29) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond29) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond29) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond29) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond29) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond29) CFA_SP SP+-2
          CFI (cfiCond29) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond30 Using cfiCommon0
          CFI (cfiCond30) Function ZDP_NodeDescMsg
          CFI (cfiCond30) Conditional ??CrossCallReturnLabel_36
          CFI (cfiCond30) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond30) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond30) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond30) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond30) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond30) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond30) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond30) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond30) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond30) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond30) CFA_SP SP+-2
          CFI (cfiCond30) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker31 Using cfiCommon1
          CFI (cfiPicker31) NoFunction
          CFI (cfiPicker31) Picker
        LCALL     ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_184:
        RET
          CFI EndBlock cfiCond28
          CFI EndBlock cfiCond29
          CFI EndBlock cfiCond30
          CFI EndBlock cfiPicker31

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine92:
          CFI Block cfiCond32 Using cfiCommon0
          CFI Function ZDP_SendData
          CFI Conditional ??CrossCallReturnLabel_184, ??CrossCallReturnLabel_37
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond33 Using cfiCommon0
          CFI (cfiCond33) Function ZDP_UserDescSet
          CFI (cfiCond33) Conditional ??CrossCallReturnLabel_184, ??CrossCallReturnLabel_35
          CFI (cfiCond33) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond33) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond33) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond33) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond33) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond33) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond33) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond33) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond33) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond33) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond33) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond33) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond33) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond33) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond33) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond33) CFA_SP SP+-4
          CFI (cfiCond33) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond34 Using cfiCommon0
          CFI (cfiCond34) Function ZDP_NodeDescMsg
          CFI (cfiCond34) Conditional ??CrossCallReturnLabel_184, ??CrossCallReturnLabel_36
          CFI (cfiCond34) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond34) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond34) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond34) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond34) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond34) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond34) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond34) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond34) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond34) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond34) CFA_SP SP+-4
          CFI (cfiCond34) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond35 Using cfiCommon0
          CFI (cfiCond35) Function ZDP_NodeDescMsg
          CFI (cfiCond35) Conditional ??CrossCallReturnLabel_185, ??CrossCallReturnLabel_178
          CFI (cfiCond35) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond35) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond35) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond35) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond35) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond35) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond35) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond35) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond35) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond35) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond35) CFA_SP SP+-4
          CFI (cfiCond35) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond36 Using cfiCommon0
          CFI (cfiCond36) Function ZDP_NodeDescMsg
          CFI (cfiCond36) Conditional ??CrossCallReturnLabel_185, ??CrossCallReturnLabel_179
          CFI (cfiCond36) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond36) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond36) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond36) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond36) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond36) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond36) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond36) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond36) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond36) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond36) CFA_SP SP+-4
          CFI (cfiCond36) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond37 Using cfiCommon0
          CFI (cfiCond37) Function ZDP_MgmtRtgRsp
          CFI (cfiCond37) Conditional ??CrossCallReturnLabel_185, ??CrossCallReturnLabel_180
          CFI (cfiCond37) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond37) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond37) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond37) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond37) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond37) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond37) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond37) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond37) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond37) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond37) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond37) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond37) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond37) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond37) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond37) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond37) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond37) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond37) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond37) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond37) CFA_SP SP+-4
          CFI (cfiCond37) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond38 Using cfiCommon0
          CFI (cfiCond38) Function ZDP_NodeDescMsg
          CFI (cfiCond38) Conditional ??CrossCallReturnLabel_186, ??CrossCallReturnLabel_181
          CFI (cfiCond38) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond38) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond38) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond38) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond38) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond38) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond38) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond38) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond38) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond38) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond38) CFA_SP SP+-4
          CFI (cfiCond38) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond39 Using cfiCommon0
          CFI (cfiCond39) Function ZDP_MgmtBindRsp
          CFI (cfiCond39) Conditional ??CrossCallReturnLabel_186, ??CrossCallReturnLabel_182
          CFI (cfiCond39) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond39) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond39) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond39) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond39) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond39) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond39) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond39) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond39) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond39) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond39) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond39) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond39) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond39) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond39) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond39) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond39) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond39) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond39) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond39) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond39) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond39) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond39) CFA_SP SP+-4
          CFI (cfiCond39) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond40 Using cfiCommon0
          CFI (cfiCond40) Function zdpProcessAddrReq
          CFI (cfiCond40) Conditional ??CrossCallReturnLabel_186, ??CrossCallReturnLabel_183
          CFI (cfiCond40) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond40) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond40) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond40) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond40) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond40) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond40) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond40) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond40) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond40) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond40) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond40) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond40) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond40) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond40) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond40) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond40) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond40) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond40) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond40) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond40) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond40) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond40) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond40) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond40) CFA_SP SP+-4
          CFI (cfiCond40) CFA_XSP16 add(XSP16, 46)
          CFI Block cfiPicker41 Using cfiCommon1
          CFI (cfiPicker41) NoFunction
          CFI (cfiPicker41) Picker
        LCALL     ?Subroutine103 & 0xFFFF
??CrossCallReturnLabel_187:
        INC       DPTR
        RET
          CFI EndBlock cfiCond32
          CFI EndBlock cfiCond33
          CFI EndBlock cfiCond34
          CFI EndBlock cfiCond35
          CFI EndBlock cfiCond36
          CFI EndBlock cfiCond37
          CFI EndBlock cfiCond38
          CFI EndBlock cfiCond39
          CFI EndBlock cfiCond40
          CFI EndBlock cfiPicker41
//  531 
//  532 /*********************************************************************
//  533  * @fn          ZDP_ServerDiscReq
//  534  *
//  535  * @brief       Build and send a Server_Discovery_req request message.
//  536  *
//  537  * @param       serverMask - 16-bit bit-mask of server services being sought.
//  538  * @param       SecurityEnable - Security Options
//  539  *
//  540  * @return      afStatus_t
//  541  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  542 afStatus_t ZDP_ServerDiscReq( uint16 serverMask, byte SecurityEnable )
ZDP_ServerDiscReq:
          CFI Block cfiBlock42 Using cfiCommon0
          CFI Function ZDP_ServerDiscReq
        CODE
//  543 {
        FUNCALL ZDP_ServerDiscReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 9
        MOV       A,#-0x9
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        LCALL     ?Subroutine61 & 0xFFFF
//  544   uint8 *pBuf = ZDP_TmpBuf;
//  545   zAddrType_t dstAddr;
//  546 
//  547   dstAddr.addrMode = AddrBroadcast;
??CrossCallReturnLabel_283:
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine17 & 0xFFFF
//  548   dstAddr.addr.shortAddr = NWK_BROADCAST_SHORTADDR_DEVRXON;
//  549 
//  550   *pBuf++ = LO_UINT16( serverMask );
??CrossCallReturnLabel_16:
        MOV       A,R2
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      @DPTR,A
//  551   *pBuf = HI_UINT16( serverMask );
        MOV       A,R3
        INC       DPTR
        MOVX      @DPTR,A
//  552 
//  553   FillAndSendTxOptions( &ZDP_TransID, &dstAddr, Server_Discovery_req, 2,
//  554              ((SecurityEnable) ? AF_EN_SECURITY : AF_TX_OPTIONS_NONE) );
        MOV       A,R6
        MOV       DPTR,#ZDP_TxOptions
        JZ        ??ZDP_ServerDiscReq_0
        MOV       A,#0x40
        SJMP      ??ZDP_ServerDiscReq_1
??ZDP_ServerDiscReq_0:
        CLR       A
??ZDP_ServerDiscReq_1:
        MOVX      @DPTR,A
        ; Setup parameters for call to function fillAndSend
        MOV       ?V0,#0x15
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       R1,#0x2
        MOV       A,R1
        LCALL     ?XSTACK_DISP102_8
        LCALL     ??Subroutine127_0 & 0xFFFF
??CrossCallReturnLabel_247:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,R1
        MOV       R1,A
        MOV       DPTR,#ZDP_TxOptions
        CLR       A
        MOVX      @DPTR,A
        LJMP      ??Subroutine109_0 & 0xFFFF
//  555 }
          CFI EndBlock cfiBlock42
//  556 
//  557 /*********************************************************************
//  558  * @fn          ZDP_DeviceAnnce
//  559  *
//  560  * @brief       This builds and send a Device_Annce message.  This
//  561  *              function sends a broadcast message.
//  562  *
//  563  * @param       nwkAddr - 16 bit address of the device
//  564  * @param       IEEEAddr - 64 bit address of the device
//  565  * @param       capabilities - device capabilities.  This field is only
//  566  *                 sent for v1.1 networks.
//  567  * @param       SecurityEnable - Security Options
//  568  *
//  569  * @return      afStatus_t
//  570  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  571 afStatus_t ZDP_DeviceAnnce( uint16 nwkAddr, uint8 *IEEEAddr,
ZDP_DeviceAnnce:
          CFI Block cfiBlock43 Using cfiCommon0
          CFI Function ZDP_DeviceAnnce
        CODE
//  572                               byte capabilities, byte SecurityEnable )
//  573 {
        FUNCALL ZDP_DeviceAnnce, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_DeviceAnnce, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 9
        MOV       A,#-0x9
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,R1
        MOV       R6,A
//  574   zAddrType_t dstAddr;
//  575   uint8 len;
//  576 
//  577   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  578 
//  579   dstAddr.addrMode = (afAddrMode_t)AddrBroadcast;
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine17 & 0xFFFF
//  580   dstAddr.addr.shortAddr = NWK_BROADCAST_SHORTADDR_DEVRXON;
//  581 
//  582   ZDP_TmpBuf[0] = LO_UINT16( nwkAddr );
??CrossCallReturnLabel_17:
        LCALL     ?Subroutine43 & 0xFFFF
??CrossCallReturnLabel_209:
        MOV       A,R2
        LCALL     ?Subroutine19 & 0xFFFF
//  583   ZDP_TmpBuf[1] = HI_UINT16( nwkAddr );
??CrossCallReturnLabel_21:
        MOV       A,R3
        MOVX      @DPTR,A
//  584   osal_cpyExtAddr( &ZDP_TmpBuf[2], IEEEAddr );
        ; Setup parameters for call to function sAddrExtCpy
        MOV       DPTR,#ZDP_TmpBuf
        MOVX      A,@DPTR
        ADD       A,#0x2
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       R3,A
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
//  585   len = 2 + Z_EXTADDR_LEN;
//  586 
//  587   ZDP_TmpBuf[10] = capabilities;
        LCALL     ??Subroutine132_0 & 0xFFFF
??CrossCallReturnLabel_302:
        XCH       A,R0
        ADD       A,#0xa
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        MOV       A,R6
        MOVX      @DPTR,A
//  588   len++;
//  589 
//  590   return fillAndSend( &ZDP_TransID, &dstAddr, Device_annce, len );
        ; Setup parameters for call to function fillAndSend
        MOV       ?V0,#0x13
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       R1,#0xb
        LJMP      ?Subroutine2 & 0xFFFF
//  591 }
          CFI EndBlock cfiBlock43

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine17:
          CFI Block cfiCond44 Using cfiCommon0
          CFI Function ZDP_ServerDiscReq
          CFI Conditional ??CrossCallReturnLabel_16
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond45 Using cfiCommon0
          CFI (cfiCond45) Function ZDP_DeviceAnnce
          CFI (cfiCond45) Conditional ??CrossCallReturnLabel_17
          CFI (cfiCond45) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond45) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond45) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond45) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond45) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond45) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond45) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond45) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond45) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond45) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond45) CFA_SP SP+-2
          CFI (cfiCond45) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker46 Using cfiCommon1
          CFI (cfiPicker46) NoFunction
          CFI (cfiPicker46) Picker
        LCALL     ?Subroutine90 & 0xFFFF
??CrossCallReturnLabel_145:
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond44
          CFI EndBlock cfiCond45
          CFI EndBlock cfiPicker46

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine90:
          CFI Block cfiCond47 Using cfiCommon0
          CFI Function ZDP_NwkAddrReq
          CFI Conditional ??CrossCallReturnLabel_144
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond48 Using cfiCommon0
          CFI (cfiCond48) Function ZDP_ServerDiscReq
          CFI (cfiCond48) Conditional ??CrossCallReturnLabel_145, ??CrossCallReturnLabel_16
          CFI (cfiCond48) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond48) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond48) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond48) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond48) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond48) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond48) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond48) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond48) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond48) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond48) CFA_SP SP+-4
          CFI (cfiCond48) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond49 Using cfiCommon0
          CFI (cfiCond49) Function ZDP_DeviceAnnce
          CFI (cfiCond49) Conditional ??CrossCallReturnLabel_145, ??CrossCallReturnLabel_17
          CFI (cfiCond49) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond49) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond49) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond49) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond49) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond49) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond49) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond49) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond49) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond49) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond49) CFA_SP SP+-4
          CFI (cfiCond49) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker50 Using cfiCommon1
          CFI (cfiPicker50) NoFunction
          CFI (cfiPicker50) Picker
        MOV       A,#0xf
        MOVX      @DPTR,A
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,#-0x3
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,#-0x1
        RET
          CFI EndBlock cfiCond47
          CFI EndBlock cfiCond48
          CFI EndBlock cfiCond49
          CFI EndBlock cfiPicker50
//  592 
//  593 /*********************************************************************
//  594  * @fn          ZDP_ParentAnnce
//  595  *
//  596  * @brief       This builds and send a Parent_Annce and Parent_Annce_Rsp
//  597  *              messages, it will depend on the clusterID parameter.
//  598  *
//  599  * @param       TransSeq - ZDP Transaction Sequence Number
//  600  * @param       dstAddr - destination address
//  601  * @param       numberOfChildren - 8 bit number of children
//  602  * @param       childInfo - list of children information (ExtAddr and Age)
//  603  * @param       clusterID - Parent_annce or Parent_annce_rsp
//  604  * @param       SecurityEnable - Security Options
//  605  *
//  606  * @return      afStatus_t
//  607  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  608 afStatus_t ZDP_ParentAnnce( uint8 *TransSeq,
ZDP_ParentAnnce:
          CFI Block cfiBlock51 Using cfiCommon0
          CFI Function ZDP_ParentAnnce
        CODE
//  609                             zAddrType_t *dstAddr,
//  610                             uint8 numberOfChildren,
//  611                             uint8 *childInfo,
//  612                             cId_t clusterID,
//  613                             uint8 SecurityEnable )
//  614 {
        FUNCALL ZDP_ParentAnnce, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_ParentAnnce, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_ParentAnnce, ZDApp_SetParentAnnceTimer
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_ParentAnnce, osal_start_timerEx
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_ParentAnnce, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        MOV       A,#-0x16
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 0
        MOV       ?V4,R2
        MOV       ?V5,R3
        MOV       A,R4
        MOV       R6,A
        MOV       A,R5
        MOV       R7,A
        MOV       ?V8,R1
//  615   uint8 *pBuf = ZDP_TmpBuf;
        LCALL     ?Subroutine57 & 0xFFFF
//  616   ZDO_ChildInfo_t *pChildInfo;
//  617   uint8 i, len;
//  618   uint8 *numOfChild;
//  619 
//  620   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  621 
//  622   pChildInfo = (ZDO_ChildInfo_t *)childInfo;
//  623 
//  624   if ( dstAddr->addrMode == AddrBroadcast )
??CrossCallReturnLabel_307:
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,#0xf
        JNZ       ??ZDP_ParentAnnce_0
//  625   {
//  626     // Make sure is sent to 0xFFFC
//  627     dstAddr->addr.shortAddr = NWK_BROADCAST_SHORTADDR_DEVZCZR;
        MOV       DPL,R4
        MOV       DPH,R5
        MOV       A,#-0x4
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,#-0x1
        MOVX      @DPTR,A
//  628   }
//  629   len = 1;
??ZDP_ParentAnnce_0:
        MOV       ?V6,#0x1
        MOV       A,#0x18
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine41 & 0xFFFF
//  630   if ( clusterID == Parent_annce_rsp )
??CrossCallReturnLabel_67:
        MOV       A,#0x1f
        XRL       A,?V2
        JNZ       ??ZDP_ParentAnnce_1
        MOV       A,#-0x80
        XRL       A,?V3
??ZDP_ParentAnnce_1:
        JNZ       ??CrossCallReturnLabel_25
//  631   {
//  632     // + Status Byte
//  633     len += 1;
        MOV       ?V6,#0x2
//  634     // Set the status bit to success
//  635     *pBuf++ = 0;
        MOV       DPL,R2
        MOV       DPH,R3
        CLR       A
        LCALL     ?Subroutine21 & 0xFFFF
//  636   }
//  637 
//  638   numOfChild = pBuf;
??CrossCallReturnLabel_25:
        MOV       ?V0,R2
        MOV       ?V1,R3
//  639   *pBuf++ = numberOfChildren;
        MOV       DPL,R2
        MOV       DPH,R3
        MOV       A,R1
        LCALL     ?Subroutine21 & 0xFFFF
//  640 
//  641   for ( i = 0; i < MAX_PARENT_ANNCE_CHILD; i++ )
??CrossCallReturnLabel_26:
        MOV       ?V7,#0x0
        MOV       A,#0x16
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       ?V12,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V13,A
//  642   {
//  643     pBuf = osal_cpyExtAddr( pBuf, pChildInfo[childIndex].extAddr );
??ZDP_ParentAnnce_2:
        ; Setup parameters for call to function sAddrExtCpy
        MOV       DPTR,#childIndex
        MOVX      A,@DPTR
        MOV       ?V10,A
        MOV       ?V11,#0x0
        MOV       A,#0x3
        MOV       R0,#?V10
        LCALL     ?S_SHL
        MOV       A,?V12
        ADD       A,?V10
        MOV       R4,A
        MOV       A,?V13
        ADDC      A,?V11
        MOV       R5,A
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
//  644     childIndex++;
        MOV       DPTR,#childIndex
        MOVX      A,@DPTR
        INC       A
        MOVX      @DPTR,A
//  645 
//  646     len += Z_EXTADDR_LEN;
        MOV       A,#0x8
        ADD       A,?V6
        MOV       ?V6,A
//  647 
//  648     if ( childIndex == numberOfChildren )
        MOVX      A,@DPTR
        XRL       A,?V8
        JNZ       ??ZDP_ParentAnnce_3
//  649     {
//  650       pBuf = numOfChild;
//  651       *pBuf = i + 1;
        MOV       A,#0x1
        ADD       A,?V7
        MOV       DPL,?V0
        MOV       DPH,?V1
        MOVX      @DPTR,A
//  652       // All childs are taken, restart index and go out
//  653       childIndex = 0;
        MOV       DPTR,#childIndex
        CLR       A
        MOVX      @DPTR,A
//  654       return fillAndSend( TransSeq, dstAddr, clusterID, len );
        ; Setup parameters for call to function fillAndSend
        SJMP      ??ZDP_ParentAnnce_4
//  655     }
//  656   }
??ZDP_ParentAnnce_3:
        INC       ?V7
        MOV       A,?V7
        CLR       C
        SUBB      A,#0xa
        JC        ??ZDP_ParentAnnce_2
//  657 
//  658   pBuf = numOfChild;
//  659   *pBuf = MAX_PARENT_ANNCE_CHILD;
        MOV       DPL,?V0
        MOV       DPH,?V1
        MOV       A,#0xa
        MOVX      @DPTR,A
//  660   if ( childIndex < numberOfChildren )
        MOV       DPTR,#childIndex
        MOVX      A,@DPTR
        CLR       C
        SUBB      A,?V8
        JNC       ??ZDP_ParentAnnce_4
//  661   {
//  662     if ( clusterID == Parent_annce )
        MOV       A,#0x1f
        XRL       A,?V2
        ORL       A,?V3
        JNZ       ??ZDP_ParentAnnce_5
//  663     {
//  664       ZDApp_SetParentAnnceTimer();
        ; Setup parameters for call to function ZDApp_SetParentAnnceTimer
        LCALL     `??ZDApp_SetParentAnnceTimer::?relay`; Banked call to: ZDApp_SetParentAnnceTimer
        SJMP      ??ZDP_ParentAnnce_4
//  665     }
//  666     if ( clusterID == Parent_annce_rsp )
??ZDP_ParentAnnce_5:
        MOV       A,#0x1f
        XRL       A,?V2
        JNZ       ??ZDP_ParentAnnce_6
        MOV       A,#-0x80
        XRL       A,?V3
??ZDP_ParentAnnce_6:
        JNZ       ??ZDP_ParentAnnce_4
//  667     {
//  668       osal_start_timerEx( ZDAppTaskID, ZDO_PARENT_ANNCE_EVT, 10 );
        ; Setup parameters for call to function osal_start_timerEx
        MOV       DPTR,#__Constant_a
        LCALL     ?PUSH_XSTACK8_X_FOUR
          CFI CFA_XSP16 add(XSP16, 26)
        MOV       R2,#0x0
        MOV       R3,#0x40
        MOV       DPTR,#ZDAppTaskID
        MOVX      A,@DPTR
        MOV       R1,A
        LCALL     `??osal_start_timerEx::?relay`; Banked call to: osal_start_timerEx
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
//  669     }
//  670   }
//  671 
//  672   return fillAndSend( TransSeq, dstAddr, clusterID, len );
??ZDP_ParentAnnce_4:
        ; Setup parameters for call to function fillAndSend
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       R1,?V6
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        MOV       R2,?V4
        MOV       R3,?V5
        LCALL     ??Subroutine128_0 & 0xFFFF
??CrossCallReturnLabel_253:
        LJMP      ??Subroutine122_0 & 0xFFFF
//  673 }
          CFI EndBlock cfiBlock51

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine41:
          CFI Block cfiCond52 Using cfiCommon0
          CFI Function ZDP_SendData
          CFI Conditional ??CrossCallReturnLabel_66
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond53 Using cfiCommon0
          CFI (cfiCond53) Function ZDP_ParentAnnce
          CFI (cfiCond53) Conditional ??CrossCallReturnLabel_67
          CFI (cfiCond53) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond53) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond53) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond53) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond53) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond53) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond53) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond53) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond53) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond53) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond53) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond53) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond53) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond53) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond53) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond53) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond53) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond53) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond53) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond53) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond53) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond53) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond53) CFA_SP SP+-2
          CFI (cfiCond53) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond54 Using cfiCommon0
          CFI (cfiCond54) Function zdpProcessAddrReq
          CFI (cfiCond54) Conditional ??CrossCallReturnLabel_68
          CFI (cfiCond54) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond54) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond54) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond54) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond54) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond54) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond54) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond54) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond54) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond54) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond54) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond54) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond54) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond54) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond54) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond54) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond54) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond54) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond54) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond54) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond54) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond54) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond54) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond54) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond54) CFA_SP SP+-2
          CFI (cfiCond54) CFA_XSP16 add(XSP16, 46)
          CFI Block cfiCond55 Using cfiCommon0
          CFI (cfiCond55) Function zdpProcessAddrReq
          CFI (cfiCond55) Conditional ??CrossCallReturnLabel_69
          CFI (cfiCond55) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond55) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond55) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond55) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond55) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond55) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond55) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond55) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond55) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond55) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond55) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond55) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond55) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond55) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond55) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond55) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond55) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond55) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond55) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond55) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond55) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond55) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond55) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond55) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond55) CFA_SP SP+-2
          CFI (cfiCond55) CFA_XSP16 add(XSP16, 46)
          CFI Block cfiPicker56 Using cfiCommon1
          CFI (cfiPicker56) NoFunction
          CFI (cfiPicker56) Picker
        MOVX      A,@DPTR
        MOV       ?V2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V3,A
        RET
          CFI EndBlock cfiCond52
          CFI EndBlock cfiCond53
          CFI EndBlock cfiCond54
          CFI EndBlock cfiCond55
          CFI EndBlock cfiPicker56
//  674 
//  675 /*********************************************************************
//  676  * Address Responses
//  677  */
//  678 
//  679 /*********************************************************************
//  680  * @fn      zdpProcessAddrReq
//  681  *
//  682  * @brief   Process an incoming NWK_addr_req or IEEE_addr_req message and then
//  683  *          build and send a corresponding NWK_addr_rsp or IEEE_addr_rsp msg.
//  684  *
//  685  * @param   inMsg - incoming message
//  686  *
//  687  * @return  none
//  688  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  689 void zdpProcessAddrReq( zdoIncomingMsg_t *inMsg )
zdpProcessAddrReq:
          CFI Block cfiBlock57 Using cfiCommon0
          CFI Function zdpProcessAddrReq
        CODE
//  690 {
        FUNCALL zdpProcessAddrReq, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 46, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 46, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zdpProcessAddrReq, AssocGetWithExt
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 46, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 46, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zdpProcessAddrReq, AssocGetWithShort
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 46, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 46, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zdpProcessAddrReq, AddrMgrEntryGet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 46, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 46, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zdpProcessAddrReq, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 46, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 46, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zdpProcessAddrReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 46, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 46, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zdpProcessAddrReq, AssocMakeList
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 46, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 46, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zdpProcessAddrReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 46, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 46, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zdpProcessAddrReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 48, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 48, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        REQUIRE ?V14
        REQUIRE ?V15
        MOV       A,#-0x18
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 22
        MOV       A,#-0x16
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 46)
        MOV       ?V8,R2
        MOV       ?V9,R3
//  691   associated_devices_t *pAssoc;
//  692   uint8 reqType;
//  693   uint16 aoi = INVALID_NODE_ADDR;
        MOV       ?V2,#-0x2
        MOV       ?V3,#-0x1
//  694   uint8 *ieee = NULL;
        MOV       R6,#0x0
        MOV       R7,#0x0
//  695 
//  696   reqType = inMsg->asdu[(inMsg->clusterID == NWK_addr_req) ? Z_EXTADDR_LEN : sizeof( uint16 ) ];
        MOV       A,R2
        ADD       A,#0xc
        MOV       ?V12,A
        CLR       A
        ADDC      A,?V9
        MOV       ?V13,A
        MOV       DPL,?V12
        MOV       DPH,A
        LCALL     ??Subroutine134_0 & 0xFFFF
??CrossCallReturnLabel_303:
        MOV       A,R2
        ORL       A,R3
        JNZ       ??zdpProcessAddrReq_0
        MOV       R4,#0x8
        SJMP      ??zdpProcessAddrReq_1
??zdpProcessAddrReq_0:
        MOV       R4,#0x2
??zdpProcessAddrReq_1:
        MOV       A,?V8
        ADD       A,#0x13
        MOV       ?V14,A
        CLR       A
        ADDC      A,?V9
        MOV       ?V15,A
        MOV       DPL,?V14
        MOV       DPH,A
        LCALL     ??Subroutine117_0 & 0xFFFF
??CrossCallReturnLabel_191:
        ADD       A,R4
        MOV       DPL,A
        CLR       A
        ADDC      A,R1
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       ?V5,A
//  697 
//  698   if ( inMsg->clusterID == NWK_addr_req )
        MOV       A,?V8
        ADD       A,#0xb
        MOV       ?V10,A
        CLR       A
        ADDC      A,?V9
        MOV       ?V11,A
        MOV       A,R2
        ORL       A,R3
        JNZ       ??zdpProcessAddrReq_2
//  699 
//  700   {
//  701     ieee = inMsg->asdu;
        MOV       A,R0
        MOV       R6,A
        MOV       A,R1
        MOV       R7,A
//  702 
//  703     if ( osal_ExtAddrEqual( saveExtAddr, ieee ) )
        ; Setup parameters for call to function sAddrExtCmp
        MOV       A,R0
        MOV       R4,A
        MOV       A,R1
        MOV       R5,A
        MOV       R2,#saveExtAddr & 0xff
        MOV       R3,#(saveExtAddr >> 8) & 0xff
        LCALL     `??sAddrExtCmp::?relay`; Banked call to: sAddrExtCmp
        MOV       A,R1
        JZ        ??zdpProcessAddrReq_3
//  704     {
//  705       aoi = ZDAppNwkAddr.addr.shortAddr;
        MOV       DPTR,#ZDAppNwkAddr
        LCALL     ?Subroutine41 & 0xFFFF
//  706     }
??CrossCallReturnLabel_68:
        LJMP      ??zdpProcessAddrReq_4 & 0xFFFF
//  707     // Handle response for sleeping end devices
//  708     else if ( (ZSTACK_ROUTER_BUILD)
//  709       && (((pAssoc = AssocGetWithExt( ieee )) != NULL)
//  710              && ((pAssoc->nodeRelation == CHILD_RFD) || (pAssoc->nodeRelation == CHILD_RFD_RX_IDLE)) ) )
??zdpProcessAddrReq_3:
        ; Setup parameters for call to function AssocGetWithExt
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        LCALL     `??AssocGetWithExt::?relay`; Banked call to: AssocGetWithExt
        MOV       A,R2
        ORL       A,R3
        JNZ       $+5
        LJMP      ??zdpProcessAddrReq_5 & 0xFFFF
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       A,#0x1
        XRL       A,R0
        JZ        ??zdpProcessAddrReq_6
        MOV       A,#0x2
        XRL       A,R0
        JZ        $+5
        LJMP      ??zdpProcessAddrReq_5 & 0xFFFF
//  711     {
//  712       aoi = pAssoc->shortAddr;
??zdpProcessAddrReq_6:
        MOV       DPL,R2
        MOV       DPH,R3
        LCALL     ?Subroutine41 & 0xFFFF
//  713       if ( reqType != ZDP_ADDR_REQTYPE_SINGLE )
??CrossCallReturnLabel_69:
        MOV       A,?V5
        JNZ       ??zdpProcessAddrReq_7
        SJMP      ??zdpProcessAddrReq_4
//  714         reqType = 0xFF; // Force Invalid
//  715     }
//  716   }
//  717   else  // if ( inMsg->clusterID == IEEE_addr_req )
//  718   {
//  719     aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
??zdpProcessAddrReq_2:
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      A,@DPTR
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       A,R2
        ADD       A,R6
        MOV       ?V2,A
        CLR       A
        ADDC      A,R1
        MOV       ?V3,A
//  720 
//  721     if ( aoi == ZDAppNwkAddr.addr.shortAddr )
        MOV       DPTR,#ZDAppNwkAddr
        MOVX      A,@DPTR
        XRL       A,R2
        JNZ       ??zdpProcessAddrReq_8
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R1
??zdpProcessAddrReq_8:
        JNZ       ??zdpProcessAddrReq_9
//  722     {
//  723       ieee = saveExtAddr;
        MOV       R6,#saveExtAddr & 0xff
        MOV       R7,#(saveExtAddr >> 8) & 0xff
        SJMP      ??zdpProcessAddrReq_4
//  724     }
//  725     else if ( (ZSTACK_ROUTER_BUILD)
//  726       && (((pAssoc = AssocGetWithShort( aoi )) != NULL)
//  727              && (pAssoc->nodeRelation == CHILD_RFD)) )
??zdpProcessAddrReq_9:
        ; Setup parameters for call to function AssocGetWithShort
        MOV       R3,?V3
        LCALL     `??AssocGetWithShort::?relay`; Banked call to: AssocGetWithShort
        MOV       ?V1,R3
        MOV       R1,?V1
        MOV       A,R2
        ORL       A,R1
        JZ        ??zdpProcessAddrReq_5
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,#0x1
        JNZ       ??zdpProcessAddrReq_5
//  728     {
//  729       AddrMgrEntry_t addrEntry;
//  730       addrEntry.user = ADDRMGR_USER_DEFAULT;
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        CLR       A
        LCALL     ?Subroutine39 & 0xFFFF
//  731       addrEntry.index = pAssoc->addrIdx;
??CrossCallReturnLabel_60:
        INC       DPTR
        LCALL     ??Subroutine131_0 & 0xFFFF
??CrossCallReturnLabel_287:
        MOV       A,#0x14
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine31 & 0xFFFF
//  732       if ( AddrMgrEntryGet( &addrEntry ) )
??CrossCallReturnLabel_40:
        ; Setup parameters for call to function AddrMgrEntryGet
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??AddrMgrEntryGet::?relay`; Banked call to: AddrMgrEntryGet
        MOV       A,R1
        JZ        ??zdpProcessAddrReq_10
//  733       {
//  734         ieee = addrEntry.extAddr;
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        MOV       R6,DPL
        MOV       R7,DPH
//  735       }
//  736 
//  737       if ( reqType != ZDP_ADDR_REQTYPE_SINGLE )
??zdpProcessAddrReq_10:
        MOV       A,?V5
        JZ        ??zdpProcessAddrReq_4
//  738         reqType = 0xFF; // Force Invalid
??zdpProcessAddrReq_7:
        MOV       ?V5,#-0x1
//  739     }
//  740   }
//  741 
//  742   if ( ((aoi != INVALID_NODE_ADDR) && (ieee != NULL)) || (inMsg->wasBroadcast == FALSE) )
??zdpProcessAddrReq_4:
        MOV       A,#-0x2
        XRL       A,?V2
        JNZ       ??zdpProcessAddrReq_11
        MOV       A,#-0x1
        XRL       A,?V3
??zdpProcessAddrReq_11:
        JZ        ??zdpProcessAddrReq_5
        MOV       A,R6
        ORL       A,R7
        JNZ       ??zdpProcessAddrReq_12
??zdpProcessAddrReq_5:
        MOV       DPL,?V10
        MOV       DPH,?V11
        MOVX      A,@DPTR
        JZ        $+5
        LJMP      ??zdpProcessAddrReq_13 & 0xFFFF
//  743   {
//  744     uint8 stat;
//  745     uint8 *pBuf = ZDP_TmpBuf;
??zdpProcessAddrReq_12:
        LCALL     ?Subroutine69 & 0xFFFF
//  746     // Status + IEEE-Addr + Nwk-Addr.
//  747     uint8 len = 1 + Z_EXTADDR_LEN + 2;
??CrossCallReturnLabel_279:
        MOV       ?V6,#0xb
//  748 
//  749     // If aoi and iee are both setup, we found results
//  750     if ( (aoi != INVALID_NODE_ADDR) && (ieee != NULL) )
        MOV       A,#-0x2
        XRL       A,?V2
        JNZ       ??zdpProcessAddrReq_14
        MOV       A,#-0x1
        XRL       A,?V3
??zdpProcessAddrReq_14:
        JZ        ??zdpProcessAddrReq_15
        MOV       A,R6
        ORL       A,R7
        JZ        ??zdpProcessAddrReq_15
//  751     {
//  752       stat = ((reqType == ZDP_ADDR_REQTYPE_SINGLE) || (reqType == ZDP_ADDR_REQTYPE_EXTENDED))
//  753                     ? ZDP_SUCCESS : ZDP_INVALID_REQTYPE;
        MOV       A,?V5
        JZ        ??zdpProcessAddrReq_16
        MOV       A,#0x1
        XRL       A,?V5
        JNZ       ??zdpProcessAddrReq_17
??zdpProcessAddrReq_16:
        MOV       ?V4,#0x0
        SJMP      ??zdpProcessAddrReq_18
??zdpProcessAddrReq_17:
        MOV       ?V4,#-0x80
//  754 
//  755       if(stat == ZDP_INVALID_REQTYPE)
//  756       {
//  757         //R21 Errata update CCB 2111
//  758         if(inMsg->wasBroadcast == TRUE)
        MOV       DPL,?V10
        MOV       DPH,?V11
        MOVX      A,@DPTR
        XRL       A,#0x1
        JNZ       ??zdpProcessAddrReq_18
//  759         {
//  760           return;
        LJMP      ??zdpProcessAddrReq_13 & 0xFFFF
//  761         }
//  762 
//  763         stat = ZDP_INVALID_REQTYPE;
//  764       }
//  765     }
//  766     else
//  767     {
//  768       // not found and the req was unicast to this device
//  769       stat = ZDP_DEVICE_NOT_FOUND;
??zdpProcessAddrReq_15:
        MOV       ?V4,#-0x7f
//  770 
//  771       // Fill in the missing field with this device's address
//  772       if ( inMsg->clusterID == NWK_addr_req )
        LCALL     ?Subroutine49 & 0xFFFF
??CrossCallReturnLabel_169:
        JNZ       ??zdpProcessAddrReq_19
//  773       {
//  774         //CCB 2112 Zigbee Core spec
//  775         aoi = 0xFFFF;
        MOV       ?V2,#-0x1
        MOV       ?V3,#-0x1
        SJMP      ??zdpProcessAddrReq_18
//  776       }
//  777       else
//  778       {
//  779         //CCB 2113 Zigbee Core spec
//  780         uint8 invalidIEEEAddr[Z_EXTADDR_LEN];
//  781         osal_memset(invalidIEEEAddr,0xFF,Z_EXTADDR_LEN);
??zdpProcessAddrReq_19:
        ; Setup parameters for call to function osal_memset
        MOV       R4,#0x8
        MOV       R5,#0x0
        MOV       R1,#-0x1
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??osal_memset::?relay`; Banked call to: osal_memset
//  782         ieee = invalidIEEEAddr;
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V10,R0
        MOV       ?V11,R1
        MOV       R6,?V10
        MOV       R7,?V11
//  783       }
//  784     }
//  785 
//  786     *pBuf++ = stat;
??zdpProcessAddrReq_18:
        MOV       DPL,?V0
        MOV       DPH,?V1
        MOV       A,?V4
        MOVX      @DPTR,A
        INC       DPTR
        MOV       ?V0,DPL
        MOV       ?V1,DPH
//  787 
//  788     pBuf = osal_cpyExtAddr( pBuf, ieee );
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        MOV       R2,?V0
        MOV       R3,?V1
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV       ?V0,R2
        MOV       ?V1,R3
        MOV       R6,?V0
        MOV       R7,?V1
//  789 
//  790     *pBuf++ = LO_UINT16( aoi );
        MOV       DPL,R2
        MOV       DPH,R3
        MOV       A,?V2
        MOVX      @DPTR,A
//  791     *pBuf++ = HI_UINT16( aoi );
        INC       DPTR
        MOV       A,?V3
        MOVX      @DPTR,A
//  792 
//  793     if ( ZSTACK_ROUTER_BUILD )
//  794     {
//  795       if ( (reqType == ZDP_ADDR_REQTYPE_EXTENDED) && (aoi == ZDAppNwkAddr.addr.shortAddr)
//  796            && (stat == ZDP_SUCCESS) )
        MOV       A,#0x1
        XRL       A,?V5
        JZ        $+5
        LJMP      ??zdpProcessAddrReq_20 & 0xFFFF
        MOV       DPTR,#ZDAppNwkAddr
        MOVX      A,@DPTR
        XRL       A,?V2
        JNZ       ??zdpProcessAddrReq_21
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,?V3
??zdpProcessAddrReq_21:
        JZ        $+5
        LJMP      ??zdpProcessAddrReq_20 & 0xFFFF
        MOV       A,?V4
        JZ        $+5
        LJMP      ??zdpProcessAddrReq_20 & 0xFFFF
//  797       {
//  798         uint8  cnt = 0;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        CLR       A
        MOVX      @DPTR,A
//  799 
//  800         //Updated to only search for ZED devices as per R21 spec (2.4.3.1.1.2)
//  801         uint16 *list = AssocMakeList( &cnt );
        ; Setup parameters for call to function AssocMakeList
        MOV       R2,?XSP + 0
        MOV       R3,?XSP + 1
        LCALL     `??AssocMakeList::?relay`; Banked call to: AssocMakeList
//  802 
//  803         if ( list != NULL )
        MOV       A,R6
        ADD       A,#0x2
        MOV       R0,A
        CLR       A
        ADDC      A,R7
        MOV       R1,A
        MOV       A,R0
        MOV       R4,A
        MOV       A,R1
        MOV       R5,A
        MOV       A,R2
        ORL       A,R3
        JNZ       $+5
        LJMP      ??zdpProcessAddrReq_22 & 0xFFFF
//  804         {
//  805           byte idx = inMsg->asdu[(((inMsg->clusterID == NWK_addr_req) ? Z_EXTADDR_LEN : sizeof( uint16 )) + 1)];
        LCALL     ?Subroutine49 & 0xFFFF
??CrossCallReturnLabel_170:
        JNZ       ??zdpProcessAddrReq_23
        MOV       R0,#0x9
        SJMP      ??zdpProcessAddrReq_24
??zdpProcessAddrReq_23:
        MOV       R0,#0x3
??zdpProcessAddrReq_24:
        MOV       DPL,?V14
        MOV       DPH,?V15
        MOVX      A,@DPTR
        ADD       A,R0
        MOV       ?V0,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       DPL,?V0
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       ?V0,A
//  806           uint16 *pList = list + idx;
        ADD       A,0xE0 /* A   */
        MOV       R0,A
        CLR       A
        RLC       A
        MOV       R1,A
        MOV       A,R2
        ADD       A,R0
        MOV       R0,A
        MOV       A,R3
        ADDC      A,R1
        MOV       R1,A
//  807 
//  808           // NumAssocDev field is only present on success.
//  809           if ( cnt > idx )
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      A,@DPTR
        MOV       ?V1,A
        MOV       A,?V0
        CLR       C
        SUBB      A,?V1
        JNC       ??zdpProcessAddrReq_25
//  810           {
//  811             cnt -= idx;
        MOVX      A,@DPTR
        CLR       C
        SUBB      A,?V0
        MOVX      @DPTR,A
//  812             len += (cnt * sizeof( uint16 ));
        CLR       C
        RLC       A
        ADD       A,#0xb
        MOV       ?V6,A
        SJMP      ??zdpProcessAddrReq_26
//  813           }
//  814           else
//  815           {
//  816             cnt = 0;
??zdpProcessAddrReq_25:
        CLR       A
        MOVX      @DPTR,A
//  817           }
//  818           *pBuf++ = cnt;
??zdpProcessAddrReq_26:
        MOVX      A,@DPTR
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ?Subroutine18 & 0xFFFF
//  819           len++;
//  820 
//  821           // StartIndex field is only present if NumAssocDev field is non-zero.
//  822           *pBuf++ = idx;
??CrossCallReturnLabel_19:
        MOV       A,?V0
        MOVX      @DPTR,A
        MOV       A,R6
        ADD       A,#0x4
        MOV       ?V0,A
        CLR       A
        ADDC      A,R7
        MOV       ?V1,A
//  823           len++;
        INC       ?V6
        INC       ?V6
        SJMP      ??zdpProcessAddrReq_27
//  824 
//  825           while ( cnt != 0 )
//  826           {
//  827             *pBuf++ = LO_UINT16( *pList );
??zdpProcessAddrReq_28:
        MOV       DPL,R0
        MOV       DPH,R1
        LCALL     ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_132:
        LCALL     ??Subroutine115_0 & 0xFFFF
//  828             *pBuf++ = HI_UINT16( *pList );
??CrossCallReturnLabel_183:
        LCALL     ?Subroutine24 & 0xFFFF
??CrossCallReturnLabel_172:
        JNC       ??zdpProcessAddrReq_29
        INC       ?V1
//  829             pList++;
??zdpProcessAddrReq_29:
        MOV       A,R0
        ADD       A,#0x2
        MOV       R0,A
        JNC       ??zdpProcessAddrReq_30
        INC       R1
//  830             cnt--;
??zdpProcessAddrReq_30:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      A,@DPTR
        DEC       A
        MOVX      @DPTR,A
//  831           }
??zdpProcessAddrReq_27:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      A,@DPTR
        JNZ       ??zdpProcessAddrReq_28
//  832 
//  833           osal_mem_free( (uint8 *)list );
        ; Setup parameters for call to function osal_mem_free
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        SJMP      ??zdpProcessAddrReq_20
//  834         }
//  835         else
//  836         {
//  837           // NumAssocDev field is only present on success.
//  838           *pBuf++ = 0;
??zdpProcessAddrReq_22:
        MOV       DPL,R0
        MOV       DPH,R1
        CLR       A
        MOVX      @DPTR,A
//  839           len++;
        MOV       ?V6,#0xc
//  840         }
//  841       }
//  842     }
//  843 
//  844     ZDP_TxOptions = AF_MSG_ACK_REQUEST;
??zdpProcessAddrReq_20:
        MOV       DPTR,#ZDP_TxOptions
        MOV       A,#0x10
        MOVX      @DPTR,A
//  845     fillAndSend( &(inMsg->TransSeq), &(inMsg->srcAddr), (cId_t)(inMsg->clusterID | ZDO_RESPONSE_BIT), len );
        ; Setup parameters for call to function fillAndSend
        MOV       DPL,?V12
        MOV       DPH,?V13
        MOVX      A,@DPTR
        MOV       ?V0,A
        INC       DPTR
        MOVX      A,@DPTR
        ORL       A,#0x80
        MOV       ?V1,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 48)
        MOV       R1,?V6
        MOV       A,?V8
        ADD       A,#0x2
        MOV       R4,A
        CLR       A
        ADDC      A,?V9
        MOV       R5,A
        MOV       A,?V8
        ADD       A,#0xf
        MOV       R2,A
        CLR       A
        ADDC      A,?V9
        MOV       R3,A
        LCALL     ??Subroutine128_0 & 0xFFFF
??CrossCallReturnLabel_254:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 46)
//  846     ZDP_TxOptions = AF_TX_OPTIONS_NONE;
        MOV       DPTR,#ZDP_TxOptions
        CLR       A
        MOVX      @DPTR,A
//  847   }
//  848 }
??zdpProcessAddrReq_13:
        MOV       A,#0x16
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       R7,#0x10
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock57

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine49:
          CFI Block cfiCond58 Using cfiCommon0
          CFI Function zdpProcessAddrReq
          CFI Conditional ??CrossCallReturnLabel_169
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 46)
          CFI Block cfiCond59 Using cfiCommon0
          CFI (cfiCond59) Function zdpProcessAddrReq
          CFI (cfiCond59) Conditional ??CrossCallReturnLabel_170
          CFI (cfiCond59) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond59) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond59) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond59) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond59) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond59) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond59) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond59) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond59) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond59) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond59) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond59) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond59) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond59) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond59) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond59) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond59) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond59) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond59) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond59) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond59) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond59) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond59) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond59) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond59) CFA_SP SP+-2
          CFI (cfiCond59) CFA_XSP16 add(XSP16, 46)
          CFI Block cfiPicker60 Using cfiCommon1
          CFI (cfiPicker60) NoFunction
          CFI (cfiPicker60) Picker
        MOV       DPL,?V12
        MOV       DPH,?V13
          CFI EndBlock cfiCond58
          CFI EndBlock cfiCond59
          CFI EndBlock cfiPicker60
        REQUIRE ??Subroutine111_0
        ; // Fall through to label ??Subroutine111_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine111_0:
          CFI Block cfiCond61 Using cfiCommon0
          CFI Function ZDO_RemoveRegisteredCB
          CFI Conditional ??CrossCallReturnLabel_168
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond62 Using cfiCommon0
          CFI (cfiCond62) Function zdpProcessAddrReq
          CFI (cfiCond62) Conditional ??CrossCallReturnLabel_169
          CFI (cfiCond62) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond62) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond62) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond62) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond62) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond62) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond62) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond62) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond62) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond62) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond62) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond62) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond62) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond62) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond62) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond62) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond62) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond62) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond62) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond62) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond62) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond62) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond62) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond62) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond62) CFA_SP SP+-2
          CFI (cfiCond62) CFA_XSP16 add(XSP16, 46)
          CFI Block cfiCond63 Using cfiCommon0
          CFI (cfiCond63) Function zdpProcessAddrReq
          CFI (cfiCond63) Conditional ??CrossCallReturnLabel_170
          CFI (cfiCond63) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond63) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond63) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond63) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond63) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond63) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond63) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond63) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond63) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond63) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond63) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond63) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond63) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond63) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond63) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond63) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond63) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond63) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond63) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond63) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond63) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond63) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond63) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond63) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond63) CFA_SP SP+-2
          CFI (cfiCond63) CFA_XSP16 add(XSP16, 46)
          CFI Block cfiPicker64 Using cfiCommon1
          CFI (cfiPicker64) NoFunction
          CFI (cfiPicker64) Picker
        LCALL     ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_194:
        ORL       A,R1
        RET
          CFI EndBlock cfiCond61
          CFI EndBlock cfiCond62
          CFI EndBlock cfiCond63
          CFI EndBlock cfiPicker64

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine24:
          CFI Block cfiCond65 Using cfiCommon0
          CFI Function zdpProcessAddrReq
          CFI Conditional ??CrossCallReturnLabel_172
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 46)
          CFI Block cfiCond66 Using cfiCommon0
          CFI (cfiCond66) Function ZDP_EndDeviceBindReq
          CFI (cfiCond66) Conditional ??CrossCallReturnLabel_173
          CFI (cfiCond66) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond66) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond66) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond66) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond66) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond66) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond66) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond66) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond66) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond66) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond66) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond66) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond66) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond66) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond66) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond66) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond66) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond66) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond66) CFA_SP SP+-2
          CFI (cfiCond66) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker67 Using cfiCommon1
          CFI (cfiPicker67) NoFunction
          CFI (cfiPicker67) Picker
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
          CFI EndBlock cfiCond65
          CFI EndBlock cfiCond66
          CFI EndBlock cfiPicker67
        REQUIRE ??Subroutine112_0
        ; // Fall through to label ??Subroutine112_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine112_0:
          CFI Block cfiCond68 Using cfiCommon0
          CFI Function ZDP_EndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_171
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond69 Using cfiCommon0
          CFI (cfiCond69) Function zdpProcessAddrReq
          CFI (cfiCond69) Conditional ??CrossCallReturnLabel_172
          CFI (cfiCond69) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond69) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond69) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond69) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond69) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond69) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond69) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond69) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond69) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond69) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond69) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond69) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond69) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond69) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond69) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond69) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond69) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond69) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond69) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond69) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond69) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond69) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond69) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond69) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond69) CFA_SP SP+-2
          CFI (cfiCond69) CFA_XSP16 add(XSP16, 46)
          CFI Block cfiCond70 Using cfiCommon0
          CFI (cfiCond70) Function ZDP_EndDeviceBindReq
          CFI (cfiCond70) Conditional ??CrossCallReturnLabel_173
          CFI (cfiCond70) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond70) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond70) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond70) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond70) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond70) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond70) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond70) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond70) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond70) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond70) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond70) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond70) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond70) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond70) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond70) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond70) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond70) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond70) CFA_SP SP+-2
          CFI (cfiCond70) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker71 Using cfiCommon1
          CFI (cfiPicker71) NoFunction
          CFI (cfiPicker71) Picker
        MOVX      @DPTR,A
        MOV       A,?V0
        ADD       A,#0x2
        MOV       ?V0,A
        RET
          CFI EndBlock cfiCond68
          CFI EndBlock cfiCond69
          CFI EndBlock cfiCond70
          CFI EndBlock cfiPicker71

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine18:
          CFI Block cfiCond72 Using cfiCommon0
          CFI Function fillAndSend
          CFI Conditional ??CrossCallReturnLabel_18
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond73 Using cfiCommon0
          CFI (cfiCond73) Function zdpProcessAddrReq
          CFI (cfiCond73) Conditional ??CrossCallReturnLabel_19
          CFI (cfiCond73) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond73) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond73) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond73) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond73) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond73) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond73) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond73) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond73) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond73) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond73) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond73) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond73) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond73) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond73) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond73) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond73) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond73) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond73) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond73) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond73) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond73) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond73) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond73) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond73) CFA_SP SP+-2
          CFI (cfiCond73) CFA_XSP16 add(XSP16, 46)
          CFI Block cfiCond74 Using cfiCommon0
          CFI (cfiCond74) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond74) Conditional ??CrossCallReturnLabel_20
          CFI (cfiCond74) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond74) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond74) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond74) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond74) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond74) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond74) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond74) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond74) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond74) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond74) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond74) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond74) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond74) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond74) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond74) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond74) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond74) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond74) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond74) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond74) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond74) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond74) CFA_SP SP+-2
          CFI (cfiCond74) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker75 Using cfiCommon1
          CFI (cfiPicker75) NoFunction
          CFI (cfiPicker75) Picker
        MOVX      @DPTR,A
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond72
          CFI EndBlock cfiCond73
          CFI EndBlock cfiCond74
          CFI EndBlock cfiPicker75
//  849 
//  850 /*********************************************************************
//  851  * @fn          ZDP_NodeDescMsg
//  852  *
//  853  * @brief       Builds and sends a Node Descriptor message, unicast to the
//  854  *              specified device.
//  855  *
//  856  * @param       inMsg - incoming message
//  857  * @param       nwkAddr - 16 bit network address for device
//  858  * @param       pNodeDesc - pointer to the node descriptor
//  859  *
//  860  * @return      afStatus_t
//  861  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  862 afStatus_t ZDP_NodeDescMsg( zdoIncomingMsg_t *inMsg,
ZDP_NodeDescMsg:
          CFI Block cfiBlock76 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
        CODE
//  863                            uint16 nwkAddr, NodeDescriptorFormat_t *pNodeDesc )
//  864 {
        FUNCALL ZDP_NodeDescMsg, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
//  865   uint8 *pBuf = ZDP_TmpBuf;
        MOV       DPTR,#ZDP_TmpBuf
        LCALL     ?Subroutine52 & 0xFFFF
//  866   byte len;
//  867 
//  868   len = 1 + 2 + 13;  // Status + nwkAddr + Node descriptor
//  869 
//  870   *pBuf++ = ZDP_SUCCESS;
??CrossCallReturnLabel_91:
        MOV       DPL,R6
        MOV       DPH,A
        CLR       A
        MOVX      @DPTR,A
//  871 
//  872   *pBuf++ = LO_UINT16( nwkAddr );
        MOV       A,R4
        INC       DPTR
        MOVX      @DPTR,A
//  873   *pBuf++ = HI_UINT16( nwkAddr );
        MOV       A,R5
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,#0xa
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine40 & 0xFFFF
//  874 
//  875   *pBuf++ = (byte)((pNodeDesc->ComplexDescAvail << 3) |
//  876                      (pNodeDesc->UserDescAvail << 4) |
//  877                      (pNodeDesc->LogicalType & 0x07));
??CrossCallReturnLabel_64:
        ANL       A,#0x1f
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine22 & 0xFFFF
//  878 
//  879   *pBuf++ = (byte)((pNodeDesc->FrequencyBand << 3) | (pNodeDesc->APSFlags & 0x07));
??CrossCallReturnLabel_181:
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine29 & 0xFFFF
//  880   *pBuf++ = pNodeDesc->CapabilityFlags;
??CrossCallReturnLabel_36:
        LCALL     ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_175:
        LCALL     ?Subroutine27 & 0xFFFF
//  881   *pBuf++ = pNodeDesc->ManufacturerCode[0];
??CrossCallReturnLabel_178:
        LCALL     ?Subroutine46 & 0xFFFF
??CrossCallReturnLabel_76:
        LCALL     ?Subroutine27 & 0xFFFF
//  882   *pBuf++ = pNodeDesc->ManufacturerCode[1];
??CrossCallReturnLabel_179:
        LCALL     ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_176:
        LCALL     ?Subroutine26 & 0xFFFF
//  883   *pBuf++ = pNodeDesc->MaxBufferSize;
??CrossCallReturnLabel_31:
        LCALL     ?Subroutine46 & 0xFFFF
??CrossCallReturnLabel_77:
        LCALL     ?Subroutine26 & 0xFFFF
//  884   *pBuf++ = pNodeDesc->MaxInTransferSize[0];
??CrossCallReturnLabel_32:
        INC       DPTR
        LCALL     ?Subroutine42 & 0xFFFF
??CrossCallReturnLabel_70:
        LCALL     ?Subroutine20 & 0xFFFF
//  885   *pBuf++ = pNodeDesc->MaxInTransferSize[1];
??CrossCallReturnLabel_23:
        LCALL     ?Subroutine42 & 0xFFFF
??CrossCallReturnLabel_71:
        INC       DPTR
        MOVX      @DPTR,A
//  886 
//  887   *pBuf++ = LO_UINT16( pNodeDesc->ServerMask );
        MOV       A,R0
        ADD       A,#0x8
        MOV       R4,A
        CLR       A
        ADDC      A,R1
        MOV       R5,A
        MOV       DPL,R4
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       ?V0,A
        MOV       A,R6
        ADD       A,#0xb
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        MOV       A,?V0
        LCALL     ??Subroutine118_0 & 0xFFFF
//  888   *pBuf++ = HI_UINT16( pNodeDesc->ServerMask );
??CrossCallReturnLabel_200:
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,R6
        ADD       A,#0xc
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine20 & 0xFFFF
//  889   *pBuf++ = pNodeDesc->MaxOutTransferSize[0];
??CrossCallReturnLabel_24:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,R6
        ADD       A,#0xd
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
//  890   *pBuf++ = pNodeDesc->MaxOutTransferSize[1];
        MOV       A,R0
        ADD       A,#0xb
        MOV       DPL,A
        CLR       A
        ADDC      A,R1
        MOV       DPH,A
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,R6
        ADD       A,#0xe
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
//  891   *pBuf = pNodeDesc->DescriptorCapability;
        MOV       A,R0
        ADD       A,#0xc
        MOV       DPL,A
        CLR       A
        ADDC      A,R1
        MOV       DPH,A
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,R6
        ADD       A,#0xf
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
//  892 
//  893   return fillAndSend( &(inMsg->TransSeq), &(inMsg->srcAddr), Node_Desc_rsp, len );
        ; Setup parameters for call to function fillAndSend
        MOV       ?V0,#0x2
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       R1,#0x10
        LCALL     ?Subroutine77 & 0xFFFF
??CrossCallReturnLabel_125:
        JNC       ??ZDP_NodeDescMsg_0
        INC       R3
??ZDP_NodeDescMsg_0:
        SJMP      ??Subroutine116_0
//  894 }
          CFI EndBlock cfiBlock76

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine65:
          CFI Block cfiCond77 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_175
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond78 Using cfiCommon0
          CFI (cfiCond78) Function ZDP_NodeDescMsg
          CFI (cfiCond78) Conditional ??CrossCallReturnLabel_176
          CFI (cfiCond78) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond78) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond78) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond78) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond78) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond78) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond78) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond78) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond78) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond78) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond78) CFA_SP SP+-2
          CFI (cfiCond78) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond79 Using cfiCommon0
          CFI (cfiCond79) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond79) Conditional ??CrossCallReturnLabel_177
          CFI (cfiCond79) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond79) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond79) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond79) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond79) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond79) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond79) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond79) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond79) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond79) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond79) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond79) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond79) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond79) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond79) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond79) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond79) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond79) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond79) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond79) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond79) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond79) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond79) CFA_SP SP+-2
          CFI (cfiCond79) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker80 Using cfiCommon1
          CFI (cfiPicker80) NoFunction
          CFI (cfiPicker80) Picker
        INC       DPTR
          CFI EndBlock cfiCond77
          CFI EndBlock cfiCond78
          CFI EndBlock cfiCond79
          CFI EndBlock cfiPicker80
        REQUIRE ??Subroutine113_0
        ; // Fall through to label ??Subroutine113_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine113_0:
          CFI Block cfiCond81 Using cfiCommon0
          CFI Function ZDP_MgmtNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_174
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond82 Using cfiCommon0
          CFI (cfiCond82) Function ZDP_NodeDescMsg
          CFI (cfiCond82) Conditional ??CrossCallReturnLabel_175
          CFI (cfiCond82) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond82) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond82) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond82) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond82) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond82) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond82) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond82) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond82) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond82) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond82) CFA_SP SP+-2
          CFI (cfiCond82) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond83 Using cfiCommon0
          CFI (cfiCond83) Function ZDP_NodeDescMsg
          CFI (cfiCond83) Conditional ??CrossCallReturnLabel_176
          CFI (cfiCond83) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond83) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond83) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond83) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond83) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond83) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond83) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond83) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond83) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond83) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond83) CFA_SP SP+-2
          CFI (cfiCond83) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond84 Using cfiCommon0
          CFI (cfiCond84) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond84) Conditional ??CrossCallReturnLabel_177
          CFI (cfiCond84) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond84) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond84) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond84) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond84) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond84) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond84) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond84) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond84) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond84) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond84) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond84) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond84) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond84) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond84) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond84) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond84) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond84) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond84) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond84) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond84) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond84) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond84) CFA_SP SP+-2
          CFI (cfiCond84) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker85 Using cfiCommon1
          CFI (cfiPicker85) NoFunction
          CFI (cfiPicker85) Picker
        MOVX      A,@DPTR
        MOV       DPL,R6
        MOV       DPH,R7
        RET
          CFI EndBlock cfiCond81
          CFI EndBlock cfiCond82
          CFI EndBlock cfiCond83
          CFI EndBlock cfiCond84
          CFI EndBlock cfiPicker85

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine42:
          CFI Block cfiCond86 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_70
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond87 Using cfiCommon0
          CFI (cfiCond87) Function ZDP_NodeDescMsg
          CFI (cfiCond87) Conditional ??CrossCallReturnLabel_71
          CFI (cfiCond87) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond87) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond87) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond87) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond87) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond87) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond87) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond87) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond87) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond87) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond87) CFA_SP SP+-2
          CFI (cfiCond87) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker88 Using cfiCommon1
          CFI (cfiPicker88) NoFunction
          CFI (cfiPicker88) Picker
        MOVX      A,@DPTR
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond86
          CFI EndBlock cfiCond87
          CFI EndBlock cfiPicker88

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine40:
          CFI Block cfiCond89 Using cfiCommon0
          CFI Function ZDP_UserDescSet
          CFI Conditional ??CrossCallReturnLabel_63
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond90 Using cfiCommon0
          CFI (cfiCond90) Function ZDP_NodeDescMsg
          CFI (cfiCond90) Conditional ??CrossCallReturnLabel_64
          CFI (cfiCond90) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond90) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond90) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond90) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond90) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond90) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond90) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond90) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond90) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond90) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond90) CFA_SP SP+-2
          CFI (cfiCond90) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond91 Using cfiCommon0
          CFI (cfiCond91) Function ZDP_PowerDescMsg
          CFI (cfiCond91) Conditional ??CrossCallReturnLabel_65
          CFI (cfiCond91) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond91) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond91) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond91) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond91) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond91) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond91) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond91) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond91) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond91) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond91) CFA_SP SP+-2
          CFI (cfiCond91) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker92 Using cfiCommon1
          CFI (cfiPicker92) NoFunction
          CFI (cfiPicker92) Picker
        LCALL     ??Subroutine133_0 & 0xFFFF
??CrossCallReturnLabel_300:
        MOV       R1,A
        MOV       DPL,R0
        MOV       DPH,A
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond89
          CFI EndBlock cfiCond90
          CFI EndBlock cfiCond91
          CFI EndBlock cfiPicker92

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine27:
          CFI Block cfiCond93 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_178
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond94 Using cfiCommon0
          CFI (cfiCond94) Function ZDP_NodeDescMsg
          CFI (cfiCond94) Conditional ??CrossCallReturnLabel_179
          CFI (cfiCond94) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond94) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond94) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond94) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond94) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond94) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond94) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond94) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond94) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond94) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond94) CFA_SP SP+-2
          CFI (cfiCond94) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker95 Using cfiCommon1
          CFI (cfiPicker95) NoFunction
          CFI (cfiPicker95) Picker
        INC       DPTR
        INC       DPTR
        INC       DPTR
          CFI EndBlock cfiCond93
          CFI EndBlock cfiCond94
          CFI EndBlock cfiPicker95
        REQUIRE ??Subroutine114_0
        ; // Fall through to label ??Subroutine114_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine114_0:
          CFI Block cfiCond96 Using cfiCommon0
          CFI Function ZDP_MgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_180
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond97 Using cfiCommon0
          CFI (cfiCond97) Function ZDP_NodeDescMsg
          CFI (cfiCond97) Conditional ??CrossCallReturnLabel_178
          CFI (cfiCond97) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond97) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond97) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond97) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond97) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond97) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond97) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond97) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond97) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond97) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond97) CFA_SP SP+-2
          CFI (cfiCond97) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond98 Using cfiCommon0
          CFI (cfiCond98) Function ZDP_NodeDescMsg
          CFI (cfiCond98) Conditional ??CrossCallReturnLabel_179
          CFI (cfiCond98) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond98) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond98) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond98) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond98) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond98) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond98) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond98) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond98) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond98) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond98) CFA_SP SP+-2
          CFI (cfiCond98) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker99 Using cfiCommon1
          CFI (cfiPicker99) NoFunction
          CFI (cfiPicker99) Picker
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_185:
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond96
          CFI EndBlock cfiCond97
          CFI EndBlock cfiCond98
          CFI EndBlock cfiPicker99

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine26:
          CFI Block cfiCond100 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_31
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond101 Using cfiCommon0
          CFI (cfiCond101) Function ZDP_NodeDescMsg
          CFI (cfiCond101) Conditional ??CrossCallReturnLabel_32
          CFI (cfiCond101) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond101) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond101) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond101) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond101) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond101) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond101) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond101) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond101) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond101) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond101) CFA_SP SP+-2
          CFI (cfiCond101) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker102 Using cfiCommon1
          CFI (cfiPicker102) NoFunction
          CFI (cfiPicker102) Picker
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine91 & 0xFFFF
??CrossCallReturnLabel_146:
        RET
          CFI EndBlock cfiCond100
          CFI EndBlock cfiCond101
          CFI EndBlock cfiPicker102

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine91:
          CFI Block cfiCond103 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_146, ??CrossCallReturnLabel_31
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond104 Using cfiCommon0
          CFI (cfiCond104) Function ZDP_NodeDescMsg
          CFI (cfiCond104) Conditional ??CrossCallReturnLabel_146, ??CrossCallReturnLabel_32
          CFI (cfiCond104) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond104) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond104) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond104) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond104) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond104) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond104) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond104) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond104) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond104) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond104) CFA_SP SP+-4
          CFI (cfiCond104) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond105 Using cfiCommon0
          CFI (cfiCond105) Function ZDP_NodeDescMsg
          CFI (cfiCond105) Conditional ??CrossCallReturnLabel_147, ??CrossCallReturnLabel_23
          CFI (cfiCond105) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond105) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond105) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond105) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond105) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond105) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond105) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond105) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond105) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond105) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond105) CFA_SP SP+-4
          CFI (cfiCond105) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond106 Using cfiCommon0
          CFI (cfiCond106) Function ZDP_NodeDescMsg
          CFI (cfiCond106) Conditional ??CrossCallReturnLabel_147, ??CrossCallReturnLabel_24
          CFI (cfiCond106) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond106) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond106) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond106) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond106) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond106) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond106) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond106) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond106) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond106) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond106) CFA_SP SP+-4
          CFI (cfiCond106) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker107 Using cfiCommon1
          CFI (cfiPicker107) NoFunction
          CFI (cfiPicker107) Picker
        LCALL     ?Subroutine103 & 0xFFFF
??CrossCallReturnLabel_188:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond103
          CFI EndBlock cfiCond104
          CFI EndBlock cfiCond105
          CFI EndBlock cfiCond106
          CFI EndBlock cfiPicker107

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine22:
          CFI Block cfiCond108 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_181
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond109 Using cfiCommon0
          CFI (cfiCond109) Function ZDP_MgmtBindRsp
          CFI (cfiCond109) Conditional ??CrossCallReturnLabel_182
          CFI (cfiCond109) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond109) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond109) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond109) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond109) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond109) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond109) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond109) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond109) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond109) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond109) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond109) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond109) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond109) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond109) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond109) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond109) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond109) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond109) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond109) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond109) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond109) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond109) CFA_SP SP+-2
          CFI (cfiCond109) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker110 Using cfiCommon1
          CFI (cfiPicker110) NoFunction
          CFI (cfiPicker110) Picker
        INC       DPTR
          CFI EndBlock cfiCond108
          CFI EndBlock cfiCond109
          CFI EndBlock cfiPicker110
        REQUIRE ??Subroutine115_0
        ; // Fall through to label ??Subroutine115_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine115_0:
          CFI Block cfiCond111 Using cfiCommon0
          CFI Function zdpProcessAddrReq
          CFI Conditional ??CrossCallReturnLabel_183
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 46)
          CFI Block cfiCond112 Using cfiCommon0
          CFI (cfiCond112) Function ZDP_NodeDescMsg
          CFI (cfiCond112) Conditional ??CrossCallReturnLabel_181
          CFI (cfiCond112) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond112) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond112) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond112) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond112) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond112) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond112) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond112) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond112) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond112) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond112) CFA_SP SP+-2
          CFI (cfiCond112) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond113 Using cfiCommon0
          CFI (cfiCond113) Function ZDP_MgmtBindRsp
          CFI (cfiCond113) Conditional ??CrossCallReturnLabel_182
          CFI (cfiCond113) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond113) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond113) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond113) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond113) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond113) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond113) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond113) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond113) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond113) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond113) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond113) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond113) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond113) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond113) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond113) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond113) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond113) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond113) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond113) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond113) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond113) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond113) CFA_SP SP+-2
          CFI (cfiCond113) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker114 Using cfiCommon1
          CFI (cfiPicker114) NoFunction
          CFI (cfiPicker114) Picker
        LCALL     ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_186:
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond111
          CFI EndBlock cfiCond112
          CFI EndBlock cfiCond113
          CFI EndBlock cfiPicker114

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine20:
          CFI Block cfiCond115 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_23
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond116 Using cfiCommon0
          CFI (cfiCond116) Function ZDP_NodeDescMsg
          CFI (cfiCond116) Conditional ??CrossCallReturnLabel_24
          CFI (cfiCond116) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond116) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond116) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond116) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond116) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond116) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond116) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond116) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond116) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond116) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond116) CFA_SP SP+-2
          CFI (cfiCond116) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker117 Using cfiCommon1
          CFI (cfiPicker117) NoFunction
          CFI (cfiPicker117) Picker
        LCALL     ?Subroutine91 & 0xFFFF
??CrossCallReturnLabel_147:
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond115
          CFI EndBlock cfiCond116
          CFI EndBlock cfiPicker117

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine8:
          CFI Block cfiBlock118 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       A,R2
        MOV       R4,A
        MOV       A,R3
        MOV       R5,A
        MOV       R2,#ZDP_TransID & 0xff
        MOV       R3,#(ZDP_TransID >> 8) & 0xff
          CFI EndBlock cfiBlock118
        REQUIRE ??Subroutine116_0
        ; // Fall through to label ??Subroutine116_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine116_0:
          CFI Block cfiBlock119 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        LCALL     ??Subroutine128_0 & 0xFFFF
??CrossCallReturnLabel_255:
        LJMP      ??Subroutine110_0 & 0xFFFF
          CFI EndBlock cfiBlock119
//  895 
//  896 /*********************************************************************
//  897  * @fn          ZDP_PowerDescMsg
//  898  *
//  899  * @brief       Builds and sends a Power Descriptor message, unicast to the
//  900  *              specified device.
//  901  *
//  902  * @param       inMsg - incoming message (request)
//  903  * @param       nwkAddr - 16 bit network address for device
//  904  * @param       pPowerDesc - pointer to the node descriptor
//  905  *
//  906  * @return      afStatus_t
//  907  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  908 afStatus_t ZDP_PowerDescMsg( zdoIncomingMsg_t *inMsg,
ZDP_PowerDescMsg:
          CFI Block cfiBlock120 Using cfiCommon0
          CFI Function ZDP_PowerDescMsg
        CODE
//  909                      uint16 nwkAddr, NodePowerDescriptorFormat_t *pPowerDesc )
//  910 {
        FUNCALL ZDP_PowerDescMsg, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
//  911   uint8 *pBuf = ZDP_TmpBuf;
        LCALL     ?Subroutine60 & 0xFFFF
??CrossCallReturnLabel_192:
        MOV       R6,A
        MOV       A,R1
        MOV       R7,A
//  912   byte len = 1 + 2 + 2;  // Status + nwkAddr + Node Power descriptor.
//  913 
//  914   *pBuf++ = ZDP_SUCCESS;
        MOV       DPL,R0
        MOV       DPH,A
        CLR       A
        MOVX      @DPTR,A
//  915 
//  916   *pBuf++ = LO_UINT16( nwkAddr );
        MOV       A,R4
        LCALL     ?Subroutine36 & 0xFFFF
//  917   *pBuf++ = HI_UINT16( nwkAddr );
??CrossCallReturnLabel_55:
        MOVX      @DPTR,A
        MOV       A,#0xa
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine40 & 0xFFFF
//  918 
//  919   *pBuf++ = (byte)((pPowerDesc->AvailablePowerSources << 4)
//  920                     | (pPowerDesc->PowerMode & 0x0F));
??CrossCallReturnLabel_65:
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine103 & 0xFFFF
//  921   *pBuf++ = (byte)((pPowerDesc->CurrentPowerSourceLevel << 4)
//  922                     | (pPowerDesc->CurrentPowerSource & 0x0F));
??CrossCallReturnLabel_189:
        LCALL     ??Subroutine130_0 & 0xFFFF
??CrossCallReturnLabel_275:
        ANL       A,#0xf
        MOV       R1,A
        MOV       A,#0xc
        MOV       R0,#?V0
        LCALL     ?US_SHR
        MOV       A,?V0
        SWAP      A
        ORL       A,R1
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
//  923 
//  924   return fillAndSend( &(inMsg->TransSeq), &(inMsg->srcAddr), Power_Desc_rsp, len );
        ; Setup parameters for call to function fillAndSend
        MOV       ?V0,#0x3
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       R1,#0x5
        LCALL     ?Subroutine77 & 0xFFFF
??CrossCallReturnLabel_126:
        JNC       ??ZDP_PowerDescMsg_0
        INC       R3
??ZDP_PowerDescMsg_0:
        SJMP      ??Subroutine116_0
//  925 }
          CFI EndBlock cfiBlock120

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine103:
          CFI Block cfiCond121 Using cfiCommon0
          CFI Function ZDP_SendData
          CFI Conditional ??CrossCallReturnLabel_187, ??CrossCallReturnLabel_184, ??CrossCallReturnLabel_37
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond122 Using cfiCommon0
          CFI (cfiCond122) Function ZDP_UserDescSet
          CFI (cfiCond122) Conditional ??CrossCallReturnLabel_187, ??CrossCallReturnLabel_184, ??CrossCallReturnLabel_35
          CFI (cfiCond122) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond122) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond122) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond122) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond122) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond122) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond122) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond122) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond122) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond122) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond122) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond122) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond122) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond122) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond122) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond122) CFA_SP SP+-6
          CFI (cfiCond122) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond123 Using cfiCommon0
          CFI (cfiCond123) Function ZDP_NodeDescMsg
          CFI (cfiCond123) Conditional ??CrossCallReturnLabel_187, ??CrossCallReturnLabel_184, ??CrossCallReturnLabel_36
          CFI (cfiCond123) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond123) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond123) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond123) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond123) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond123) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond123) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond123) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond123) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond123) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond123) CFA_SP SP+-6
          CFI (cfiCond123) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond124 Using cfiCommon0
          CFI (cfiCond124) Function ZDP_NodeDescMsg
          CFI (cfiCond124) Conditional ??CrossCallReturnLabel_187, ??CrossCallReturnLabel_185, ??CrossCallReturnLabel_178
          CFI (cfiCond124) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond124) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond124) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond124) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond124) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond124) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond124) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond124) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond124) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond124) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond124) CFA_SP SP+-6
          CFI (cfiCond124) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond125 Using cfiCommon0
          CFI (cfiCond125) Function ZDP_NodeDescMsg
          CFI (cfiCond125) Conditional ??CrossCallReturnLabel_187, ??CrossCallReturnLabel_185, ??CrossCallReturnLabel_179
          CFI (cfiCond125) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond125) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond125) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond125) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond125) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond125) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond125) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond125) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond125) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond125) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond125) CFA_SP SP+-6
          CFI (cfiCond125) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond126 Using cfiCommon0
          CFI (cfiCond126) Function ZDP_MgmtRtgRsp
          CFI (cfiCond126) Conditional ??CrossCallReturnLabel_187, ??CrossCallReturnLabel_185, ??CrossCallReturnLabel_180
          CFI (cfiCond126) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond126) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond126) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond126) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond126) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond126) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond126) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond126) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond126) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond126) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond126) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond126) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond126) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond126) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond126) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond126) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond126) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond126) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond126) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond126) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond126) CFA_SP SP+-6
          CFI (cfiCond126) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond127 Using cfiCommon0
          CFI (cfiCond127) Function ZDP_NodeDescMsg
          CFI (cfiCond127) Conditional ??CrossCallReturnLabel_187, ??CrossCallReturnLabel_186, ??CrossCallReturnLabel_181
          CFI (cfiCond127) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond127) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond127) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond127) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond127) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond127) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond127) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond127) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond127) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond127) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond127) CFA_SP SP+-6
          CFI (cfiCond127) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond128 Using cfiCommon0
          CFI (cfiCond128) Function ZDP_MgmtBindRsp
          CFI (cfiCond128) Conditional ??CrossCallReturnLabel_187, ??CrossCallReturnLabel_186, ??CrossCallReturnLabel_182
          CFI (cfiCond128) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond128) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond128) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond128) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond128) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond128) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond128) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond128) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond128) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond128) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond128) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond128) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond128) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond128) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond128) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond128) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond128) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond128) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond128) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond128) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond128) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond128) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond128) CFA_SP SP+-6
          CFI (cfiCond128) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond129 Using cfiCommon0
          CFI (cfiCond129) Function zdpProcessAddrReq
          CFI (cfiCond129) Conditional ??CrossCallReturnLabel_187, ??CrossCallReturnLabel_186, ??CrossCallReturnLabel_183
          CFI (cfiCond129) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond129) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond129) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond129) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond129) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond129) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond129) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond129) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond129) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond129) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond129) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond129) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond129) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond129) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond129) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond129) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond129) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond129) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond129) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond129) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond129) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond129) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond129) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond129) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond129) CFA_SP SP+-6
          CFI (cfiCond129) CFA_XSP16 add(XSP16, 46)
          CFI Block cfiCond130 Using cfiCommon0
          CFI (cfiCond130) Function ZDP_NodeDescMsg
          CFI (cfiCond130) Conditional ??CrossCallReturnLabel_188, ??CrossCallReturnLabel_146, ??CrossCallReturnLabel_31
          CFI (cfiCond130) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond130) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond130) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond130) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond130) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond130) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond130) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond130) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond130) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond130) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond130) CFA_SP SP+-6
          CFI (cfiCond130) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond131 Using cfiCommon0
          CFI (cfiCond131) Function ZDP_NodeDescMsg
          CFI (cfiCond131) Conditional ??CrossCallReturnLabel_188, ??CrossCallReturnLabel_146, ??CrossCallReturnLabel_32
          CFI (cfiCond131) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond131) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond131) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond131) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond131) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond131) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond131) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond131) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond131) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond131) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond131) CFA_SP SP+-6
          CFI (cfiCond131) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond132 Using cfiCommon0
          CFI (cfiCond132) Function ZDP_NodeDescMsg
          CFI (cfiCond132) Conditional ??CrossCallReturnLabel_188, ??CrossCallReturnLabel_147, ??CrossCallReturnLabel_23
          CFI (cfiCond132) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond132) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond132) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond132) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond132) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond132) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond132) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond132) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond132) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond132) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond132) CFA_SP SP+-6
          CFI (cfiCond132) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond133 Using cfiCommon0
          CFI (cfiCond133) Function ZDP_NodeDescMsg
          CFI (cfiCond133) Conditional ??CrossCallReturnLabel_188, ??CrossCallReturnLabel_147, ??CrossCallReturnLabel_24
          CFI (cfiCond133) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond133) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond133) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond133) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond133) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond133) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond133) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond133) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond133) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond133) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond133) CFA_SP SP+-6
          CFI (cfiCond133) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond134 Using cfiCommon0
          CFI (cfiCond134) Function ZDP_PowerDescMsg
          CFI (cfiCond134) Conditional ??CrossCallReturnLabel_189
          CFI (cfiCond134) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond134) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond134) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond134) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond134) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond134) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond134) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond134) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond134) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond134) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond134) CFA_SP SP+-2
          CFI (cfiCond134) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond135 Using cfiCommon0
          CFI (cfiCond135) Function ZDP_IncomingData
          CFI (cfiCond135) Conditional ??CrossCallReturnLabel_190
          CFI (cfiCond135) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond135) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond135) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond135) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond135) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond135) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond135) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond135) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond135) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond135) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond135) CFA_SP SP+-2
          CFI (cfiCond135) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker136 Using cfiCommon1
          CFI (cfiPicker136) NoFunction
          CFI (cfiPicker136) Picker
        MOVX      @DPTR,A
        ; Setup parameters for call to function osal_memcpy
        MOV       DPL,R0
        MOV       DPH,R1
        RET
          CFI EndBlock cfiCond121
          CFI EndBlock cfiCond122
          CFI EndBlock cfiCond123
          CFI EndBlock cfiCond124
          CFI EndBlock cfiCond125
          CFI EndBlock cfiCond126
          CFI EndBlock cfiCond127
          CFI EndBlock cfiCond128
          CFI EndBlock cfiCond129
          CFI EndBlock cfiCond130
          CFI EndBlock cfiCond131
          CFI EndBlock cfiCond132
          CFI EndBlock cfiCond133
          CFI EndBlock cfiCond134
          CFI EndBlock cfiCond135
          CFI EndBlock cfiPicker136

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine77:
          CFI Block cfiCond137 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_125
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond138 Using cfiCommon0
          CFI (cfiCond138) Function ZDP_PowerDescMsg
          CFI (cfiCond138) Conditional ??CrossCallReturnLabel_126
          CFI (cfiCond138) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond138) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond138) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond138) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond138) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond138) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond138) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond138) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond138) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond138) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond138) CFA_SP SP+-2
          CFI (cfiCond138) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker139 Using cfiCommon1
          CFI (cfiPicker139) NoFunction
          CFI (cfiPicker139) Picker
        MOV       A,R2
        ADD       A,#0x2
        MOV       R4,A
        CLR       A
        ADDC      A,R3
        MOV       R5,A
        MOV       A,R2
        ADD       A,#0xf
        MOV       R2,A
        RET
          CFI EndBlock cfiCond137
          CFI EndBlock cfiCond138
          CFI EndBlock cfiPicker139

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine60:
          CFI Block cfiCond140 Using cfiCommon0
          CFI Function ZDP_PowerDescMsg
          CFI Conditional ??CrossCallReturnLabel_192
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond141 Using cfiCommon0
          CFI (cfiCond141) Function ZDP_ServerDiscRsp
          CFI (cfiCond141) Conditional ??CrossCallReturnLabel_193
          CFI (cfiCond141) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond141) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond141) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond141) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond141) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond141) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond141) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond141) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond141) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond141) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond141) CFA_SP SP+-2
          CFI (cfiCond141) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker142 Using cfiCommon1
          CFI (cfiPicker142) NoFunction
          CFI (cfiPicker142) Picker
        MOV       DPTR,#ZDP_TmpBuf
          CFI EndBlock cfiCond140
          CFI EndBlock cfiCond141
          CFI EndBlock cfiPicker142
        REQUIRE ??Subroutine117_0
        ; // Fall through to label ??Subroutine117_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine117_0:
          CFI Block cfiCond143 Using cfiCommon0
          CFI Function zdpProcessAddrReq
          CFI Conditional ??CrossCallReturnLabel_191
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 46)
          CFI Block cfiCond144 Using cfiCommon0
          CFI (cfiCond144) Function ZDP_PowerDescMsg
          CFI (cfiCond144) Conditional ??CrossCallReturnLabel_192
          CFI (cfiCond144) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond144) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond144) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond144) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond144) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond144) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond144) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond144) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond144) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond144) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond144) CFA_SP SP+-2
          CFI (cfiCond144) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond145 Using cfiCommon0
          CFI (cfiCond145) Function ZDP_ServerDiscRsp
          CFI (cfiCond145) Conditional ??CrossCallReturnLabel_193
          CFI (cfiCond145) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond145) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond145) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond145) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond145) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond145) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond145) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond145) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond145) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond145) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond145) CFA_SP SP+-2
          CFI (cfiCond145) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker146 Using cfiCommon1
          CFI (cfiPicker146) NoFunction
          CFI (cfiPicker146) Picker
        LCALL     ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_197:
        RET
          CFI EndBlock cfiCond143
          CFI EndBlock cfiCond144
          CFI EndBlock cfiCond145
          CFI EndBlock cfiPicker146

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine84:
          CFI Block cfiCond147 Using cfiCommon0
          CFI Function zdpProcessAddrReq
          CFI Conditional ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_169
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 46)
          CFI Block cfiCond148 Using cfiCommon0
          CFI (cfiCond148) Function zdpProcessAddrReq
          CFI (cfiCond148) Conditional ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_170
          CFI (cfiCond148) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond148) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond148) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond148) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond148) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond148) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond148) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond148) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond148) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond148) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond148) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond148) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond148) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond148) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond148) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond148) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond148) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond148) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond148) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond148) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond148) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond148) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond148) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond148) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond148) CFA_SP SP+-4
          CFI (cfiCond148) CFA_XSP16 add(XSP16, 46)
          CFI Block cfiCond149 Using cfiCommon0
          CFI (cfiCond149) Function ZDO_RemoveRegisteredCB
          CFI (cfiCond149) Conditional ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_168
          CFI (cfiCond149) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond149) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond149) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond149) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond149) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond149) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond149) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond149) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond149) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond149) CFA_SP SP+-4
          CFI (cfiCond149) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond150 Using cfiCommon0
          CFI (cfiCond150) Function ZDP_PowerDescMsg
          CFI (cfiCond150) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_192
          CFI (cfiCond150) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond150) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond150) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond150) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond150) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond150) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond150) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond150) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond150) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond150) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond150) CFA_SP SP+-4
          CFI (cfiCond150) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond151 Using cfiCommon0
          CFI (cfiCond151) Function ZDP_ServerDiscRsp
          CFI (cfiCond151) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_193
          CFI (cfiCond151) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond151) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond151) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond151) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond151) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond151) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond151) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond151) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond151) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond151) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond151) CFA_SP SP+-4
          CFI (cfiCond151) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond152 Using cfiCommon0
          CFI (cfiCond152) Function zdpProcessAddrReq
          CFI (cfiCond152) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_191
          CFI (cfiCond152) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond152) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond152) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond152) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond152) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond152) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond152) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond152) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond152) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond152) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond152) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond152) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond152) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond152) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond152) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond152) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond152) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond152) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond152) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond152) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond152) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond152) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond152) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond152) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond152) CFA_SP SP+-4
          CFI (cfiCond152) CFA_XSP16 add(XSP16, 46)
          CFI Block cfiCond153 Using cfiCommon0
          CFI (cfiCond153) Function ZDP_EPRsp
          CFI (cfiCond153) Conditional ??CrossCallReturnLabel_196, ??CrossCallReturnLabel_106
          CFI (cfiCond153) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond153) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond153) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond153) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond153) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond153) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond153) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond153) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond153) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond153) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond153) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond153) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond153) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond153) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond153) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond153) CFA_SP SP+-4
          CFI (cfiCond153) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond154 Using cfiCommon0
          CFI (cfiCond154) Function ZDP_EndDeviceBindReq
          CFI (cfiCond154) Conditional ??CrossCallReturnLabel_196, ??CrossCallReturnLabel_107
          CFI (cfiCond154) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond154) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond154) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond154) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond154) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond154) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond154) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond154) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond154) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond154) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond154) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond154) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond154) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond154) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond154) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond154) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond154) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond154) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond154) CFA_SP SP+-4
          CFI (cfiCond154) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond155 Using cfiCommon0
          CFI (cfiCond155) Function ZDP_ServerDiscRsp
          CFI (cfiCond155) Conditional ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_96
          CFI (cfiCond155) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond155) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond155) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond155) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond155) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond155) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond155) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond155) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond155) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond155) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond155) CFA_SP SP+-4
          CFI (cfiCond155) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond156 Using cfiCommon0
          CFI (cfiCond156) Function ZDP_MgmtNwkUpdateReq
          CFI (cfiCond156) Conditional ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_97
          CFI (cfiCond156) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond156) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond156) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond156) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond156) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond156) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond156) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond156) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond156) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond156) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond156) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond156) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond156) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond156) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond156) CFA_SP SP+-4
          CFI (cfiCond156) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker157 Using cfiCommon1
          CFI (cfiPicker157) NoFunction
          CFI (cfiPicker157) Picker
        MOVX      A,@DPTR
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       A,R0
        RET
          CFI EndBlock cfiCond147
          CFI EndBlock cfiCond148
          CFI EndBlock cfiCond149
          CFI EndBlock cfiCond150
          CFI EndBlock cfiCond151
          CFI EndBlock cfiCond152
          CFI EndBlock cfiCond153
          CFI EndBlock cfiCond154
          CFI EndBlock cfiCond155
          CFI EndBlock cfiCond156
          CFI EndBlock cfiPicker157

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine36:
          CFI Block cfiCond158 Using cfiCommon0
          CFI Function ZDP_MatchDescReq
          CFI Conditional ??CrossCallReturnLabel_54
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond159 Using cfiCommon0
          CFI (cfiCond159) Function ZDP_PowerDescMsg
          CFI (cfiCond159) Conditional ??CrossCallReturnLabel_55
          CFI (cfiCond159) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond159) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond159) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond159) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond159) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond159) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond159) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond159) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond159) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond159) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond159) CFA_SP SP+-2
          CFI (cfiCond159) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker160 Using cfiCommon1
          CFI (cfiPicker160) NoFunction
          CFI (cfiPicker160) Picker
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,R5
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond158
          CFI EndBlock cfiCond159
          CFI EndBlock cfiPicker160
//  926 
//  927 /*********************************************************************
//  928  * @fn          ZDP_SimpleDescMsg
//  929  *
//  930  * @brief       Builds and sends a Simple Descriptor message, unicast to the
//  931  *              specified device.
//  932  *
//  933  * @param       inMsg - incoming message (request)
//  934  * @param       Status - message status (ZDP_SUCCESS or other)
//  935  * @param       pSimpleDesc - pointer to the node descriptor
//  936  *
//  937  * @return      afStatus_t
//  938  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  939 afStatus_t ZDP_SimpleDescMsg( zdoIncomingMsg_t *inMsg, byte Status,
ZDP_SimpleDescMsg:
          CFI Block cfiBlock161 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
        CODE
//  940                               SimpleDescriptionFormat_t *pSimpleDesc )
//  941 {
        FUNCALL ZDP_SimpleDescMsg, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        MOV       A,#-0x14
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 0
        MOV       ?V0,R2
        MOV       ?V1,R3
        LCALL     ?Subroutine61 & 0xFFFF
//  942   uint8 *pBuf = ZDP_TmpBuf;
//  943   uint8 i, len;
//  944 
//  945   if ( Status == ZDP_SUCCESS && pSimpleDesc )
??CrossCallReturnLabel_284:
        MOV       A,R4
        ADD       A,#0x9
        MOV       ?V4,A
        CLR       A
        ADDC      A,R5
        MOV       ?V5,A
        MOV       A,R4
        ADD       A,#0x6
        MOV       ?V6,A
        CLR       A
        ADDC      A,R5
        MOV       ?V7,A
        MOV       A,R6
        JNZ       ??ZDP_SimpleDescMsg_0
        MOV       A,R4
        ORL       A,R5
        JZ        ??ZDP_SimpleDescMsg_0
//  946   {
//  947     // Status + NWKAddrOfInterest + desc length + empty simple descriptor.
//  948     len = 1 + 2 + 1 + 8;
//  949     len += (pSimpleDesc->AppNumInClusters + pSimpleDesc->AppNumOutClusters) * sizeof ( uint16 );
        MOV       DPL,?V4
        MOV       DPH,?V5
        MOVX      A,@DPTR
        MOV       R2,A
        MOV       DPL,?V6
        MOV       DPH,?V7
        MOVX      A,@DPTR
        ADD       A,R2
        CLR       C
        RLC       A
        ADD       A,#0xc
        MOV       R2,A
//  950   }
//  951   else
//  952   {
//  953     len = 1 + 2 + 1; // Status + desc length
//  954   }
//  955   if ( len >= ZDP_BUF_SZ-1 )
        CLR       C
        SUBB      A,#0x4f
        JC        ??ZDP_SimpleDescMsg_1
//  956   {
//  957     return afStatus_MEM_FAIL;
        MOV       R1,#0x10
        LJMP      ??ZDP_SimpleDescMsg_2 & 0xFFFF
//  958   }
??ZDP_SimpleDescMsg_0:
        MOV       R2,#0x4
//  959 
//  960   *pBuf++ = Status;
??ZDP_SimpleDescMsg_1:
        MOV       A,R6
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      @DPTR,A
//  961 
//  962   //From spec 2.4.3.1.5 The NWKAddrOfInterest field shall match
//  963   //that specified in the original Simple_Desc_req command
//  964   *pBuf++ = inMsg->asdu[0];
        MOV       A,?V0
        ADD       A,#0x13
        MOV       ?V2,A
        CLR       A
        ADDC      A,?V1
        MOV       ?V3,A
        MOV       DPL,?V2
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       R3,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       DPH,A
        MOV       DPL,R3
        LCALL     ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_218:
        INC       DPTR
        LCALL     ?Subroutine37 & 0xFFFF
//  965   *pBuf++ = inMsg->asdu[1];
??CrossCallReturnLabel_56:
        MOV       R3,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       DPH,A
        MOV       DPL,R3
        INC       DPTR
        LCALL     ??Subroutine124_0 & 0xFFFF
??CrossCallReturnLabel_229:
        MOVX      @DPTR,A
//  966 
//  967   if ( len > 4 )
        MOV       A,R0
        ADD       A,#0x3
        MOV       DPL,A
        CLR       A
        ADDC      A,R1
        MOV       DPH,A
        MOV       A,R2
        CLR       C
        SUBB      A,#0x5
        JNC       $+5
        LJMP      ??ZDP_SimpleDescMsg_3 & 0xFFFF
//  968   {
//  969     *pBuf++ = len - 4;   // Simple descriptor length
        MOV       A,#-0x4
        ADD       A,R2
        MOVX      @DPTR,A
//  970 
//  971     *pBuf++ = pSimpleDesc->EndPoint;
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ??Subroutine124_0 & 0xFFFF
??CrossCallReturnLabel_230:
        LCALL     ?Subroutine33 & 0xFFFF
//  972     *pBuf++ = LO_UINT16( pSimpleDesc->AppProfId );
??CrossCallReturnLabel_198:
        MOV       ?V2,DPL
        MOV       ?V3,DPH
        LCALL     ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_219:
        LCALL     ?Subroutine11 & 0xFFFF
//  973     *pBuf++ = HI_UINT16( pSimpleDesc->AppProfId );
??CrossCallReturnLabel_2:
        MOVX      @DPTR,A
//  974     *pBuf++ = LO_UINT16( pSimpleDesc->AppDeviceId );
        MOV       A,R4
        ADD       A,#0x3
        MOV       ?V2,A
        CLR       A
        ADDC      A,R5
        MOV       ?V3,A
        MOV       DPL,?V2
        LCALL     ?Subroutine63 & 0xFFFF
??CrossCallReturnLabel_231:
        LCALL     ?Subroutine11 & 0xFFFF
//  975     *pBuf++ = HI_UINT16( pSimpleDesc->AppDeviceId );
??CrossCallReturnLabel_3:
        LCALL     ?Subroutine33 & 0xFFFF
//  976 
//  977     *pBuf++ = (byte)(pSimpleDesc->AppDevVer & 0x0F);
??CrossCallReturnLabel_199:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        ANL       A,#0xf
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
//  978 
//  979     *pBuf++ = pSimpleDesc->AppNumInClusters;
        MOV       DPL,?V6
        MOV       DPH,?V7
        LCALL     ?Subroutine55 & 0xFFFF
??CrossCallReturnLabel_100:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,R0
        ADD       A,#0xb
        MOV       R0,A
        JNC       ??ZDP_SimpleDescMsg_4
        INC       R1
//  980     if ( pSimpleDesc->AppNumInClusters )
??ZDP_SimpleDescMsg_4:
        MOV       DPL,?V6
        MOV       DPH,?V7
        MOVX      A,@DPTR
        JZ        ??ZDP_SimpleDescMsg_5
//  981     {
//  982       for (i=0; i<pSimpleDesc->AppNumInClusters; ++i)
        MOV       R3,#0x0
        MOV       A,R4
        ADD       A,#0x7
        MOV       ?V2,A
        CLR       A
        ADDC      A,R5
        MOV       ?V8,?V2
        MOV       ?V9,A
        SJMP      ??ZDP_SimpleDescMsg_6
//  983       {
//  984         *pBuf++ = LO_UINT16( pSimpleDesc->pAppInClusterList[i] );
??ZDP_SimpleDescMsg_7:
        MOV       A,R3
        LCALL     ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_161:
        LCALL     ?Subroutine47 & 0xFFFF
??CrossCallReturnLabel_80:
        LCALL     ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_220:
        MOVX      @DPTR,A
//  985         *pBuf++ = HI_UINT16( pSimpleDesc->pAppInClusterList[i] );
        LCALL     ?Subroutine47 & 0xFFFF
//  986       }
??CrossCallReturnLabel_81:
        LCALL     ?Subroutine50 & 0xFFFF
??CrossCallReturnLabel_84:
        JNC       ??ZDP_SimpleDescMsg_8
        INC       R1
??ZDP_SimpleDescMsg_8:
        INC       R3
??ZDP_SimpleDescMsg_6:
        MOV       DPL,?V6
        MOV       DPH,?V7
        MOVX      A,@DPTR
        MOV       R7,A
        MOV       A,R3
        CLR       C
        SUBB      A,R7
        JC        ??ZDP_SimpleDescMsg_7
//  987     }
//  988 
//  989     *pBuf++ = pSimpleDesc->AppNumOutClusters;
??ZDP_SimpleDescMsg_5:
        MOV       DPL,?V4
        MOV       DPH,?V5
        LCALL     ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_221:
        LCALL     ?Subroutine32 & 0xFFFF
//  990     if ( pSimpleDesc->AppNumOutClusters )
??CrossCallReturnLabel_49:
        MOV       DPL,?V4
        MOV       DPH,?V5
        MOVX      A,@DPTR
        JZ        ??ZDP_SimpleDescMsg_9
//  991     {
//  992       for (i=0; i<pSimpleDesc->AppNumOutClusters; ++i)
        MOV       R3,#0x0
        MOV       A,R4
        ADD       A,#0xa
        JNC       ??ZDP_SimpleDescMsg_10
        INC       R5
??ZDP_SimpleDescMsg_10:
        MOV       ?V2,A
        MOV       ?V3,R5
??ZDP_SimpleDescMsg_11:
        MOV       DPL,?V4
        MOV       DPH,?V5
        MOVX      A,@DPTR
        MOV       R4,A
        MOV       A,R3
        CLR       C
        SUBB      A,R4
        JNC       ??ZDP_SimpleDescMsg_9
//  993       {
//  994         *pBuf++ = LO_UINT16( pSimpleDesc->pAppOutClusterList[i] );
        MOV       A,R3
        ADD       A,0xE0 /* A   */
        MOV       R4,A
        CLR       A
        RLC       A
        MOV       R5,A
        MOV       DPL,?V2
        MOV       DPH,?V3
        MOVX      A,@DPTR
        ADD       A,R4
        MOV       R7,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,R5
        MOV       DPL,R7
        LCALL     ?Subroutine64 & 0xFFFF
//  995         *pBuf++ = HI_UINT16( pSimpleDesc->pAppOutClusterList[i] );
//  996       }
??CrossCallReturnLabel_227:
        LCALL     ?Subroutine37 & 0xFFFF
??CrossCallReturnLabel_57:
        ADD       A,R4
        MOV       R7,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,R5
        MOV       DPL,R7
        MOV       DPH,A
        LCALL     ?Subroutine50 & 0xFFFF
??CrossCallReturnLabel_85:
        JNC       ??ZDP_SimpleDescMsg_12
        INC       R1
??ZDP_SimpleDescMsg_12:
        INC       R3
        SJMP      ??ZDP_SimpleDescMsg_11
//  997     }
//  998   }
//  999 
// 1000   else
// 1001   {
// 1002     *pBuf = 0; // Description Length = 0;
??ZDP_SimpleDescMsg_3:
        CLR       A
        MOVX      @DPTR,A
// 1003   }
// 1004 
// 1005   return fillAndSend( &(inMsg->TransSeq), &(inMsg->srcAddr), Simple_Desc_rsp, len );
??ZDP_SimpleDescMsg_9:
        ; Setup parameters for call to function fillAndSend
        MOV       ?V2,#0x4
        MOV       ?V3,#-0x80
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       A,R2
        MOV       R1,A
        MOV       A,?V0
        ADD       A,#0x2
        MOV       R4,A
        CLR       A
        ADDC      A,?V1
        MOV       R5,A
        MOV       A,?V0
        ADD       A,#0xf
        MOV       R2,A
        CLR       A
        ADDC      A,?V1
        MOV       R3,A
        LCALL     ??Subroutine128_0 & 0xFFFF
??CrossCallReturnLabel_256:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
??ZDP_SimpleDescMsg_2:
          CFI EndBlock cfiBlock161
        REQUIRE ?Subroutine5
        ; // Fall through to label ?Subroutine5
// 1006 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine5:
          CFI Block cfiBlock162 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0xc
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock162

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine99:
          CFI Block cfiCond163 Using cfiCommon0
          CFI Function ZDP_MatchDescReq
          CFI Conditional ??CrossCallReturnLabel_162, ??CrossCallReturnLabel_0
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond164 Using cfiCommon0
          CFI (cfiCond164) Function ZDP_MatchDescReq
          CFI (cfiCond164) Conditional ??CrossCallReturnLabel_162, ??CrossCallReturnLabel_1
          CFI (cfiCond164) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond164) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond164) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond164) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond164) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond164) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond164) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond164) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond164) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond164) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond164) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond164) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond164) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond164) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond164) CFA_SP SP+-4
          CFI (cfiCond164) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond165 Using cfiCommon0
          CFI (cfiCond165) Function ZDP_SimpleDescMsg
          CFI (cfiCond165) Conditional ??CrossCallReturnLabel_161
          CFI (cfiCond165) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond165) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond165) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond165) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond165) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond165) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond165) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond165) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond165) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond165) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond165) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond165) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond165) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond165) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond165) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond165) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond165) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond165) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond165) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond165) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond165) CFA_SP SP+-2
          CFI (cfiCond165) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker166 Using cfiCommon1
          CFI (cfiPicker166) NoFunction
          CFI (cfiPicker166) Picker
        ADD       A,0xE0 /* A   */
        MOV       ?V2,A
        CLR       A
        RLC       A
        MOV       ?V3,A
        RET
          CFI EndBlock cfiCond163
          CFI EndBlock cfiCond164
          CFI EndBlock cfiCond165
          CFI EndBlock cfiPicker166

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine50:
          CFI Block cfiCond167 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_84
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond168 Using cfiCommon0
          CFI (cfiCond168) Function ZDP_SimpleDescMsg
          CFI (cfiCond168) Conditional ??CrossCallReturnLabel_85
          CFI (cfiCond168) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond168) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond168) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond168) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond168) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond168) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond168) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond168) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond168) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond168) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond168) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond168) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond168) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond168) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond168) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond168) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond168) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond168) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond168) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond168) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond168) CFA_SP SP+-2
          CFI (cfiCond168) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker169 Using cfiCommon1
          CFI (cfiPicker169) NoFunction
          CFI (cfiPicker169) Picker
        LCALL     ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_137:
        RET
          CFI EndBlock cfiCond167
          CFI EndBlock cfiCond168
          CFI EndBlock cfiPicker169

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine81:
          CFI Block cfiCond170 Using cfiCommon0
          CFI Function ZDP_MatchDescReq
          CFI Conditional ??CrossCallReturnLabel_136, ??CrossCallReturnLabel_0
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond171 Using cfiCommon0
          CFI (cfiCond171) Function ZDP_MatchDescReq
          CFI (cfiCond171) Conditional ??CrossCallReturnLabel_136, ??CrossCallReturnLabel_1
          CFI (cfiCond171) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond171) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond171) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond171) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond171) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond171) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond171) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond171) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond171) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond171) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond171) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond171) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond171) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond171) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond171) CFA_SP SP+-4
          CFI (cfiCond171) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond172 Using cfiCommon0
          CFI (cfiCond172) Function ZDP_SimpleDescMsg
          CFI (cfiCond172) Conditional ??CrossCallReturnLabel_137, ??CrossCallReturnLabel_84
          CFI (cfiCond172) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond172) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond172) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond172) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond172) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond172) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond172) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond172) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond172) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond172) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond172) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond172) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond172) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond172) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond172) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond172) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond172) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond172) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond172) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond172) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond172) CFA_SP SP+-4
          CFI (cfiCond172) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond173 Using cfiCommon0
          CFI (cfiCond173) Function ZDP_SimpleDescMsg
          CFI (cfiCond173) Conditional ??CrossCallReturnLabel_137, ??CrossCallReturnLabel_85
          CFI (cfiCond173) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond173) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond173) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond173) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond173) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond173) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond173) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond173) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond173) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond173) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond173) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond173) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond173) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond173) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond173) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond173) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond173) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond173) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond173) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond173) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond173) CFA_SP SP+-4
          CFI (cfiCond173) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker174 Using cfiCommon1
          CFI (cfiPicker174) NoFunction
          CFI (cfiPicker174) Picker
        INC       DPTR
        MOVX      A,@DPTR
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,R0
        ADD       A,#0x2
        MOV       R0,A
        RET
          CFI EndBlock cfiCond170
          CFI EndBlock cfiCond171
          CFI EndBlock cfiCond172
          CFI EndBlock cfiCond173
          CFI EndBlock cfiPicker174

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine47:
          CFI Block cfiCond175 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_80
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond176 Using cfiCommon0
          CFI (cfiCond176) Function ZDP_SimpleDescMsg
          CFI (cfiCond176) Conditional ??CrossCallReturnLabel_81
          CFI (cfiCond176) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond176) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond176) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond176) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond176) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond176) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond176) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond176) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond176) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond176) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond176) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond176) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond176) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond176) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond176) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond176) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond176) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond176) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond176) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond176) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond176) CFA_SP SP+-2
          CFI (cfiCond176) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker177 Using cfiCommon1
          CFI (cfiPicker177) NoFunction
          CFI (cfiPicker177) Picker
        MOV       DPL,?V8
        MOV       DPH,?V9
        MOVX      A,@DPTR
        ADD       A,?V2
        MOV       R7,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,?V3
        MOV       DPL,R7
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond175
          CFI EndBlock cfiCond176
          CFI EndBlock cfiPicker177

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine37:
          CFI Block cfiCond178 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_56
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond179 Using cfiCommon0
          CFI (cfiCond179) Function ZDP_SimpleDescMsg
          CFI (cfiCond179) Conditional ??CrossCallReturnLabel_57
          CFI (cfiCond179) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond179) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond179) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond179) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond179) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond179) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond179) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond179) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond179) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond179) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond179) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond179) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond179) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond179) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond179) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond179) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond179) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond179) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond179) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond179) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond179) CFA_SP SP+-2
          CFI (cfiCond179) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker180 Using cfiCommon1
          CFI (cfiPicker180) NoFunction
          CFI (cfiPicker180) Picker
        LCALL     ?Subroutine102 & 0xFFFF
??CrossCallReturnLabel_164:
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond178
          CFI EndBlock cfiCond179
          CFI EndBlock cfiPicker180

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine102:
          CFI Block cfiCond181 Using cfiCommon0
          CFI Function ZDP_MatchDescReq
          CFI Conditional ??CrossCallReturnLabel_163, ??CrossCallReturnLabel_0
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond182 Using cfiCommon0
          CFI (cfiCond182) Function ZDP_MatchDescReq
          CFI (cfiCond182) Conditional ??CrossCallReturnLabel_163, ??CrossCallReturnLabel_1
          CFI (cfiCond182) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond182) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond182) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond182) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond182) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond182) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond182) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond182) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond182) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond182) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond182) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond182) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond182) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond182) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond182) CFA_SP SP+-4
          CFI (cfiCond182) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond183 Using cfiCommon0
          CFI (cfiCond183) Function ZDP_SimpleDescMsg
          CFI (cfiCond183) Conditional ??CrossCallReturnLabel_164, ??CrossCallReturnLabel_56
          CFI (cfiCond183) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond183) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond183) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond183) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond183) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond183) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond183) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond183) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond183) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond183) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond183) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond183) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond183) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond183) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond183) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond183) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond183) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond183) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond183) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond183) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond183) CFA_SP SP+-4
          CFI (cfiCond183) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond184 Using cfiCommon0
          CFI (cfiCond184) Function ZDP_SimpleDescMsg
          CFI (cfiCond184) Conditional ??CrossCallReturnLabel_164, ??CrossCallReturnLabel_57
          CFI (cfiCond184) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond184) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond184) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond184) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond184) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond184) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond184) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond184) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond184) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond184) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond184) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond184) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond184) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond184) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond184) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond184) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond184) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond184) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond184) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond184) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond184) CFA_SP SP+-4
          CFI (cfiCond184) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond185 Using cfiCommon0
          CFI (cfiCond185) Function ZDP_UserDescSet
          CFI (cfiCond185) Conditional ??CrossCallReturnLabel_165, ??CrossCallReturnLabel_150
          CFI (cfiCond185) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond185) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond185) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond185) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond185) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond185) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond185) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond185) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond185) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond185) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond185) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond185) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond185) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond185) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond185) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond185) CFA_SP SP+-4
          CFI (cfiCond185) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond186 Using cfiCommon0
          CFI (cfiCond186) Function ZDP_SimpleDescMsg
          CFI (cfiCond186) Conditional ??CrossCallReturnLabel_165, ??CrossCallReturnLabel_151, ??CrossCallReturnLabel_2
          CFI (cfiCond186) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond186) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond186) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond186) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond186) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond186) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond186) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond186) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond186) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond186) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond186) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond186) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond186) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond186) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond186) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond186) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond186) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond186) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond186) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond186) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond186) CFA_SP SP+-6
          CFI (cfiCond186) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond187 Using cfiCommon0
          CFI (cfiCond187) Function ZDP_SimpleDescMsg
          CFI (cfiCond187) Conditional ??CrossCallReturnLabel_165, ??CrossCallReturnLabel_151, ??CrossCallReturnLabel_3
          CFI (cfiCond187) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond187) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond187) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond187) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond187) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond187) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond187) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond187) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond187) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond187) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond187) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond187) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond187) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond187) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond187) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond187) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond187) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond187) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond187) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond187) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond187) CFA_SP SP+-6
          CFI (cfiCond187) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker188 Using cfiCommon1
          CFI (cfiPicker188) NoFunction
          CFI (cfiPicker188) Picker
        MOVX      @DPTR,A
        MOV       DPL,?V2
        MOV       DPH,?V3
        RET
          CFI EndBlock cfiCond181
          CFI EndBlock cfiCond182
          CFI EndBlock cfiCond183
          CFI EndBlock cfiCond184
          CFI EndBlock cfiCond185
          CFI EndBlock cfiCond186
          CFI EndBlock cfiCond187
          CFI EndBlock cfiPicker188

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine33:
          CFI Block cfiCond189 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_198
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond190 Using cfiCommon0
          CFI (cfiCond190) Function ZDP_SimpleDescMsg
          CFI (cfiCond190) Conditional ??CrossCallReturnLabel_199
          CFI (cfiCond190) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond190) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond190) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond190) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond190) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond190) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond190) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond190) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond190) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond190) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond190) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond190) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond190) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond190) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond190) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond190) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond190) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond190) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond190) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond190) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond190) CFA_SP SP+-2
          CFI (cfiCond190) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker191 Using cfiCommon1
          CFI (cfiPicker191) NoFunction
          CFI (cfiPicker191) Picker
        INC       DPTR
        INC       DPTR
          CFI EndBlock cfiCond189
          CFI EndBlock cfiCond190
          CFI EndBlock cfiPicker191
        REQUIRE ??Subroutine118_0
        ; // Fall through to label ??Subroutine118_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine118_0:
          CFI Block cfiCond192 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_200
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond193 Using cfiCommon0
          CFI (cfiCond193) Function ZDP_SimpleDescMsg
          CFI (cfiCond193) Conditional ??CrossCallReturnLabel_198
          CFI (cfiCond193) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond193) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond193) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond193) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond193) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond193) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond193) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond193) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond193) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond193) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond193) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond193) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond193) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond193) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond193) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond193) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond193) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond193) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond193) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond193) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond193) CFA_SP SP+-2
          CFI (cfiCond193) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond194 Using cfiCommon0
          CFI (cfiCond194) Function ZDP_SimpleDescMsg
          CFI (cfiCond194) Conditional ??CrossCallReturnLabel_199
          CFI (cfiCond194) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond194) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond194) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond194) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond194) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond194) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond194) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond194) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond194) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond194) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond194) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond194) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond194) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond194) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond194) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond194) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond194) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond194) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond194) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond194) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond194) CFA_SP SP+-2
          CFI (cfiCond194) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker195 Using cfiCommon1
          CFI (cfiPicker195) NoFunction
          CFI (cfiPicker195) Picker
        MOVX      @DPTR,A
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        RET
          CFI EndBlock cfiCond192
          CFI EndBlock cfiCond193
          CFI EndBlock cfiCond194
          CFI EndBlock cfiPicker195

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine32:
          CFI Block cfiCond196 Using cfiCommon0
          CFI Function ZDP_MatchDescReq
          CFI Conditional ??CrossCallReturnLabel_48
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond197 Using cfiCommon0
          CFI (cfiCond197) Function ZDP_SimpleDescMsg
          CFI (cfiCond197) Conditional ??CrossCallReturnLabel_49
          CFI (cfiCond197) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond197) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond197) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond197) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond197) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond197) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond197) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond197) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond197) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond197) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond197) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond197) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond197) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond197) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond197) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond197) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond197) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond197) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond197) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond197) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond197) CFA_SP SP+-2
          CFI (cfiCond197) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond198 Using cfiCommon0
          CFI (cfiCond198) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond198) Conditional ??CrossCallReturnLabel_47
          CFI (cfiCond198) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond198) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond198) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond198) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond198) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond198) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond198) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond198) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond198) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond198) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond198) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond198) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond198) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond198) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond198) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond198) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond198) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond198) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond198) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond198) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond198) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond198) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond198) CFA_SP SP+-2
          CFI (cfiCond198) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker199 Using cfiCommon1
          CFI (cfiPicker199) NoFunction
          CFI (cfiPicker199) Picker
        MOVX      @DPTR,A
        INC       DPTR
        MOV       R0,DPL
        MOV       R1,DPH
        RET
          CFI EndBlock cfiCond196
          CFI EndBlock cfiCond197
          CFI EndBlock cfiCond198
          CFI EndBlock cfiPicker199

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine11:
          CFI Block cfiCond200 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_2
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond201 Using cfiCommon0
          CFI (cfiCond201) Function ZDP_SimpleDescMsg
          CFI (cfiCond201) Conditional ??CrossCallReturnLabel_3
          CFI (cfiCond201) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond201) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond201) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond201) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond201) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond201) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond201) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond201) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond201) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond201) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond201) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond201) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond201) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond201) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond201) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond201) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond201) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond201) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond201) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond201) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond201) CFA_SP SP+-2
          CFI (cfiCond201) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker202 Using cfiCommon1
          CFI (cfiPicker202) NoFunction
          CFI (cfiPicker202) Picker
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_151:
        LCALL     ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_138:
        INC       DPTR
        RET
          CFI EndBlock cfiCond200
          CFI EndBlock cfiCond201
          CFI EndBlock cfiPicker202

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine94:
          CFI Block cfiCond203 Using cfiCommon0
          CFI Function ZDP_UserDescSet
          CFI Conditional ??CrossCallReturnLabel_150
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond204 Using cfiCommon0
          CFI (cfiCond204) Function ZDP_SimpleDescMsg
          CFI (cfiCond204) Conditional ??CrossCallReturnLabel_151, ??CrossCallReturnLabel_2
          CFI (cfiCond204) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond204) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond204) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond204) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond204) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond204) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond204) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond204) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond204) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond204) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond204) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond204) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond204) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond204) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond204) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond204) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond204) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond204) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond204) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond204) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond204) CFA_SP SP+-4
          CFI (cfiCond204) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond205 Using cfiCommon0
          CFI (cfiCond205) Function ZDP_SimpleDescMsg
          CFI (cfiCond205) Conditional ??CrossCallReturnLabel_151, ??CrossCallReturnLabel_3
          CFI (cfiCond205) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond205) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond205) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond205) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond205) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond205) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond205) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond205) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond205) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond205) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond205) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond205) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond205) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond205) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond205) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond205) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond205) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond205) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond205) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond205) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond205) CFA_SP SP+-4
          CFI (cfiCond205) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker206 Using cfiCommon1
          CFI (cfiPicker206) NoFunction
          CFI (cfiPicker206) Picker
        INC       DPTR
        LCALL     ?Subroutine102 & 0xFFFF
??CrossCallReturnLabel_165:
        INC       DPTR
        RET
          CFI EndBlock cfiCond203
          CFI EndBlock cfiCond204
          CFI EndBlock cfiCond205
          CFI EndBlock cfiPicker206
// 1007 
// 1008 /*********************************************************************
// 1009  * @fn          ZDP_EPRsp
// 1010  *
// 1011  * @brief       This builds and send an endpoint list. Used in
// 1012  *              Active_EP_rsp and Match_Desc_Rsp
// 1013  *              message.  This function sends unicast message to the
// 1014  *              requesting device.
// 1015  *
// 1016  * @param       MsgType - either Active_EP_rsp or Match_Desc_Rsp
// 1017  * @param       dstAddr - destination address
// 1018  * @param       Status - message status (ZDP_SUCCESS or other)
// 1019  * @param       nwkAddr - Device's short address that this response describes
// 1020  * @param       Count - number of endpoint/interfaces in list
// 1021  * @param       pEPIntfList - Array of Endpoint/Interfaces
// 1022  * @param       SecurityEnable - Security Options
// 1023  *
// 1024  * @return      afStatus_t
// 1025  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1026 afStatus_t ZDP_EPRsp( uint16 MsgType, byte TransSeq, zAddrType_t *dstAddr,
ZDP_EPRsp:
          CFI Block cfiBlock207 Using cfiCommon0
          CFI Function ZDP_EPRsp
        CODE
// 1027                         byte Status, uint16 nwkAddr, byte Count,
// 1028                         uint8 *pEPList,
// 1029                         byte SecurityEnable )
// 1030 {
        FUNCALL ZDP_EPRsp, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_EPRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        MOV       A,#-0xf
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
        MOV       A,R1
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
        MOV       ?V2,R2
        MOV       ?V3,R3
        MOV       A,R4
        MOV       R6,A
        MOV       A,R5
        MOV       R7,A
// 1031   uint8 *pBuf = ZDP_TmpBuf;
        MOV       DPTR,#ZDP_TmpBuf
        LCALL     ?Subroutine59 & 0xFFFF
// 1032   byte len = 1 + 2 + 1;  // Status + nwkAddr + endpoint/interface count.
??CrossCallReturnLabel_106:
        MOV       ?V0,#0x4
// 1033   byte txOptions;
// 1034 
// 1035   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1036 
// 1037   if ( MsgType == Match_Desc_rsp )
        MOV       A,#0x6
        XRL       A,?V2
        JNZ       ??ZDP_EPRsp_0
        MOV       A,#-0x80
        XRL       A,?V3
??ZDP_EPRsp_0:
        JNZ       ??ZDP_EPRsp_1
// 1038     txOptions = AF_MSG_ACK_REQUEST;
        MOV       ?V1,#0x10
        SJMP      ??ZDP_EPRsp_2
// 1039   else
// 1040     txOptions = 0;
??ZDP_EPRsp_1:
        MOV       ?V1,#0x0
// 1041 
// 1042     *pBuf++ = Status;
??ZDP_EPRsp_2:
        MOV       A,#0x10
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_222:
        MOVX      @DPTR,A
        MOV       A,#0x11
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine14 & 0xFFFF
// 1043   *pBuf++ = LO_UINT16( nwkAddr );
// 1044   *pBuf++ = HI_UINT16( nwkAddr );
??CrossCallReturnLabel_8:
        MOV       A,#0x13
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       R1,A
// 1045 
// 1046   *pBuf++ = Count;   // Endpoint/Interface count
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
// 1047 
// 1048   if ( Count )
        JZ        ??ZDP_EPRsp_3
// 1049   {
// 1050     len += Count;
        MOV       A,#0x4
        ADD       A,R1
        MOV       ?V0,A
// 1051     osal_memcpy( pBuf, pEPList, Count );
        ; Setup parameters for call to function osal_memcpy
        MOV       A,#0x14
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine48 & 0xFFFF
// 1052   }
??CrossCallReturnLabel_82:
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,R1
        MOV       R4,A
        MOV       R5,#0x0
        MOV       A,R2
        ADD       A,#0x4
        MOV       R2,A
        JNC       ??ZDP_EPRsp_4
        INC       R3
??ZDP_EPRsp_4:
        LCALL     ??Subroutine119_0 & 0xFFFF
??CrossCallReturnLabel_205:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
// 1053 
// 1054   FillAndSendTxOptions( &TransSeq, dstAddr, MsgType, len, txOptions );
??ZDP_EPRsp_3:
        MOV       A,?V1
        MOV       DPTR,#ZDP_TxOptions
        MOVX      @DPTR,A
        ; Setup parameters for call to function fillAndSend
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 18)
        MOV       R1,?V0
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP101_8
        LCALL     ??Subroutine128_0 & 0xFFFF
??CrossCallReturnLabel_257:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
        MOV       A,R1
        MOV       R1,A
        MOV       DPTR,#ZDP_TxOptions
        CLR       A
        MOVX      @DPTR,A
        INC       A
        LJMP      ?Subroutine3 & 0xFFFF
// 1055 }
          CFI EndBlock cfiBlock207
// 1056 
// 1057 /*********************************************************************
// 1058  * @fn          ZDP_UserDescRsp
// 1059  *
// 1060  * @brief       Build and send the User Decriptor Response.
// 1061  *
// 1062  *
// 1063  * @param       dstAddr - destination address
// 1064  * @param       nwkAddrOfInterest -
// 1065  * @param       userDesc -
// 1066  * @param       SecurityEnable - Security Options
// 1067  *
// 1068  * @return      ZStatus_t
// 1069  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1070 ZStatus_t ZDP_UserDescRsp( byte TransSeq, zAddrType_t *dstAddr,
ZDP_UserDescRsp:
          CFI Block cfiBlock208 Using cfiCommon0
          CFI Function ZDP_UserDescRsp
        CODE
// 1071                 uint16 nwkAddrOfInterest, UserDescriptorFormat_t *userDesc,
// 1072                 byte SecurityEnable )
// 1073 {
        FUNCALL ZDP_UserDescRsp, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_UserDescRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V8
        REQUIRE ?V9
        MOV       A,#-0x12
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,R1
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
        LCALL     ?Subroutine87 & 0xFFFF
// 1074   uint8 *pBuf = ZDP_TmpBuf;
??CrossCallReturnLabel_297:
        MOV       ?V0,R0
        MOV       ?V1,A
        MOV       A,#0x13
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine133_0 & 0xFFFF
??CrossCallReturnLabel_298:
        MOV       ?V8,R0
        MOV       ?V9,A
// 1075   byte len = 1 + 2 + 1;  // Status + nwkAddr + descriptor length.
// 1076 
// 1077   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1078 
// 1079   len += userDesc->len;
        MOV       DPL,R0
        MOV       DPH,A
        MOVX      A,@DPTR
        ADD       A,#0x4
        MOV       ?V2,A
// 1080 
// 1081   *pBuf++ = ZSUCCESS;
        MOV       DPL,?V0
        MOV       DPH,?V1
        CLR       A
        MOVX      @DPTR,A
// 1082 
// 1083   *pBuf++ = LO_UINT16( nwkAddrOfInterest );
        MOV       A,R4
        INC       DPTR
        MOVX      @DPTR,A
// 1084   *pBuf++ = HI_UINT16( nwkAddrOfInterest );
        MOV       A,R5
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
// 1085 
// 1086   *pBuf++ = userDesc->len;
        MOV       DPL,R0
        MOV       DPH,?V9
        LCALL     ?Subroutine58 & 0xFFFF
??CrossCallReturnLabel_104:
        INC       DPTR
        MOVX      @DPTR,A
// 1087   osal_memcpy( pBuf, userDesc->desc, userDesc->len );
        ; Setup parameters for call to function osal_memcpy
        MOV       DPL,R0
        MOV       DPH,?V9
        INC       DPTR
        MOV       R1,DPL
        MOV       R2,DPH
        MOV       ?V4,R1
        MOV       ?V5,R2
        MOV       ?V6,#0x0
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       DPL,?V8
        MOV       DPH,?V9
        MOVX      A,@DPTR
        MOV       R4,A
        MOV       R5,#0x0
        MOV       A,?V0
        ADD       A,#0x4
        MOV       R2,A
        CLR       A
        ADDC      A,?V1
        MOV       R3,A
        LCALL     ??Subroutine119_0 & 0xFFFF
??CrossCallReturnLabel_206:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
// 1088 
// 1089   return (ZStatus_t)fillAndSend( &TransSeq, dstAddr, User_Desc_rsp, len );
        ; Setup parameters for call to function fillAndSend
        MOV       ?V0,#0x11
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       R1,?V2
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP101_8
        LCALL     ??Subroutine128_0 & 0xFFFF
??CrossCallReturnLabel_258:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        LJMP      ?Subroutine6 & 0xFFFF
// 1090 }
          CFI EndBlock cfiBlock208

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine74:
          CFI Block cfiCond209 Using cfiCommon0
          CFI Function ZDO_SendMsgCBs
          CFI Conditional ??CrossCallReturnLabel_201
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond210 Using cfiCommon0
          CFI (cfiCond210) Function ZDO_SendMsgCBs
          CFI (cfiCond210) Conditional ??CrossCallReturnLabel_202
          CFI (cfiCond210) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond210) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond210) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond210) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond210) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond210) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond210) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond210) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond210) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond210) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond210) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond210) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond210) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond210) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond210) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond210) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond210) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond210) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond210) CFA_SP SP+-2
          CFI (cfiCond210) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker211 Using cfiCommon1
          CFI (cfiPicker211) NoFunction
          CFI (cfiPicker211) Picker
        MOV       R5,#0x0
          CFI EndBlock cfiCond209
          CFI EndBlock cfiCond210
          CFI EndBlock cfiPicker211
        REQUIRE ??Subroutine119_0
        ; // Fall through to label ??Subroutine119_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine119_0:
          CFI Block cfiCond212 Using cfiCommon0
          CFI Function fillAndSend
          CFI Conditional ??CrossCallReturnLabel_203
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond213 Using cfiCommon0
          CFI (cfiCond213) Function ZDP_UserDescSet
          CFI (cfiCond213) Conditional ??CrossCallReturnLabel_204
          CFI (cfiCond213) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond213) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond213) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond213) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond213) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond213) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond213) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond213) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond213) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond213) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond213) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond213) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond213) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond213) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond213) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond213) CFA_SP SP+-2
          CFI (cfiCond213) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond214 Using cfiCommon0
          CFI (cfiCond214) Function ZDP_EPRsp
          CFI (cfiCond214) Conditional ??CrossCallReturnLabel_205
          CFI (cfiCond214) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond214) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond214) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond214) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond214) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond214) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond214) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond214) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond214) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond214) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond214) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond214) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond214) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond214) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond214) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond214) CFA_SP SP+-2
          CFI (cfiCond214) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond215 Using cfiCommon0
          CFI (cfiCond215) Function ZDP_UserDescRsp
          CFI (cfiCond215) Conditional ??CrossCallReturnLabel_206
          CFI (cfiCond215) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond215) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond215) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond215) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond215) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond215) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond215) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond215) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond215) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond215) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond215) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond215) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond215) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond215) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond215) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond215) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond215) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond215) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond215) CFA_SP SP+-2
          CFI (cfiCond215) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond216 Using cfiCommon0
          CFI (cfiCond216) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond216) Conditional ??CrossCallReturnLabel_207
          CFI (cfiCond216) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond216) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond216) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond216) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond216) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond216) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond216) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond216) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond216) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond216) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond216) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond216) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond216) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond216) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond216) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond216) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond216) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond216) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond216) CFA_SP SP+-2
          CFI (cfiCond216) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond217 Using cfiCommon0
          CFI (cfiCond217) Function ZDO_SendMsgCBs
          CFI (cfiCond217) Conditional ??CrossCallReturnLabel_201
          CFI (cfiCond217) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond217) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond217) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond217) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond217) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond217) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond217) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond217) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond217) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond217) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond217) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond217) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond217) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond217) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond217) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond217) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond217) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond217) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond217) CFA_SP SP+-2
          CFI (cfiCond217) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond218 Using cfiCommon0
          CFI (cfiCond218) Function ZDO_SendMsgCBs
          CFI (cfiCond218) Conditional ??CrossCallReturnLabel_202
          CFI (cfiCond218) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond218) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond218) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond218) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond218) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond218) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond218) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond218) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond218) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond218) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond218) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond218) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond218) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond218) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond218) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond218) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond218) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond218) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond218) CFA_SP SP+-2
          CFI (cfiCond218) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker219 Using cfiCommon1
          CFI (cfiPicker219) NoFunction
          CFI (cfiPicker219) Picker
        LCALL     `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV       A,#0x3
        RET
          CFI EndBlock cfiCond212
          CFI EndBlock cfiCond213
          CFI EndBlock cfiCond214
          CFI EndBlock cfiCond215
          CFI EndBlock cfiCond216
          CFI EndBlock cfiCond217
          CFI EndBlock cfiCond218
          CFI EndBlock cfiPicker219
// 1091 
// 1092 /*********************************************************************
// 1093  * @fn          ZDP_ServerDiscRsp
// 1094  *
// 1095  * @brief       Build and send the Server_Discovery_rsp response.
// 1096  *
// 1097  * @param       transID - Transaction sequence number of request.
// 1098  * @param       dstAddr - Network Destination Address.
// 1099  * @param       status - Status of response to request.
// 1100  * @param       aoi - Network Address of Interest of request.
// 1101  * @param       serverMask - Bit map of service(s) being sought.
// 1102  * @param       SecurityEnable - Security Options
// 1103  *
// 1104  * @return      ZStatus_t
// 1105  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1106 ZStatus_t ZDP_ServerDiscRsp( byte transID, zAddrType_t *dstAddr, byte status,
ZDP_ServerDiscRsp:
          CFI Block cfiBlock220 Using cfiCommon0
          CFI Function ZDP_ServerDiscRsp
        CODE
// 1107                            uint16 aoi, uint16 serverMask, byte SecurityEnable )
// 1108 {
        FUNCALL ZDP_ServerDiscRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
        MOV       A,R1
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
        MOV       A,R4
        MOV       R6,A
// 1109   const byte len = 1  + 2;  // status + aoi + mask.
// 1110   uint8 *pBuf = ZDP_TmpBuf;
        LCALL     ?Subroutine60 & 0xFFFF
??CrossCallReturnLabel_193:
        MOV       R4,A
        MOV       A,R1
        MOV       R5,A
// 1111   ZStatus_t stat;
// 1112 
// 1113   // Intentionally unreferenced parameters
// 1114   (void)aoi;
// 1115   (void)SecurityEnable;
// 1116 
// 1117   *pBuf++ = status;
        MOV       A,R6
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      @DPTR,A
        MOV       A,#0xd
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine53 & 0xFFFF
// 1118 
// 1119   *pBuf++ = LO_UINT16( serverMask );
??CrossCallReturnLabel_96:
        INC       DPTR
        MOVX      @DPTR,A
// 1120   *pBuf++ = HI_UINT16( serverMask );
        MOV       A,R1
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
// 1121 
// 1122   ZDP_TxOptions = AF_MSG_ACK_REQUEST;
        MOV       DPTR,#ZDP_TxOptions
        MOV       A,#0x10
        MOVX      @DPTR,A
// 1123   stat = fillAndSend( &transID, dstAddr, Server_Discovery_rsp, len );
        ; Setup parameters for call to function fillAndSend
        MOV       ?V0,#0x15
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 13)
        MOV       R1,#0x3
        MOV       A,R2
        MOV       R4,A
        MOV       A,R3
        MOV       R5,A
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP101_8
        LCALL     ??Subroutine128_0 & 0xFFFF
??CrossCallReturnLabel_259:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
        MOV       A,R1
        MOV       R1,A
// 1124   ZDP_TxOptions = AF_TX_OPTIONS_NONE;
        MOV       DPTR,#ZDP_TxOptions
        CLR       A
        MOVX      @DPTR,A
// 1125 
// 1126   return ( stat );
        INC       A
        LJMP      ??Subroutine110_0 & 0xFFFF
// 1127 }
          CFI EndBlock cfiBlock220
// 1128 
// 1129 /*********************************************************************
// 1130  * @fn          ZDP_GenericRsp
// 1131  *
// 1132  * @brief       Sends a response message with only the parameter status
// 1133  *              byte and the addr of interest for data.
// 1134  *              This function sends unicast message to the
// 1135  *              requesting device.
// 1136  *
// 1137  * @param       dstAddr - destination address
// 1138  * @param       status  - generic status for response
// 1139  * @param       aoi     - address of interest
// 1140  * @param       dstAddr - destination address
// 1141  * @param       rspId   - response cluster ID
// 1142  * @param       SecurityEnable - Security Options
// 1143  *
// 1144  * @return      afStatus_t
// 1145  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1146 afStatus_t ZDP_GenericRsp( byte TransSeq, zAddrType_t *dstAddr,
ZDP_GenericRsp:
          CFI Block cfiBlock221 Using cfiCommon0
          CFI Function ZDP_GenericRsp
        CODE
// 1147                      byte status, uint16 aoi, uint16 rspID, byte SecurityEnable )
// 1148 {
        FUNCALL ZDP_GenericRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV       A,#-0x9
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
        MOV       A,R1
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
// 1149   uint8 len;
// 1150 
// 1151   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1152 
// 1153   ZDP_TmpBuf[0] = status;
        LCALL     ?Subroutine43 & 0xFFFF
??CrossCallReturnLabel_210:
        MOV       A,R4
        MOVX      @DPTR,A
        MOV       A,#0xa
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine131_0 & 0xFFFF
// 1154   ZDP_TmpBuf[1] = LO_UINT16( aoi );
??CrossCallReturnLabel_288:
        MOV       DPTR,#ZDP_TmpBuf
        MOVX      A,@DPTR
        MOV       R4,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       DPH,A
        MOV       DPL,R4
        INC       DPTR
        MOV       A,R0
        LCALL     ?Subroutine12 & 0xFFFF
// 1155   ZDP_TmpBuf[2] = HI_UINT16( aoi );
// 1156 
// 1157   // Length byte
// 1158   ZDP_TmpBuf[3] = 0;
??CrossCallReturnLabel_5:
        LCALL     ?Subroutine43 & 0xFFFF
??CrossCallReturnLabel_211:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        CLR       A
        MOVX      @DPTR,A
// 1159   len = 4;
// 1160 
// 1161   return fillAndSend( &TransSeq, dstAddr, rspID, len );
        ; Setup parameters for call to function fillAndSend
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       R1,#0x4
        MOV       A,R2
        MOV       R4,A
        MOV       A,R3
        MOV       R5,A
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP101_8
        LCALL     ??Subroutine128_0 & 0xFFFF
??CrossCallReturnLabel_260:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
        MOV       A,#0x1
        LCALL     ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock221
        REQUIRE ?Subroutine7
        ; // Fall through to label ?Subroutine7
// 1162 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine7:
          CFI Block cfiBlock222 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0x1
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock222

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine43:
          CFI Block cfiCond223 Using cfiCommon0
          CFI Function ZDP_DeviceAnnce
          CFI Conditional ??CrossCallReturnLabel_209
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond224 Using cfiCommon0
          CFI (cfiCond224) Function ZDP_GenericRsp
          CFI (cfiCond224) Conditional ??CrossCallReturnLabel_210
          CFI (cfiCond224) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond224) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond224) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond224) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond224) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond224) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond224) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond224) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond224) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond224) CFA_SP SP+-2
          CFI (cfiCond224) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond225 Using cfiCommon0
          CFI (cfiCond225) Function ZDP_GenericRsp
          CFI (cfiCond225) Conditional ??CrossCallReturnLabel_211
          CFI (cfiCond225) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond225) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond225) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond225) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond225) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond225) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond225) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond225) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond225) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond225) CFA_SP SP+-2
          CFI (cfiCond225) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond226 Using cfiCommon0
          CFI (cfiCond226) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond226) Conditional ??CrossCallReturnLabel_212
          CFI (cfiCond226) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond226) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond226) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond226) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond226) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond226) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond226) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond226) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond226) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond226) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond226) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond226) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond226) CFA_SP SP+-2
          CFI (cfiCond226) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond227 Using cfiCommon0
          CFI (cfiCond227) Function ZDP_MgmtLqiRsp
          CFI (cfiCond227) Conditional ??CrossCallReturnLabel_213
          CFI (cfiCond227) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond227) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond227) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond227) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond227) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond227) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond227) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond227) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond227) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond227) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond227) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond227) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond227) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond227) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond227) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond227) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond227) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond227) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond227) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond227) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond227) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond227) CFA_SP SP+-2
          CFI (cfiCond227) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker228 Using cfiCommon1
          CFI (cfiPicker228) NoFunction
          CFI (cfiPicker228) Picker
        MOV       DPTR,#ZDP_TmpBuf
          CFI EndBlock cfiCond223
          CFI EndBlock cfiCond224
          CFI EndBlock cfiCond225
          CFI EndBlock cfiCond226
          CFI EndBlock cfiCond227
          CFI EndBlock cfiPicker228
        REQUIRE ??Subroutine120_0
        ; // Fall through to label ??Subroutine120_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine120_0:
          CFI Block cfiCond229 Using cfiCommon0
          CFI Function ZDP_IncomingData
          CFI Conditional ??CrossCallReturnLabel_208
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond230 Using cfiCommon0
          CFI (cfiCond230) Function ZDP_DeviceAnnce
          CFI (cfiCond230) Conditional ??CrossCallReturnLabel_209
          CFI (cfiCond230) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond230) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond230) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond230) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond230) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond230) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond230) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond230) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond230) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond230) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond230) CFA_SP SP+-2
          CFI (cfiCond230) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond231 Using cfiCommon0
          CFI (cfiCond231) Function ZDP_GenericRsp
          CFI (cfiCond231) Conditional ??CrossCallReturnLabel_210
          CFI (cfiCond231) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond231) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond231) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond231) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond231) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond231) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond231) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond231) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond231) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond231) CFA_SP SP+-2
          CFI (cfiCond231) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond232 Using cfiCommon0
          CFI (cfiCond232) Function ZDP_GenericRsp
          CFI (cfiCond232) Conditional ??CrossCallReturnLabel_211
          CFI (cfiCond232) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond232) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond232) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond232) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond232) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond232) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond232) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond232) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond232) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond232) CFA_SP SP+-2
          CFI (cfiCond232) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond233 Using cfiCommon0
          CFI (cfiCond233) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond233) Conditional ??CrossCallReturnLabel_212
          CFI (cfiCond233) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond233) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond233) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond233) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond233) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond233) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond233) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond233) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond233) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond233) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond233) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond233) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond233) CFA_SP SP+-2
          CFI (cfiCond233) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond234 Using cfiCommon0
          CFI (cfiCond234) Function ZDP_MgmtLqiRsp
          CFI (cfiCond234) Conditional ??CrossCallReturnLabel_213
          CFI (cfiCond234) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond234) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond234) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond234) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond234) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond234) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond234) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond234) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond234) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond234) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond234) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond234) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond234) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond234) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond234) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond234) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond234) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond234) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond234) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond234) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond234) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond234) CFA_SP SP+-2
          CFI (cfiCond234) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker235 Using cfiCommon1
          CFI (cfiPicker235) NoFunction
          CFI (cfiPicker235) Picker
        LCALL     ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_215:
        RET
          CFI EndBlock cfiCond229
          CFI EndBlock cfiCond230
          CFI EndBlock cfiCond231
          CFI EndBlock cfiCond232
          CFI EndBlock cfiCond233
          CFI EndBlock cfiCond234
          CFI EndBlock cfiPicker235

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine86:
          CFI Block cfiCond236 Using cfiCommon0
          CFI Function ZDP_NWKAddrOfInterestReq
          CFI Conditional ??CrossCallReturnLabel_214, ??CrossCallReturnLabel_14
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond237 Using cfiCommon0
          CFI (cfiCond237) Function ZDP_SimpleDescReq
          CFI (cfiCond237) Conditional ??CrossCallReturnLabel_214, ??CrossCallReturnLabel_15
          CFI (cfiCond237) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond237) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond237) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond237) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond237) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond237) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond237) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond237) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond237) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond237) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond237) CFA_SP SP+-4
          CFI (cfiCond237) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond238 Using cfiCommon0
          CFI (cfiCond238) Function ZDP_DeviceAnnce
          CFI (cfiCond238) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_209
          CFI (cfiCond238) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond238) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond238) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond238) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond238) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond238) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond238) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond238) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond238) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond238) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond238) CFA_SP SP+-4
          CFI (cfiCond238) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond239 Using cfiCommon0
          CFI (cfiCond239) Function ZDP_GenericRsp
          CFI (cfiCond239) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_210
          CFI (cfiCond239) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond239) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond239) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond239) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond239) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond239) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond239) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond239) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond239) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond239) CFA_SP SP+-4
          CFI (cfiCond239) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond240 Using cfiCommon0
          CFI (cfiCond240) Function ZDP_GenericRsp
          CFI (cfiCond240) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_211
          CFI (cfiCond240) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond240) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond240) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond240) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond240) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond240) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond240) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond240) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond240) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond240) CFA_SP SP+-4
          CFI (cfiCond240) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond241 Using cfiCommon0
          CFI (cfiCond241) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond241) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_212
          CFI (cfiCond241) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond241) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond241) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond241) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond241) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond241) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond241) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond241) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond241) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond241) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond241) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond241) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond241) CFA_SP SP+-4
          CFI (cfiCond241) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond242 Using cfiCommon0
          CFI (cfiCond242) Function ZDP_MgmtLqiRsp
          CFI (cfiCond242) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_213
          CFI (cfiCond242) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond242) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond242) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond242) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond242) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond242) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond242) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond242) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond242) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond242) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond242) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond242) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond242) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond242) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond242) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond242) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond242) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond242) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond242) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond242) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond242) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond242) CFA_SP SP+-4
          CFI (cfiCond242) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond243 Using cfiCommon0
          CFI (cfiCond243) Function ZDP_IncomingData
          CFI (cfiCond243) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_208
          CFI (cfiCond243) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond243) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond243) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond243) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond243) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond243) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond243) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond243) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond243) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond243) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond243) CFA_SP SP+-4
          CFI (cfiCond243) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker244 Using cfiCommon1
          CFI (cfiPicker244) NoFunction
          CFI (cfiPicker244) Picker
        LCALL     ?Subroutine101 & 0xFFFF
??CrossCallReturnLabel_217:
        RET
          CFI EndBlock cfiCond236
          CFI EndBlock cfiCond237
          CFI EndBlock cfiCond238
          CFI EndBlock cfiCond239
          CFI EndBlock cfiCond240
          CFI EndBlock cfiCond241
          CFI EndBlock cfiCond242
          CFI EndBlock cfiCond243
          CFI EndBlock cfiPicker244

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine101:
          CFI Block cfiCond245 Using cfiCommon0
          CFI Function ZDP_NWKAddrOfInterestReq
          CFI Conditional ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_214, ??CrossCallReturnLabel_14
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond246 Using cfiCommon0
          CFI (cfiCond246) Function ZDP_SimpleDescReq
          CFI (cfiCond246) Conditional ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_214, ??CrossCallReturnLabel_15
          CFI (cfiCond246) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond246) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond246) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond246) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond246) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond246) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond246) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond246) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond246) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond246) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond246) CFA_SP SP+-6
          CFI (cfiCond246) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond247 Using cfiCommon0
          CFI (cfiCond247) Function ZDP_DeviceAnnce
          CFI (cfiCond247) Conditional ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_209
          CFI (cfiCond247) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond247) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond247) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond247) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond247) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond247) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond247) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond247) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond247) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond247) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond247) CFA_SP SP+-6
          CFI (cfiCond247) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond248 Using cfiCommon0
          CFI (cfiCond248) Function ZDP_GenericRsp
          CFI (cfiCond248) Conditional ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_210
          CFI (cfiCond248) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond248) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond248) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond248) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond248) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond248) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond248) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond248) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond248) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond248) CFA_SP SP+-6
          CFI (cfiCond248) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond249 Using cfiCommon0
          CFI (cfiCond249) Function ZDP_GenericRsp
          CFI (cfiCond249) Conditional ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_211
          CFI (cfiCond249) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond249) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond249) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond249) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond249) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond249) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond249) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond249) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond249) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond249) CFA_SP SP+-6
          CFI (cfiCond249) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond250 Using cfiCommon0
          CFI (cfiCond250) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond250) Conditional ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_212
          CFI (cfiCond250) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond250) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond250) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond250) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond250) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond250) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond250) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond250) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond250) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond250) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond250) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond250) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond250) CFA_SP SP+-6
          CFI (cfiCond250) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond251 Using cfiCommon0
          CFI (cfiCond251) Function ZDP_MgmtLqiRsp
          CFI (cfiCond251) Conditional ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_213
          CFI (cfiCond251) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond251) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond251) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond251) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond251) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond251) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond251) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond251) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond251) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond251) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond251) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond251) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond251) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond251) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond251) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond251) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond251) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond251) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond251) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond251) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond251) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond251) CFA_SP SP+-6
          CFI (cfiCond251) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond252 Using cfiCommon0
          CFI (cfiCond252) Function ZDP_IncomingData
          CFI (cfiCond252) Conditional ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_208
          CFI (cfiCond252) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond252) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond252) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond252) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond252) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond252) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond252) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond252) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond252) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond252) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond252) CFA_SP SP+-6
          CFI (cfiCond252) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond253 Using cfiCommon0
          CFI (cfiCond253) Function ZDP_NWKAddrOfInterestReq
          CFI (cfiCond253) Conditional ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_129, ??CrossCallReturnLabel_14
          CFI (cfiCond253) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond253) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond253) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond253) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond253) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond253) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond253) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond253) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond253) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond253) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond253) CFA_SP SP+-6
          CFI (cfiCond253) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond254 Using cfiCommon0
          CFI (cfiCond254) Function ZDP_SimpleDescReq
          CFI (cfiCond254) Conditional ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_129, ??CrossCallReturnLabel_15
          CFI (cfiCond254) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond254) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond254) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond254) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond254) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond254) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond254) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond254) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond254) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond254) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond254) CFA_SP SP+-6
          CFI (cfiCond254) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond255 Using cfiCommon0
          CFI (cfiCond255) Function ZDP_SimpleDescReq
          CFI (cfiCond255) Conditional ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_130, ??CrossCallReturnLabel_4
          CFI (cfiCond255) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond255) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond255) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond255) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond255) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond255) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond255) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond255) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond255) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond255) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond255) CFA_SP SP+-6
          CFI (cfiCond255) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond256 Using cfiCommon0
          CFI (cfiCond256) Function ZDP_GenericRsp
          CFI (cfiCond256) Conditional ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_130, ??CrossCallReturnLabel_5
          CFI (cfiCond256) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond256) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond256) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond256) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond256) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond256) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond256) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond256) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond256) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond256) CFA_SP SP+-6
          CFI (cfiCond256) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond257 Using cfiCommon0
          CFI (cfiCond257) Function ZDP_DeviceAnnce
          CFI (cfiCond257) Conditional ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_131, ??CrossCallReturnLabel_21
          CFI (cfiCond257) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond257) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond257) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond257) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond257) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond257) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond257) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond257) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond257) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond257) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond257) CFA_SP SP+-6
          CFI (cfiCond257) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond258 Using cfiCommon0
          CFI (cfiCond258) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond258) Conditional ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_131, ??CrossCallReturnLabel_22
          CFI (cfiCond258) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond258) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond258) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond258) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond258) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond258) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond258) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond258) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond258) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond258) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond258) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond258) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond258) CFA_SP SP+-6
          CFI (cfiCond258) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker259 Using cfiCommon1
          CFI (cfiPicker259) NoFunction
          CFI (cfiPicker259) Picker
        MOVX      A,@DPTR
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       DPH,A
        MOV       DPL,R0
        RET
          CFI EndBlock cfiCond245
          CFI EndBlock cfiCond246
          CFI EndBlock cfiCond247
          CFI EndBlock cfiCond248
          CFI EndBlock cfiCond249
          CFI EndBlock cfiCond250
          CFI EndBlock cfiCond251
          CFI EndBlock cfiCond252
          CFI EndBlock cfiCond253
          CFI EndBlock cfiCond254
          CFI EndBlock cfiCond255
          CFI EndBlock cfiCond256
          CFI EndBlock cfiCond257
          CFI EndBlock cfiCond258
          CFI EndBlock cfiPicker259

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine12:
          CFI Block cfiCond260 Using cfiCommon0
          CFI Function ZDP_SimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_4
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond261 Using cfiCommon0
          CFI (cfiCond261) Function ZDP_GenericRsp
          CFI (cfiCond261) Conditional ??CrossCallReturnLabel_5
          CFI (cfiCond261) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond261) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond261) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond261) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond261) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond261) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond261) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond261) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond261) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond261) CFA_SP SP+-2
          CFI (cfiCond261) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker262 Using cfiCommon1
          CFI (cfiPicker262) NoFunction
          CFI (cfiPicker262) Picker
        LCALL     ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_130:
        INC       DPTR
        MOV       A,R1
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond260
          CFI EndBlock cfiCond261
          CFI EndBlock cfiPicker262
// 1163 
// 1164 /*********************************************************************
// 1165  * Binding
// 1166  */
// 1167 /*********************************************************************
// 1168  * @fn          ZDP_EndDeviceBindReq
// 1169  *
// 1170  * @brief       This builds and sends a End_Device_Bind_req message.
// 1171  *              This function sends a unicast message.
// 1172  *
// 1173  * @param       dstAddr - destination address
// 1174  * @param       LocalCoordinator - short address of local coordinator
// 1175  * @param       epIntf - Endpoint/Interface of Simple Desc
// 1176  * @param       ProfileID - Profile ID
// 1177  *
// 1178  *   The Input cluster list is the opposite of what you would think.
// 1179  *   This is the output cluster list of this device
// 1180  * @param       NumInClusters - number of input clusters
// 1181  * @param       InClusterList - input cluster ID list
// 1182  *
// 1183  *   The Output cluster list is the opposite of what you would think.
// 1184  *   This is the input cluster list of this device
// 1185  * @param       NumOutClusters - number of output clusters
// 1186  * @param       OutClusterList - output cluster ID list
// 1187  *
// 1188  * @param       SecurityEnable - Security Options
// 1189  *
// 1190  * @return      afStatus_t
// 1191  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1192 afStatus_t ZDP_EndDeviceBindReq( zAddrType_t *dstAddr,
ZDP_EndDeviceBindReq:
          CFI Block cfiBlock263 Using cfiCommon0
          CFI Function ZDP_EndDeviceBindReq
        CODE
// 1193                                  uint16 LocalCoordinator,
// 1194                                  byte endPoint,
// 1195                                  uint16 ProfileID,
// 1196                                  byte NumInClusters, cId_t *InClusterList,
// 1197                                  byte NumOutClusters, cId_t *OutClusterList,
// 1198                                  byte SecurityEnable )
// 1199 {
        FUNCALL ZDP_EndDeviceBindReq, NLME_GetShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_EndDeviceBindReq, NLME_GetExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_EndDeviceBindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_EndDeviceBindReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        MOV       A,#-0x12
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 0
        MOV       ?V6,R2
        MOV       ?V7,R3
        MOV       ?V4,R4
        MOV       ?V5,R5
        MOV       ?V3,R1
// 1200   uint8 *pBuf = ZDP_TmpBuf;
        LCALL     ?Subroutine69 & 0xFFFF
??CrossCallReturnLabel_280:
        MOV       A,#0x14
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       ?V2,A
        MOV       A,#0x17
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       R7,A
// 1201   uint8 i, len;
// 1202   uint8 *ieeeAddr;
// 1203 
// 1204   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1205 
// 1206   // LocalCoordinator + SrcExtAddr + ep + ProfileID +  NumInClusters + NumOutClusters.
// 1207   len = 2 + Z_EXTADDR_LEN + 1 + 2 + 1 + 1;
// 1208   len += (NumInClusters + NumOutClusters) * sizeof ( uint16 );
        MOV       A,?V2
        ADD       A,R7
        CLR       C
        RLC       A
        ADD       A,#0xf
        MOV       R6,A
// 1209 
// 1210   if ( len >= ZDP_BUF_SZ-1 )
        CLR       C
        SUBB      A,#0x4f
        JC        ??ZDP_EndDeviceBindReq_0
// 1211   {
// 1212     return afStatus_MEM_FAIL;
        MOV       R1,#0x10
        LJMP      ??ZDP_EndDeviceBindReq_1 & 0xFFFF
// 1213   }
// 1214 
// 1215   if ( LocalCoordinator != NLME_GetShortAddr() )
??ZDP_EndDeviceBindReq_0:
        ; Setup parameters for call to function NLME_GetShortAddr
        LCALL     `??NLME_GetShortAddr::?relay`; Banked call to: NLME_GetShortAddr
        MOV       A,R2
        XRL       A,?V4
        JNZ       ??ZDP_EndDeviceBindReq_2
        MOV       A,R3
        XRL       A,?V5
??ZDP_EndDeviceBindReq_2:
        JZ        ??ZDP_EndDeviceBindReq_3
// 1216   {
// 1217     return afStatus_INVALID_PARAMETER;
        MOV       R1,#0x2
        LJMP      ??ZDP_EndDeviceBindReq_1 & 0xFFFF
// 1218   }
// 1219 
// 1220   *pBuf++ = LO_UINT16( LocalCoordinator );
??ZDP_EndDeviceBindReq_3:
        MOV       DPL,?V0
        MOV       DPH,?V1
        MOV       A,?V4
        MOVX      @DPTR,A
// 1221   *pBuf++ = HI_UINT16( LocalCoordinator );
        MOV       A,?V5
        INC       DPTR
        MOVX      @DPTR,A
// 1222 
// 1223   ieeeAddr = NLME_GetExtAddr();
        ; Setup parameters for call to function NLME_GetExtAddr
        LCALL     `??NLME_GetExtAddr::?relay`; Banked call to: NLME_GetExtAddr
        MOV       ?V4,R2
        MOV       ?V5,R3
        MOV       R4,?V4
        MOV       R5,?V5
// 1224   pBuf = osal_cpyExtAddr( pBuf, ieeeAddr );
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,?V0
        ADD       A,#0x2
        MOV       R2,A
        CLR       A
        ADDC      A,?V1
        MOV       R3,A
        LCALL     ?Subroutine76 & 0xFFFF
// 1225 
// 1226   *pBuf++ = endPoint;
??CrossCallReturnLabel_123:
        MOV       A,#0x12
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine14 & 0xFFFF
// 1227 
// 1228   *pBuf++ = LO_UINT16( ProfileID );   // Profile ID
// 1229   *pBuf++ = HI_UINT16( ProfileID );
// 1230 
// 1231   *pBuf++ = NumInClusters; // Input cluster list
??CrossCallReturnLabel_9:
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOV       A,?V2
        MOVX      @DPTR,A
        MOV       A,R2
        ADD       A,#0x4
        MOV       ?V0,A
        CLR       A
        ADDC      A,R3
        MOV       ?V1,A
// 1232   for ( i = 0; i < NumInClusters; ++i )
        MOV       R4,#0x0
        MOV       A,#0x15
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine59 & 0xFFFF
??CrossCallReturnLabel_107:
        SJMP      ??ZDP_EndDeviceBindReq_4
// 1233   {
// 1234     *pBuf++ = LO_UINT16(InClusterList[i]);
??ZDP_EndDeviceBindReq_5:
        MOV       A,R4
        ADD       A,0xE0 /* A   */
        MOV       ?V4,A
        CLR       A
        RLC       A
        MOV       ?V5,A
        MOV       A,R2
        ADD       A,?V4
        MOV       ?V4,A
        MOV       A,R3
        ADDC      A,?V5
        MOV       ?V5,A
        MOV       DPL,?V4
        MOV       DPH,A
        LCALL     ?Subroutine67 & 0xFFFF
// 1235     *pBuf++ = HI_UINT16(InClusterList[i]);
??CrossCallReturnLabel_114:
        MOV       DPL,?V4
        MOV       DPH,?V5
        INC       DPTR
        LCALL     ??Subroutine123_0 & 0xFFFF
// 1236   }
??CrossCallReturnLabel_223:
        LCALL     ??Subroutine112_0 & 0xFFFF
??CrossCallReturnLabel_171:
        JNC       ??ZDP_EndDeviceBindReq_6
        INC       ?V1
??ZDP_EndDeviceBindReq_6:
        INC       R4
??ZDP_EndDeviceBindReq_4:
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        MOV       R0,DPL
        MOV       R1,DPH
        MOV       A,R4
        CLR       C
        SUBB      A,?V2
        JC        ??ZDP_EndDeviceBindReq_5
// 1237 
// 1238   *pBuf++ = NumOutClusters; // Output cluster list
        MOV       A,R7
        MOV       DPL,?V0
        MOV       DPH,?V1
        MOVX      @DPTR,A
        MOV       ?V0,R0
        MOV       ?V1,R1
// 1239   for ( i = 0; i < NumOutClusters; ++i )
        MOV       R4,#0x0
        MOV       A,#0x18
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine131_0 & 0xFFFF
??CrossCallReturnLabel_289:
        SJMP      ??ZDP_EndDeviceBindReq_7
// 1240   {
// 1241     *pBuf++ = LO_UINT16(OutClusterList[i]);
??ZDP_EndDeviceBindReq_8:
        MOV       A,R4
        ADD       A,0xE0 /* A   */
        MOV       R2,A
        CLR       A
        RLC       A
        MOV       R3,A
        MOV       A,R0
        ADD       A,R2
        MOV       R2,A
        MOV       A,R1
        ADDC      A,R3
        MOV       R3,A
        MOV       DPL,R2
        MOV       DPH,A
        LCALL     ?Subroutine80 & 0xFFFF
// 1242     *pBuf++ = HI_UINT16(OutClusterList[i]);
// 1243   }
??CrossCallReturnLabel_133:
        LCALL     ?Subroutine39 & 0xFFFF
??CrossCallReturnLabel_61:
        MOVX      A,@DPTR
        LCALL     ?Subroutine24 & 0xFFFF
??CrossCallReturnLabel_173:
        JNC       ??ZDP_EndDeviceBindReq_9
        INC       ?V1
??ZDP_EndDeviceBindReq_9:
        INC       R4
??ZDP_EndDeviceBindReq_7:
        MOV       A,R4
        CLR       C
        SUBB      A,R7
        JC        ??ZDP_EndDeviceBindReq_8
// 1244 
// 1245   return fillAndSend( &ZDP_TransID, dstAddr, End_Device_Bind_req, len );
        ; Setup parameters for call to function fillAndSend
        MOV       ?V0,#0x20
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       A,R6
        MOV       R1,A
        MOV       R4,?V6
        MOV       R5,?V7
        LCALL     ??Subroutine127_0 & 0xFFFF
??CrossCallReturnLabel_248:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
??ZDP_EndDeviceBindReq_1:
        SJMP      ??Subroutine121_0
// 1246 }
          CFI EndBlock cfiBlock263

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine67:
          CFI Block cfiCond264 Using cfiCommon0
          CFI Function fillAndSend
          CFI Conditional ??CrossCallReturnLabel_113
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond265 Using cfiCommon0
          CFI (cfiCond265) Function ZDP_EndDeviceBindReq
          CFI (cfiCond265) Conditional ??CrossCallReturnLabel_114
          CFI (cfiCond265) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond265) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond265) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond265) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond265) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond265) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond265) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond265) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond265) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond265) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond265) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond265) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond265) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond265) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond265) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond265) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond265) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond265) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond265) CFA_SP SP+-2
          CFI (cfiCond265) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker266 Using cfiCommon1
          CFI (cfiPicker266) NoFunction
          CFI (cfiPicker266) Picker
        LCALL     ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_135:
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond264
          CFI EndBlock cfiCond265
          CFI EndBlock cfiPicker266

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine80:
          CFI Block cfiCond267 Using cfiCommon0
          CFI Function zdpProcessAddrReq
          CFI Conditional ??CrossCallReturnLabel_132
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 46)
          CFI Block cfiCond268 Using cfiCommon0
          CFI (cfiCond268) Function ZDP_EndDeviceBindReq
          CFI (cfiCond268) Conditional ??CrossCallReturnLabel_133
          CFI (cfiCond268) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond268) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond268) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond268) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond268) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond268) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond268) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond268) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond268) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond268) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond268) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond268) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond268) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond268) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond268) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond268) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond268) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond268) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond268) CFA_SP SP+-2
          CFI (cfiCond268) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond269 Using cfiCommon0
          CFI (cfiCond269) Function fillAndSend
          CFI (cfiCond269) Conditional ??CrossCallReturnLabel_135, ??CrossCallReturnLabel_113
          CFI (cfiCond269) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond269) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond269) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond269) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond269) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond269) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond269) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond269) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond269) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond269) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond269) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond269) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond269) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond269) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond269) CFA_SP SP+-4
          CFI (cfiCond269) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond270 Using cfiCommon0
          CFI (cfiCond270) Function ZDP_EndDeviceBindReq
          CFI (cfiCond270) Conditional ??CrossCallReturnLabel_135, ??CrossCallReturnLabel_114
          CFI (cfiCond270) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond270) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond270) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond270) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond270) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond270) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond270) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond270) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond270) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond270) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond270) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond270) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond270) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond270) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond270) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond270) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond270) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond270) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond270) CFA_SP SP+-4
          CFI (cfiCond270) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond271 Using cfiCommon0
          CFI (cfiCond271) Function ZDP_UserDescRsp
          CFI (cfiCond271) Conditional ??CrossCallReturnLabel_134, ??CrossCallReturnLabel_104
          CFI (cfiCond271) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond271) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond271) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond271) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond271) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond271) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond271) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond271) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond271) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond271) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond271) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond271) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond271) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond271) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond271) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond271) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond271) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond271) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond271) CFA_SP SP+-4
          CFI (cfiCond271) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond272 Using cfiCommon0
          CFI (cfiCond272) Function ZDP_MgmtLqiRsp
          CFI (cfiCond272) Conditional ??CrossCallReturnLabel_134, ??CrossCallReturnLabel_105
          CFI (cfiCond272) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond272) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond272) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond272) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond272) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond272) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond272) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond272) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond272) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond272) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond272) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond272) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond272) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond272) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond272) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond272) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond272) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond272) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond272) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond272) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond272) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond272) CFA_SP SP+-4
          CFI (cfiCond272) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker273 Using cfiCommon1
          CFI (cfiPicker273) NoFunction
          CFI (cfiPicker273) Picker
        MOVX      A,@DPTR
        MOV       DPL,?V0
        MOV       DPH,?V1
        RET
          CFI EndBlock cfiCond267
          CFI EndBlock cfiCond268
          CFI EndBlock cfiCond269
          CFI EndBlock cfiCond270
          CFI EndBlock cfiCond271
          CFI EndBlock cfiCond272
          CFI EndBlock cfiPicker273

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine59:
          CFI Block cfiCond274 Using cfiCommon0
          CFI Function ZDP_EPRsp
          CFI Conditional ??CrossCallReturnLabel_106
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond275 Using cfiCommon0
          CFI (cfiCond275) Function ZDP_EndDeviceBindReq
          CFI (cfiCond275) Conditional ??CrossCallReturnLabel_107
          CFI (cfiCond275) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond275) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond275) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond275) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond275) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond275) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond275) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond275) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond275) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond275) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond275) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond275) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond275) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond275) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond275) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond275) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond275) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond275) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond275) CFA_SP SP+-2
          CFI (cfiCond275) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker276 Using cfiCommon1
          CFI (cfiPicker276) NoFunction
          CFI (cfiPicker276) Picker
        LCALL     ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_196:
        MOV       R2,A
        MOV       A,R1
        MOV       R3,A
        RET
          CFI EndBlock cfiCond274
          CFI EndBlock cfiCond275
          CFI EndBlock cfiPicker276

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine39:
          CFI Block cfiCond277 Using cfiCommon0
          CFI Function zdpProcessAddrReq
          CFI Conditional ??CrossCallReturnLabel_60
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 46)
          CFI Block cfiCond278 Using cfiCommon0
          CFI (cfiCond278) Function ZDP_EndDeviceBindReq
          CFI (cfiCond278) Conditional ??CrossCallReturnLabel_61
          CFI (cfiCond278) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond278) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond278) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond278) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond278) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond278) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond278) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond278) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond278) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond278) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond278) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond278) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond278) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond278) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond278) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond278) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond278) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond278) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond278) CFA_SP SP+-2
          CFI (cfiCond278) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond279 Using cfiCommon0
          CFI (cfiCond279) Function ZDP_MgmtLqiRsp
          CFI (cfiCond279) Conditional ??CrossCallReturnLabel_62
          CFI (cfiCond279) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond279) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond279) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond279) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond279) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond279) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond279) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond279) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond279) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond279) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond279) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond279) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond279) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond279) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond279) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond279) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond279) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond279) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond279) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond279) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond279) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond279) CFA_SP SP+-2
          CFI (cfiCond279) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker280 Using cfiCommon1
          CFI (cfiPicker280) NoFunction
          CFI (cfiPicker280) Picker
        MOVX      @DPTR,A
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        RET
          CFI EndBlock cfiCond277
          CFI EndBlock cfiCond278
          CFI EndBlock cfiCond279
          CFI EndBlock cfiPicker280

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine14:
          CFI Block cfiCond281 Using cfiCommon0
          CFI Function ZDP_EPRsp
          CFI Conditional ??CrossCallReturnLabel_8
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond282 Using cfiCommon0
          CFI (cfiCond282) Function ZDP_EndDeviceBindReq
          CFI (cfiCond282) Conditional ??CrossCallReturnLabel_9
          CFI (cfiCond282) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond282) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond282) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond282) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond282) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond282) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond282) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond282) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond282) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond282) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond282) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond282) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond282) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond282) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond282) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond282) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond282) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond282) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond282) CFA_SP SP+-2
          CFI (cfiCond282) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond283 Using cfiCommon0
          CFI (cfiCond283) Function ZDP_BindUnbindReq
          CFI (cfiCond283) Conditional ??CrossCallReturnLabel_10
          CFI (cfiCond283) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond283) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond283) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond283) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond283) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond283) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond283) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond283) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond283) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond283) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond283) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond283) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond283) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond283) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond283) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond283) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond283) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond283) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond283) CFA_SP SP+-2
          CFI (cfiCond283) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker284 Using cfiCommon1
          CFI (cfiPicker284) NoFunction
          CFI (cfiPicker284) Picker
        LCALL     ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_140:
        INC       DPTR
        LCALL     ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_148:
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond281
          CFI EndBlock cfiCond282
          CFI EndBlock cfiCond283
          CFI EndBlock cfiPicker284

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine6:
          CFI Block cfiBlock285 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 19)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       A,#0x1
        LCALL     ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock285
        REQUIRE ??Subroutine121_0
        ; // Fall through to label ??Subroutine121_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine121_0:
          CFI Block cfiBlock286 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0xa
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock286
// 1247 
// 1248 /*********************************************************************
// 1249  * @fn          ZDP_BindUnbindReq
// 1250  *
// 1251  * @brief       This builds and send a Bind_req or Unbind_req message
// 1252  *              Depending on the ClusterID. This function
// 1253  *              sends a unicast message to the local coordinator.
// 1254  *
// 1255  * @param       BindOrUnbind - either Bind_req or Unbind_req
// 1256  * @param       dstAddr - destination address of the message
// 1257  * @param       SourceAddr - source 64 bit address of the binding
// 1258  * @param       SrcEPIntf - Source endpoint/interface
// 1259  * @param       ClusterID - Binding cluster ID
// 1260  * @param       DestinationAddr - destination 64 bit addr of binding
// 1261  * @param       DstEPIntf - destination endpoint/interface
// 1262  * @param       SecurityEnable - Security Options
// 1263  *
// 1264  * @return      afStatus_t
// 1265  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1266 afStatus_t ZDP_BindUnbindReq( uint16 BindOrUnbind, zAddrType_t *dstAddr,
ZDP_BindUnbindReq:
          CFI Block cfiBlock287 Using cfiCommon0
          CFI Function ZDP_BindUnbindReq
        CODE
// 1267                               uint8 *SourceAddr, byte SrcEndPoint,
// 1268                               cId_t ClusterID,
// 1269                               zAddrType_t *destinationAddr, byte DstEndPoint,
// 1270                               byte SecurityEnable )
// 1271 {
        FUNCALL ZDP_BindUnbindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_BindUnbindReq, sAddrExtCpy
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 1, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_BindUnbindReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        MOV       A,#-0x12
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 0
        MOV       ?V6,R2
        MOV       ?V7,R3
        MOV       ?V4,R4
        MOV       ?V5,R5
        MOV       ?V3,R1
// 1272   uint8 *pBuf = ZDP_TmpBuf;
        LCALL     ?Subroutine57 & 0xFFFF
// 1273   byte len;
// 1274 
// 1275   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1276 
// 1277   // SourceAddr + SrcEPIntf + ClusterID +  addrMode.
// 1278   len = Z_EXTADDR_LEN + 1 + sizeof( cId_t ) + sizeof( uint8 );
??CrossCallReturnLabel_308:
        MOV       ?V2,#0xc
        MOV       A,#0x16
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine52 & 0xFFFF
// 1279   if ( destinationAddr->addrMode == Addr64Bit )
??CrossCallReturnLabel_92:
        MOV       A,R6
        ADD       A,#0x8
        MOV       ?V0,A
        CLR       A
        ADDC      A,R7
        MOV       ?V1,A
        MOV       DPL,?V0
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       A,#0x3
        XRL       A,R0
        JNZ       ??ZDP_BindUnbindReq_0
// 1280     len += Z_EXTADDR_LEN + 1;     // +1 for DstEPIntf
        MOV       ?V2,#0x15
        SJMP      ??ZDP_BindUnbindReq_1
// 1281   else if ( destinationAddr->addrMode == AddrGroup )
??ZDP_BindUnbindReq_0:
        MOV       A,#0x1
        XRL       A,R0
        JNZ       ??ZDP_BindUnbindReq_1
// 1282     len += sizeof ( uint16 );
        MOV       ?V2,#0xe
// 1283 
// 1284   pBuf = osal_cpyExtAddr( pBuf, SourceAddr );
??ZDP_BindUnbindReq_1:
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,#0x12
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine51 & 0xFFFF
??CrossCallReturnLabel_89:
        LCALL     ?Subroutine76 & 0xFFFF
// 1285   *pBuf++ = SrcEndPoint;
??CrossCallReturnLabel_124:
        MOV       A,#0x14
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine14 & 0xFFFF
// 1286 
// 1287   *pBuf++ = LO_UINT16( ClusterID );
// 1288 
// 1289   *pBuf++ = HI_UINT16( ClusterID );
// 1290   *pBuf++ = destinationAddr->addrMode;
??CrossCallReturnLabel_10:
        MOV       DPL,?V0
        MOV       DPH,?V1
        LCALL     ?Subroutine44 & 0xFFFF
??CrossCallReturnLabel_72:
        JNC       ??ZDP_BindUnbindReq_2
        INC       R3
// 1291   if ( destinationAddr->addrMode == Addr64Bit )
??ZDP_BindUnbindReq_2:
        MOV       DPL,?V0
        MOV       DPH,?V1
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       A,#0x3
        XRL       A,R0
        JNZ       ??ZDP_BindUnbindReq_3
// 1292   {
// 1293     pBuf = osal_cpyExtAddr( pBuf, destinationAddr->addr.extAddr );
// 1294     *pBuf = DstEndPoint;
        MOV       A,#0x18
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        LCALL     ?Subroutine98 & 0xFFFF
// 1295   }
??CrossCallReturnLabel_159:
        POP       A
          CFI CFA_SP SP+0
        SJMP      ??ZDP_BindUnbindReq_4
// 1296   else if ( destinationAddr->addrMode == AddrGroup )
??ZDP_BindUnbindReq_3:
        MOV       A,#0x1
        XRL       A,R0
        JNZ       ??ZDP_BindUnbindReq_5
// 1297   {
// 1298     *pBuf++ = LO_UINT16( destinationAddr->addr.shortAddr );
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ?Subroutine66 & 0xFFFF
// 1299     *pBuf++ = HI_UINT16( destinationAddr->addr.shortAddr );
??CrossCallReturnLabel_110:
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        LCALL     ??Subroutine129_0 & 0xFFFF
// 1300   }
??CrossCallReturnLabel_267:
        INC       DPTR
??ZDP_BindUnbindReq_4:
        MOVX      @DPTR,A
// 1301 
// 1302   FillAndSendTxOptions( &ZDP_TransID, dstAddr, BindOrUnbind, len, AF_MSG_ACK_REQUEST );
??ZDP_BindUnbindReq_5:
        MOV       DPTR,#ZDP_TxOptions
        MOV       A,#0x10
        MOVX      @DPTR,A
        ; Setup parameters for call to function fillAndSend
        MOV       R0,#?V6
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       R1,?V2
        MOV       R4,?V4
        MOV       R5,?V5
        LCALL     ??Subroutine127_0 & 0xFFFF
??CrossCallReturnLabel_249:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
        MOV       A,R1
        MOV       R1,A
        MOV       DPTR,#ZDP_TxOptions
        CLR       A
        MOVX      @DPTR,A
        LJMP      ??Subroutine121_0 & 0xFFFF
// 1303 }
          CFI EndBlock cfiBlock287

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine98:
          CFI Block cfiCond288 Using cfiCommon0
          CFI Function ZDP_NwkAddrReq
          CFI Conditional ??CrossCallReturnLabel_158
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond289 Using cfiCommon0
          CFI (cfiCond289) Function ZDP_BindUnbindReq
          CFI (cfiCond289) Conditional ??CrossCallReturnLabel_159
          CFI (cfiCond289) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond289) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond289) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond289) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond289) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond289) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond289) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond289) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond289) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond289) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond289) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond289) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond289) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond289) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond289) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond289) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond289) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond289) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond289) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond290 Using cfiCommon0
          CFI (cfiCond290) Function ZDP_EndDeviceBindReq
          CFI (cfiCond290) Conditional ??CrossCallReturnLabel_160, ??CrossCallReturnLabel_123
          CFI (cfiCond290) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond290) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond290) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond290) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond290) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond290) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond290) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond290) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond290) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond290) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond290) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond290) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond290) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond290) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond290) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond290) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond290) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond290) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond290) CFA_SP SP+-4
          CFI (cfiCond290) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond291 Using cfiCommon0
          CFI (cfiCond291) Function ZDP_BindUnbindReq
          CFI (cfiCond291) Conditional ??CrossCallReturnLabel_160, ??CrossCallReturnLabel_124
          CFI (cfiCond291) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond291) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond291) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond291) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond291) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond291) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond291) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond291) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond291) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond291) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond291) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond291) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond291) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond291) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond291) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond291) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond291) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond291) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond291) CFA_SP SP+-4
          CFI (cfiCond291) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker292 Using cfiCommon1
          CFI (cfiPicker292) NoFunction
          CFI (cfiPicker292) Picker
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV       DPL,R2
        MOV       DPH,R3
        RET
          CFI EndBlock cfiCond288
          CFI EndBlock cfiCond289
          CFI EndBlock cfiCond290
          CFI EndBlock cfiCond291
          CFI EndBlock cfiPicker292

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine76:
          CFI Block cfiCond293 Using cfiCommon0
          CFI Function ZDP_EndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_123
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond294 Using cfiCommon0
          CFI (cfiCond294) Function ZDP_BindUnbindReq
          CFI (cfiCond294) Conditional ??CrossCallReturnLabel_124
          CFI (cfiCond294) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond294) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond294) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond294) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond294) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond294) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond294) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond294) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond294) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond294) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond294) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond294) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond294) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond294) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond294) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond294) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond294) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond294) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond294) CFA_SP SP+-2
          CFI (cfiCond294) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker295 Using cfiCommon1
          CFI (cfiPicker295) NoFunction
          CFI (cfiPicker295) Picker
        LCALL     ?Subroutine98 & 0xFFFF
??CrossCallReturnLabel_160:
        MOV       A,?V3
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond293
          CFI EndBlock cfiCond294
          CFI EndBlock cfiPicker295

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine51:
          CFI Block cfiCond296 Using cfiCommon0
          CFI Function ZDP_MatchDescReq
          CFI Conditional ??CrossCallReturnLabel_86
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond297 Using cfiCommon0
          CFI (cfiCond297) Function ZDP_MatchDescReq
          CFI (cfiCond297) Conditional ??CrossCallReturnLabel_87
          CFI (cfiCond297) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond297) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond297) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond297) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond297) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond297) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond297) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond297) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond297) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond297) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond297) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond297) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond297) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond297) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond297) CFA_SP SP+-2
          CFI (cfiCond297) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond298 Using cfiCommon0
          CFI (cfiCond298) Function ZDP_MatchDescReq
          CFI (cfiCond298) Conditional ??CrossCallReturnLabel_88
          CFI (cfiCond298) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond298) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond298) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond298) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond298) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond298) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond298) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond298) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond298) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond298) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond298) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond298) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond298) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond298) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond298) CFA_SP SP+-2
          CFI (cfiCond298) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond299 Using cfiCommon0
          CFI (cfiCond299) Function ZDP_BindUnbindReq
          CFI (cfiCond299) Conditional ??CrossCallReturnLabel_89
          CFI (cfiCond299) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond299) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond299) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond299) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond299) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond299) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond299) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond299) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond299) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond299) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond299) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond299) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond299) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond299) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond299) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond299) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond299) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond299) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond299) CFA_SP SP+-2
          CFI (cfiCond299) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond300 Using cfiCommon0
          CFI (cfiCond300) Function ZDP_MgmtRtgRsp
          CFI (cfiCond300) Conditional ??CrossCallReturnLabel_90
          CFI (cfiCond300) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond300) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond300) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond300) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond300) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond300) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond300) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond300) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond300) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond300) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond300) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond300) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond300) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond300) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond300) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond300) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond300) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond300) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond300) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond300) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond300) CFA_SP SP+-2
          CFI (cfiCond300) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker301 Using cfiCommon1
          CFI (cfiPicker301) NoFunction
          CFI (cfiPicker301) Picker
        MOVX      A,@DPTR
        MOV       R4,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R5,A
        RET
          CFI EndBlock cfiCond296
          CFI EndBlock cfiCond297
          CFI EndBlock cfiCond298
          CFI EndBlock cfiCond299
          CFI EndBlock cfiCond300
          CFI EndBlock cfiPicker301
// 1304 
// 1305 /*********************************************************************
// 1306  * Network Management
// 1307  */
// 1308 
// 1309 /*********************************************************************
// 1310  * @fn          ZDP_MgmtNwkDiscReq
// 1311  *
// 1312  * @brief       This builds and send a Mgmt_NWK_Disc_req message. This
// 1313  *              function sends a unicast message.
// 1314  *
// 1315  * @param       dstAddr - destination address of the message
// 1316  * @param       ScanChannels - 32 bit address bit map
// 1317  * @param       StartIndex - Starting index within the reporting network
// 1318  *                           list
// 1319  * @param       SecurityEnable - Security Options
// 1320  *
// 1321  * @return      afStatus_t
// 1322  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1323 afStatus_t ZDP_MgmtNwkDiscReq( zAddrType_t *dstAddr,
ZDP_MgmtNwkDiscReq:
          CFI Block cfiBlock302 Using cfiCommon0
          CFI Function ZDP_MgmtNwkDiscReq
        CODE
// 1324                                uint32 ScanChannels,
// 1325                                byte ScanDuration,
// 1326                                byte StartIndex,
// 1327                                byte SecurityEnable )
// 1328 {
        FUNCALL ZDP_MgmtNwkDiscReq, osal_buffer_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkDiscReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
        MOV       ?V0,R1
        MOV       ?V1,R4
// 1329   uint8 *pBuf = ZDP_TmpBuf;
// 1330   byte len = sizeof( uint32 )+1+1;  // ScanChannels + ScanDuration + StartIndex.
// 1331 
// 1332   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1333 
// 1334   pBuf = osal_buffer_uint32( pBuf, ScanChannels );
        ; Setup parameters for call to function osal_buffer_uint32
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?PUSH_XSTACK8_X_FOUR
          CFI CFA_XSP16 add(XSP16, 16)
        LCALL     ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_102:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       DPL,R2
        MOV       DPH,R3
// 1335 
// 1336   *pBuf++ = ScanDuration;
        MOV       A,?V0
        MOVX      @DPTR,A
// 1337   *pBuf = StartIndex;
        INC       DPTR
        MOV       A,?V1
        MOVX      @DPTR,A
// 1338 
// 1339   return fillAndSend( &ZDP_TransID, dstAddr, Mgmt_NWK_Disc_req, len );
        ; Setup parameters for call to function fillAndSend
        MOV       ?V2,#0x30
        MOV       ?V3,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV       R1,#0x6
        LJMP      ??Subroutine105_0 & 0xFFFF
// 1340 }
          CFI EndBlock cfiBlock302
// 1341 
// 1342 /*********************************************************************
// 1343  * @fn          ZDP_MgmtDirectJoinReq
// 1344  *
// 1345  * @brief       This builds and send a Mgmt_Direct_Join_req message. This
// 1346  *              function sends a unicast message.
// 1347  *
// 1348  * @param       dstAddr - destination address of the message
// 1349  * @param       deviceAddr - 64 bit IEEE Address
// 1350  * @param       SecurityEnable - Security Options
// 1351  *
// 1352  * @return      afStatus_t
// 1353  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1354 afStatus_t ZDP_MgmtDirectJoinReq( zAddrType_t *dstAddr,
ZDP_MgmtDirectJoinReq:
          CFI Block cfiBlock303 Using cfiCommon0
          CFI Function ZDP_MgmtDirectJoinReq
        CODE
// 1355                                uint8 *deviceAddr,
// 1356                                byte capInfo,
// 1357                                byte SecurityEnable )
// 1358 {
        FUNCALL ZDP_MgmtDirectJoinReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtDirectJoinReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        LCALL     ?Subroutine45 & 0xFFFF
// 1359   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1360 
// 1361   osal_cpyExtAddr( ZDP_TmpBuf, deviceAddr );
// 1362   ZDP_TmpBuf[Z_EXTADDR_LEN] = capInfo;
??CrossCallReturnLabel_74:
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        XCH       A,R0
        ADD       A,#0x8
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        MOV       A,?V0
        MOVX      @DPTR,A
// 1363 
// 1364   return fillAndSend( &ZDP_TransID, dstAddr, Mgmt_Direct_Join_req, (Z_EXTADDR_LEN + 1) );
        ; Setup parameters for call to function fillAndSend
        MOV       ?V2,#0x35
        LJMP      ?Subroutine1 & 0xFFFF
// 1365 }
          CFI EndBlock cfiBlock303
// 1366 
// 1367 /*********************************************************************
// 1368  * @fn          ZDP_MgmtPermitJoinReq
// 1369  *
// 1370  * @brief       This builds and send a Mgmt_Permit_Join_req message.
// 1371  *
// 1372  * @param       dstAddr - destination address of the message
// 1373  * @param       duration - Permit duration
// 1374  * @param       TcSignificance - Trust Center Significance
// 1375  *
// 1376  * @return      afStatus_t
// 1377  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1378 afStatus_t ZDP_MgmtPermitJoinReq( zAddrType_t *dstAddr, byte duration,
ZDP_MgmtPermitJoinReq:
          CFI Block cfiBlock304 Using cfiCommon0
          CFI Function ZDP_MgmtPermitJoinReq
        CODE
// 1379                                   byte TcSignificance, byte SecurityEnable )
// 1380 {
        FUNCALL ZDP_MgmtPermitJoinReq, NLME_GetShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtPermitJoinReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtPermitJoinReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 9
        MOV       A,#-0x9
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
// 1381   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1382 
// 1383   // Build buffer
// 1384   ZDP_TmpBuf[ZDP_MGMT_PERMIT_JOIN_REQ_DURATION] = duration;
        LCALL     ?Subroutine43 & 0xFFFF
??CrossCallReturnLabel_212:
        MOV       A,R1
        LCALL     ?Subroutine19 & 0xFFFF
// 1385   ZDP_TmpBuf[ZDP_MGMT_PERMIT_JOIN_REQ_TC_SIG]   = TcSignificance;
??CrossCallReturnLabel_22:
        MOV       A,R4
        MOVX      @DPTR,A
// 1386 
// 1387   // Check of this is a broadcast message
// 1388   if ( (dstAddr) && ((dstAddr->addrMode == Addr16Bit) || (dstAddr->addrMode == AddrBroadcast))
// 1389       && ((dstAddr->addr.shortAddr == NWK_BROADCAST_SHORTADDR_DEVALL)
// 1390           || (dstAddr->addr.shortAddr == NWK_BROADCAST_SHORTADDR_DEVZCZR)
// 1391           || (dstAddr->addr.shortAddr == NWK_BROADCAST_SHORTADDR_DEVRXON)) )
        MOV       A,R2
        ORL       A,R7
        JZ        ??ZDP_MgmtPermitJoinReq_0
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       A,#0x2
        XRL       A,R0
        JZ        ??ZDP_MgmtPermitJoinReq_1
        MOV       A,#0xf
        XRL       A,R0
        JNZ       ??ZDP_MgmtPermitJoinReq_0
??ZDP_MgmtPermitJoinReq_1:
        MOV       DPL,R2
        MOV       DPH,R3
        LCALL     ??Subroutine131_0 & 0xFFFF
??CrossCallReturnLabel_290:
        MOV       A,#-0x1
        XRL       A,R0
        JNZ       ??ZDP_MgmtPermitJoinReq_2
        MOV       A,#-0x1
        XRL       A,R1
??ZDP_MgmtPermitJoinReq_2:
        JZ        ??ZDP_MgmtPermitJoinReq_3
        MOV       A,#-0x4
        XRL       A,R0
        JNZ       ??ZDP_MgmtPermitJoinReq_4
        MOV       A,#-0x1
        XRL       A,R1
??ZDP_MgmtPermitJoinReq_4:
        JZ        ??ZDP_MgmtPermitJoinReq_3
        MOV       A,#-0x3
        XRL       A,R0
        JNZ       ??ZDP_MgmtPermitJoinReq_5
        MOV       A,#-0x1
        XRL       A,R1
??ZDP_MgmtPermitJoinReq_5:
        JNZ       ??ZDP_MgmtPermitJoinReq_0
// 1392   {
// 1393     // Send this to our self as well as broadcast to network
// 1394     zAddrType_t tmpAddr;
// 1395 
// 1396     tmpAddr.addrMode = Addr16Bit;
??ZDP_MgmtPermitJoinReq_3:
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x2
        MOVX      @DPTR,A
// 1397     tmpAddr.addr.shortAddr = NLME_GetShortAddr();
        ; Setup parameters for call to function NLME_GetShortAddr
        LCALL     `??NLME_GetShortAddr::?relay`; Banked call to: NLME_GetShortAddr
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,R2
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R3
        MOVX      @DPTR,A
// 1398 
// 1399     fillAndSend( &ZDP_TransID, &tmpAddr, Mgmt_Permit_Join_req,
// 1400                       ZDP_MGMT_PERMIT_JOIN_REQ_SIZE );
        ; Setup parameters for call to function fillAndSend
        MOV       ?V2,#0x36
        MOV       ?V3,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       R1,#0x2
        MOV       A,R1
        LCALL     ?XSTACK_DISP102_8
        LCALL     ??Subroutine127_0 & 0xFFFF
// 1401   }
??CrossCallReturnLabel_250:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
// 1402 
// 1403   // Send the message
// 1404   return fillAndSend( &ZDP_TransID, dstAddr, Mgmt_Permit_Join_req,
// 1405                       ZDP_MGMT_PERMIT_JOIN_REQ_SIZE );
??ZDP_MgmtPermitJoinReq_0:
        ; Setup parameters for call to function fillAndSend
        MOV       ?V2,#0x36
        MOV       ?V3,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       R1,#0x2
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        LJMP      ?Subroutine9 & 0xFFFF
// 1406 }
          CFI EndBlock cfiBlock304

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine19:
          CFI Block cfiCond305 Using cfiCommon0
          CFI Function ZDP_DeviceAnnce
          CFI Conditional ??CrossCallReturnLabel_21
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond306 Using cfiCommon0
          CFI (cfiCond306) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond306) Conditional ??CrossCallReturnLabel_22
          CFI (cfiCond306) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond306) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond306) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond306) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond306) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond306) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond306) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond306) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond306) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond306) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond306) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond306) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond306) CFA_SP SP+-2
          CFI (cfiCond306) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker307 Using cfiCommon1
          CFI (cfiPicker307) NoFunction
          CFI (cfiPicker307) Picker
        LCALL     ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_131:
        RET
          CFI EndBlock cfiCond305
          CFI EndBlock cfiCond306
          CFI EndBlock cfiPicker307

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine79:
          CFI Block cfiCond308 Using cfiCommon0
          CFI Function ZDP_NWKAddrOfInterestReq
          CFI Conditional ??CrossCallReturnLabel_129, ??CrossCallReturnLabel_14
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond309 Using cfiCommon0
          CFI (cfiCond309) Function ZDP_SimpleDescReq
          CFI (cfiCond309) Conditional ??CrossCallReturnLabel_129, ??CrossCallReturnLabel_15
          CFI (cfiCond309) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond309) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond309) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond309) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond309) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond309) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond309) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond309) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond309) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond309) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond309) CFA_SP SP+-4
          CFI (cfiCond309) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond310 Using cfiCommon0
          CFI (cfiCond310) Function ZDP_SimpleDescReq
          CFI (cfiCond310) Conditional ??CrossCallReturnLabel_130, ??CrossCallReturnLabel_4
          CFI (cfiCond310) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond310) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond310) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond310) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond310) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond310) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond310) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond310) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond310) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond310) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond310) CFA_SP SP+-4
          CFI (cfiCond310) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond311 Using cfiCommon0
          CFI (cfiCond311) Function ZDP_GenericRsp
          CFI (cfiCond311) Conditional ??CrossCallReturnLabel_130, ??CrossCallReturnLabel_5
          CFI (cfiCond311) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond311) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond311) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond311) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond311) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond311) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond311) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond311) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond311) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond311) CFA_SP SP+-4
          CFI (cfiCond311) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond312 Using cfiCommon0
          CFI (cfiCond312) Function ZDP_DeviceAnnce
          CFI (cfiCond312) Conditional ??CrossCallReturnLabel_131, ??CrossCallReturnLabel_21
          CFI (cfiCond312) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond312) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond312) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond312) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond312) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond312) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond312) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond312) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond312) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond312) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond312) CFA_SP SP+-4
          CFI (cfiCond312) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond313 Using cfiCommon0
          CFI (cfiCond313) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond313) Conditional ??CrossCallReturnLabel_131, ??CrossCallReturnLabel_22
          CFI (cfiCond313) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond313) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond313) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond313) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond313) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond313) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond313) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond313) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond313) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond313) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond313) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond313) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond313) CFA_SP SP+-4
          CFI (cfiCond313) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker314 Using cfiCommon1
          CFI (cfiPicker314) NoFunction
          CFI (cfiPicker314) Picker
        MOVX      @DPTR,A
        MOV       DPTR,#ZDP_TmpBuf
        LCALL     ?Subroutine101 & 0xFFFF
??CrossCallReturnLabel_216:
        INC       DPTR
        RET
          CFI EndBlock cfiCond308
          CFI EndBlock cfiCond309
          CFI EndBlock cfiCond310
          CFI EndBlock cfiCond311
          CFI EndBlock cfiCond312
          CFI EndBlock cfiCond313
          CFI EndBlock cfiPicker314
// 1407 
// 1408 /*********************************************************************
// 1409  * @fn          ZDP_MgmtLeaveReq
// 1410  *
// 1411  * @brief       This builds and send a Mgmt_Leave_req message.
// 1412  *
// 1413  * @param       dstAddr - destination address of the message
// 1414  *              IEEEAddr - IEEE adddress of device that is removed
// 1415  *              RemoveChildren - set to 1 to remove the children of the
// 1416  *                                device as well. 0 otherwise.
// 1417  *              Rejoin - set to 1 if the removed device should rejoin
// 1418                          afterwards. 0 otherwise.
// 1419  *
// 1420  * @return      afStatus_t
// 1421  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1422 afStatus_t ZDP_MgmtLeaveReq( zAddrType_t *dstAddr, uint8 *IEEEAddr, uint8 RemoveChildren,
ZDP_MgmtLeaveReq:
          CFI Block cfiBlock315 Using cfiCommon0
          CFI Function ZDP_MgmtLeaveReq
        CODE
// 1423                  uint8 Rejoin, uint8 SecurityEnable )
// 1424 
// 1425 {
        FUNCALL ZDP_MgmtLeaveReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtLeaveReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        LCALL     ?Subroutine45 & 0xFFFF
// 1426   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1427 
// 1428   osal_cpyExtAddr( ZDP_TmpBuf, IEEEAddr );
// 1429   ZDP_TmpBuf[Z_EXTADDR_LEN] = 0;
??CrossCallReturnLabel_75:
        ADD       A,#0x8
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       R1,A
        MOV       DPL,R0
        MOV       DPH,A
        CLR       A
        MOVX      @DPTR,A
// 1430 
// 1431   if ( RemoveChildren == TRUE )
        INC       A
        XRL       A,?V0
        JNZ       ??ZDP_MgmtLeaveReq_0
// 1432   {
// 1433     ZDP_TmpBuf[Z_EXTADDR_LEN] |= ZDP_MGMT_LEAVE_REQ_RC;
        MOV       A,#0x40
        MOVX      @DPTR,A
// 1434   }
// 1435   if ( Rejoin == TRUE )
??ZDP_MgmtLeaveReq_0:
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        XRL       A,#0x1
        JNZ       ??ZDP_MgmtLeaveReq_1
// 1436   {
// 1437     ZDP_TmpBuf[Z_EXTADDR_LEN] |= ZDP_MGMT_LEAVE_REQ_REJOIN;
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      A,@DPTR
        SETB      0xE0 /* A   */.7
        MOVX      @DPTR,A
// 1438   }
// 1439 
// 1440   return fillAndSend( &ZDP_TransID, dstAddr, Mgmt_Leave_req, (Z_EXTADDR_LEN + 1) );
??ZDP_MgmtLeaveReq_1:
        ; Setup parameters for call to function fillAndSend
        MOV       ?V2,#0x34
        LJMP      ?Subroutine1 & 0xFFFF
// 1441 }
          CFI EndBlock cfiBlock315

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine45:
          CFI Block cfiCond316 Using cfiCommon0
          CFI Function ZDP_MgmtDirectJoinReq
          CFI Conditional ??CrossCallReturnLabel_74
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond317 Using cfiCommon0
          CFI (cfiCond317) Function ZDP_MgmtLeaveReq
          CFI (cfiCond317) Conditional ??CrossCallReturnLabel_75
          CFI (cfiCond317) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond317) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond317) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond317) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond317) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond317) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond317) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond317) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond317) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond317) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond317) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond317) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond317) CFA_SP SP+-2
          CFI (cfiCond317) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker318 Using cfiCommon1
          CFI (cfiPicker318) NoFunction
          CFI (cfiPicker318) Picker
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
        MOV       ?V0,R1
        ; Setup parameters for call to function sAddrExtCpy
        ; Setup parameters for call to function sAddrExtCpy
        MOV       DPTR,#ZDP_TmpBuf
        MOVX      A,@DPTR
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R3,A
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV       DPTR,#ZDP_TmpBuf
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond316
          CFI EndBlock cfiCond317
          CFI EndBlock cfiPicker318
// 1442 
// 1443 /*********************************************************************
// 1444  * @fn          ZDP_MgmtNwkUpdateReq
// 1445  *
// 1446  * @brief       This builds and send a Mgmt_NWK_Update_req message. This
// 1447  *              function sends a unicast or broadcast message.
// 1448  *
// 1449  * @param       dstAddr - destination address of the message
// 1450  * @param       ChannelMask - 32 bit address bit map
// 1451  * @param       ScanDuration - length of time to spend scanning each channel
// 1452  * @param       ScanCount - number of energy scans to be conducted
// 1453  * @param       NwkUpdateId - NWk Update Id value
// 1454  * @param       NwkManagerAddr - NWK address for device with Network Manager
// 1455  *                               bit set in its Node Descriptor
// 1456  *
// 1457  * @return      afStatus_t
// 1458  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1459 afStatus_t ZDP_MgmtNwkUpdateReq( zAddrType_t *dstAddr,
ZDP_MgmtNwkUpdateReq:
          CFI Block cfiBlock319 Using cfiCommon0
          CFI Function ZDP_MgmtNwkUpdateReq
        CODE
// 1460                                  uint32 ChannelMask,
// 1461                                  uint8 ScanDuration,
// 1462                                  uint8 ScanCount,
// 1463                                  uint8 NwkUpdateId,
// 1464                                  uint16 NwkManagerAddr )
// 1465 {
        FUNCALL ZDP_MgmtNwkUpdateReq, osal_buffer_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkUpdateReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV       A,#-0xe
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV       ?V0,R2
        MOV       ?V1,R3
        MOV       A,R1
        MOV       R7,A
        MOV       ?V2,R4
        MOV       ?V3,R5
// 1466   uint8 *pBuf = ZDP_TmpBuf;
// 1467   byte len = sizeof( uint32 ) + 1;  // ChannelMask + ScanDuration
        MOV       R6,#0x5
// 1468 
// 1469   pBuf = osal_buffer_uint32( pBuf, ChannelMask );
        ; Setup parameters for call to function osal_buffer_uint32
        MOV       A,#0xe
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?PUSH_XSTACK8_X_FOUR
          CFI CFA_XSP16 add(XSP16, 18)
        LCALL     ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_103:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 14)
// 1470 
// 1471   *pBuf++ = ScanDuration;
        MOV       A,R7
        MOV       DPL,R2
        MOV       DPH,R3
        MOVX      @DPTR,A
// 1472 
// 1473   if ( ScanDuration <= 0x05 )
        MOV       A,R2
        ADD       A,#0x2
        MOV       R4,A
        CLR       A
        ADDC      A,R3
        MOV       R5,A
        INC       DPTR
        MOV       A,R7
        CLR       C
        SUBB      A,#0x6
        JNC       ??ZDP_MgmtNwkUpdateReq_0
// 1474   {
// 1475     // Request is to scan over channelMask
// 1476     len += sizeof( uint8 );
        MOV       R6,#0x6
// 1477 
// 1478     *pBuf++ = ScanCount;
        MOV       A,?V2
        MOVX      @DPTR,A
        SJMP      ??ZDP_MgmtNwkUpdateReq_1
// 1479   }
// 1480   else if ( ( ScanDuration == 0xFE ) || ( ScanDuration == 0xFF ) )
??ZDP_MgmtNwkUpdateReq_0:
        MOV       A,#-0x2
        XRL       A,R7
        JZ        ??ZDP_MgmtNwkUpdateReq_2
        MOV       A,#-0x1
        XRL       A,R7
        JNZ       ??ZDP_MgmtNwkUpdateReq_1
// 1481   {
// 1482     // Request is to change Channel (0xFE) or apsChannelMask and NwkManagerAddr (0xFF)
// 1483     len += sizeof( uint8 );
??ZDP_MgmtNwkUpdateReq_2:
        MOV       R6,#0x6
// 1484 
// 1485     *pBuf++ = NwkUpdateId;
        MOV       A,?V3
        MOVX      @DPTR,A
// 1486 
// 1487     if ( ScanDuration == 0xFF )
        MOV       A,#-0x1
        XRL       A,R7
        JNZ       ??ZDP_MgmtNwkUpdateReq_1
// 1488     {
// 1489       len += sizeof( uint16 );
        MOV       R6,#0x8
        MOV       A,#0x12
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine53 & 0xFFFF
// 1490 
// 1491       *pBuf++  = LO_UINT16( NwkManagerAddr );
// 1492       *pBuf++  = HI_UINT16( NwkManagerAddr );
// 1493     }
// 1494   }
??CrossCallReturnLabel_97:
        LCALL     ?Subroutine30 & 0xFFFF
??CrossCallReturnLabel_38:
        MOVX      @DPTR,A
        MOV       A,R2
        ADD       A,#0x4
// 1495 
// 1496   return fillAndSend( &ZDP_TransID, dstAddr, Mgmt_NWK_Update_req, len );
??ZDP_MgmtNwkUpdateReq_1:
        ; Setup parameters for call to function fillAndSend
        MOV       ?V4,#0x38
        MOV       ?V5,#0x0
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        MOV       A,R6
        MOV       R1,A
        MOV       R4,?V0
        MOV       R5,?V1
        LCALL     ??Subroutine127_0 & 0xFFFF
??CrossCallReturnLabel_251:
        LJMP      ?Subroutine0 & 0xFFFF
// 1497 }
          CFI EndBlock cfiBlock319

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine56:
          CFI Block cfiCond320 Using cfiCommon0
          CFI Function ZDP_MgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_102
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond321 Using cfiCommon0
          CFI (cfiCond321) Function ZDP_MgmtNwkUpdateReq
          CFI (cfiCond321) Conditional ??CrossCallReturnLabel_103
          CFI (cfiCond321) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond321) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond321) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond321) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond321) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond321) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond321) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond321) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond321) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond321) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond321) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond321) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond321) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond321) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond321) CFA_SP SP+-2
          CFI (cfiCond321) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker322 Using cfiCommon1
          CFI (cfiPicker322) NoFunction
          CFI (cfiPicker322) Picker
        MOV       DPTR,#ZDP_TmpBuf
        MOVX      A,@DPTR
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R3,A
        LCALL     `??osal_buffer_uint32::?relay`; Banked call to: osal_buffer_uint32
        MOV       A,#0x4
        RET
          CFI EndBlock cfiCond320
          CFI EndBlock cfiCond321
          CFI EndBlock cfiPicker322

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine53:
          CFI Block cfiCond323 Using cfiCommon0
          CFI Function ZDP_ServerDiscRsp
          CFI Conditional ??CrossCallReturnLabel_96
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond324 Using cfiCommon0
          CFI (cfiCond324) Function ZDP_MgmtNwkUpdateReq
          CFI (cfiCond324) Conditional ??CrossCallReturnLabel_97
          CFI (cfiCond324) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond324) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond324) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond324) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond324) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond324) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond324) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond324) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond324) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond324) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond324) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond324) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond324) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond324) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond324) CFA_SP SP+-2
          CFI (cfiCond324) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker325 Using cfiCommon1
          CFI (cfiPicker325) NoFunction
          CFI (cfiPicker325) Picker
        LCALL     ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_195:
        MOV       DPL,R4
        MOV       DPH,R5
        RET
          CFI EndBlock cfiCond323
          CFI EndBlock cfiCond324
          CFI EndBlock cfiPicker325
// 1498 
// 1499 
// 1500 /*********************************************************************
// 1501  * Network Management Responses
// 1502  */
// 1503 
// 1504 /*********************************************************************
// 1505  * @fn          ZDP_MgmtNwkDiscRsp
// 1506  *
// 1507  * @brief       This builds and send a Mgmt_NWK_Disc_rsp message. This
// 1508  *              function sends a unicast message.
// 1509  *
// 1510  * @param       dstAddr - destination address of the message
// 1511  * @param       Status - message status (ZDP_SUCCESS or other)
// 1512  * @param       NetworkCount - Total number of networks found
// 1513  * @param       StartIndex - Starting index within the reporting network
// 1514  *                           list
// 1515  * @param       NetworkListCount - number of network lists included
// 1516  *                                 in this message
// 1517  * @param       NetworkList - List of network descriptors
// 1518  * @param       SecurityEnable - Security Options
// 1519  *
// 1520  * @return      afStatus_t
// 1521  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1522 afStatus_t ZDP_MgmtNwkDiscRsp( byte TransSeq, zAddrType_t *dstAddr,
ZDP_MgmtNwkDiscRsp:
          CFI Block cfiBlock326 Using cfiCommon0
          CFI Function ZDP_MgmtNwkDiscRsp
        CODE
// 1523                             byte Status,
// 1524                             byte NetworkCount,
// 1525                             byte StartIndex,
// 1526                             byte NetworkListCount,
// 1527                             networkDesc_t *NetworkList,
// 1528                             byte SecurityEnable )
// 1529 {
        FUNCALL ZDP_MgmtNwkDiscRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkDiscRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkDiscRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkDiscRsp, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V12
        REQUIRE ?V13
        MOV       A,#-0x16
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 23)
        LCALL     ?Subroutine25 & 0xFFFF
??CrossCallReturnLabel_29:
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       ?V2,A
// 1530   uint8 *buf;
// 1531   uint8 *pBuf;
// 1532   byte len = 1+1+1+1;  // Status + NetworkCount + StartIndex + NetworkCountList.
// 1533   byte idx;
// 1534 
// 1535   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1536 
// 1537   len += (NetworkListCount * ( ZDP_NETWORK_EXTENDED_DISCRIPTOR_SIZE ));
        MOV       B,#0xe
        MUL       AB
        ADD       A,#0x4
        MOV       ?V3,A
// 1538   if ( notdoSCANCmd ) { // AT+SCAN:1 Cmd's rsp need PANID
        MOV       DPTR,#notdoSCANCmd
        MOVX      A,@DPTR
        JZ        ??ZDP_MgmtNwkDiscRsp_0
// 1539     len -= NetworkListCount * 2;
        MOV       A,?V2
        CLR       C
        RLC       A
        XCH       A,?V3
        CLR       C
        SUBB      A,?V3
        MOV       ?V3,A
// 1540   }
// 1541 
// 1542   buf = osal_mem_alloc( len+1 );
??ZDP_MgmtNwkDiscRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV       A,?V3
        LCALL     ?Subroutine75 & 0xFFFF
// 1543   if ( buf == NULL )
??CrossCallReturnLabel_121:
        MOV       A,R2
        ORL       A,R3
        JNZ       ??ZDP_MgmtNwkDiscRsp_1
// 1544   {
// 1545     return afStatus_MEM_FAIL;
        MOV       R1,#0x10
        LJMP      ??CrossCallReturnLabel_239 & 0xFFFF
// 1546   }
// 1547 
// 1548   pBuf = buf+1;
??ZDP_MgmtNwkDiscRsp_1:
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        MOV       ?V8,DPL
        MOV       ?V9,DPH
        MOV       R6,?V8
        MOV       R7,?V9
// 1549 
// 1550   *pBuf++ = Status;
        MOV       A,?V10
        MOVX      @DPTR,A
// 1551   *pBuf++ = NetworkCount;
        INC       DPTR
        MOV       A,?V5
        MOVX      @DPTR,A
// 1552   *pBuf++ = StartIndex;
        MOV       A,#0x17
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine46 & 0xFFFF
??CrossCallReturnLabel_78:
        INC       DPTR
        LCALL     ?Subroutine18 & 0xFFFF
// 1553   *pBuf++ = NetworkListCount;
??CrossCallReturnLabel_20:
        MOV       A,?V2
        MOVX      @DPTR,A
        MOV       A,R6
        ADD       A,#0x4
        MOV       R6,A
        JNC       ??ZDP_MgmtNwkDiscRsp_2
        INC       R7
// 1554 
// 1555   for ( idx = 0; idx < NetworkListCount; idx++ )
??ZDP_MgmtNwkDiscRsp_2:
        MOV       ?V4,#0x0
        MOV       A,#0x19
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine130_0 & 0xFFFF
??CrossCallReturnLabel_276:
        SJMP      ??ZDP_MgmtNwkDiscRsp_3
// 1556   {
// 1557     osal_cpyExtAddr( pBuf, NetworkList->extendedPANID);
// 1558     pBuf += Z_EXTADDR_LEN;
// 1559     if ( !notdoSCANCmd ) { // AT+SCAN:1 Cmd's rsp need PANID
// 1560       *pBuf++ = LO_UINT16(NetworkList->panId);
// 1561       *pBuf++ = HI_UINT16(NetworkList->panId);
// 1562     }
// 1563 
// 1564     *pBuf++  = NetworkList->logicalChannel;                // LogicalChannel
// 1565     *pBuf    = NetworkList->stackProfile;                  // Stack profile
// 1566     *pBuf++ |= (byte)(NetworkList->version << 4);          // ZigBee Version
// 1567     *pBuf    = BEACON_ORDER_NO_BEACONS;                    // Beacon Order
// 1568     *pBuf++ |= (uint8)(BEACON_ORDER_NO_BEACONS << 4);      // Superframe Order
// 1569 
// 1570     if ( NetworkList->chosenRouter != INVALID_NODE_ADDR )
// 1571     {
// 1572       *pBuf++ = TRUE;                         // Permit Joining
// 1573     }
// 1574     else
// 1575     {
// 1576       *pBuf++ = FALSE;
??ZDP_MgmtNwkDiscRsp_4:
        CLR       A
??ZDP_MgmtNwkDiscRsp_5:
        MOVX      @DPTR,A
        MOV       A,R0
        MOV       R6,A
        MOV       A,R1
        MOV       R7,A
// 1577     }
// 1578 
// 1579     NetworkList = NetworkList->nextDesc;    // Move to next list entry
        MOV       A,?V0
        ADD       A,#0x14
        MOV       DPL,A
        CLR       A
        ADDC      A,?V1
        MOV       DPH,A
        LCALL     ??Subroutine130_0 & 0xFFFF
??CrossCallReturnLabel_277:
        INC       ?V4
??ZDP_MgmtNwkDiscRsp_3:
        MOV       A,?V4
        CLR       C
        SUBB      A,?V2
        JC        $+5
        LJMP      ??ZDP_MgmtNwkDiscRsp_6 & 0xFFFF
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,?V0
        ADD       A,#0xb
        MOV       R4,A
        CLR       A
        ADDC      A,?V1
        MOV       R5,A
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV       A,R6
        ADD       A,#0x8
        MOV       R6,A
        JNC       ??ZDP_MgmtNwkDiscRsp_7
        INC       R7
??ZDP_MgmtNwkDiscRsp_7:
        MOV       DPTR,#notdoSCANCmd
        MOVX      A,@DPTR
        JNZ       ??ZDP_MgmtNwkDiscRsp_8
        MOV       DPL,?V0
        MOV       DPH,?V1
        LCALL     ??Subroutine113_0 & 0xFFFF
??CrossCallReturnLabel_174:
        LCALL     ?Subroutine96 & 0xFFFF
??CrossCallReturnLabel_154:
        LCALL     ?Subroutine46 & 0xFFFF
??CrossCallReturnLabel_79:
        MOVX      @DPTR,A
        MOV       A,R6
        ADD       A,#0x2
        MOV       R6,A
        JNC       ??ZDP_MgmtNwkDiscRsp_8
        INC       R7
??ZDP_MgmtNwkDiscRsp_8:
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        LCALL     ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_177:
        LCALL     ?Subroutine32 & 0xFFFF
??CrossCallReturnLabel_47:
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_224:
        LCALL     ?Subroutine28 & 0xFFFF
??CrossCallReturnLabel_33:
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        SWAP      A
        ANL       A,#0xf0
        MOV       R2,A
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      A,@DPTR
        ORL       A,R2
        MOVX      @DPTR,A
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        MOV       A,#-0x1
        MOVX      @DPTR,A
        MOV       A,R6
        ADD       A,#0x4
        MOV       R0,A
        CLR       A
        ADDC      A,R7
        MOV       R1,A
        MOV       A,R6
        ADD       A,#0x3
        MOV       R2,A
        CLR       A
        ADDC      A,R7
        MOV       R3,A
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,#0xfe
        JNZ       ??ZDP_MgmtNwkDiscRsp_9
        INC       DPTR
        MOVX      A,@DPTR
        CPL       A
??ZDP_MgmtNwkDiscRsp_9:
        MOV       DPL,R2
        MOV       DPH,R3
        JNZ       $+5
        LJMP      ??ZDP_MgmtNwkDiscRsp_4 & 0xFFFF
        MOV       A,#0x1
        LJMP      ??ZDP_MgmtNwkDiscRsp_5 & 0xFFFF
// 1580   }
// 1581 
// 1582   FillAndSendBuffer( &TransSeq, dstAddr, Mgmt_NWK_Disc_rsp, len, buf );
??ZDP_MgmtNwkDiscRsp_6:
        MOV       DPTR,#ZDP_TmpBuf
        MOV       A,?V8
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V9
        MOVX      @DPTR,A
        ; Setup parameters for call to function fillAndSend
        MOV       ?V0,#0x30
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       R1,?V3
        MOV       R4,?V12
        MOV       R5,?V13
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP101_8
        LCALL     ??Subroutine128_0 & 0xFFFF
??CrossCallReturnLabel_261:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       A,R1
        MOV       R6,A
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V6
        MOV       R3,?V7
        LCALL     ??Subroutine125_0 & 0xFFFF
??CrossCallReturnLabel_239:
          CFI EndBlock cfiBlock326
        REQUIRE ?Subroutine4
        ; // Fall through to label ?Subroutine4
// 1583 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine4:
          CFI Block cfiBlock327 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 23)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       A,#0x1
          CFI EndBlock cfiBlock327
        REQUIRE ??Subroutine122_0
        ; // Fall through to label ??Subroutine122_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine122_0:
          CFI Block cfiBlock328 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Valid
        MOV       R7,#0xe
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock328

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine64:
          CFI Block cfiCond329 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_227
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond330 Using cfiCommon0
          CFI (cfiCond330) Function ZDP_MgmtLqiRsp
          CFI (cfiCond330) Conditional ??CrossCallReturnLabel_228
          CFI (cfiCond330) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond330) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond330) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond330) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond330) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond330) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond330) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond330) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond330) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond330) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond330) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond330) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond330) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond330) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond330) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond330) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond330) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond330) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond330) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond330) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond330) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond330) CFA_SP SP+-2
          CFI (cfiCond330) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker331 Using cfiCommon1
          CFI (cfiPicker331) NoFunction
          CFI (cfiPicker331) Picker
        MOV       DPH,A
          CFI EndBlock cfiCond329
          CFI EndBlock cfiCond330
          CFI EndBlock cfiPicker331
        REQUIRE ??Subroutine123_0
        ; // Fall through to label ??Subroutine123_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine123_0:
          CFI Block cfiCond332 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_218
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond333 Using cfiCommon0
          CFI (cfiCond333) Function ZDP_SimpleDescMsg
          CFI (cfiCond333) Conditional ??CrossCallReturnLabel_219
          CFI (cfiCond333) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond333) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond333) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond333) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond333) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond333) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond333) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond333) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond333) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond333) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond333) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond333) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond333) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond333) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond333) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond333) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond333) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond333) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond333) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond333) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond333) CFA_SP SP+-2
          CFI (cfiCond333) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond334 Using cfiCommon0
          CFI (cfiCond334) Function ZDP_SimpleDescMsg
          CFI (cfiCond334) Conditional ??CrossCallReturnLabel_220
          CFI (cfiCond334) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond334) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond334) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond334) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond334) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond334) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond334) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond334) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond334) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond334) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond334) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond334) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond334) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond334) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond334) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond334) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond334) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond334) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond334) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond334) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond334) CFA_SP SP+-2
          CFI (cfiCond334) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond335 Using cfiCommon0
          CFI (cfiCond335) Function ZDP_SimpleDescMsg
          CFI (cfiCond335) Conditional ??CrossCallReturnLabel_221
          CFI (cfiCond335) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond335) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond335) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond335) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond335) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond335) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond335) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond335) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond335) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond335) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond335) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond335) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond335) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond335) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond335) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond335) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond335) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond335) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond335) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond335) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond335) CFA_SP SP+-2
          CFI (cfiCond335) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond336 Using cfiCommon0
          CFI (cfiCond336) Function ZDP_EPRsp
          CFI (cfiCond336) Conditional ??CrossCallReturnLabel_222
          CFI (cfiCond336) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond336) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond336) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond336) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond336) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond336) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond336) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond336) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond336) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond336) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond336) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond336) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond336) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond336) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond336) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond336) CFA_SP SP+-2
          CFI (cfiCond336) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond337 Using cfiCommon0
          CFI (cfiCond337) Function ZDP_EndDeviceBindReq
          CFI (cfiCond337) Conditional ??CrossCallReturnLabel_223
          CFI (cfiCond337) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond337) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond337) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond337) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond337) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond337) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond337) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond337) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond337) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond337) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond337) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond337) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond337) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond337) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond337) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond337) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond337) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond337) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond337) CFA_SP SP+-2
          CFI (cfiCond337) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond338 Using cfiCommon0
          CFI (cfiCond338) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond338) Conditional ??CrossCallReturnLabel_224
          CFI (cfiCond338) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond338) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond338) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond338) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond338) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond338) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond338) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond338) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond338) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond338) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond338) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond338) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond338) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond338) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond338) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond338) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond338) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond338) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond338) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond338) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond338) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond338) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond338) CFA_SP SP+-2
          CFI (cfiCond338) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond339 Using cfiCommon0
          CFI (cfiCond339) Function ZDP_MgmtLqiRsp
          CFI (cfiCond339) Conditional ??CrossCallReturnLabel_225
          CFI (cfiCond339) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond339) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond339) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond339) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond339) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond339) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond339) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond339) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond339) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond339) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond339) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond339) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond339) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond339) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond339) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond339) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond339) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond339) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond339) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond339) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond339) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond339) CFA_SP SP+-2
          CFI (cfiCond339) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond340 Using cfiCommon0
          CFI (cfiCond340) Function ZDP_MgmtRtgRsp
          CFI (cfiCond340) Conditional ??CrossCallReturnLabel_226
          CFI (cfiCond340) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond340) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond340) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond340) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond340) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond340) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond340) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond340) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond340) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond340) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond340) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond340) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond340) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond340) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond340) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond340) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond340) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond340) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond340) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond340) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond340) CFA_SP SP+-2
          CFI (cfiCond340) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond341 Using cfiCommon0
          CFI (cfiCond341) Function ZDP_SimpleDescMsg
          CFI (cfiCond341) Conditional ??CrossCallReturnLabel_227
          CFI (cfiCond341) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond341) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond341) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond341) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond341) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond341) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond341) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond341) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond341) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond341) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond341) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond341) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond341) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond341) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond341) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond341) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond341) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond341) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond341) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond341) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond341) CFA_SP SP+-2
          CFI (cfiCond341) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond342 Using cfiCommon0
          CFI (cfiCond342) Function ZDP_MgmtLqiRsp
          CFI (cfiCond342) Conditional ??CrossCallReturnLabel_228
          CFI (cfiCond342) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond342) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond342) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond342) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond342) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond342) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond342) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond342) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond342) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond342) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond342) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond342) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond342) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond342) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond342) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond342) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond342) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond342) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond342) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond342) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond342) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond342) CFA_SP SP+-2
          CFI (cfiCond342) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker343 Using cfiCommon1
          CFI (cfiPicker343) NoFunction
          CFI (cfiPicker343) Picker
        LCALL     ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_235:
        RET
          CFI EndBlock cfiCond332
          CFI EndBlock cfiCond333
          CFI EndBlock cfiCond334
          CFI EndBlock cfiCond335
          CFI EndBlock cfiCond336
          CFI EndBlock cfiCond337
          CFI EndBlock cfiCond338
          CFI EndBlock cfiCond339
          CFI EndBlock cfiCond340
          CFI EndBlock cfiCond341
          CFI EndBlock cfiCond342
          CFI EndBlock cfiPicker343

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine85:
          CFI Block cfiCond344 Using cfiCommon0
          CFI Function ZDP_MatchDescReq
          CFI Conditional ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_0
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond345 Using cfiCommon0
          CFI (cfiCond345) Function ZDP_MatchDescReq
          CFI (cfiCond345) Conditional ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_1
          CFI (cfiCond345) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond345) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond345) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond345) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond345) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond345) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond345) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond345) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond345) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond345) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond345) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond345) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond345) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond345) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond345) CFA_SP SP+-4
          CFI (cfiCond345) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond346 Using cfiCommon0
          CFI (cfiCond346) Function ZDP_SimpleDescMsg
          CFI (cfiCond346) Conditional ??CrossCallReturnLabel_235, ??CrossCallReturnLabel_227
          CFI (cfiCond346) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond346) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond346) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond346) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond346) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond346) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond346) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond346) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond346) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond346) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond346) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond346) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond346) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond346) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond346) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond346) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond346) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond346) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond346) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond346) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond346) CFA_SP SP+-4
          CFI (cfiCond346) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond347 Using cfiCommon0
          CFI (cfiCond347) Function ZDP_MgmtLqiRsp
          CFI (cfiCond347) Conditional ??CrossCallReturnLabel_235, ??CrossCallReturnLabel_228
          CFI (cfiCond347) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond347) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond347) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond347) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond347) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond347) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond347) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond347) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond347) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond347) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond347) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond347) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond347) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond347) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond347) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond347) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond347) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond347) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond347) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond347) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond347) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond347) CFA_SP SP+-4
          CFI (cfiCond347) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond348 Using cfiCommon0
          CFI (cfiCond348) Function ZDP_SimpleDescMsg
          CFI (cfiCond348) Conditional ??CrossCallReturnLabel_235, ??CrossCallReturnLabel_218
          CFI (cfiCond348) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond348) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond348) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond348) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond348) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond348) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond348) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond348) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond348) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond348) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond348) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond348) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond348) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond348) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond348) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond348) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond348) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond348) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond348) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond348) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond348) CFA_SP SP+-4
          CFI (cfiCond348) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond349 Using cfiCommon0
          CFI (cfiCond349) Function ZDP_SimpleDescMsg
          CFI (cfiCond349) Conditional ??CrossCallReturnLabel_235, ??CrossCallReturnLabel_219
          CFI (cfiCond349) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond349) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond349) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond349) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond349) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond349) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond349) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond349) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond349) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond349) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond349) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond349) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond349) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond349) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond349) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond349) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond349) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond349) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond349) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond349) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond349) CFA_SP SP+-4
          CFI (cfiCond349) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond350 Using cfiCommon0
          CFI (cfiCond350) Function ZDP_SimpleDescMsg
          CFI (cfiCond350) Conditional ??CrossCallReturnLabel_235, ??CrossCallReturnLabel_220
          CFI (cfiCond350) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond350) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond350) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond350) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond350) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond350) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond350) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond350) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond350) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond350) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond350) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond350) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond350) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond350) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond350) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond350) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond350) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond350) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond350) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond350) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond350) CFA_SP SP+-4
          CFI (cfiCond350) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond351 Using cfiCommon0
          CFI (cfiCond351) Function ZDP_SimpleDescMsg
          CFI (cfiCond351) Conditional ??CrossCallReturnLabel_235, ??CrossCallReturnLabel_221
          CFI (cfiCond351) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond351) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond351) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond351) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond351) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond351) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond351) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond351) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond351) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond351) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond351) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond351) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond351) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond351) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond351) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond351) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond351) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond351) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond351) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond351) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond351) CFA_SP SP+-4
          CFI (cfiCond351) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond352 Using cfiCommon0
          CFI (cfiCond352) Function ZDP_EPRsp
          CFI (cfiCond352) Conditional ??CrossCallReturnLabel_235, ??CrossCallReturnLabel_222
          CFI (cfiCond352) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond352) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond352) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond352) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond352) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond352) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond352) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond352) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond352) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond352) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond352) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond352) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond352) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond352) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond352) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond352) CFA_SP SP+-4
          CFI (cfiCond352) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond353 Using cfiCommon0
          CFI (cfiCond353) Function ZDP_EndDeviceBindReq
          CFI (cfiCond353) Conditional ??CrossCallReturnLabel_235, ??CrossCallReturnLabel_223
          CFI (cfiCond353) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond353) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond353) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond353) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond353) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond353) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond353) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond353) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond353) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond353) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond353) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond353) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond353) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond353) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond353) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond353) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond353) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond353) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond353) CFA_SP SP+-4
          CFI (cfiCond353) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond354 Using cfiCommon0
          CFI (cfiCond354) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond354) Conditional ??CrossCallReturnLabel_235, ??CrossCallReturnLabel_224
          CFI (cfiCond354) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond354) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond354) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond354) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond354) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond354) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond354) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond354) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond354) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond354) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond354) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond354) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond354) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond354) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond354) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond354) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond354) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond354) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond354) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond354) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond354) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond354) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond354) CFA_SP SP+-4
          CFI (cfiCond354) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond355 Using cfiCommon0
          CFI (cfiCond355) Function ZDP_MgmtLqiRsp
          CFI (cfiCond355) Conditional ??CrossCallReturnLabel_235, ??CrossCallReturnLabel_225
          CFI (cfiCond355) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond355) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond355) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond355) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond355) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond355) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond355) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond355) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond355) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond355) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond355) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond355) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond355) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond355) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond355) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond355) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond355) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond355) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond355) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond355) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond355) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond355) CFA_SP SP+-4
          CFI (cfiCond355) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond356 Using cfiCommon0
          CFI (cfiCond356) Function ZDP_MgmtRtgRsp
          CFI (cfiCond356) Conditional ??CrossCallReturnLabel_235, ??CrossCallReturnLabel_226
          CFI (cfiCond356) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond356) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond356) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond356) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond356) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond356) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond356) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond356) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond356) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond356) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond356) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond356) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond356) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond356) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond356) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond356) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond356) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond356) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond356) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond356) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond356) CFA_SP SP+-4
          CFI (cfiCond356) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond357 Using cfiCommon0
          CFI (cfiCond357) Function ZDP_SimpleDescMsg
          CFI (cfiCond357) Conditional ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_231
          CFI (cfiCond357) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond357) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond357) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond357) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond357) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond357) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond357) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond357) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond357) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond357) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond357) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond357) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond357) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond357) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond357) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond357) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond357) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond357) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond357) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond357) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond357) CFA_SP SP+-4
          CFI (cfiCond357) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond358 Using cfiCommon0
          CFI (cfiCond358) Function ZDP_MgmtLqiRsp
          CFI (cfiCond358) Conditional ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_232
          CFI (cfiCond358) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond358) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond358) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond358) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond358) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond358) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond358) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond358) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond358) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond358) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond358) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond358) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond358) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond358) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond358) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond358) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond358) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond358) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond358) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond358) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond358) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond358) CFA_SP SP+-4
          CFI (cfiCond358) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond359 Using cfiCommon0
          CFI (cfiCond359) Function ZDP_SimpleDescMsg
          CFI (cfiCond359) Conditional ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_229
          CFI (cfiCond359) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond359) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond359) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond359) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond359) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond359) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond359) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond359) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond359) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond359) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond359) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond359) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond359) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond359) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond359) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond359) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond359) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond359) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond359) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond359) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond359) CFA_SP SP+-4
          CFI (cfiCond359) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond360 Using cfiCommon0
          CFI (cfiCond360) Function ZDP_SimpleDescMsg
          CFI (cfiCond360) Conditional ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_230
          CFI (cfiCond360) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond360) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond360) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond360) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond360) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond360) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond360) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond360) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond360) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond360) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond360) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond360) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond360) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond360) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond360) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond360) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond360) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond360) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond360) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond360) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond360) CFA_SP SP+-4
          CFI (cfiCond360) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond361 Using cfiCommon0
          CFI (cfiCond361) Function ZDP_IEEEAddrReq
          CFI (cfiCond361) Conditional ??CrossCallReturnLabel_234, ??CrossCallReturnLabel_108
          CFI (cfiCond361) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond361) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond361) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond361) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond361) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond361) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond361) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond361) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond361) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond361) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond361) CFA_SP SP+-4
          CFI (cfiCond361) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond362 Using cfiCommon0
          CFI (cfiCond362) Function ZDP_MgmtLqiRsp
          CFI (cfiCond362) Conditional ??CrossCallReturnLabel_234, ??CrossCallReturnLabel_109
          CFI (cfiCond362) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond362) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond362) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond362) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond362) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond362) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond362) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond362) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond362) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond362) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond362) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond362) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond362) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond362) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond362) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond362) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond362) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond362) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond362) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond362) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond362) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond362) CFA_SP SP+-4
          CFI (cfiCond362) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker363 Using cfiCommon1
          CFI (cfiPicker363) NoFunction
          CFI (cfiPicker363) Picker
        MOVX      A,@DPTR
        MOV       DPL,R0
        MOV       DPH,R1
        RET
          CFI EndBlock cfiCond344
          CFI EndBlock cfiCond345
          CFI EndBlock cfiCond346
          CFI EndBlock cfiCond347
          CFI EndBlock cfiCond348
          CFI EndBlock cfiCond349
          CFI EndBlock cfiCond350
          CFI EndBlock cfiCond351
          CFI EndBlock cfiCond352
          CFI EndBlock cfiCond353
          CFI EndBlock cfiCond354
          CFI EndBlock cfiCond355
          CFI EndBlock cfiCond356
          CFI EndBlock cfiCond357
          CFI EndBlock cfiCond358
          CFI EndBlock cfiCond359
          CFI EndBlock cfiCond360
          CFI EndBlock cfiCond361
          CFI EndBlock cfiCond362
          CFI EndBlock cfiPicker363

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine46:
          CFI Block cfiCond364 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_76
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond365 Using cfiCommon0
          CFI (cfiCond365) Function ZDP_NodeDescMsg
          CFI (cfiCond365) Conditional ??CrossCallReturnLabel_77
          CFI (cfiCond365) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond365) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond365) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond365) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond365) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond365) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond365) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond365) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond365) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond365) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond365) CFA_SP SP+-2
          CFI (cfiCond365) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond366 Using cfiCommon0
          CFI (cfiCond366) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond366) Conditional ??CrossCallReturnLabel_78
          CFI (cfiCond366) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond366) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond366) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond366) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond366) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond366) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond366) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond366) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond366) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond366) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond366) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond366) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond366) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond366) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond366) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond366) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond366) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond366) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond366) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond366) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond366) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond366) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond366) CFA_SP SP+-2
          CFI (cfiCond366) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond367 Using cfiCommon0
          CFI (cfiCond367) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond367) Conditional ??CrossCallReturnLabel_79
          CFI (cfiCond367) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond367) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond367) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond367) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond367) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond367) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond367) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond367) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond367) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond367) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond367) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond367) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond367) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond367) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond367) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond367) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond367) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond367) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond367) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond367) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond367) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond367) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond367) CFA_SP SP+-2
          CFI (cfiCond367) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker368 Using cfiCommon1
          CFI (cfiPicker368) NoFunction
          CFI (cfiPicker368) Picker
        MOVX      A,@DPTR
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        RET
          CFI EndBlock cfiCond364
          CFI EndBlock cfiCond365
          CFI EndBlock cfiCond366
          CFI EndBlock cfiCond367
          CFI EndBlock cfiPicker368
// 1584 
// 1585 /*********************************************************************
// 1586  * @fn          ZDP_MgmtLqiRsp
// 1587  *
// 1588  * @brief       This builds and send a Mgmt_Lqi_rsp message. This
// 1589  *              function sends a unicast message.
// 1590  *
// 1591  * @param       dstAddr - destination address of the message
// 1592  * @param       Status - message status (ZDP_SUCCESS or other)
// 1593  * @param       NeighborLqiEntries - Total number of entries found
// 1594  * @param       StartIndex - Starting index within the reporting list
// 1595  * @param       NeighborLqiCount - number of lists included
// 1596  *                                 in this message
// 1597  * @param       NeighborLqiList - List of NeighborLqiItems.  This list
// 1598  *                is the list to be sent, not the entire list
// 1599  * @param       SecurityEnable - true if secure
// 1600  *
// 1601  * @return      ZStatus_t
// 1602  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1603 ZStatus_t ZDP_MgmtLqiRsp( byte TransSeq, zAddrType_t *dstAddr,
ZDP_MgmtLqiRsp:
          CFI Block cfiBlock369 Using cfiCommon0
          CFI Function ZDP_MgmtLqiRsp
        CODE
// 1604                           byte Status,
// 1605                           byte NeighborLqiEntries,
// 1606                           byte StartIndex,
// 1607                           byte NeighborLqiCount,
// 1608                           ZDP_MgmtLqiItem_t* NeighborList,
// 1609                           byte SecurityEnable )
// 1610 {
        FUNCALL ZDP_MgmtLqiRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtLqiRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtLqiRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtLqiRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtLqiRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtLqiRsp, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        MOV       A,#-0x15
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
        ; Saved register size: 21
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       A,R1
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
        MOV       ?V10,R2
        MOV       ?V11,R3
        MOV       ?V12,R5
// 1611   ZDP_MgmtLqiItem_t* list = NeighborList;
        MOV       A,#0x18
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine52 & 0xFFFF
// 1612   uint8 *buf, *pBuf;
// 1613   byte len, x;
// 1614 
// 1615   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1616 
// 1617   if ( ZSuccess != Status )
??CrossCallReturnLabel_93:
        MOV       A,R4
        JZ        ??ZDP_MgmtLqiRsp_0
// 1618   {
// 1619     ZDP_TmpBuf[0] = Status;
        LCALL     ?Subroutine43 & 0xFFFF
// 1620     return fillAndSend( &TransSeq, dstAddr, Mgmt_Lqi_rsp, 1 );
// 1621   }
??CrossCallReturnLabel_213:
        MOV       A,R4
        LCALL     ?Subroutine34 & 0xFFFF
??CrossCallReturnLabel_50:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       R1,#0x1
        MOV       R4,?V10
        MOV       R5,?V11
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP101_8
        LCALL     ??Subroutine128_0 & 0xFFFF
??CrossCallReturnLabel_262:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
        LJMP      ??CrossCallReturnLabel_237 & 0xFFFF
??ZDP_MgmtLqiRsp_0:
        MOV       A,#0x17
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       ?V5,A
// 1622 
// 1623   // (Status + NeighborLqiEntries + StartIndex + NeighborLqiCount) +
// 1624   //  neighbor LQI data.
// 1625   len = (1 + 1 + 1 + 1) + (NeighborLqiCount * ZDP_MGMTLQI_EXTENDED_SIZE);
        MOV       B,#0x16
        MUL       AB
        ADD       A,#0x4
        MOV       ?V6,A
// 1626 
// 1627   buf = osal_mem_alloc( len+1 );
        ; Setup parameters for call to function osal_mem_alloc
        LCALL     ?Subroutine73 & 0xFFFF
// 1628   if ( buf == NULL )
??CrossCallReturnLabel_119:
        JNZ       ??ZDP_MgmtLqiRsp_1
// 1629   {
// 1630     return afStatus_MEM_FAIL;
        MOV       R1,#0x10
        LJMP      ??CrossCallReturnLabel_237 & 0xFFFF
// 1631   }
// 1632 
// 1633   pBuf = buf+1;
??ZDP_MgmtLqiRsp_1:
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        MOV       ?V8,DPL
        MOV       ?V9,DPH
        MOV       ?V0,?V8
        MOV       ?V1,?V9
// 1634 
// 1635   *pBuf++ = Status;
        CLR       A
        MOVX      @DPTR,A
// 1636   *pBuf++ = NeighborLqiEntries;
        INC       DPTR
        MOV       A,?V12
        MOVX      @DPTR,A
// 1637   *pBuf++ = StartIndex;
        MOV       A,#0x16
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine58 & 0xFFFF
??CrossCallReturnLabel_105:
        LCALL     ?Subroutine28 & 0xFFFF
// 1638   *pBuf++ = NeighborLqiCount;
??CrossCallReturnLabel_34:
        MOV       A,?V5
        MOVX      @DPTR,A
        MOV       A,?V0
        ADD       A,#0x4
        MOV       ?V0,A
        JNC       ??ZDP_MgmtLqiRsp_2
        INC       ?V1
// 1639 
// 1640   for ( x = 0; x < NeighborLqiCount; x++ )
??ZDP_MgmtLqiRsp_2:
        MOV       ?V4,#0x0
        LJMP      ??ZDP_MgmtLqiRsp_3 & 0xFFFF
// 1641   {
// 1642     osal_cpyExtAddr( pBuf, list->extPanID);         // Extended PanID
??ZDP_MgmtLqiRsp_4:
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,R6
        ADD       A,#0x2
        MOV       R4,A
        CLR       A
        ADDC      A,R7
        MOV       R5,A
        MOV       R2,?V0
        MOV       R3,?V1
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 1643     pBuf += Z_EXTADDR_LEN;
// 1644 
// 1645     // EXTADDR
// 1646     pBuf = osal_cpyExtAddr( pBuf, list->extAddr );
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,R6
        ADD       A,#0xa
        MOV       R4,A
        CLR       A
        ADDC      A,R7
        MOV       R5,A
        MOV       A,?V0
        ADD       A,#0x8
        MOV       R2,A
        CLR       A
        ADDC      A,?V1
        MOV       R3,A
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV       ?V0,R2
        MOV       ?V1,R3
        MOV       R0,?V0
        MOV       R1,?V1
// 1647 
// 1648     // NWKADDR
// 1649     *pBuf++ = LO_UINT16( list->nwkAddr );
        MOV       A,R6
        ADD       A,#0x12
        MOV       R2,A
        CLR       A
        ADDC      A,R7
        MOV       R3,A
        MOV       DPL,R2
        LCALL     ?Subroutine64 & 0xFFFF
??CrossCallReturnLabel_228:
        LCALL     ?Subroutine39 & 0xFFFF
// 1650     *pBuf++ = HI_UINT16( list->nwkAddr );
??CrossCallReturnLabel_62:
        LCALL     ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_225:
        INC       DPTR
        MOVX      @DPTR,A
// 1651 
// 1652     // DEVICETYPE
// 1653     *pBuf = list->devType;
        MOV       A,R0
        ADD       A,#0x2
        MOV       R2,A
        CLR       A
        ADDC      A,R1
        MOV       R3,A
        MOV       A,R6
        ADD       A,#0x14
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        LCALL     ?Subroutine66 & 0xFFFF
// 1654 
// 1655     // RXONIDLE
// 1656     *pBuf |= (uint8)(list->rxOnIdle << 2);
??CrossCallReturnLabel_111:
        MOV       A,R6
        ADD       A,#0x15
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        MOVX      A,@DPTR
        RLC       A
        RLC       A
        ANL       A,#0xfc
        MOV       R4,A
        MOV       DPL,R2
        MOV       DPH,R3
        MOVX      A,@DPTR
        ORL       A,R4
        MOVX      @DPTR,A
// 1657 
// 1658     // RELATIONSHIP
// 1659     *pBuf++ |= (uint8)(list->relation << 4);
        MOV       A,R6
        ADD       A,#0x16
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        MOVX      A,@DPTR
        SWAP      A
        ANL       A,#0xf0
        MOV       R4,A
        MOV       DPL,R2
        MOV       DPH,R3
        MOVX      A,@DPTR
        ORL       A,R4
        MOVX      @DPTR,A
// 1660 
// 1661     // PERMITJOINING
// 1662     *pBuf++ = (uint8)(list->permit);
        MOV       A,R6
        ADD       A,#0x17
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        LCALL     ?Subroutine62 & 0xFFFF
// 1663 
// 1664     // DEPTH
// 1665     *pBuf++ = list->depth;
??CrossCallReturnLabel_109:
        MOV       A,R6
        ADD       A,#0x18
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        LCALL     ?Subroutine63 & 0xFFFF
??CrossCallReturnLabel_232:
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
// 1666 
// 1667     // LQI
// 1668     *pBuf++ = list->lqi;
        MOV       A,R6
        ADD       A,#0x19
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        LCALL     ?Subroutine55 & 0xFFFF
??CrossCallReturnLabel_101:
        MOVX      @DPTR,A
        MOV       A,R0
        ADD       A,#0x6
        MOV       ?V0,A
        CLR       A
        ADDC      A,R1
        MOV       ?V1,A
// 1669 
// 1670     list++; // next list entry
        MOV       A,R6
        ADD       A,#0x1a
        MOV       R6,A
        JNC       ??ZDP_MgmtLqiRsp_5
        INC       R7
// 1671   }
??ZDP_MgmtLqiRsp_5:
        INC       ?V4
??ZDP_MgmtLqiRsp_3:
        MOV       A,?V4
        CLR       C
        SUBB      A,?V5
        JNC       $+5
        LJMP      ??ZDP_MgmtLqiRsp_4 & 0xFFFF
// 1672 
// 1673   FillAndSendBuffer( &TransSeq, dstAddr, Mgmt_Lqi_rsp, len, buf );
        MOV       DPTR,#ZDP_TmpBuf
        MOV       A,?V8
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V9
        LCALL     ?Subroutine34 & 0xFFFF
??CrossCallReturnLabel_51:
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       R1,?V6
        MOV       R4,?V10
        MOV       R5,?V11
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP101_8
        LCALL     ??Subroutine128_0 & 0xFFFF
??CrossCallReturnLabel_263:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
        LCALL     ?Subroutine23 & 0xFFFF
??CrossCallReturnLabel_237:
        MOV       A,#0x1
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       R7,#0xd
        LJMP      ?BANKED_LEAVE_XDATA
// 1674 }
          CFI EndBlock cfiBlock369

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine66:
          CFI Block cfiCond370 Using cfiCommon0
          CFI Function ZDP_BindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_110
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond371 Using cfiCommon0
          CFI (cfiCond371) Function ZDP_MgmtLqiRsp
          CFI (cfiCond371) Conditional ??CrossCallReturnLabel_111
          CFI (cfiCond371) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond371) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond371) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond371) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond371) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond371) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond371) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond371) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond371) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond371) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond371) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond371) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond371) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond371) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond371) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond371) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond371) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond371) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond371) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond371) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond371) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond371) CFA_SP SP+-2
          CFI (cfiCond371) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond372 Using cfiCommon0
          CFI (cfiCond372) Function ZDP_MgmtBindRsp
          CFI (cfiCond372) Conditional ??CrossCallReturnLabel_112
          CFI (cfiCond372) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond372) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond372) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond372) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond372) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond372) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond372) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond372) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond372) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond372) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond372) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond372) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond372) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond372) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond372) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond372) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond372) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond372) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond372) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond372) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond372) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond372) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond372) CFA_SP SP+-2
          CFI (cfiCond372) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker373 Using cfiCommon1
          CFI (cfiPicker373) NoFunction
          CFI (cfiPicker373) Picker
        LCALL     ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_273:
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond370
          CFI EndBlock cfiCond371
          CFI EndBlock cfiCond372
          CFI EndBlock cfiPicker373

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine63:
          CFI Block cfiCond374 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_231
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond375 Using cfiCommon0
          CFI (cfiCond375) Function ZDP_MgmtLqiRsp
          CFI (cfiCond375) Conditional ??CrossCallReturnLabel_232
          CFI (cfiCond375) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond375) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond375) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond375) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond375) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond375) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond375) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond375) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond375) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond375) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond375) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond375) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond375) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond375) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond375) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond375) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond375) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond375) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond375) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond375) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond375) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond375) CFA_SP SP+-2
          CFI (cfiCond375) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker376 Using cfiCommon1
          CFI (cfiPicker376) NoFunction
          CFI (cfiPicker376) Picker
        MOV       DPH,A
          CFI EndBlock cfiCond374
          CFI EndBlock cfiCond375
          CFI EndBlock cfiPicker376
        REQUIRE ??Subroutine124_0
        ; // Fall through to label ??Subroutine124_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine124_0:
          CFI Block cfiCond377 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_229
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond378 Using cfiCommon0
          CFI (cfiCond378) Function ZDP_SimpleDescMsg
          CFI (cfiCond378) Conditional ??CrossCallReturnLabel_230
          CFI (cfiCond378) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond378) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond378) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond378) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond378) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond378) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond378) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond378) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond378) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond378) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond378) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond378) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond378) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond378) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond378) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond378) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond378) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond378) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond378) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond378) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond378) CFA_SP SP+-2
          CFI (cfiCond378) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond379 Using cfiCommon0
          CFI (cfiCond379) Function ZDP_SimpleDescMsg
          CFI (cfiCond379) Conditional ??CrossCallReturnLabel_231
          CFI (cfiCond379) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond379) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond379) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond379) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond379) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond379) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond379) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond379) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond379) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond379) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond379) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond379) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond379) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond379) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond379) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond379) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond379) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond379) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond379) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond379) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond379) CFA_SP SP+-2
          CFI (cfiCond379) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond380 Using cfiCommon0
          CFI (cfiCond380) Function ZDP_MgmtLqiRsp
          CFI (cfiCond380) Conditional ??CrossCallReturnLabel_232
          CFI (cfiCond380) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond380) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond380) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond380) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond380) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond380) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond380) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond380) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond380) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond380) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond380) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond380) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond380) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond380) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond380) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond380) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond380) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond380) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond380) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond380) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond380) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond380) CFA_SP SP+-2
          CFI (cfiCond380) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker381 Using cfiCommon1
          CFI (cfiPicker381) NoFunction
          CFI (cfiPicker381) Picker
        LCALL     ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_236:
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond377
          CFI EndBlock cfiCond378
          CFI EndBlock cfiCond379
          CFI EndBlock cfiCond380
          CFI EndBlock cfiPicker381

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine62:
          CFI Block cfiCond382 Using cfiCommon0
          CFI Function ZDP_IEEEAddrReq
          CFI Conditional ??CrossCallReturnLabel_108
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond383 Using cfiCommon0
          CFI (cfiCond383) Function ZDP_MgmtLqiRsp
          CFI (cfiCond383) Conditional ??CrossCallReturnLabel_109
          CFI (cfiCond383) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond383) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond383) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond383) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond383) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond383) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond383) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond383) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond383) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond383) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond383) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond383) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond383) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond383) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond383) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond383) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond383) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond383) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond383) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond383) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond383) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond383) CFA_SP SP+-2
          CFI (cfiCond383) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker384 Using cfiCommon1
          CFI (cfiPicker384) NoFunction
          CFI (cfiPicker384) Picker
        LCALL     ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_234:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond382
          CFI EndBlock cfiCond383
          CFI EndBlock cfiPicker384

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine58:
          CFI Block cfiCond385 Using cfiCommon0
          CFI Function ZDP_UserDescRsp
          CFI Conditional ??CrossCallReturnLabel_104
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond386 Using cfiCommon0
          CFI (cfiCond386) Function ZDP_MgmtLqiRsp
          CFI (cfiCond386) Conditional ??CrossCallReturnLabel_105
          CFI (cfiCond386) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond386) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond386) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond386) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond386) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond386) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond386) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond386) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond386) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond386) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond386) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond386) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond386) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond386) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond386) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond386) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond386) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond386) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond386) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond386) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond386) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond386) CFA_SP SP+-2
          CFI (cfiCond386) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker387 Using cfiCommon1
          CFI (cfiPicker387) NoFunction
          CFI (cfiPicker387) Picker
        LCALL     ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_134:
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond385
          CFI EndBlock cfiCond386
          CFI EndBlock cfiPicker387

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine55:
          CFI Block cfiCond388 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_100
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond389 Using cfiCommon0
          CFI (cfiCond389) Function ZDP_MgmtLqiRsp
          CFI (cfiCond389) Conditional ??CrossCallReturnLabel_101
          CFI (cfiCond389) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond389) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond389) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond389) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond389) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond389) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond389) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond389) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond389) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond389) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond389) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond389) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond389) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond389) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond389) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond389) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond389) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond389) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond389) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond389) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond389) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond389) CFA_SP SP+-2
          CFI (cfiCond389) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker390 Using cfiCommon1
          CFI (cfiPicker390) NoFunction
          CFI (cfiPicker390) Picker
        LCALL     ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_139:
        RET
          CFI EndBlock cfiCond388
          CFI EndBlock cfiCond389
          CFI EndBlock cfiPicker390

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine82:
          CFI Block cfiCond391 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_138, ??CrossCallReturnLabel_2
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond392 Using cfiCommon0
          CFI (cfiCond392) Function ZDP_SimpleDescMsg
          CFI (cfiCond392) Conditional ??CrossCallReturnLabel_138, ??CrossCallReturnLabel_3
          CFI (cfiCond392) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond392) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond392) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond392) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond392) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond392) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond392) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond392) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond392) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond392) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond392) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond392) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond392) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond392) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond392) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond392) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond392) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond392) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond392) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond392) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond392) CFA_SP SP+-4
          CFI (cfiCond392) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond393 Using cfiCommon0
          CFI (cfiCond393) Function ZDP_SimpleDescMsg
          CFI (cfiCond393) Conditional ??CrossCallReturnLabel_139, ??CrossCallReturnLabel_100
          CFI (cfiCond393) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond393) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond393) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond393) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond393) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond393) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond393) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond393) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond393) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond393) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond393) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond393) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond393) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond393) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond393) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond393) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond393) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond393) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond393) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond393) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond393) CFA_SP SP+-4
          CFI (cfiCond393) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond394 Using cfiCommon0
          CFI (cfiCond394) Function ZDP_MgmtLqiRsp
          CFI (cfiCond394) Conditional ??CrossCallReturnLabel_139, ??CrossCallReturnLabel_101
          CFI (cfiCond394) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond394) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond394) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond394) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond394) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond394) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond394) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond394) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond394) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond394) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond394) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond394) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond394) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond394) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond394) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond394) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond394) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond394) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond394) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond394) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond394) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond394) CFA_SP SP+-4
          CFI (cfiCond394) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker395 Using cfiCommon1
          CFI (cfiPicker395) NoFunction
          CFI (cfiPicker395) Picker
        MOVX      A,@DPTR
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond391
          CFI EndBlock cfiCond392
          CFI EndBlock cfiCond393
          CFI EndBlock cfiCond394
          CFI EndBlock cfiPicker395

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine52:
          CFI Block cfiCond396 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_91
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond397 Using cfiCommon0
          CFI (cfiCond397) Function ZDP_BindUnbindReq
          CFI (cfiCond397) Conditional ??CrossCallReturnLabel_92
          CFI (cfiCond397) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond397) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond397) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond397) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond397) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond397) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond397) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond397) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond397) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond397) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond397) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond397) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond397) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond397) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond397) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond397) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond397) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond397) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond397) CFA_SP SP+-2
          CFI (cfiCond397) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond398 Using cfiCommon0
          CFI (cfiCond398) Function ZDP_MgmtLqiRsp
          CFI (cfiCond398) Conditional ??CrossCallReturnLabel_93
          CFI (cfiCond398) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond398) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond398) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond398) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond398) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond398) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond398) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond398) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond398) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond398) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond398) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond398) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond398) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond398) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond398) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond398) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond398) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond398) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond398) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond398) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond398) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond398) CFA_SP SP+-2
          CFI (cfiCond398) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond399 Using cfiCommon0
          CFI (cfiCond399) Function ZDP_MgmtBindRsp
          CFI (cfiCond399) Conditional ??CrossCallReturnLabel_94
          CFI (cfiCond399) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond399) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond399) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond399) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond399) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond399) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond399) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond399) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond399) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond399) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond399) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond399) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond399) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond399) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond399) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond399) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond399) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond399) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond399) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond399) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond399) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond399) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond399) CFA_SP SP+-2
          CFI (cfiCond399) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond400 Using cfiCommon0
          CFI (cfiCond400) Function ZDO_RegisterForZDOMsg
          CFI (cfiCond400) Conditional ??CrossCallReturnLabel_95
          CFI (cfiCond400) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond400) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond400) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond400) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond400) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond400) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond400) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond400) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond400) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond400) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond400) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond400) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond400) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond400) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond400) CFA_SP SP+-2
          CFI (cfiCond400) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker401 Using cfiCommon1
          CFI (cfiPicker401) NoFunction
          CFI (cfiPicker401) Picker
        MOVX      A,@DPTR
        MOV       R6,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R7,A
        RET
          CFI EndBlock cfiCond396
          CFI EndBlock cfiCond397
          CFI EndBlock cfiCond398
          CFI EndBlock cfiCond399
          CFI EndBlock cfiCond400
          CFI EndBlock cfiPicker401

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine34:
          CFI Block cfiCond402 Using cfiCommon0
          CFI Function ZDP_MgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_50
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond403 Using cfiCommon0
          CFI (cfiCond403) Function ZDP_MgmtLqiRsp
          CFI (cfiCond403) Conditional ??CrossCallReturnLabel_51
          CFI (cfiCond403) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond403) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond403) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond403) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond403) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond403) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond403) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond403) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond403) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond403) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond403) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond403) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond403) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond403) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond403) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond403) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond403) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond403) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond403) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond403) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond403) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond403) CFA_SP SP+-2
          CFI (cfiCond403) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker404 Using cfiCommon1
          CFI (cfiPicker404) NoFunction
          CFI (cfiPicker404) Picker
        MOVX      @DPTR,A
        ; Setup parameters for call to function fillAndSend
        ; Setup parameters for call to function fillAndSend
        MOV       ?V0,#0x31
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        RET
          CFI EndBlock cfiCond402
          CFI EndBlock cfiCond403
          CFI EndBlock cfiPicker404

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine28:
          CFI Block cfiCond405 Using cfiCommon0
          CFI Function ZDP_MgmtNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_33
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond406 Using cfiCommon0
          CFI (cfiCond406) Function ZDP_MgmtLqiRsp
          CFI (cfiCond406) Conditional ??CrossCallReturnLabel_34
          CFI (cfiCond406) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond406) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond406) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond406) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond406) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond406) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond406) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond406) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond406) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond406) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond406) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond406) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond406) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond406) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond406) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond406) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond406) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond406) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond406) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond406) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond406) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond406) CFA_SP SP+-2
          CFI (cfiCond406) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker407 Using cfiCommon1
          CFI (cfiPicker407) NoFunction
          CFI (cfiPicker407) Picker
        LCALL     ?Subroutine96 & 0xFFFF
??CrossCallReturnLabel_155:
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond405
          CFI EndBlock cfiCond406
          CFI EndBlock cfiPicker407

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine96:
          CFI Block cfiCond408 Using cfiCommon0
          CFI Function ZDP_MgmtNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_154
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond409 Using cfiCommon0
          CFI (cfiCond409) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond409) Conditional ??CrossCallReturnLabel_155, ??CrossCallReturnLabel_33
          CFI (cfiCond409) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond409) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond409) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond409) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond409) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond409) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond409) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond409) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond409) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond409) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond409) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond409) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond409) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond409) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond409) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond409) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond409) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond409) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond409) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond409) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond409) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond409) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond409) CFA_SP SP+-4
          CFI (cfiCond409) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond410 Using cfiCommon0
          CFI (cfiCond410) Function ZDP_MgmtLqiRsp
          CFI (cfiCond410) Conditional ??CrossCallReturnLabel_155, ??CrossCallReturnLabel_34
          CFI (cfiCond410) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond410) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond410) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond410) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond410) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond410) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond410) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond410) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond410) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond410) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond410) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond410) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond410) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond410) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond410) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond410) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond410) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond410) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond410) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond410) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond410) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond410) CFA_SP SP+-4
          CFI (cfiCond410) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker411 Using cfiCommon1
          CFI (cfiPicker411) NoFunction
          CFI (cfiPicker411) Picker
        MOVX      @DPTR,A
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        RET
          CFI EndBlock cfiCond408
          CFI EndBlock cfiCond409
          CFI EndBlock cfiCond410
          CFI EndBlock cfiPicker411

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine23:
          CFI Block cfiCond412 Using cfiCommon0
          CFI Function ZDP_MgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_237
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond413 Using cfiCommon0
          CFI (cfiCond413) Function ZDP_MgmtBindRsp
          CFI (cfiCond413) Conditional ??CrossCallReturnLabel_238
          CFI (cfiCond413) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond413) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond413) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond413) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond413) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond413) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond413) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond413) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond413) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond413) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond413) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond413) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond413) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond413) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond413) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond413) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond413) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond413) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond413) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond413) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond413) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond413) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond413) CFA_SP SP+-2
          CFI (cfiCond413) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker414 Using cfiCommon1
          CFI (cfiPicker414) NoFunction
          CFI (cfiPicker414) Picker
        MOV       A,R1
        MOV       R6,A
        ; Setup parameters for call to function osal_mem_free
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V2
        MOV       R3,?V3
          CFI EndBlock cfiCond412
          CFI EndBlock cfiCond413
          CFI EndBlock cfiPicker414
        REQUIRE ??Subroutine125_0
        ; // Fall through to label ??Subroutine125_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine125_0:
          CFI Block cfiCond415 Using cfiCommon0
          CFI Function ZDP_MgmtNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_239
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond416 Using cfiCommon0
          CFI (cfiCond416) Function ZDP_MgmtLqiRsp
          CFI (cfiCond416) Conditional ??CrossCallReturnLabel_237
          CFI (cfiCond416) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond416) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond416) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond416) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond416) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond416) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond416) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond416) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond416) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond416) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond416) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond416) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond416) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond416) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond416) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond416) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond416) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond416) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond416) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond416) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond416) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond416) CFA_SP SP+-2
          CFI (cfiCond416) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond417 Using cfiCommon0
          CFI (cfiCond417) Function ZDP_MgmtBindRsp
          CFI (cfiCond417) Conditional ??CrossCallReturnLabel_238
          CFI (cfiCond417) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond417) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond417) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond417) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond417) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond417) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond417) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond417) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond417) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond417) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond417) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond417) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond417) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond417) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond417) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond417) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond417) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond417) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond417) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond417) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond417) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond417) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond417) CFA_SP SP+-2
          CFI (cfiCond417) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker418 Using cfiCommon1
          CFI (cfiPicker418) NoFunction
          CFI (cfiPicker418) Picker
        LCALL     ?Subroutine100 & 0xFFFF
??CrossCallReturnLabel_240:
        MOV       A,R6
        MOV       R1,A
        RET
          CFI EndBlock cfiCond415
          CFI EndBlock cfiCond416
          CFI EndBlock cfiCond417
          CFI EndBlock cfiPicker418
// 1675 
// 1676 /*********************************************************************
// 1677  * @fn          ZDP_MgmtRtgRsp
// 1678  *
// 1679  * @brief       This builds and send a Mgmt_Rtg_rsp message. This
// 1680  *              function sends a unicast message.
// 1681  *
// 1682  * @param       dstAddr - destination address of the message
// 1683  * @param       Status - message status (ZDP_SUCCESS or other)
// 1684  * @param       RoutingTableEntries - Total number of entries
// 1685  * @param       StartIndex - Starting index within the reporting list
// 1686  * @param       RoutingTableListCount - number of entries included
// 1687  *                                      in this message
// 1688  * @param       RoutingTableList - List of Routing Table entries
// 1689  * @param       SecurityEnable - true to enable security for this message
// 1690  *
// 1691  * @return      ZStatus_t
// 1692  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1693 ZStatus_t ZDP_MgmtRtgRsp( byte TransSeq, zAddrType_t *dstAddr,
ZDP_MgmtRtgRsp:
          CFI Block cfiBlock419 Using cfiCommon0
          CFI Function ZDP_MgmtRtgRsp
        CODE
// 1694                             byte Status,
// 1695                             byte RoutingTableEntries,
// 1696                             byte StartIndex,
// 1697                             byte RoutingListCount,
// 1698                             rtgItem_t *RoutingTableList,
// 1699                             byte SecurityEnable )
// 1700 {
        FUNCALL ZDP_MgmtRtgRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtRtgRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtRtgRsp, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        MOV       A,#-0x14
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       A,R1
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
        MOV       ?V2,R2
        MOV       ?V3,R3
        MOV       ?V1,R4
        MOV       ?V0,R5
        MOV       A,#0x16
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       ?V5,A
// 1701   uint8 *buf;
// 1702   uint8 *pBuf;
// 1703   // Status + RoutingTableEntries + StartIndex + RoutingListCount.
// 1704   byte len = 1 + 1 + 1 + 1;
// 1705   byte x;
// 1706 
// 1707   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1708 
// 1709   // Add an array for Routing List data
// 1710   len += (RoutingListCount * ZDP_ROUTINGENTRY_SIZE);
        MOV       B,#0x5
        MUL       AB
        ADD       A,#0x4
        MOV       ?V4,A
// 1711 
// 1712   buf = osal_mem_alloc( (short)(len+1) );
        ; Setup parameters for call to function osal_mem_alloc
        LCALL     ?Subroutine75 & 0xFFFF
??CrossCallReturnLabel_122:
        MOV       R6,?V6
        MOV       R7,?V7
// 1713   if ( buf == NULL )
        MOV       A,R2
        ORL       A,R7
        JNZ       ??ZDP_MgmtRtgRsp_0
// 1714   {
// 1715     return afStatus_MEM_FAIL;
        MOV       R1,#0x10
        LJMP      ??ZDP_MgmtRtgRsp_1 & 0xFFFF
// 1716   }
// 1717 
// 1718   pBuf = buf+1;
??ZDP_MgmtRtgRsp_0:
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        MOV       R0,DPL
        MOV       R1,DPH
        MOV       A,R1
        MOV       R3,A
// 1719 
// 1720   *pBuf++ = Status;
        MOV       A,?V1
        MOVX      @DPTR,A
// 1721   *pBuf++ = RoutingTableEntries;
        INC       DPTR
        MOV       A,?V0
        MOVX      @DPTR,A
// 1722   *pBuf++ = StartIndex;
        MOV       A,#0x15
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_226:
        LCALL     ??Subroutine114_0 & 0xFFFF
// 1723   *pBuf++ = RoutingListCount;
??CrossCallReturnLabel_180:
        MOV       A,?V5
        MOVX      @DPTR,A
        MOV       A,R0
        ADD       A,#0x4
        MOV       R2,A
        JNC       ??ZDP_MgmtRtgRsp_2
        INC       R3
// 1724 
// 1725   for ( x = 0; x < RoutingListCount; x++ )
??ZDP_MgmtRtgRsp_2:
        MOV       ?V6,#0x0
        MOV       A,#0x17
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine51 & 0xFFFF
??CrossCallReturnLabel_90:
        LJMP      ??ZDP_MgmtRtgRsp_3 & 0xFFFF
// 1726   {
// 1727     *pBuf++ = LO_UINT16( RoutingTableList->dstAddress );  // Destination Address
??ZDP_MgmtRtgRsp_4:
        LCALL     ?Subroutine13 & 0xFFFF
// 1728     *pBuf++ = HI_UINT16( RoutingTableList->dstAddress );
// 1729 
// 1730     *pBuf = (RoutingTableList->status & 0x07);
??CrossCallReturnLabel_6:
        MOV       ?V8,A
        CLR       A
        ADDC      A,R3
        MOV       ?V9,A
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        ANL       A,#0x7
        MOV       DPL,?V8
        MOV       DPH,?V9
        MOVX      @DPTR,A
// 1731     if ( RoutingTableList->options & (ZP_MTO_ROUTE_RC | ZP_MTO_ROUTE_NRC) )
        MOV       A,R4
        ADD       A,#0x6
        MOV       DPL,A
        CLR       A
        ADDC      A,R5
        MOV       DPH,A
        MOVX      A,@DPTR
        ANL       A,#0x18
        JZ        ??ZDP_MgmtRtgRsp_5
// 1732     {
// 1733       uint8 options = 0;
// 1734       options |= ZDO_MGMT_RTG_ENTRY_MANYTOONE;
        MOV       ?V7,#0x2
// 1735 
// 1736       if ( RoutingTableList->options & ZP_RTG_RECORD )
        MOVX      A,@DPTR
        MOV       C,0xE0 /* A   */.2
        JNC       ??ZDP_MgmtRtgRsp_6
// 1737       {
// 1738         options |= ZDO_MGMT_RTG_ENTRY_ROUTE_RECORD_REQUIRED;
        MOV       ?V7,#0x6
// 1739       }
// 1740 
// 1741       if ( RoutingTableList->options & ZP_MTO_ROUTE_NRC )
??ZDP_MgmtRtgRsp_6:
        MOV       C,0xE0 /* A   */.4
        JNC       ??ZDP_MgmtRtgRsp_7
// 1742       {
// 1743         options |= ZDO_MGMT_RTG_ENTRY_MEMORY_CONSTRAINED;
        SETB      C
        MOV       A,?V7
        SETB      0xE0 /* A   */.0
        MOV       ?V7,A
// 1744       }
// 1745 
// 1746       *pBuf |= (options << 3);
??ZDP_MgmtRtgRsp_7:
        MOV       A,?V7
        RLC       A
        RLC       A
        RLC       A
        ANL       A,#0xf8
        MOV       ?V7,A
        MOV       DPL,?V8
        MOV       DPH,?V9
        MOVX      A,@DPTR
        ORL       A,?V7
        MOVX      @DPTR,A
// 1747     }
// 1748     pBuf++;
// 1749 
// 1750     *pBuf++ = LO_UINT16( RoutingTableList->nextHopAddress );  // Next hop
??ZDP_MgmtRtgRsp_5:
        MOV       A,R4
        ADD       A,#0x2
        MOV       ?V8,A
        CLR       A
        ADDC      A,R5
        MOV       ?V9,A
        MOV       DPL,?V8
        MOV       DPH,A
        LCALL     ?Subroutine70 & 0xFFFF
??CrossCallReturnLabel_117:
        MOVX      @DPTR,A
// 1751     *pBuf++ = HI_UINT16( RoutingTableList->nextHopAddress );
        MOV       DPL,?V8
        MOV       DPH,?V9
        INC       DPTR
        LCALL     ?Subroutine70 & 0xFFFF
??CrossCallReturnLabel_118:
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,R2
        ADD       A,#0x5
        MOV       R2,A
        JNC       ??ZDP_MgmtRtgRsp_8
        INC       R3
// 1752     RoutingTableList++;    // Move to next list entry
??ZDP_MgmtRtgRsp_8:
        MOV       A,R4
        ADD       A,#0x7
        MOV       R4,A
        JNC       ??ZDP_MgmtRtgRsp_9
        INC       R5
// 1753   }
??ZDP_MgmtRtgRsp_9:
        INC       ?V6
??ZDP_MgmtRtgRsp_3:
        MOV       A,?V6
        CLR       C
        SUBB      A,?V5
        JNC       $+5
        LJMP      ??ZDP_MgmtRtgRsp_4 & 0xFFFF
// 1754 
// 1755   FillAndSendBuffer( &TransSeq, dstAddr, Mgmt_Rtg_rsp, len, buf );
        MOV       DPTR,#ZDP_TmpBuf
        LCALL     ?Subroutine31 & 0xFFFF
??CrossCallReturnLabel_41:
        ; Setup parameters for call to function fillAndSend
        MOV       ?V6,#0x32
        MOV       ?V7,#-0x80
        MOV       R0,#?V6
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       R1,?V4
        MOV       R4,?V2
        MOV       R5,?V3
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP101_8
        LCALL     ??Subroutine128_0 & 0xFFFF
??CrossCallReturnLabel_264:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       A,R1
        MOV       ?V2,A
        ; Setup parameters for call to function osal_mem_free
        LCALL     ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_127:
        MOV       R1,?V2
??ZDP_MgmtRtgRsp_1:
        MOV       A,#0x1
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
        LJMP      ?Subroutine5 & 0xFFFF
// 1756 }
          CFI EndBlock cfiBlock419

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine75:
          CFI Block cfiCond420 Using cfiCommon0
          CFI Function ZDP_MgmtNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_121
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond421 Using cfiCommon0
          CFI (cfiCond421) Function ZDP_MgmtRtgRsp
          CFI (cfiCond421) Conditional ??CrossCallReturnLabel_122
          CFI (cfiCond421) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond421) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond421) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond421) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond421) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond421) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond421) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond421) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond421) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond421) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond421) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond421) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond421) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond421) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond421) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond421) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond421) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond421) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond421) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond421) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond421) CFA_SP SP+-2
          CFI (cfiCond421) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker422 Using cfiCommon1
          CFI (cfiPicker422) NoFunction
          CFI (cfiPicker422) Picker
        LCALL     ?Subroutine104 & 0xFFFF
??CrossCallReturnLabel_166:
        MOV       ?V6,R2
        MOV       ?V7,R3
        RET
          CFI EndBlock cfiCond420
          CFI EndBlock cfiCond421
          CFI EndBlock cfiPicker422

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine70:
          CFI Block cfiCond423 Using cfiCommon0
          CFI Function ZDP_MgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_117
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond424 Using cfiCommon0
          CFI (cfiCond424) Function ZDP_MgmtRtgRsp
          CFI (cfiCond424) Conditional ??CrossCallReturnLabel_118
          CFI (cfiCond424) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond424) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond424) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond424) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond424) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond424) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond424) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond424) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond424) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond424) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond424) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond424) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond424) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond424) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond424) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond424) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond424) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond424) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond424) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond424) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond424) CFA_SP SP+-2
          CFI (cfiCond424) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker425 Using cfiCommon1
          CFI (cfiPicker425) NoFunction
          CFI (cfiPicker425) Picker
        LCALL     ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_143:
        RET
          CFI EndBlock cfiCond423
          CFI EndBlock cfiCond424
          CFI EndBlock cfiPicker425

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine88:
          CFI Block cfiCond426 Using cfiCommon0
          CFI Function ZDP_MgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_143, ??CrossCallReturnLabel_117
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond427 Using cfiCommon0
          CFI (cfiCond427) Function ZDP_MgmtRtgRsp
          CFI (cfiCond427) Conditional ??CrossCallReturnLabel_143, ??CrossCallReturnLabel_118
          CFI (cfiCond427) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond427) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond427) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond427) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond427) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond427) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond427) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond427) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond427) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond427) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond427) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond427) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond427) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond427) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond427) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond427) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond427) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond427) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond427) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond427) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond427) CFA_SP SP+-4
          CFI (cfiCond427) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond428 Using cfiCommon0
          CFI (cfiCond428) Function ZDP_BindUnbindReq
          CFI (cfiCond428) Conditional ??CrossCallReturnLabel_142, ??CrossCallReturnLabel_72
          CFI (cfiCond428) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond428) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond428) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond428) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond428) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond428) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond428) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond428) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond428) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond428) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond428) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond428) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond428) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond428) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond428) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond428) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond428) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond428) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond428) CFA_SP SP+-4
          CFI (cfiCond428) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond429 Using cfiCommon0
          CFI (cfiCond429) Function ZDP_MgmtBindRsp
          CFI (cfiCond429) Conditional ??CrossCallReturnLabel_142, ??CrossCallReturnLabel_73
          CFI (cfiCond429) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond429) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond429) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond429) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond429) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond429) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond429) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond429) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond429) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond429) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond429) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond429) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond429) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond429) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond429) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond429) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond429) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond429) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond429) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond429) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond429) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond429) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond429) CFA_SP SP+-4
          CFI (cfiCond429) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker430 Using cfiCommon1
          CFI (cfiPicker430) NoFunction
          CFI (cfiPicker430) Picker
        MOVX      A,@DPTR
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond426
          CFI EndBlock cfiCond427
          CFI EndBlock cfiCond428
          CFI EndBlock cfiCond429
          CFI EndBlock cfiPicker430
// 1757 
// 1758 /*********************************************************************
// 1759  * @fn          ZDP_MgmtBindRsp
// 1760  *
// 1761  * @brief       This builds and send a Mgmt_Bind_rsp message. This
// 1762  *              function sends a unicast message.
// 1763  *
// 1764  * @param       dstAddr - destination address of the message
// 1765  * @param       Status - message status (ZDP_SUCCESS or other)
// 1766  * @param       BindingTableEntries - Total number of entries
// 1767  * @param       StartIndex - Starting index within the reporting list
// 1768  * @param       BindingTableListCount - number of entries included
// 1769  *                                 in this message
// 1770  * @param       BindingTableList - List of Binding Table entries
// 1771  * @param       SecurityEnable - Security Options
// 1772  *
// 1773  * @return      ZStatus_t
// 1774  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1775 ZStatus_t ZDP_MgmtBindRsp( byte TransSeq, zAddrType_t *dstAddr,
ZDP_MgmtBindRsp:
          CFI Block cfiBlock431 Using cfiCommon0
          CFI Function ZDP_MgmtBindRsp
        CODE
// 1776                             byte Status,
// 1777                             byte BindingTableEntries,
// 1778                             byte StartIndex,
// 1779                             byte BindingTableListCount,
// 1780                             apsBindingItem_t *BindingTableList,
// 1781                             byte SecurityEnable )
// 1782 {
        FUNCALL ZDP_MgmtBindRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtBindRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtBindRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtBindRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtBindRsp, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V12
        REQUIRE ?V13
        MOV       A,#-0x16
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 23)
        LCALL     ?Subroutine25 & 0xFFFF
??CrossCallReturnLabel_30:
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       ?V4,A
// 1783   uint8 *buf;
// 1784   uint8 *pBuf;
// 1785   uint8 maxLen; // maxLen is the maximum packet length to allocate enough memory space
// 1786   uint8 len;    // Actual length varies due to different addrMode
// 1787   uint8 x;
// 1788   byte extZdpBindEntrySize = ZDP_BINDINGENTRY_SIZE + 1 + 1; // One more byte for cluserID and DstAddrMode
// 1789   byte shortZdpBindEntrySize = ZDP_BINDINGENTRY_SIZE + 1 + 1 + 2 - 8 - 1; // clusterID + DstAddrMode + shortAddr - ExtAddr - DstEndpoint
// 1790 
// 1791   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1792 
// 1793   // Status + BindingTableEntries + StartIndex + BindingTableListCount.
// 1794   maxLen = 1 + 1 + 1 + 1;
// 1795   maxLen += (BindingTableListCount * extZdpBindEntrySize );  //max length
// 1796   buf = osal_mem_alloc( maxLen + 1 );  // +1 for transaction ID
        ; Setup parameters for call to function osal_mem_alloc
        MOV       B,#0x15
        MUL       AB
        ADD       A,#0x4
        LCALL     ?Subroutine73 & 0xFFFF
// 1797 
// 1798   if ( buf == NULL )
??CrossCallReturnLabel_120:
        JNZ       ??ZDP_MgmtBindRsp_0
// 1799   {
// 1800     return afStatus_MEM_FAIL;
        MOV       R1,#0x10
        LJMP      ??CrossCallReturnLabel_238 & 0xFFFF
// 1801   }
// 1802 
// 1803   pBuf = buf+1;
??ZDP_MgmtBindRsp_0:
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        MOV       ?V6,DPL
        MOV       ?V7,DPH
        MOV       R2,?V6
        MOV       R3,?V7
// 1804 
// 1805   *pBuf++ = Status;
        MOV       A,?V10
        MOVX      @DPTR,A
// 1806   *pBuf++ = BindingTableEntries;
        INC       DPTR
        MOV       A,?V5
        MOVX      @DPTR,A
// 1807   *pBuf++ = StartIndex;
        MOV       A,#0x17
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine129_0 & 0xFFFF
??CrossCallReturnLabel_268:
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine38 & 0xFFFF
// 1808   *pBuf++ = BindingTableListCount;
??CrossCallReturnLabel_58:
        MOV       A,?V4
        MOVX      @DPTR,A
        MOV       A,R2
        ADD       A,#0x4
        MOV       R2,A
        JNC       ??ZDP_MgmtBindRsp_1
        INC       R3
// 1809 
// 1810   // Initial length = Status + BindingTableEntries + StartIndex + BindingTableListCount.
// 1811   // length += ZDP_BINDINGENTRY_SIZE   -- Version 1.0
// 1812   //           extZdpBindEntrySize     -- Version 1.1 extended address mode
// 1813   //           shortZdpBindEntrySize   -- Version 1.1 group address mode
// 1814 
// 1815   len = 1 + 1 + 1 + 1;
??ZDP_MgmtBindRsp_1:
        MOV       ?V0,#0x4
// 1816   for ( x = 0; x < BindingTableListCount; x++ )
        MOV       ?V1,#0x0
        MOV       A,#0x19
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine52 & 0xFFFF
??CrossCallReturnLabel_94:
        SJMP      ??ZDP_MgmtBindRsp_2
// 1817   {
// 1818     pBuf = osal_cpyExtAddr( pBuf, BindingTableList->srcAddr );
// 1819     *pBuf++ = BindingTableList->srcEP;
// 1820 
// 1821     // Cluster ID
// 1822     *pBuf++ = LO_UINT16( BindingTableList->clusterID );
// 1823     *pBuf++ = HI_UINT16( BindingTableList->clusterID );
// 1824 
// 1825     *pBuf++ = BindingTableList->dstAddr.addrMode;
// 1826     if ( BindingTableList->dstAddr.addrMode == Addr64Bit )
// 1827     {
// 1828       len += extZdpBindEntrySize;
// 1829       pBuf = osal_cpyExtAddr( pBuf, BindingTableList->dstAddr.addr.extAddr );
// 1830       *pBuf++ = BindingTableList->dstEP;
// 1831     }
// 1832     else
// 1833     {
// 1834       len += shortZdpBindEntrySize;
??ZDP_MgmtBindRsp_3:
        MOV       A,#0xe
        ADD       A,?V0
        MOV       ?V0,A
// 1835       *pBuf++ = LO_UINT16( BindingTableList->dstAddr.addr.shortAddr );
        LCALL     ?Subroutine13 & 0xFFFF
// 1836       *pBuf++ = HI_UINT16( BindingTableList->dstAddr.addr.shortAddr );
// 1837     }
??CrossCallReturnLabel_7:
        MOV       R2,A
        JNC       ??ZDP_MgmtBindRsp_4
        INC       R3
// 1838     BindingTableList++;    // Move to next list entry
??ZDP_MgmtBindRsp_4:
        MOV       A,R6
        ADD       A,#0x15
        MOV       R6,A
        JNC       ??ZDP_MgmtBindRsp_5
        INC       R7
??ZDP_MgmtBindRsp_5:
        INC       ?V1
??ZDP_MgmtBindRsp_2:
        MOV       A,?V1
        CLR       C
        SUBB      A,?V4
        JNC       ??ZDP_MgmtBindRsp_6
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_112:
        MOV       A,R6
        ADD       A,#0x9
        MOV       R0,A
        CLR       A
        ADDC      A,R7
        MOV       R1,A
        MOV       DPL,R0
        LCALL     ?Subroutine71 & 0xFFFF
??CrossCallReturnLabel_269:
        LCALL     ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_182:
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,R6
        ADD       A,#0x13
        MOV       R0,A
        CLR       A
        ADDC      A,R7
        MOV       R1,A
        MOV       DPL,R0
        MOV       DPH,A
        LCALL     ?Subroutine44 & 0xFFFF
??CrossCallReturnLabel_73:
        JNC       ??ZDP_MgmtBindRsp_7
        INC       R3
??ZDP_MgmtBindRsp_7:
        MOV       A,R6
        ADD       A,#0xb
        MOV       R4,A
        CLR       A
        ADDC      A,R7
        MOV       R5,A
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      A,@DPTR
        XRL       A,#0x3
        JNZ       ??ZDP_MgmtBindRsp_3
        MOV       A,#0x15
        ADD       A,?V0
        MOV       ?V0,A
        ; Setup parameters for call to function sAddrExtCpy
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV       A,R6
        ADD       A,#0x14
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        LCALL     ?Subroutine71 & 0xFFFF
// 1839   }
??CrossCallReturnLabel_270:
        LCALL     ?Subroutine21 & 0xFFFF
??CrossCallReturnLabel_27:
        SJMP      ??ZDP_MgmtBindRsp_4
// 1840 
// 1841   FillAndSendBuffer( &TransSeq, dstAddr, Mgmt_Bind_rsp, len, buf );
??ZDP_MgmtBindRsp_6:
        MOV       DPTR,#ZDP_TmpBuf
        MOV       A,?V6
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V7
        MOVX      @DPTR,A
        ; Setup parameters for call to function fillAndSend
        MOV       ?V6,#0x33
        MOV       ?V7,#-0x80
        MOV       R0,#?V6
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       R1,?V0
        MOV       R4,?V12
        MOV       R5,?V13
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP101_8
        LCALL     ??Subroutine128_0 & 0xFFFF
??CrossCallReturnLabel_265:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 23)
        LCALL     ?Subroutine23 & 0xFFFF
??CrossCallReturnLabel_238:
        LJMP      ?Subroutine4 & 0xFFFF
// 1842 }
          CFI EndBlock cfiBlock431

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine73:
          CFI Block cfiCond432 Using cfiCommon0
          CFI Function ZDP_MgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_119
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond433 Using cfiCommon0
          CFI (cfiCond433) Function ZDP_MgmtBindRsp
          CFI (cfiCond433) Conditional ??CrossCallReturnLabel_120
          CFI (cfiCond433) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond433) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond433) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond433) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond433) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond433) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond433) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond433) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond433) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond433) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond433) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond433) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond433) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond433) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond433) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond433) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond433) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond433) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond433) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond433) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond433) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond433) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond433) CFA_SP SP+-2
          CFI (cfiCond433) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker434 Using cfiCommon1
          CFI (cfiPicker434) NoFunction
          CFI (cfiPicker434) Picker
        LCALL     ?Subroutine97 & 0xFFFF
??CrossCallReturnLabel_156:
        MOV       A,R2
        ORL       A,R3
        RET
          CFI EndBlock cfiCond432
          CFI EndBlock cfiCond433
          CFI EndBlock cfiPicker434

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine72:
          CFI Block cfiCond435 Using cfiCommon0
          CFI Function ZDP_MgmtDirectJoinReq
          CFI Conditional ??CrossCallReturnLabel_242
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond436 Using cfiCommon0
          CFI (cfiCond436) Function ZDP_MgmtLeaveReq
          CFI (cfiCond436) Conditional ??CrossCallReturnLabel_242
          CFI (cfiCond436) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond436) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond436) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond436) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond436) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond436) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond436) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond436) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond436) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond436) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond436) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond436) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond436) CFA_SP SP+-2
          CFI (cfiCond436) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond437 Using cfiCommon0
          CFI (cfiCond437) Function ZDP_MgmtNwkDiscReq
          CFI (cfiCond437) Conditional ??CrossCallReturnLabel_242
          CFI (cfiCond437) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond437) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond437) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond437) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond437) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond437) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond437) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond437) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond437) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond437) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond437) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond437) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond437) CFA_SP SP+-2
          CFI (cfiCond437) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond438 Using cfiCommon0
          CFI (cfiCond438) Function ZDP_UserDescSet
          CFI (cfiCond438) Conditional ??CrossCallReturnLabel_243
          CFI (cfiCond438) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond438) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond438) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond438) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond438) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond438) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond438) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond438) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond438) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond438) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond438) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond438) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond438) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond438) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond438) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond438) CFA_SP SP+-2
          CFI (cfiCond438) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiPicker439 Using cfiCommon1
          CFI (cfiPicker439) NoFunction
          CFI (cfiPicker439) Picker
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
          CFI EndBlock cfiCond435
          CFI EndBlock cfiCond436
          CFI EndBlock cfiCond437
          CFI EndBlock cfiCond438
          CFI EndBlock cfiPicker439
        REQUIRE ??Subroutine126_0
        ; // Fall through to label ??Subroutine126_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine126_0:
          CFI Block cfiCond440 Using cfiCommon0
          CFI Function ZDP_MatchDescReq
          CFI Conditional ??CrossCallReturnLabel_244
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond441 Using cfiCommon0
          CFI (cfiCond441) Function ZDP_MgmtDirectJoinReq
          CFI (cfiCond441) Conditional ??CrossCallReturnLabel_242
          CFI (cfiCond441) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond441) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond441) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond441) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond441) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond441) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond441) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond441) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond441) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond441) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond441) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond441) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond441) CFA_SP SP+-2
          CFI (cfiCond441) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond442 Using cfiCommon0
          CFI (cfiCond442) Function ZDP_MgmtLeaveReq
          CFI (cfiCond442) Conditional ??CrossCallReturnLabel_242
          CFI (cfiCond442) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond442) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond442) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond442) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond442) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond442) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond442) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond442) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond442) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond442) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond442) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond442) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond442) CFA_SP SP+-2
          CFI (cfiCond442) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond443 Using cfiCommon0
          CFI (cfiCond443) Function ZDP_MgmtNwkDiscReq
          CFI (cfiCond443) Conditional ??CrossCallReturnLabel_242
          CFI (cfiCond443) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond443) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond443) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond443) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond443) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond443) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond443) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond443) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond443) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond443) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond443) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond443) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond443) CFA_SP SP+-2
          CFI (cfiCond443) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond444 Using cfiCommon0
          CFI (cfiCond444) Function ZDP_UserDescSet
          CFI (cfiCond444) Conditional ??CrossCallReturnLabel_243
          CFI (cfiCond444) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond444) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond444) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond444) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond444) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond444) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond444) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond444) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond444) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond444) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond444) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond444) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond444) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond444) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond444) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond444) CFA_SP SP+-2
          CFI (cfiCond444) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiPicker445 Using cfiCommon1
          CFI (cfiPicker445) NoFunction
          CFI (cfiPicker445) Picker
        MOV       R5,A
          CFI EndBlock cfiCond440
          CFI EndBlock cfiCond441
          CFI EndBlock cfiCond442
          CFI EndBlock cfiCond443
          CFI EndBlock cfiCond444
          CFI EndBlock cfiPicker445
        REQUIRE ??Subroutine127_0
        ; // Fall through to label ??Subroutine127_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine127_0:
          CFI Block cfiCond446 Using cfiCommon0
          CFI Function ZDP_NwkAddrReq
          CFI Conditional ??CrossCallReturnLabel_245
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond447 Using cfiCommon0
          CFI (cfiCond447) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond447) Conditional ??CrossCallReturnLabel_245
          CFI (cfiCond447) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond447) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond447) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond447) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond447) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond447) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond447) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond447) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond447) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond447) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond447) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond447) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond447) CFA_SP SP+-2
          CFI (cfiCond447) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond448 Using cfiCommon0
          CFI (cfiCond448) Function ZDP_IEEEAddrReq
          CFI (cfiCond448) Conditional ??CrossCallReturnLabel_246
          CFI (cfiCond448) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond448) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond448) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond448) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond448) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond448) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond448) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond448) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond448) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond448) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond448) CFA_SP SP+-2
          CFI (cfiCond448) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond449 Using cfiCommon0
          CFI (cfiCond449) Function ZDP_DeviceAnnce
          CFI (cfiCond449) Conditional ??CrossCallReturnLabel_246
          CFI (cfiCond449) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond449) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond449) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond449) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond449) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond449) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond449) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond449) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond449) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond449) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond449) CFA_SP SP+-2
          CFI (cfiCond449) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond450 Using cfiCommon0
          CFI (cfiCond450) Function ZDP_ServerDiscReq
          CFI (cfiCond450) Conditional ??CrossCallReturnLabel_247
          CFI (cfiCond450) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond450) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond450) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond450) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond450) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond450) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond450) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond450) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond450) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond450) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond450) CFA_SP SP+-2
          CFI (cfiCond450) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond451 Using cfiCommon0
          CFI (cfiCond451) Function ZDP_EndDeviceBindReq
          CFI (cfiCond451) Conditional ??CrossCallReturnLabel_248
          CFI (cfiCond451) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond451) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond451) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond451) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond451) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond451) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond451) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond451) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond451) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond451) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond451) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond451) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond451) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond451) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond451) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond451) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond451) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond451) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond451) CFA_SP SP+-2
          CFI (cfiCond451) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond452 Using cfiCommon0
          CFI (cfiCond452) Function ZDP_BindUnbindReq
          CFI (cfiCond452) Conditional ??CrossCallReturnLabel_249
          CFI (cfiCond452) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond452) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond452) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond452) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond452) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond452) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond452) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond452) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond452) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond452) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond452) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond452) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond452) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond452) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond452) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond452) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond452) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond452) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond452) CFA_SP SP+-2
          CFI (cfiCond452) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond453 Using cfiCommon0
          CFI (cfiCond453) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond453) Conditional ??CrossCallReturnLabel_250
          CFI (cfiCond453) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond453) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond453) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond453) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond453) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond453) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond453) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond453) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond453) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond453) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond453) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond453) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond453) CFA_SP SP+-2
          CFI (cfiCond453) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond454 Using cfiCommon0
          CFI (cfiCond454) Function ZDP_MgmtNwkUpdateReq
          CFI (cfiCond454) Conditional ??CrossCallReturnLabel_251
          CFI (cfiCond454) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond454) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond454) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond454) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond454) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond454) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond454) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond454) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond454) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond454) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond454) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond454) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond454) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond454) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond454) CFA_SP SP+-2
          CFI (cfiCond454) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond455 Using cfiCommon0
          CFI (cfiCond455) Function ZDP_MatchDescReq
          CFI (cfiCond455) Conditional ??CrossCallReturnLabel_244
          CFI (cfiCond455) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond455) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond455) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond455) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond455) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond455) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond455) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond455) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond455) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond455) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond455) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond455) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond455) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond455) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond455) CFA_SP SP+-2
          CFI (cfiCond455) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond456 Using cfiCommon0
          CFI (cfiCond456) Function ZDP_MgmtDirectJoinReq
          CFI (cfiCond456) Conditional ??CrossCallReturnLabel_242
          CFI (cfiCond456) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond456) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond456) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond456) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond456) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond456) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond456) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond456) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond456) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond456) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond456) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond456) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond456) CFA_SP SP+-2
          CFI (cfiCond456) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond457 Using cfiCommon0
          CFI (cfiCond457) Function ZDP_MgmtLeaveReq
          CFI (cfiCond457) Conditional ??CrossCallReturnLabel_242
          CFI (cfiCond457) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond457) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond457) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond457) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond457) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond457) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond457) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond457) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond457) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond457) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond457) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond457) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond457) CFA_SP SP+-2
          CFI (cfiCond457) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond458 Using cfiCommon0
          CFI (cfiCond458) Function ZDP_MgmtNwkDiscReq
          CFI (cfiCond458) Conditional ??CrossCallReturnLabel_242
          CFI (cfiCond458) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond458) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond458) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond458) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond458) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond458) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond458) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond458) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond458) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond458) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond458) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond458) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond458) CFA_SP SP+-2
          CFI (cfiCond458) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond459 Using cfiCommon0
          CFI (cfiCond459) Function ZDP_UserDescSet
          CFI (cfiCond459) Conditional ??CrossCallReturnLabel_243
          CFI (cfiCond459) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond459) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond459) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond459) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond459) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond459) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond459) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond459) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond459) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond459) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond459) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond459) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond459) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond459) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond459) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond459) CFA_SP SP+-2
          CFI (cfiCond459) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiPicker460 Using cfiCommon1
          CFI (cfiPicker460) NoFunction
          CFI (cfiPicker460) Picker
        MOV       R2,#ZDP_TransID & 0xff
        MOV       R3,#(ZDP_TransID >> 8) & 0xff
          CFI EndBlock cfiCond446
          CFI EndBlock cfiCond447
          CFI EndBlock cfiCond448
          CFI EndBlock cfiCond449
          CFI EndBlock cfiCond450
          CFI EndBlock cfiCond451
          CFI EndBlock cfiCond452
          CFI EndBlock cfiCond453
          CFI EndBlock cfiCond454
          CFI EndBlock cfiCond455
          CFI EndBlock cfiCond456
          CFI EndBlock cfiCond457
          CFI EndBlock cfiCond458
          CFI EndBlock cfiCond459
          CFI EndBlock cfiPicker460
        REQUIRE ??Subroutine128_0
        ; // Fall through to label ??Subroutine128_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine128_0:
          CFI Block cfiCond461 Using cfiCommon0
          CFI Function ZDP_SendData
          CFI Conditional ??CrossCallReturnLabel_252
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond462 Using cfiCommon0
          CFI (cfiCond462) Function ZDP_ParentAnnce
          CFI (cfiCond462) Conditional ??CrossCallReturnLabel_253
          CFI (cfiCond462) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond462) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond462) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond462) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond462) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond462) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond462) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond462) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond462) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond462) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond462) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond462) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond462) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond462) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond462) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond462) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond462) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond462) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond462) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond462) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond462) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond462) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond462) CFA_SP SP+-2
          CFI (cfiCond462) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond463 Using cfiCommon0
          CFI (cfiCond463) Function zdpProcessAddrReq
          CFI (cfiCond463) Conditional ??CrossCallReturnLabel_254
          CFI (cfiCond463) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond463) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond463) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond463) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond463) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond463) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond463) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond463) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond463) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond463) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond463) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond463) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond463) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond463) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond463) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond463) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond463) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond463) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond463) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond463) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond463) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond463) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond463) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond463) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond463) CFA_SP SP+-2
          CFI (cfiCond463) CFA_XSP16 add(XSP16, 48)
          CFI Block cfiCond464 Using cfiCommon0
          CFI (cfiCond464) Function ZDP_NWKAddrOfInterestReq
          CFI (cfiCond464) Conditional ??CrossCallReturnLabel_255
          CFI (cfiCond464) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond464) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond464) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond464) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond464) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond464) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond464) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond464) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond464) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond464) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond464) CFA_SP SP+-2
          CFI (cfiCond464) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond465 Using cfiCommon0
          CFI (cfiCond465) Function ZDP_SimpleDescReq
          CFI (cfiCond465) Conditional ??CrossCallReturnLabel_255
          CFI (cfiCond465) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond465) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond465) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond465) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond465) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond465) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond465) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond465) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond465) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond465) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond465) CFA_SP SP+-2
          CFI (cfiCond465) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond466 Using cfiCommon0
          CFI (cfiCond466) Function ZDP_NodeDescMsg
          CFI (cfiCond466) Conditional ??CrossCallReturnLabel_255
          CFI (cfiCond466) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond466) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond466) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond466) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond466) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond466) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond466) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond466) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond466) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond466) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond466) CFA_SP SP+-2
          CFI (cfiCond466) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond467 Using cfiCommon0
          CFI (cfiCond467) Function ZDP_PowerDescMsg
          CFI (cfiCond467) Conditional ??CrossCallReturnLabel_255
          CFI (cfiCond467) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond467) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond467) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond467) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond467) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond467) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond467) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond467) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond467) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond467) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond467) CFA_SP SP+-2
          CFI (cfiCond467) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond468 Using cfiCommon0
          CFI (cfiCond468) Function ZDP_SimpleDescMsg
          CFI (cfiCond468) Conditional ??CrossCallReturnLabel_256
          CFI (cfiCond468) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond468) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond468) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond468) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond468) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond468) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond468) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond468) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond468) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond468) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond468) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond468) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond468) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond468) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond468) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond468) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond468) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond468) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond468) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond468) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond468) CFA_SP SP+-2
          CFI (cfiCond468) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond469 Using cfiCommon0
          CFI (cfiCond469) Function ZDP_EPRsp
          CFI (cfiCond469) Conditional ??CrossCallReturnLabel_257
          CFI (cfiCond469) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond469) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond469) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond469) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond469) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond469) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond469) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond469) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond469) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond469) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond469) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond469) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond469) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond469) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond469) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond469) CFA_SP SP+-2
          CFI (cfiCond469) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond470 Using cfiCommon0
          CFI (cfiCond470) Function ZDP_UserDescRsp
          CFI (cfiCond470) Conditional ??CrossCallReturnLabel_258
          CFI (cfiCond470) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond470) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond470) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond470) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond470) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond470) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond470) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond470) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond470) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond470) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond470) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond470) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond470) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond470) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond470) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond470) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond470) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond470) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond470) CFA_SP SP+-2
          CFI (cfiCond470) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond471 Using cfiCommon0
          CFI (cfiCond471) Function ZDP_ServerDiscRsp
          CFI (cfiCond471) Conditional ??CrossCallReturnLabel_259
          CFI (cfiCond471) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond471) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond471) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond471) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond471) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond471) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond471) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond471) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond471) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond471) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond471) CFA_SP SP+-2
          CFI (cfiCond471) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond472 Using cfiCommon0
          CFI (cfiCond472) Function ZDP_GenericRsp
          CFI (cfiCond472) Conditional ??CrossCallReturnLabel_260
          CFI (cfiCond472) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond472) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond472) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond472) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond472) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond472) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond472) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond472) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond472) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond472) CFA_SP SP+-2
          CFI (cfiCond472) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond473 Using cfiCommon0
          CFI (cfiCond473) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond473) Conditional ??CrossCallReturnLabel_261
          CFI (cfiCond473) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond473) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond473) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond473) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond473) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond473) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond473) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond473) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond473) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond473) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond473) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond473) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond473) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond473) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond473) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond473) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond473) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond473) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond473) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond473) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond473) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond473) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond473) CFA_SP SP+-2
          CFI (cfiCond473) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond474 Using cfiCommon0
          CFI (cfiCond474) Function ZDP_MgmtLqiRsp
          CFI (cfiCond474) Conditional ??CrossCallReturnLabel_262
          CFI (cfiCond474) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond474) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond474) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond474) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond474) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond474) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond474) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond474) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond474) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond474) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond474) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond474) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond474) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond474) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond474) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond474) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond474) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond474) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond474) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond474) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond474) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond474) CFA_SP SP+-2
          CFI (cfiCond474) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond475 Using cfiCommon0
          CFI (cfiCond475) Function ZDP_MgmtLqiRsp
          CFI (cfiCond475) Conditional ??CrossCallReturnLabel_263
          CFI (cfiCond475) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond475) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond475) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond475) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond475) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond475) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond475) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond475) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond475) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond475) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond475) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond475) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond475) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond475) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond475) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond475) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond475) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond475) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond475) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond475) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond475) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond475) CFA_SP SP+-2
          CFI (cfiCond475) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond476 Using cfiCommon0
          CFI (cfiCond476) Function ZDP_MgmtRtgRsp
          CFI (cfiCond476) Conditional ??CrossCallReturnLabel_264
          CFI (cfiCond476) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond476) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond476) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond476) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond476) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond476) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond476) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond476) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond476) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond476) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond476) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond476) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond476) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond476) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond476) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond476) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond476) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond476) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond476) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond476) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond476) CFA_SP SP+-2
          CFI (cfiCond476) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond477 Using cfiCommon0
          CFI (cfiCond477) Function ZDP_MgmtBindRsp
          CFI (cfiCond477) Conditional ??CrossCallReturnLabel_265
          CFI (cfiCond477) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond477) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond477) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond477) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond477) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond477) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond477) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond477) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond477) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond477) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond477) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond477) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond477) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond477) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond477) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond477) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond477) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond477) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond477) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond477) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond477) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond477) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond477) CFA_SP SP+-2
          CFI (cfiCond477) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond478 Using cfiCommon0
          CFI (cfiCond478) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond478) Conditional ??CrossCallReturnLabel_266
          CFI (cfiCond478) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond478) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond478) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond478) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond478) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond478) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond478) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond478) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond478) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond478) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond478) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond478) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond478) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond478) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond478) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond478) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond478) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond478) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond478) CFA_SP SP+-2
          CFI (cfiCond478) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond479 Using cfiCommon0
          CFI (cfiCond479) Function ZDP_NwkAddrReq
          CFI (cfiCond479) Conditional ??CrossCallReturnLabel_245
          CFI (cfiCond479) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond479) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond479) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond479) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond479) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond479) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond479) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond479) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond479) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond479) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond479) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond479) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond479) CFA_SP SP+-2
          CFI (cfiCond479) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond480 Using cfiCommon0
          CFI (cfiCond480) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond480) Conditional ??CrossCallReturnLabel_245
          CFI (cfiCond480) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond480) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond480) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond480) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond480) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond480) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond480) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond480) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond480) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond480) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond480) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond480) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond480) CFA_SP SP+-2
          CFI (cfiCond480) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond481 Using cfiCommon0
          CFI (cfiCond481) Function ZDP_IEEEAddrReq
          CFI (cfiCond481) Conditional ??CrossCallReturnLabel_246
          CFI (cfiCond481) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond481) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond481) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond481) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond481) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond481) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond481) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond481) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond481) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond481) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond481) CFA_SP SP+-2
          CFI (cfiCond481) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond482 Using cfiCommon0
          CFI (cfiCond482) Function ZDP_DeviceAnnce
          CFI (cfiCond482) Conditional ??CrossCallReturnLabel_246
          CFI (cfiCond482) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond482) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond482) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond482) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond482) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond482) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond482) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond482) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond482) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond482) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond482) CFA_SP SP+-2
          CFI (cfiCond482) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond483 Using cfiCommon0
          CFI (cfiCond483) Function ZDP_ServerDiscReq
          CFI (cfiCond483) Conditional ??CrossCallReturnLabel_247
          CFI (cfiCond483) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond483) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond483) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond483) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond483) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond483) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond483) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond483) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond483) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond483) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond483) CFA_SP SP+-2
          CFI (cfiCond483) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond484 Using cfiCommon0
          CFI (cfiCond484) Function ZDP_EndDeviceBindReq
          CFI (cfiCond484) Conditional ??CrossCallReturnLabel_248
          CFI (cfiCond484) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond484) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond484) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond484) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond484) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond484) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond484) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond484) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond484) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond484) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond484) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond484) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond484) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond484) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond484) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond484) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond484) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond484) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond484) CFA_SP SP+-2
          CFI (cfiCond484) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond485 Using cfiCommon0
          CFI (cfiCond485) Function ZDP_BindUnbindReq
          CFI (cfiCond485) Conditional ??CrossCallReturnLabel_249
          CFI (cfiCond485) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond485) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond485) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond485) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond485) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond485) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond485) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond485) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond485) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond485) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond485) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond485) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond485) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond485) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond485) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond485) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond485) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond485) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond485) CFA_SP SP+-2
          CFI (cfiCond485) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond486 Using cfiCommon0
          CFI (cfiCond486) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond486) Conditional ??CrossCallReturnLabel_250
          CFI (cfiCond486) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond486) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond486) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond486) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond486) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond486) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond486) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond486) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond486) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond486) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond486) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond486) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond486) CFA_SP SP+-2
          CFI (cfiCond486) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond487 Using cfiCommon0
          CFI (cfiCond487) Function ZDP_MgmtNwkUpdateReq
          CFI (cfiCond487) Conditional ??CrossCallReturnLabel_251
          CFI (cfiCond487) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond487) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond487) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond487) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond487) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond487) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond487) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond487) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond487) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond487) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond487) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond487) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond487) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond487) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond487) CFA_SP SP+-2
          CFI (cfiCond487) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond488 Using cfiCommon0
          CFI (cfiCond488) Function ZDP_MatchDescReq
          CFI (cfiCond488) Conditional ??CrossCallReturnLabel_244
          CFI (cfiCond488) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond488) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond488) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond488) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond488) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond488) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond488) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond488) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond488) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond488) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond488) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond488) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond488) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond488) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond488) CFA_SP SP+-2
          CFI (cfiCond488) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond489 Using cfiCommon0
          CFI (cfiCond489) Function ZDP_MgmtDirectJoinReq
          CFI (cfiCond489) Conditional ??CrossCallReturnLabel_242
          CFI (cfiCond489) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond489) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond489) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond489) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond489) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond489) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond489) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond489) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond489) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond489) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond489) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond489) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond489) CFA_SP SP+-2
          CFI (cfiCond489) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond490 Using cfiCommon0
          CFI (cfiCond490) Function ZDP_MgmtLeaveReq
          CFI (cfiCond490) Conditional ??CrossCallReturnLabel_242
          CFI (cfiCond490) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond490) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond490) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond490) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond490) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond490) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond490) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond490) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond490) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond490) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond490) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond490) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond490) CFA_SP SP+-2
          CFI (cfiCond490) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond491 Using cfiCommon0
          CFI (cfiCond491) Function ZDP_MgmtNwkDiscReq
          CFI (cfiCond491) Conditional ??CrossCallReturnLabel_242
          CFI (cfiCond491) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond491) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond491) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond491) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond491) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond491) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond491) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond491) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond491) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond491) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond491) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond491) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond491) CFA_SP SP+-2
          CFI (cfiCond491) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond492 Using cfiCommon0
          CFI (cfiCond492) Function ZDP_UserDescSet
          CFI (cfiCond492) Conditional ??CrossCallReturnLabel_243
          CFI (cfiCond492) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond492) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond492) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond492) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond492) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond492) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond492) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond492) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond492) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond492) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond492) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond492) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond492) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond492) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond492) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond492) CFA_SP SP+-2
          CFI (cfiCond492) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiPicker493 Using cfiCommon1
          CFI (cfiPicker493) NoFunction
          CFI (cfiPicker493) Picker
        LCALL     `??fillAndSend::?relay`; Banked call to: fillAndSend
        MOV       A,#0x2
        RET
          CFI EndBlock cfiCond461
          CFI EndBlock cfiCond462
          CFI EndBlock cfiCond463
          CFI EndBlock cfiCond464
          CFI EndBlock cfiCond465
          CFI EndBlock cfiCond466
          CFI EndBlock cfiCond467
          CFI EndBlock cfiCond468
          CFI EndBlock cfiCond469
          CFI EndBlock cfiCond470
          CFI EndBlock cfiCond471
          CFI EndBlock cfiCond472
          CFI EndBlock cfiCond473
          CFI EndBlock cfiCond474
          CFI EndBlock cfiCond475
          CFI EndBlock cfiCond476
          CFI EndBlock cfiCond477
          CFI EndBlock cfiCond478
          CFI EndBlock cfiCond479
          CFI EndBlock cfiCond480
          CFI EndBlock cfiCond481
          CFI EndBlock cfiCond482
          CFI EndBlock cfiCond483
          CFI EndBlock cfiCond484
          CFI EndBlock cfiCond485
          CFI EndBlock cfiCond486
          CFI EndBlock cfiCond487
          CFI EndBlock cfiCond488
          CFI EndBlock cfiCond489
          CFI EndBlock cfiCond490
          CFI EndBlock cfiCond491
          CFI EndBlock cfiCond492
          CFI EndBlock cfiPicker493

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine71:
          CFI Block cfiCond494 Using cfiCommon0
          CFI Function ZDP_MgmtBindRsp
          CFI Conditional ??CrossCallReturnLabel_269
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond495 Using cfiCommon0
          CFI (cfiCond495) Function ZDP_MgmtBindRsp
          CFI (cfiCond495) Conditional ??CrossCallReturnLabel_270
          CFI (cfiCond495) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond495) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond495) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond495) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond495) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond495) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond495) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond495) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond495) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond495) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond495) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond495) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond495) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond495) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond495) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond495) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond495) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond495) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond495) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond495) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond495) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond495) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond495) CFA_SP SP+-2
          CFI (cfiCond495) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker496 Using cfiCommon1
          CFI (cfiPicker496) NoFunction
          CFI (cfiPicker496) Picker
        MOV       DPH,A
          CFI EndBlock cfiCond494
          CFI EndBlock cfiCond495
          CFI EndBlock cfiPicker496
        REQUIRE ??Subroutine129_0
        ; // Fall through to label ??Subroutine129_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine129_0:
          CFI Block cfiCond497 Using cfiCommon0
          CFI Function ZDP_BindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_267
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond498 Using cfiCommon0
          CFI (cfiCond498) Function ZDP_MgmtBindRsp
          CFI (cfiCond498) Conditional ??CrossCallReturnLabel_268
          CFI (cfiCond498) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond498) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond498) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond498) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond498) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond498) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond498) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond498) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond498) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond498) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond498) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond498) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond498) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond498) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond498) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond498) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond498) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond498) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond498) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond498) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond498) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond498) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond498) CFA_SP SP+-2
          CFI (cfiCond498) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond499 Using cfiCommon0
          CFI (cfiCond499) Function ZDP_MgmtBindRsp
          CFI (cfiCond499) Conditional ??CrossCallReturnLabel_269
          CFI (cfiCond499) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond499) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond499) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond499) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond499) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond499) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond499) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond499) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond499) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond499) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond499) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond499) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond499) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond499) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond499) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond499) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond499) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond499) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond499) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond499) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond499) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond499) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond499) CFA_SP SP+-2
          CFI (cfiCond499) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond500 Using cfiCommon0
          CFI (cfiCond500) Function ZDP_MgmtBindRsp
          CFI (cfiCond500) Conditional ??CrossCallReturnLabel_270
          CFI (cfiCond500) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond500) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond500) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond500) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond500) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond500) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond500) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond500) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond500) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond500) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond500) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond500) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond500) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond500) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond500) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond500) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond500) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond500) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond500) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond500) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond500) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond500) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond500) CFA_SP SP+-2
          CFI (cfiCond500) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker501 Using cfiCommon1
          CFI (cfiPicker501) NoFunction
          CFI (cfiPicker501) Picker
        LCALL     ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_274:
        RET
          CFI EndBlock cfiCond497
          CFI EndBlock cfiCond498
          CFI EndBlock cfiCond499
          CFI EndBlock cfiCond500
          CFI EndBlock cfiPicker501

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine89:
          CFI Block cfiCond502 Using cfiCommon0
          CFI Function ZDP_BindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_110
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond503 Using cfiCommon0
          CFI (cfiCond503) Function ZDP_MgmtLqiRsp
          CFI (cfiCond503) Conditional ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_111
          CFI (cfiCond503) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond503) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond503) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond503) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond503) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond503) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond503) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond503) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond503) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond503) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond503) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond503) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond503) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond503) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond503) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond503) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond503) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond503) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond503) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond503) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond503) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond503) CFA_SP SP+-4
          CFI (cfiCond503) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond504 Using cfiCommon0
          CFI (cfiCond504) Function ZDP_MgmtBindRsp
          CFI (cfiCond504) Conditional ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_112
          CFI (cfiCond504) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond504) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond504) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond504) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond504) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond504) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond504) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond504) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond504) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond504) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond504) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond504) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond504) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond504) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond504) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond504) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond504) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond504) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond504) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond504) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond504) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond504) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond504) CFA_SP SP+-4
          CFI (cfiCond504) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond505 Using cfiCommon0
          CFI (cfiCond505) Function ZDP_MgmtBindRsp
          CFI (cfiCond505) Conditional ??CrossCallReturnLabel_274, ??CrossCallReturnLabel_269
          CFI (cfiCond505) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond505) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond505) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond505) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond505) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond505) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond505) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond505) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond505) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond505) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond505) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond505) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond505) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond505) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond505) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond505) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond505) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond505) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond505) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond505) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond505) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond505) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond505) CFA_SP SP+-4
          CFI (cfiCond505) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond506 Using cfiCommon0
          CFI (cfiCond506) Function ZDP_MgmtBindRsp
          CFI (cfiCond506) Conditional ??CrossCallReturnLabel_274, ??CrossCallReturnLabel_270
          CFI (cfiCond506) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond506) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond506) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond506) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond506) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond506) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond506) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond506) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond506) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond506) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond506) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond506) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond506) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond506) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond506) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond506) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond506) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond506) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond506) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond506) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond506) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond506) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond506) CFA_SP SP+-4
          CFI (cfiCond506) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond507 Using cfiCommon0
          CFI (cfiCond507) Function ZDP_BindUnbindReq
          CFI (cfiCond507) Conditional ??CrossCallReturnLabel_274, ??CrossCallReturnLabel_267
          CFI (cfiCond507) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond507) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond507) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond507) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond507) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond507) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond507) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond507) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond507) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond507) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond507) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond507) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond507) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond507) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond507) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond507) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond507) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond507) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond507) CFA_SP SP+-4
          CFI (cfiCond507) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond508 Using cfiCommon0
          CFI (cfiCond508) Function ZDP_MgmtBindRsp
          CFI (cfiCond508) Conditional ??CrossCallReturnLabel_274, ??CrossCallReturnLabel_268
          CFI (cfiCond508) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond508) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond508) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond508) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond508) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond508) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond508) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond508) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond508) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond508) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond508) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond508) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond508) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond508) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond508) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond508) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond508) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond508) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond508) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond508) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond508) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond508) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond508) CFA_SP SP+-4
          CFI (cfiCond508) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond509 Using cfiCommon0
          CFI (cfiCond509) Function ZDP_MgmtRtgRsp
          CFI (cfiCond509) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_6
          CFI (cfiCond509) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond509) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond509) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond509) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond509) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond509) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond509) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond509) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond509) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond509) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond509) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond509) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond509) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond509) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond509) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond509) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond509) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond509) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond509) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond509) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond509) CFA_SP SP+-4
          CFI (cfiCond509) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond510 Using cfiCommon0
          CFI (cfiCond510) Function ZDP_MgmtBindRsp
          CFI (cfiCond510) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_7
          CFI (cfiCond510) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond510) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond510) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond510) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond510) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond510) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond510) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond510) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond510) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond510) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond510) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond510) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond510) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond510) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond510) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond510) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond510) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond510) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond510) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond510) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond510) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond510) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond510) CFA_SP SP+-4
          CFI (cfiCond510) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond511 Using cfiCommon0
          CFI (cfiCond511) Function ZDP_MgmtRtgRsp
          CFI (cfiCond511) Conditional ??CrossCallReturnLabel_272, ??CrossCallReturnLabel_6
          CFI (cfiCond511) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond511) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond511) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond511) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond511) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond511) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond511) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond511) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond511) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond511) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond511) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond511) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond511) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond511) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond511) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond511) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond511) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond511) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond511) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond511) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond511) CFA_SP SP+-4
          CFI (cfiCond511) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond512 Using cfiCommon0
          CFI (cfiCond512) Function ZDP_MgmtBindRsp
          CFI (cfiCond512) Conditional ??CrossCallReturnLabel_272, ??CrossCallReturnLabel_7
          CFI (cfiCond512) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond512) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond512) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond512) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond512) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond512) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond512) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond512) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond512) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond512) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond512) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond512) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond512) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond512) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond512) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond512) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond512) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond512) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond512) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond512) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond512) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond512) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond512) CFA_SP SP+-4
          CFI (cfiCond512) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker513 Using cfiCommon1
          CFI (cfiPicker513) NoFunction
          CFI (cfiPicker513) Picker
        MOVX      A,@DPTR
        MOV       DPL,R2
        MOV       DPH,R3
        RET
          CFI EndBlock cfiCond502
          CFI EndBlock cfiCond503
          CFI EndBlock cfiCond504
          CFI EndBlock cfiCond505
          CFI EndBlock cfiCond506
          CFI EndBlock cfiCond507
          CFI EndBlock cfiCond508
          CFI EndBlock cfiCond509
          CFI EndBlock cfiCond510
          CFI EndBlock cfiCond511
          CFI EndBlock cfiCond512
          CFI EndBlock cfiPicker513

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine44:
          CFI Block cfiCond514 Using cfiCommon0
          CFI Function ZDP_BindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_72
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond515 Using cfiCommon0
          CFI (cfiCond515) Function ZDP_MgmtBindRsp
          CFI (cfiCond515) Conditional ??CrossCallReturnLabel_73
          CFI (cfiCond515) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond515) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond515) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond515) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond515) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond515) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond515) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond515) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond515) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond515) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond515) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond515) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond515) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond515) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond515) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond515) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond515) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond515) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond515) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond515) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond515) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond515) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond515) CFA_SP SP+-2
          CFI (cfiCond515) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker516 Using cfiCommon1
          CFI (cfiPicker516) NoFunction
          CFI (cfiPicker516) Picker
        LCALL     ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_142:
        MOVX      @DPTR,A
        MOV       A,R2
        ADD       A,#0x4
        MOV       R2,A
        RET
          CFI EndBlock cfiCond514
          CFI EndBlock cfiCond515
          CFI EndBlock cfiPicker516

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine25:
          CFI Block cfiCond517 Using cfiCommon0
          CFI Function ZDP_MgmtNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_29
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond518 Using cfiCommon0
          CFI (cfiCond518) Function ZDP_MgmtBindRsp
          CFI (cfiCond518) Conditional ??CrossCallReturnLabel_30
          CFI (cfiCond518) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond518) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond518) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond518) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond518) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond518) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond518) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond518) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond518) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond518) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond518) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond518) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond518) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond518) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond518) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond518) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond518) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond518) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond518) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond518) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond518) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond518) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond518) CFA_SP SP+-2
          CFI (cfiCond518) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker519 Using cfiCommon1
          CFI (cfiPicker519) NoFunction
          CFI (cfiPicker519) Picker
        MOV       A,R1
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
        MOV       ?V12,R2
        MOV       ?V13,R3
        MOV       ?V10,R4
        MOV       ?V5,R5
        MOV       A,#0x18
        RET
          CFI EndBlock cfiCond517
          CFI EndBlock cfiCond518
          CFI EndBlock cfiPicker519

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine21:
          CFI Block cfiCond520 Using cfiCommon0
          CFI Function ZDP_ParentAnnce
          CFI Conditional ??CrossCallReturnLabel_25
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond521 Using cfiCommon0
          CFI (cfiCond521) Function ZDP_ParentAnnce
          CFI (cfiCond521) Conditional ??CrossCallReturnLabel_26
          CFI (cfiCond521) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond521) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond521) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond521) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond521) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond521) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond521) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond521) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond521) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond521) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond521) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond521) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond521) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond521) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond521) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond521) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond521) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond521) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond521) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond521) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond521) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond521) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond521) CFA_SP SP+-2
          CFI (cfiCond521) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond522 Using cfiCommon0
          CFI (cfiCond522) Function ZDP_MgmtBindRsp
          CFI (cfiCond522) Conditional ??CrossCallReturnLabel_27
          CFI (cfiCond522) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond522) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond522) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond522) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond522) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond522) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond522) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond522) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond522) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond522) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond522) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond522) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond522) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond522) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond522) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond522) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond522) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond522) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond522) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond522) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond522) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond522) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond522) CFA_SP SP+-2
          CFI (cfiCond522) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond523 Using cfiCommon0
          CFI (cfiCond523) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond523) Conditional ??CrossCallReturnLabel_28
          CFI (cfiCond523) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond523) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond523) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond523) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond523) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond523) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond523) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond523) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond523) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond523) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond523) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond523) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond523) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond523) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond523) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond523) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond523) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond523) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond523) CFA_SP SP+-2
          CFI (cfiCond523) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker524 Using cfiCommon1
          CFI (cfiPicker524) NoFunction
          CFI (cfiPicker524) Picker
        MOVX      @DPTR,A
        INC       DPTR
        MOV       R2,DPL
        MOV       R3,DPH
        RET
          CFI EndBlock cfiCond520
          CFI EndBlock cfiCond521
          CFI EndBlock cfiCond522
          CFI EndBlock cfiCond523
          CFI EndBlock cfiPicker524

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine13:
          CFI Block cfiCond525 Using cfiCommon0
          CFI Function ZDP_MgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_6
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond526 Using cfiCommon0
          CFI (cfiCond526) Function ZDP_MgmtBindRsp
          CFI (cfiCond526) Conditional ??CrossCallReturnLabel_7
          CFI (cfiCond526) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond526) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond526) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond526) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond526) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond526) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond526) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond526) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond526) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond526) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond526) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond526) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond526) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond526) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond526) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond526) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond526) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond526) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond526) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond526) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond526) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond526) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond526) CFA_SP SP+-2
          CFI (cfiCond526) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker527 Using cfiCommon1
          CFI (cfiPicker527) NoFunction
          CFI (cfiPicker527) Picker
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_271:
        MOVX      @DPTR,A
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        LCALL     ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_272:
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,R2
        ADD       A,#0x2
        RET
          CFI EndBlock cfiCond525
          CFI EndBlock cfiCond526
          CFI EndBlock cfiPicker527
// 1843 
// 1844 /*********************************************************************
// 1845  * @fn          ZDP_MgmtNwkUpdateNotify
// 1846  *
// 1847  * @brief       This builds and send a Mgmt_NWK_Update_notify message. This
// 1848  *              function sends a unicast message.
// 1849  *
// 1850  * @param       dstAddr - destination address of the message
// 1851  * @param       status - message status (ZDP_SUCCESS or other)
// 1852  * @param       scannedChannels - List of channels scanned by the request
// 1853  * @param       totalTransmissions - Total transmissions
// 1854  * @param       transmissionFailures - Sum of transmission failures
// 1855  * @param       listCount - Number of records contained in the energyValues list
// 1856  * @param       energyValues - List of descriptors, one for each of ListCount,
// 1857  *                             of the enegry detect descriptors
// 1858  * @param       txOptions - Transmit options
// 1859  * @param       securityEnable - Security options
// 1860  *
// 1861  * @return      afStatus_t
// 1862  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1863 afStatus_t ZDP_MgmtNwkUpdateNotify( uint8 TransSeq, zAddrType_t *dstAddr,
ZDP_MgmtNwkUpdateNotify:
          CFI Block cfiBlock528 Using cfiCommon0
          CFI Function ZDP_MgmtNwkUpdateNotify
        CODE
// 1864                                     uint8 status, uint32 scannedChannels,
// 1865                                     uint16 totalTransmissions, uint16 transmissionFailures,
// 1866                                     uint8 listCount, uint8 *energyValues, uint8 txOptions,
// 1867                                     uint8 securityEnable )
// 1868 {
        FUNCALL ZDP_MgmtNwkUpdateNotify, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkUpdateNotify, osal_buffer_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkUpdateNotify, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkUpdateNotify, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkUpdateNotify, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        MOV       A,#-0x12
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,R1
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
        MOV       ?V8,R2
        MOV       ?V9,R3
        MOV       ?V7,R4
        MOV       ?V0,R5
// 1869   uint8 *buf;
// 1870   uint8 *pBuf;
// 1871   uint8 len;
// 1872 
// 1873   (void)securityEnable;  // Intentionally unreferenced parameter
// 1874 
// 1875   // Status + ScannedChannels + totalTransmissions + transmissionFailures + ListCount + energyValues
// 1876   len = 1 + 4 + 2 + 2 + 1 + listCount;
        MOV       A,#0xa
        ADD       A,R5
        MOV       ?V1,A
// 1877 
// 1878   buf = osal_mem_alloc( len+1 ); // +1 for transaction ID
        ; Setup parameters for call to function osal_mem_alloc
        LCALL     ?Subroutine97 & 0xFFFF
??CrossCallReturnLabel_157:
        MOV       R6,?V2
        MOV       R7,?V3
// 1879   if ( buf == NULL )
        MOV       A,R2
        ORL       A,R7
        JNZ       ??ZDP_MgmtNwkUpdateNotify_0
// 1880   {
// 1881     return afStatus_MEM_FAIL;
        MOV       R1,#0x10
        LJMP      ??ZDP_MgmtNwkUpdateNotify_1 & 0xFFFF
// 1882   }
// 1883 
// 1884   pBuf = buf+1;
??ZDP_MgmtNwkUpdateNotify_0:
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        MOV       ?V2,DPL
        MOV       ?V3,DPH
// 1885 
// 1886   *pBuf++ = status;
        MOV       A,?V7
        LCALL     ?Subroutine21 & 0xFFFF
// 1887 
// 1888   pBuf = osal_buffer_uint32( pBuf, scannedChannels );
??CrossCallReturnLabel_28:
        ; Setup parameters for call to function osal_buffer_uint32
        MOV       A,#0x13
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?PUSH_XSTACK8_X_FOUR
          CFI CFA_XSP16 add(XSP16, 23)
        LCALL     `??osal_buffer_uint32::?relay`; Banked call to: osal_buffer_uint32
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,#0x17
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine54 & 0xFFFF
// 1889 
// 1890   *pBuf++ = LO_UINT16( totalTransmissions );
??CrossCallReturnLabel_98:
        MOVX      @DPTR,A
// 1891   *pBuf++ = HI_UINT16( totalTransmissions );
        MOV       A,R1
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,#0x19
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine54 & 0xFFFF
// 1892 
// 1893   *pBuf++ = LO_UINT16( transmissionFailures );
??CrossCallReturnLabel_99:
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine30 & 0xFFFF
// 1894   *pBuf++ = HI_UINT16( transmissionFailures );
??CrossCallReturnLabel_39:
        LCALL     ?Subroutine15 & 0xFFFF
// 1895 
// 1896   *pBuf++ = listCount;
??CrossCallReturnLabel_11:
        MOV       A,?V0
        MOVX      @DPTR,A
// 1897 
// 1898   if ( listCount > 0 )
        JZ        ??ZDP_MgmtNwkUpdateNotify_2
// 1899     osal_memcpy( pBuf, energyValues, listCount );
        ; Setup parameters for call to function osal_memcpy
        MOV       A,#0x1b
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_83:
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       R4,?V0
        MOV       R5,#0x0
        MOV       A,R2
        ADD       A,#0x5
        MOV       R2,A
        JNC       ??ZDP_MgmtNwkUpdateNotify_3
        INC       R3
??ZDP_MgmtNwkUpdateNotify_3:
        LCALL     ??Subroutine119_0 & 0xFFFF
??CrossCallReturnLabel_207:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
// 1900 
// 1901   FillAndSendBufferTxOptions( &TransSeq, dstAddr, Mgmt_NWK_Update_notify, len, buf, txOptions );
??ZDP_MgmtNwkUpdateNotify_2:
        MOV       DPTR,#ZDP_TmpBuf
        MOV       A,?V2
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V3
        MOVX      @DPTR,A
        MOV       A,#0x1d
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       DPTR,#ZDP_TxOptions
        MOVX      @DPTR,A
        ; Setup parameters for call to function fillAndSend
        MOV       ?V2,#0x38
        MOV       ?V3,#-0x80
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       R1,?V1
        MOV       R4,?V8
        MOV       R5,?V9
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP101_8
        LCALL     ??Subroutine128_0 & 0xFFFF
??CrossCallReturnLabel_266:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,R1
        MOV       ?V1,A
        ; Setup parameters for call to function osal_mem_free
        LCALL     ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_128:
        MOV       DPTR,#ZDP_TxOptions
        CLR       A
        MOVX      @DPTR,A
        MOV       R1,?V1
??ZDP_MgmtNwkUpdateNotify_1:
        LJMP      ?Subroutine6 & 0xFFFF
// 1902 }
          CFI EndBlock cfiBlock528

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine97:
          CFI Block cfiCond529 Using cfiCommon0
          CFI Function ZDP_MgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_156, ??CrossCallReturnLabel_119
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond530 Using cfiCommon0
          CFI (cfiCond530) Function ZDP_MgmtBindRsp
          CFI (cfiCond530) Conditional ??CrossCallReturnLabel_156, ??CrossCallReturnLabel_120
          CFI (cfiCond530) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond530) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond530) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond530) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond530) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond530) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond530) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond530) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond530) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond530) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond530) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond530) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond530) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond530) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond530) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond530) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond530) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond530) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond530) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond530) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond530) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond530) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond530) CFA_SP SP+-4
          CFI (cfiCond530) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond531 Using cfiCommon0
          CFI (cfiCond531) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond531) Conditional ??CrossCallReturnLabel_157
          CFI (cfiCond531) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond531) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond531) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond531) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond531) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond531) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond531) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond531) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond531) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond531) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond531) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond531) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond531) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond531) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond531) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond531) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond531) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond531) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond531) CFA_SP SP+-2
          CFI (cfiCond531) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker532 Using cfiCommon1
          CFI (cfiPicker532) NoFunction
          CFI (cfiPicker532) Picker
        LCALL     ?Subroutine104 & 0xFFFF
??CrossCallReturnLabel_167:
        MOV       ?V2,R2
        MOV       ?V3,R3
        RET
          CFI EndBlock cfiCond529
          CFI EndBlock cfiCond530
          CFI EndBlock cfiCond531
          CFI EndBlock cfiPicker532

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine104:
          CFI Block cfiCond533 Using cfiCommon0
          CFI Function ZDP_MgmtNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_166, ??CrossCallReturnLabel_121
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond534 Using cfiCommon0
          CFI (cfiCond534) Function ZDP_MgmtRtgRsp
          CFI (cfiCond534) Conditional ??CrossCallReturnLabel_166, ??CrossCallReturnLabel_122
          CFI (cfiCond534) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond534) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond534) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond534) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond534) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond534) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond534) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond534) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond534) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond534) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond534) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond534) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond534) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond534) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond534) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond534) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond534) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond534) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond534) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond534) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond534) CFA_SP SP+-4
          CFI (cfiCond534) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond535 Using cfiCommon0
          CFI (cfiCond535) Function ZDP_MgmtLqiRsp
          CFI (cfiCond535) Conditional ??CrossCallReturnLabel_167, ??CrossCallReturnLabel_156, ??CrossCallReturnLabel_119
          CFI (cfiCond535) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond535) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond535) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond535) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond535) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond535) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond535) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond535) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond535) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond535) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond535) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond535) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond535) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond535) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond535) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond535) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond535) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond535) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond535) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond535) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond535) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond535) CFA_SP SP+-6
          CFI (cfiCond535) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond536 Using cfiCommon0
          CFI (cfiCond536) Function ZDP_MgmtBindRsp
          CFI (cfiCond536) Conditional ??CrossCallReturnLabel_167, ??CrossCallReturnLabel_156, ??CrossCallReturnLabel_120
          CFI (cfiCond536) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond536) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond536) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond536) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond536) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond536) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond536) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond536) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond536) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond536) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond536) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond536) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond536) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond536) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond536) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond536) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond536) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond536) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond536) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond536) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond536) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond536) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond536) CFA_SP SP+-6
          CFI (cfiCond536) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond537 Using cfiCommon0
          CFI (cfiCond537) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond537) Conditional ??CrossCallReturnLabel_167, ??CrossCallReturnLabel_157
          CFI (cfiCond537) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond537) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond537) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond537) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond537) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond537) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond537) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond537) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond537) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond537) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond537) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond537) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond537) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond537) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond537) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond537) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond537) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond537) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond537) CFA_SP SP+-4
          CFI (cfiCond537) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker538 Using cfiCommon1
          CFI (cfiPicker538) NoFunction
          CFI (cfiPicker538) Picker
        ADD       A,#0x1
        MOV       R2,A
        CLR       A
        ADDC      A,#0x0
        MOV       R3,A
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        RET
          CFI EndBlock cfiCond533
          CFI EndBlock cfiCond534
          CFI EndBlock cfiCond535
          CFI EndBlock cfiCond536
          CFI EndBlock cfiCond537
          CFI EndBlock cfiPicker538

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine78:
          CFI Block cfiCond539 Using cfiCommon0
          CFI Function ZDP_MgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_127
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond540 Using cfiCommon0
          CFI (cfiCond540) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond540) Conditional ??CrossCallReturnLabel_128
          CFI (cfiCond540) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond540) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond540) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond540) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond540) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond540) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond540) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond540) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond540) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond540) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond540) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond540) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond540) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond540) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond540) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond540) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond540) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond540) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond540) CFA_SP SP+-2
          CFI (cfiCond540) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker541 Using cfiCommon1
          CFI (cfiPicker541) NoFunction
          CFI (cfiPicker541) Picker
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        LCALL     ?Subroutine100 & 0xFFFF
??CrossCallReturnLabel_241:
        RET
          CFI EndBlock cfiCond539
          CFI EndBlock cfiCond540
          CFI EndBlock cfiPicker541

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine100:
          CFI Block cfiCond542 Using cfiCommon0
          CFI Function ZDP_MgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_237
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond543 Using cfiCommon0
          CFI (cfiCond543) Function ZDP_MgmtBindRsp
          CFI (cfiCond543) Conditional ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_238
          CFI (cfiCond543) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond543) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond543) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond543) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond543) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond543) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond543) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond543) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond543) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond543) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond543) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond543) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond543) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond543) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond543) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond543) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond543) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond543) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond543) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond543) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond543) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond543) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond543) CFA_SP SP+-4
          CFI (cfiCond543) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond544 Using cfiCommon0
          CFI (cfiCond544) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond544) Conditional ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_239
          CFI (cfiCond544) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond544) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond544) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond544) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond544) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond544) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond544) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond544) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond544) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond544) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond544) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond544) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond544) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond544) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond544) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond544) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond544) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond544) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond544) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond544) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond544) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond544) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond544) CFA_SP SP+-4
          CFI (cfiCond544) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond545 Using cfiCommon0
          CFI (cfiCond545) Function ZDP_MgmtRtgRsp
          CFI (cfiCond545) Conditional ??CrossCallReturnLabel_241, ??CrossCallReturnLabel_127
          CFI (cfiCond545) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond545) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond545) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond545) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond545) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond545) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond545) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond545) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond545) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond545) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond545) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond545) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond545) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond545) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond545) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond545) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond545) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond545) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond545) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond545) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond545) CFA_SP SP+-4
          CFI (cfiCond545) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond546 Using cfiCommon0
          CFI (cfiCond546) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond546) Conditional ??CrossCallReturnLabel_241, ??CrossCallReturnLabel_128
          CFI (cfiCond546) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond546) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond546) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond546) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond546) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond546) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond546) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond546) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond546) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond546) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond546) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond546) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond546) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond546) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond546) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond546) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond546) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond546) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond546) CFA_SP SP+-4
          CFI (cfiCond546) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker547 Using cfiCommon1
          CFI (cfiPicker547) NoFunction
          CFI (cfiPicker547) Picker
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        MOV       DPTR,#ZDP_TmpBuf
        MOV       A,#(ZDP_Buf + 1) & 0xff
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,#((ZDP_Buf + 1) >> 8) & 0xff
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond542
          CFI EndBlock cfiCond543
          CFI EndBlock cfiCond544
          CFI EndBlock cfiCond545
          CFI EndBlock cfiCond546
          CFI EndBlock cfiPicker547

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine54:
          CFI Block cfiCond548 Using cfiCommon0
          CFI Function ZDP_MgmtNwkUpdateNotify
          CFI Conditional ??CrossCallReturnLabel_98
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond549 Using cfiCommon0
          CFI (cfiCond549) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond549) Conditional ??CrossCallReturnLabel_99
          CFI (cfiCond549) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond549) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond549) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond549) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond549) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond549) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond549) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond549) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond549) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond549) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond549) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond549) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond549) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond549) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond549) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond549) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond549) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond549) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond549) CFA_SP SP+-2
          CFI (cfiCond549) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker550 Using cfiCommon1
          CFI (cfiPicker550) NoFunction
          CFI (cfiPicker550) Picker
        LCALL     ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_141:
        RET
          CFI EndBlock cfiCond548
          CFI EndBlock cfiCond549
          CFI EndBlock cfiPicker550

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine83:
          CFI Block cfiCond551 Using cfiCommon0
          CFI Function ZDP_EPRsp
          CFI Conditional ??CrossCallReturnLabel_140, ??CrossCallReturnLabel_8
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond552 Using cfiCommon0
          CFI (cfiCond552) Function ZDP_EndDeviceBindReq
          CFI (cfiCond552) Conditional ??CrossCallReturnLabel_140, ??CrossCallReturnLabel_9
          CFI (cfiCond552) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond552) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond552) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond552) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond552) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond552) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond552) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond552) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond552) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond552) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond552) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond552) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond552) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond552) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond552) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond552) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond552) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond552) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond552) CFA_SP SP+-4
          CFI (cfiCond552) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond553 Using cfiCommon0
          CFI (cfiCond553) Function ZDP_BindUnbindReq
          CFI (cfiCond553) Conditional ??CrossCallReturnLabel_140, ??CrossCallReturnLabel_10
          CFI (cfiCond553) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond553) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond553) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond553) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond553) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond553) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond553) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond553) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond553) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond553) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond553) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond553) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond553) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond553) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond553) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond553) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond553) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond553) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond553) CFA_SP SP+-4
          CFI (cfiCond553) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond554 Using cfiCommon0
          CFI (cfiCond554) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond554) Conditional ??CrossCallReturnLabel_141, ??CrossCallReturnLabel_98
          CFI (cfiCond554) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond554) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond554) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond554) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond554) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond554) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond554) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond554) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond554) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond554) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond554) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond554) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond554) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond554) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond554) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond554) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond554) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond554) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond554) CFA_SP SP+-4
          CFI (cfiCond554) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond555 Using cfiCommon0
          CFI (cfiCond555) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond555) Conditional ??CrossCallReturnLabel_141, ??CrossCallReturnLabel_99
          CFI (cfiCond555) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond555) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond555) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond555) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond555) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond555) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond555) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond555) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond555) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond555) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond555) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond555) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond555) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond555) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond555) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond555) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond555) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond555) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond555) CFA_SP SP+-4
          CFI (cfiCond555) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker556 Using cfiCommon1
          CFI (cfiPicker556) NoFunction
          CFI (cfiPicker556) Picker
        MOVX      A,@DPTR
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       A,R0
        MOV       DPL,R2
        MOV       DPH,R3
        RET
          CFI EndBlock cfiCond551
          CFI EndBlock cfiCond552
          CFI EndBlock cfiCond553
          CFI EndBlock cfiCond554
          CFI EndBlock cfiCond555
          CFI EndBlock cfiPicker556

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine48:
          CFI Block cfiCond557 Using cfiCommon0
          CFI Function ZDP_EPRsp
          CFI Conditional ??CrossCallReturnLabel_82
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond558 Using cfiCommon0
          CFI (cfiCond558) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond558) Conditional ??CrossCallReturnLabel_83
          CFI (cfiCond558) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond558) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond558) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond558) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond558) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond558) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond558) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond558) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond558) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond558) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond558) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond558) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond558) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond558) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond558) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond558) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond558) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond558) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond558) CFA_SP SP+-2
          CFI (cfiCond558) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker559 Using cfiCommon1
          CFI (cfiPicker559) NoFunction
          CFI (cfiPicker559) Picker
        MOVX      A,@DPTR
        MOV       ?V4,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V5,A
        MOV       ?V6,#0x0
        MOV       R0,#?V4
        RET
          CFI EndBlock cfiCond557
          CFI EndBlock cfiCond558
          CFI EndBlock cfiPicker559

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine30:
          CFI Block cfiCond560 Using cfiCommon0
          CFI Function ZDP_MgmtNwkUpdateReq
          CFI Conditional ??CrossCallReturnLabel_38
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond561 Using cfiCommon0
          CFI (cfiCond561) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond561) Conditional ??CrossCallReturnLabel_39
          CFI (cfiCond561) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond561) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond561) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond561) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond561) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond561) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond561) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond561) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond561) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond561) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond561) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond561) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond561) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond561) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond561) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond561) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond561) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond561) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond561) CFA_SP SP+-2
          CFI (cfiCond561) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker562 Using cfiCommon1
          CFI (cfiPicker562) NoFunction
          CFI (cfiPicker562) Picker
        LCALL     ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_149:
        INC       DPTR
        RET
          CFI EndBlock cfiCond560
          CFI EndBlock cfiCond561
          CFI EndBlock cfiPicker562

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine93:
          CFI Block cfiCond563 Using cfiCommon0
          CFI Function ZDP_EPRsp
          CFI Conditional ??CrossCallReturnLabel_148, ??CrossCallReturnLabel_8
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond564 Using cfiCommon0
          CFI (cfiCond564) Function ZDP_EndDeviceBindReq
          CFI (cfiCond564) Conditional ??CrossCallReturnLabel_148, ??CrossCallReturnLabel_9
          CFI (cfiCond564) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond564) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond564) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond564) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond564) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond564) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond564) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond564) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond564) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond564) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond564) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond564) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond564) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond564) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond564) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond564) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond564) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond564) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond564) CFA_SP SP+-4
          CFI (cfiCond564) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond565 Using cfiCommon0
          CFI (cfiCond565) Function ZDP_BindUnbindReq
          CFI (cfiCond565) Conditional ??CrossCallReturnLabel_148, ??CrossCallReturnLabel_10
          CFI (cfiCond565) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond565) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond565) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond565) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond565) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond565) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond565) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond565) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond565) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond565) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond565) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond565) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond565) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond565) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond565) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond565) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond565) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond565) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond565) CFA_SP SP+-4
          CFI (cfiCond565) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond566 Using cfiCommon0
          CFI (cfiCond566) Function ZDP_MgmtNwkUpdateReq
          CFI (cfiCond566) Conditional ??CrossCallReturnLabel_149, ??CrossCallReturnLabel_38
          CFI (cfiCond566) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond566) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond566) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond566) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond566) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond566) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond566) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond566) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond566) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond566) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond566) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond566) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond566) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond566) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond566) CFA_SP SP+-4
          CFI (cfiCond566) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond567 Using cfiCommon0
          CFI (cfiCond567) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond567) Conditional ??CrossCallReturnLabel_149, ??CrossCallReturnLabel_39
          CFI (cfiCond567) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond567) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond567) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond567) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond567) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond567) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond567) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond567) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond567) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond567) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond567) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond567) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond567) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond567) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond567) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond567) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond567) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond567) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond567) CFA_SP SP+-4
          CFI (cfiCond567) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker568 Using cfiCommon1
          CFI (cfiPicker568) NoFunction
          CFI (cfiPicker568) Picker
        MOVX      @DPTR,A
        MOV       A,R1
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond563
          CFI EndBlock cfiCond564
          CFI EndBlock cfiCond565
          CFI EndBlock cfiCond566
          CFI EndBlock cfiCond567
          CFI EndBlock cfiPicker568
// 1903 
// 1904 /*********************************************************************
// 1905  * Functions to register for ZDO Over-the-air messages
// 1906  */
// 1907 
// 1908 /*********************************************************************
// 1909  * @fn          ZDO_RegisterForZDOMsg
// 1910  *
// 1911  * @brief       Call this function to register of an incoming over
// 1912  *              the air ZDO message - probably a response message
// 1913  *              but requests can also be received.
// 1914  *              Messages are delivered to the task with ZDO_CB_MSG
// 1915  *              as the message ID.
// 1916  *
// 1917  * @param       taskID - Where you would like the message delivered
// 1918  * @param       clusterID - What message?
// 1919  *                          ZDO_ALL_MSGS_CLUSTERID - all responses
// 1920  *                          and device announce
// 1921  *
// 1922  * @return      ZSuccess - successful, ZMemError if not
// 1923  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1924 ZStatus_t ZDO_RegisterForZDOMsg( uint8 taskID, uint16 clusterID )
ZDO_RegisterForZDOMsg:
          CFI Block cfiBlock569 Using cfiCommon0
          CFI Function ZDO_RegisterForZDOMsg
        CODE
// 1925 {
        FUNCALL ZDO_RegisterForZDOMsg, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V4
        REQUIRE ?V5
        MOV       A,#-0xe
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV       ?V2,R1
        MOV       ?V0,R2
        MOV       ?V1,R3
// 1926   ZDO_MsgCB_t *pList;
// 1927   ZDO_MsgCB_t *pLast;
// 1928   ZDO_MsgCB_t *pNew;
// 1929 
// 1930   // Look for duplicate
// 1931   pList = pLast = zdoMsgCBs;
        MOV       DPTR,#zdoMsgCBs
        LCALL     ?Subroutine52 & 0xFFFF
??CrossCallReturnLabel_95:
        MOV       A,R6
        MOV       R0,A
        MOV       A,R7
        SJMP      ??CrossCallReturnLabel_299
// 1932   while ( pList )
// 1933   {
// 1934     if ( pList->taskID == taskID && pList->clusterID == clusterID )
??ZDO_RegisterForZDOMsg_0:
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,?V2
        JNZ       ??ZDO_RegisterForZDOMsg_1
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R2
        JNZ       ??ZDO_RegisterForZDOMsg_2
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R3
??ZDO_RegisterForZDOMsg_2:
        JZ        ??CrossCallReturnLabel_42
// 1935       return ( ZSuccess );
// 1936     pLast = pList;
??ZDO_RegisterForZDOMsg_1:
        MOV       A,R0
        MOV       R6,A
        MOV       A,R1
        MOV       R7,A
// 1937     pList = (ZDO_MsgCB_t *)pList->next;
        MOV       DPL,R0
        MOV       DPH,R1
        LCALL     ??Subroutine133_0 & 0xFFFF
// 1938   }
??CrossCallReturnLabel_299:
        MOV       R1,A
        MOV       A,R0
        ORL       A,R1
        JNZ       ??ZDO_RegisterForZDOMsg_0
// 1939 
// 1940   // Add to the list
// 1941   pNew = (ZDO_MsgCB_t *)osal_mem_alloc( sizeof ( ZDO_MsgCB_t ) );
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,#0x5
        MOV       R3,#0x0
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V4,R2
        MOV       ?V5,R3
        MOV       R0,?V4
        MOV       R1,?V5
// 1942   if ( pNew )
        MOV       A,R2
        ORL       A,R1
        JZ        ??ZDO_RegisterForZDOMsg_3
// 1943   {
// 1944     pNew->taskID = taskID;
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        MOV       A,?V2
        LCALL     ?Subroutine38 & 0xFFFF
// 1945     pNew->clusterID = clusterID;
??CrossCallReturnLabel_59:
        MOV       A,?V0
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V1
        MOVX      @DPTR,A
// 1946     pNew->next = NULL;
        MOV       DPL,R2
        MOV       DPH,R3
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
// 1947     if ( zdoMsgCBs )
        MOV       DPTR,#zdoMsgCBs
        LCALL     ??Subroutine134_0 & 0xFFFF
??CrossCallReturnLabel_304:
        MOV       A,R2
        ORL       A,R3
        JZ        ??ZDO_RegisterForZDOMsg_4
// 1948     {
// 1949       pLast->next = pNew;
        MOV       DPL,R6
        MOV       DPH,R7
        SJMP      ??ZDO_RegisterForZDOMsg_5
// 1950     }
// 1951     else
// 1952       zdoMsgCBs = pNew;
??ZDO_RegisterForZDOMsg_4:
        MOV       DPTR,#zdoMsgCBs
??ZDO_RegisterForZDOMsg_5:
        LCALL     ?Subroutine31 & 0xFFFF
// 1953     return ( ZSuccess );
??CrossCallReturnLabel_42:
        MOV       R1,#0x0
        SJMP      ??ZDO_RegisterForZDOMsg_6
// 1954   }
// 1955   else
// 1956     return ( ZMemError );
??ZDO_RegisterForZDOMsg_3:
        MOV       R1,#0x10
??ZDO_RegisterForZDOMsg_6:
        LJMP      ??Subroutine108_0 & 0xFFFF
// 1957 }
          CFI EndBlock cfiBlock569

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine38:
          CFI Block cfiCond570 Using cfiCommon0
          CFI Function ZDP_MgmtBindRsp
          CFI Conditional ??CrossCallReturnLabel_58
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond571 Using cfiCommon0
          CFI (cfiCond571) Function ZDO_RegisterForZDOMsg
          CFI (cfiCond571) Conditional ??CrossCallReturnLabel_59
          CFI (cfiCond571) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond571) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond571) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond571) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond571) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond571) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond571) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond571) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond571) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond571) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond571) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond571) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond571) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond571) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond571) CFA_SP SP+-2
          CFI (cfiCond571) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker572 Using cfiCommon1
          CFI (cfiPicker572) NoFunction
          CFI (cfiPicker572) Picker
        LCALL     ?Subroutine95 & 0xFFFF
??CrossCallReturnLabel_152:
        RET
          CFI EndBlock cfiCond570
          CFI EndBlock cfiCond571
          CFI EndBlock cfiPicker572

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine95:
          CFI Block cfiCond573 Using cfiCommon0
          CFI Function ZDP_MgmtBindRsp
          CFI Conditional ??CrossCallReturnLabel_152, ??CrossCallReturnLabel_58
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond574 Using cfiCommon0
          CFI (cfiCond574) Function ZDO_RegisterForZDOMsg
          CFI (cfiCond574) Conditional ??CrossCallReturnLabel_152, ??CrossCallReturnLabel_59
          CFI (cfiCond574) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond574) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond574) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond574) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond574) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond574) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond574) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond574) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond574) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond574) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond574) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond574) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond574) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond574) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond574) CFA_SP SP+-4
          CFI (cfiCond574) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond575 Using cfiCommon0
          CFI (cfiCond575) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond575) Conditional ??CrossCallReturnLabel_153, ??CrossCallReturnLabel_11
          CFI (cfiCond575) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond575) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond575) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond575) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond575) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond575) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond575) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond575) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond575) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond575) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond575) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond575) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond575) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond575) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond575) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond575) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond575) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond575) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond575) CFA_SP SP+-4
          CFI (cfiCond575) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond576 Using cfiCommon0
          CFI (cfiCond576) Function ZDP_IncomingData
          CFI (cfiCond576) Conditional ??CrossCallReturnLabel_153, ??CrossCallReturnLabel_12
          CFI (cfiCond576) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond576) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond576) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond576) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond576) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond576) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond576) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond576) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond576) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond576) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond576) CFA_SP SP+-4
          CFI (cfiCond576) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond577 Using cfiCommon0
          CFI (cfiCond577) Function ZDP_IncomingData
          CFI (cfiCond577) Conditional ??CrossCallReturnLabel_153, ??CrossCallReturnLabel_13
          CFI (cfiCond577) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond577) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond577) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond577) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond577) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond577) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond577) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond577) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond577) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond577) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond577) CFA_SP SP+-4
          CFI (cfiCond577) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker578 Using cfiCommon1
          CFI (cfiPicker578) NoFunction
          CFI (cfiPicker578) Picker
        MOVX      @DPTR,A
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond573
          CFI EndBlock cfiCond574
          CFI EndBlock cfiCond575
          CFI EndBlock cfiCond576
          CFI EndBlock cfiCond577
          CFI EndBlock cfiPicker578

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine31:
          CFI Block cfiCond579 Using cfiCommon0
          CFI Function zdpProcessAddrReq
          CFI Conditional ??CrossCallReturnLabel_40
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 46)
          CFI Block cfiCond580 Using cfiCommon0
          CFI (cfiCond580) Function ZDP_MgmtRtgRsp
          CFI (cfiCond580) Conditional ??CrossCallReturnLabel_41
          CFI (cfiCond580) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond580) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond580) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond580) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond580) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond580) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond580) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond580) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond580) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond580) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond580) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond580) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond580) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond580) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond580) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond580) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond580) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond580) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond580) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond580) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond580) CFA_SP SP+-2
          CFI (cfiCond580) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond581 Using cfiCommon0
          CFI (cfiCond581) Function ZDO_RegisterForZDOMsg
          CFI (cfiCond581) Conditional ??CrossCallReturnLabel_42
          CFI (cfiCond581) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond581) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond581) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond581) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond581) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond581) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond581) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond581) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond581) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond581) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond581) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond581) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond581) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond581) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond581) CFA_SP SP+-2
          CFI (cfiCond581) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond582 Using cfiCommon0
          CFI (cfiCond582) Function ZDP_IncomingData
          CFI (cfiCond582) Conditional ??CrossCallReturnLabel_43
          CFI (cfiCond582) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond582) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond582) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond582) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond582) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond582) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond582) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond582) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond582) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond582) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond582) CFA_SP SP+-2
          CFI (cfiCond582) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond583 Using cfiCommon0
          CFI (cfiCond583) Function ZDP_IncomingData
          CFI (cfiCond583) Conditional ??CrossCallReturnLabel_44
          CFI (cfiCond583) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond583) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond583) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond583) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond583) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond583) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond583) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond583) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond583) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond583) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond583) CFA_SP SP+-2
          CFI (cfiCond583) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond584 Using cfiCommon0
          CFI (cfiCond584) Function ZDP_IncomingData
          CFI (cfiCond584) Conditional ??CrossCallReturnLabel_45
          CFI (cfiCond584) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond584) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond584) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond584) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond584) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond584) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond584) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond584) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond584) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond584) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond584) CFA_SP SP+-2
          CFI (cfiCond584) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond585 Using cfiCommon0
          CFI (cfiCond585) Function ZDP_IncomingData
          CFI (cfiCond585) Conditional ??CrossCallReturnLabel_46
          CFI (cfiCond585) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond585) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond585) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond585) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond585) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond585) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond585) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond585) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond585) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond585) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond585) CFA_SP SP+-2
          CFI (cfiCond585) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker586 Using cfiCommon1
          CFI (cfiPicker586) NoFunction
          CFI (cfiPicker586) Picker
        MOV       A,R0
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond579
          CFI EndBlock cfiCond580
          CFI EndBlock cfiCond581
          CFI EndBlock cfiCond582
          CFI EndBlock cfiCond583
          CFI EndBlock cfiCond584
          CFI EndBlock cfiCond585
          CFI EndBlock cfiPicker586
// 1958 
// 1959 /*********************************************************************
// 1960  * @fn          ZDO_RemoveRegisteredCB
// 1961  *
// 1962  * @brief       Call this function if you don't want to receive the
// 1963  *              incoming message.
// 1964  *
// 1965  * @param       taskID - Where the messages are being delivered.
// 1966  * @param       clusterID - What message?
// 1967  *
// 1968  * @return      ZSuccess - successful, ZFailure if not found
// 1969  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1970 ZStatus_t ZDO_RemoveRegisteredCB( uint8 taskID, uint16 clusterID )
ZDO_RemoveRegisteredCB:
          CFI Block cfiBlock587 Using cfiCommon0
          CFI Function ZDO_RemoveRegisteredCB
        CODE
// 1971 {
        FUNCALL ZDO_RemoveRegisteredCB, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV       A,#-0x9
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV       A,R1
        MOV       R6,A
// 1972   ZDO_MsgCB_t *pList;
// 1973   ZDO_MsgCB_t *pLast = NULL;
        MOV       R4,#0x0
        MOV       R5,#0x0
// 1974 
// 1975   pList = zdoMsgCBs;
        MOV       DPTR,#zdoMsgCBs
        SJMP      ??ZDO_RemoveRegisteredCB_0
// 1976   while ( pList )
// 1977   {
// 1978     if ( pList->taskID == taskID && pList->clusterID == clusterID )
// 1979     {
// 1980       if ( pLast )
// 1981       {
// 1982         // remove this one from the linked list
// 1983         pLast->next = pList->next;
// 1984       }
// 1985       else if ( pList->next )
// 1986       {
// 1987         // remove the first one from the linked list
// 1988         zdoMsgCBs = pList->next;
// 1989       }
// 1990       else
// 1991       {
// 1992         // remove the only item from the list
// 1993         zdoMsgCBs = (ZDO_MsgCB_t *)NULL;
// 1994       }
// 1995       osal_mem_free( pList );
// 1996       return ( ZSuccess );
// 1997     }
// 1998     pLast = pList;
??ZDO_RemoveRegisteredCB_1:
        MOV       A,R0
        MOV       R4,A
        MOV       A,R1
        MOV       R5,A
// 1999     pList = pList->next;
        MOV       DPL,R0
        MOV       DPH,R1
??ZDO_RemoveRegisteredCB_0:
        LCALL     ??Subroutine111_0 & 0xFFFF
??CrossCallReturnLabel_168:
        JZ        ??ZDO_RemoveRegisteredCB_2
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R6
        JNZ       ??ZDO_RemoveRegisteredCB_1
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R2
        JNZ       ??ZDO_RemoveRegisteredCB_3
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R3
??ZDO_RemoveRegisteredCB_3:
        JNZ       ??ZDO_RemoveRegisteredCB_1
        MOV       DPL,R0
        MOV       DPH,R1
        LCALL     ??Subroutine134_0 & 0xFFFF
??CrossCallReturnLabel_305:
        MOV       A,R4
        ORL       A,R5
        JZ        ??ZDO_RemoveRegisteredCB_4
        MOV       DPL,R4
        MOV       DPH,R5
        SJMP      ??ZDO_RemoveRegisteredCB_5
??ZDO_RemoveRegisteredCB_4:
        MOV       A,R2
        ORL       A,R3
        MOV       DPTR,#zdoMsgCBs
        JZ        ??ZDO_RemoveRegisteredCB_6
??ZDO_RemoveRegisteredCB_5:
        MOV       A,R2
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R3
        SJMP      ??ZDO_RemoveRegisteredCB_7
??ZDO_RemoveRegisteredCB_6:
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
??ZDO_RemoveRegisteredCB_7:
        MOVX      @DPTR,A
        ; Setup parameters for call to function osal_mem_free
        MOV       A,R0
        MOV       R2,A
        MOV       A,R1
        MOV       R3,A
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        MOV       R1,#0x0
        SJMP      ??ZDO_RemoveRegisteredCB_8
// 2000   }
// 2001 
// 2002   return ( ZFailure );
??ZDO_RemoveRegisteredCB_2:
        MOV       R1,#0x1
??ZDO_RemoveRegisteredCB_8:
        LJMP      ?Subroutine7 & 0xFFFF
// 2003 }
          CFI EndBlock cfiBlock587
// 2004 
// 2005 /*********************************************************************
// 2006  * @fn          ZDO_SendMsgCBs
// 2007  *
// 2008  * @brief       This function sends messages to registered tasks.
// 2009  *              Local to ZDO and shouldn't be called outside of ZDO.
// 2010  *
// 2011  * @param       inMsg - incoming message
// 2012  *
// 2013  * @return      TRUE if sent to at least 1 task, FALSE if not
// 2014  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2015 uint8 ZDO_SendMsgCBs( zdoIncomingMsg_t *inMsg )
ZDO_SendMsgCBs:
          CFI Block cfiBlock588 Using cfiCommon0
          CFI Function ZDO_SendMsgCBs
        CODE
// 2016 {
        FUNCALL ZDO_SendMsgCBs, osal_msg_allocate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_SendMsgCBs, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_SendMsgCBs, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_SendMsgCBs, osal_msg_send
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        MOV       A,#-0x12
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 0
        MOV       ?V2,R2
        MOV       ?V3,R3
// 2017   uint8 ret = FALSE;
        MOV       ?V4,#0x0
// 2018   ZDO_MsgCB_t *pList = zdoMsgCBs;
        MOV       DPTR,#zdoMsgCBs
        LCALL     ?Subroutine68 & 0xFFFF
??CrossCallReturnLabel_116:
        ADD       A,#0x10
        MOV       ?V8,A
        CLR       A
        ADDC      A,?V3
        MOV       ?V9,A
        LJMP      ??CrossCallReturnLabel_278 & 0xFFFF
// 2019   while ( pList )
// 2020   {
// 2021     if ( (pList->clusterID == inMsg->clusterID)
// 2022        || ((pList->clusterID == ZDO_ALL_MSGS_CLUSTERID)
// 2023            && ((inMsg->clusterID & ZDO_RESPONSE_BIT) || (inMsg->clusterID == Device_annce))) )
??ZDO_SendMsgCBs_0:
        MOV       A,?V2
        ADD       A,#0xc
        MOV       DPL,A
        CLR       A
        ADDC      A,?V3
        MOV       DPH,A
        LCALL     ??Subroutine131_0 & 0xFFFF
??CrossCallReturnLabel_291:
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ??Subroutine134_0 & 0xFFFF
??CrossCallReturnLabel_306:
        MOV       A,R0
        XRL       A,R2
        JNZ       ??ZDO_SendMsgCBs_1
        MOV       A,R1
        XRL       A,R3
??ZDO_SendMsgCBs_1:
        JZ        ??ZDO_SendMsgCBs_2
        MOV       A,#-0x1
        XRL       A,R2
        JNZ       ??ZDO_SendMsgCBs_3
        MOV       A,#-0x1
        XRL       A,R3
??ZDO_SendMsgCBs_3:
        JZ        $+5
        LJMP      ??ZDO_SendMsgCBs_4 & 0xFFFF
        MOV       A,R1
        ANL       A,#0x80
        JNZ       ??ZDO_SendMsgCBs_2
        MOV       A,#0x13
        XRL       A,R0
        ORL       A,R1
        JZ        $+5
        LJMP      ??ZDO_SendMsgCBs_4 & 0xFFFF
// 2024     {
// 2025       zdoIncomingMsg_t *msgPtr;
// 2026 
// 2027       // Send the address to the task
// 2028       msgPtr = (zdoIncomingMsg_t *)osal_msg_allocate( sizeof( zdoIncomingMsg_t ) + inMsg->asduLen );
??ZDO_SendMsgCBs_2:
        ; Setup parameters for call to function osal_msg_allocate
        MOV       DPL,?V8
        MOV       DPH,?V9
        MOVX      A,@DPTR
        ADD       A,#0x17
        MOV       R2,A
        CLR       A
        ADDC      A,#0x0
        MOV       R3,A
        LCALL     `??osal_msg_allocate::?relay`; Banked call to: osal_msg_allocate
        MOV       ?V6,R2
        MOV       ?V7,R3
        MOV       R6,?V6
        MOV       R7,?V7
// 2029       if ( msgPtr )
        MOV       A,R2
        ORL       A,R7
        JZ        ??ZDO_SendMsgCBs_4
// 2030       {
// 2031         // copy struct
// 2032         osal_memcpy( msgPtr, inMsg, sizeof( zdoIncomingMsg_t ));
        ; Setup parameters for call to function osal_memcpy
        MOV       ?V4,?V2
        MOV       ?V5,?V3
        MOV       ?V6,#0x0
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       R4,#0x17
        LCALL     ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_201:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
// 2033 
// 2034         if ( inMsg->asduLen )
        MOV       DPL,?V8
        MOV       DPH,?V9
        MOVX      A,@DPTR
        JZ        ??ZDO_SendMsgCBs_5
// 2035         {
// 2036           msgPtr->asdu = (byte*)(((byte*)msgPtr) + sizeof( zdoIncomingMsg_t ));
        MOV       A,R6
        ADD       A,#0x17
        MOV       R2,A
        CLR       A
        ADDC      A,R7
        MOV       R3,A
        MOV       A,R6
        ADD       A,#0x13
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        MOV       A,R2
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R3
        MOVX      @DPTR,A
// 2037           osal_memcpy( msgPtr->asdu, inMsg->asdu, inMsg->asduLen );
        ; Setup parameters for call to function osal_memcpy
        MOV       A,?V2
        ADD       A,#0x13
        MOV       DPL,A
        CLR       A
        ADDC      A,?V3
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       ?V4,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V5,A
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       DPL,?V8
        MOV       DPH,?V9
        MOVX      A,@DPTR
        MOV       R4,A
        LCALL     ?Subroutine74 & 0xFFFF
// 2038         }
??CrossCallReturnLabel_202:
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
// 2039 
// 2040         msgPtr->hdr.event = ZDO_CB_MSG;
??ZDO_SendMsgCBs_5:
        MOV       DPL,R6
        MOV       DPH,R7
        MOV       A,#-0x2d
        MOVX      @DPTR,A
// 2041         osal_msg_send( pList->taskID, (uint8 *)msgPtr );
        ; Setup parameters for call to function osal_msg_send
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        LCALL     `??osal_msg_send::?relay`; Banked call to: osal_msg_send
// 2042         ret = TRUE;
        MOV       ?V4,#0x1
// 2043       }
// 2044     }
// 2045     pList = (ZDO_MsgCB_t *)pList->next;
??ZDO_SendMsgCBs_4:
        MOV       DPL,?V0
        MOV       DPH,?V1
        LCALL     ??Subroutine130_0 & 0xFFFF
// 2046   }
??CrossCallReturnLabel_278:
        MOV       A,?V0
        ORL       A,?V1
        JZ        $+5
        LJMP      ??ZDO_SendMsgCBs_0 & 0xFFFF
// 2047   return ( ret );
        MOV       R1,?V4
        LJMP      ??Subroutine121_0 & 0xFFFF
// 2048 }
          CFI EndBlock cfiBlock588

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine69:
          CFI Block cfiCond589 Using cfiCommon0
          CFI Function zdpProcessAddrReq
          CFI Conditional ??CrossCallReturnLabel_279
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 46)
          CFI Block cfiCond590 Using cfiCommon0
          CFI (cfiCond590) Function ZDP_EndDeviceBindReq
          CFI (cfiCond590) Conditional ??CrossCallReturnLabel_280
          CFI (cfiCond590) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond590) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond590) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond590) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond590) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond590) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond590) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond590) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond590) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond590) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond590) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond590) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond590) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond590) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond590) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond590) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond590) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond590) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond590) CFA_SP SP+-2
          CFI (cfiCond590) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker591 Using cfiCommon1
          CFI (cfiPicker591) NoFunction
          CFI (cfiPicker591) Picker
        MOV       DPTR,#ZDP_TmpBuf
          CFI EndBlock cfiCond589
          CFI EndBlock cfiCond590
          CFI EndBlock cfiPicker591
        REQUIRE ??Subroutine130_0
        ; // Fall through to label ??Subroutine130_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine130_0:
          CFI Block cfiCond592 Using cfiCommon0
          CFI Function ZDP_PowerDescMsg
          CFI Conditional ??CrossCallReturnLabel_275
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond593 Using cfiCommon0
          CFI (cfiCond593) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond593) Conditional ??CrossCallReturnLabel_276
          CFI (cfiCond593) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond593) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond593) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond593) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond593) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond593) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond593) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond593) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond593) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond593) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond593) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond593) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond593) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond593) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond593) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond593) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond593) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond593) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond593) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond593) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond593) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond593) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond593) CFA_SP SP+-2
          CFI (cfiCond593) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond594 Using cfiCommon0
          CFI (cfiCond594) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond594) Conditional ??CrossCallReturnLabel_277
          CFI (cfiCond594) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond594) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond594) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond594) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond594) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond594) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond594) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond594) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond594) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond594) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond594) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond594) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond594) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond594) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond594) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond594) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond594) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond594) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond594) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond594) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond594) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond594) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond594) CFA_SP SP+-2
          CFI (cfiCond594) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond595 Using cfiCommon0
          CFI (cfiCond595) Function ZDO_SendMsgCBs
          CFI (cfiCond595) Conditional ??CrossCallReturnLabel_278
          CFI (cfiCond595) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond595) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond595) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond595) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond595) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond595) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond595) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond595) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond595) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond595) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond595) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond595) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond595) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond595) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond595) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond595) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond595) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond595) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond595) CFA_SP SP+-2
          CFI (cfiCond595) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond596 Using cfiCommon0
          CFI (cfiCond596) Function zdpProcessAddrReq
          CFI (cfiCond596) Conditional ??CrossCallReturnLabel_279
          CFI (cfiCond596) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond596) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond596) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond596) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond596) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond596) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond596) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond596) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond596) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond596) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond596) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond596) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond596) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond596) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond596) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond596) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond596) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond596) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond596) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond596) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond596) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond596) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond596) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond596) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond596) CFA_SP SP+-2
          CFI (cfiCond596) CFA_XSP16 add(XSP16, 46)
          CFI Block cfiCond597 Using cfiCommon0
          CFI (cfiCond597) Function ZDP_EndDeviceBindReq
          CFI (cfiCond597) Conditional ??CrossCallReturnLabel_280
          CFI (cfiCond597) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond597) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond597) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond597) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond597) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond597) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond597) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond597) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond597) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond597) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond597) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond597) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond597) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond597) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond597) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond597) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond597) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond597) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond597) CFA_SP SP+-2
          CFI (cfiCond597) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker598 Using cfiCommon1
          CFI (cfiPicker598) NoFunction
          CFI (cfiPicker598) Picker
        MOVX      A,@DPTR
        MOV       ?V0,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V1,A
        RET
          CFI EndBlock cfiCond592
          CFI EndBlock cfiCond593
          CFI EndBlock cfiCond594
          CFI EndBlock cfiCond595
          CFI EndBlock cfiCond596
          CFI EndBlock cfiCond597
          CFI EndBlock cfiPicker598

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine68:
          CFI Block cfiCond599 Using cfiCommon0
          CFI Function ZDP_NwkAddrReq
          CFI Conditional ??CrossCallReturnLabel_115
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond600 Using cfiCommon0
          CFI (cfiCond600) Function ZDO_SendMsgCBs
          CFI (cfiCond600) Conditional ??CrossCallReturnLabel_116
          CFI (cfiCond600) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond600) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond600) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond600) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond600) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond600) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond600) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond600) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond600) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond600) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond600) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond600) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond600) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond600) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond600) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond600) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond600) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond600) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond600) CFA_SP SP+-2
          CFI (cfiCond600) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker601 Using cfiCommon1
          CFI (cfiPicker601) NoFunction
          CFI (cfiPicker601) Picker
        MOVX      A,@DPTR
        MOV       ?V0,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V1,A
        ; Setup parameters for call to function sAddrExtCmp
        MOV       A,R2
        RET
          CFI EndBlock cfiCond599
          CFI EndBlock cfiCond600
          CFI EndBlock cfiPicker601

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine61:
          CFI Block cfiCond602 Using cfiCommon0
          CFI Function ZDP_IEEEAddrReq
          CFI Conditional ??CrossCallReturnLabel_281
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond603 Using cfiCommon0
          CFI (cfiCond603) Function ZDP_MatchDescReq
          CFI (cfiCond603) Conditional ??CrossCallReturnLabel_282
          CFI (cfiCond603) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond603) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond603) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond603) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond603) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond603) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond603) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond603) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond603) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond603) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond603) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond603) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond603) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond603) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond603) CFA_SP SP+-2
          CFI (cfiCond603) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond604 Using cfiCommon0
          CFI (cfiCond604) Function ZDP_ServerDiscReq
          CFI (cfiCond604) Conditional ??CrossCallReturnLabel_283
          CFI (cfiCond604) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond604) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond604) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond604) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond604) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond604) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond604) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond604) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond604) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond604) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond604) CFA_SP SP+-2
          CFI (cfiCond604) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond605 Using cfiCommon0
          CFI (cfiCond605) Function ZDP_SimpleDescMsg
          CFI (cfiCond605) Conditional ??CrossCallReturnLabel_284
          CFI (cfiCond605) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond605) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond605) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond605) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond605) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond605) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond605) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond605) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond605) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond605) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond605) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond605) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond605) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond605) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond605) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond605) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond605) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond605) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond605) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond605) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond605) CFA_SP SP+-2
          CFI (cfiCond605) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker606 Using cfiCommon1
          CFI (cfiPicker606) NoFunction
          CFI (cfiPicker606) Picker
        MOV       A,R1
        MOV       R6,A
        MOV       DPTR,#ZDP_TmpBuf
          CFI EndBlock cfiCond602
          CFI EndBlock cfiCond603
          CFI EndBlock cfiCond604
          CFI EndBlock cfiCond605
          CFI EndBlock cfiPicker606
        REQUIRE ??Subroutine131_0
        ; // Fall through to label ??Subroutine131_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine131_0:
          CFI Block cfiCond607 Using cfiCommon0
          CFI Function ZDP_SendData
          CFI Conditional ??CrossCallReturnLabel_285
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond608 Using cfiCommon0
          CFI (cfiCond608) Function ZDP_NwkAddrReq
          CFI (cfiCond608) Conditional ??CrossCallReturnLabel_286
          CFI (cfiCond608) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond608) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond608) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond608) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond608) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond608) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond608) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond608) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond608) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond608) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond608) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond608) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond608) CFA_SP SP+-2
          CFI (cfiCond608) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond609 Using cfiCommon0
          CFI (cfiCond609) Function zdpProcessAddrReq
          CFI (cfiCond609) Conditional ??CrossCallReturnLabel_287
          CFI (cfiCond609) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond609) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond609) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond609) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond609) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond609) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond609) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond609) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond609) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond609) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond609) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond609) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond609) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond609) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond609) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond609) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond609) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond609) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond609) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond609) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond609) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond609) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond609) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond609) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond609) CFA_SP SP+-2
          CFI (cfiCond609) CFA_XSP16 add(XSP16, 46)
          CFI Block cfiCond610 Using cfiCommon0
          CFI (cfiCond610) Function ZDP_GenericRsp
          CFI (cfiCond610) Conditional ??CrossCallReturnLabel_288
          CFI (cfiCond610) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond610) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond610) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond610) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond610) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond610) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond610) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond610) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond610) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond610) CFA_SP SP+-2
          CFI (cfiCond610) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond611 Using cfiCommon0
          CFI (cfiCond611) Function ZDP_EndDeviceBindReq
          CFI (cfiCond611) Conditional ??CrossCallReturnLabel_289
          CFI (cfiCond611) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond611) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond611) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond611) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond611) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond611) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond611) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond611) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond611) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond611) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond611) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond611) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond611) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond611) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond611) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond611) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond611) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond611) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond611) CFA_SP SP+-2
          CFI (cfiCond611) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond612 Using cfiCommon0
          CFI (cfiCond612) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond612) Conditional ??CrossCallReturnLabel_290
          CFI (cfiCond612) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond612) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond612) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond612) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond612) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond612) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond612) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond612) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond612) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond612) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond612) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond612) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond612) CFA_SP SP+-2
          CFI (cfiCond612) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond613 Using cfiCommon0
          CFI (cfiCond613) Function ZDO_SendMsgCBs
          CFI (cfiCond613) Conditional ??CrossCallReturnLabel_291
          CFI (cfiCond613) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond613) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond613) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond613) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond613) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond613) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond613) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond613) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond613) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond613) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond613) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond613) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond613) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond613) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond613) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond613) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond613) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond613) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond613) CFA_SP SP+-2
          CFI (cfiCond613) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond614 Using cfiCommon0
          CFI (cfiCond614) Function ZDP_IncomingData
          CFI (cfiCond614) Conditional ??CrossCallReturnLabel_292
          CFI (cfiCond614) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond614) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond614) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond614) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond614) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond614) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond614) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond614) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond614) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond614) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond614) CFA_SP SP+-2
          CFI (cfiCond614) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond615 Using cfiCommon0
          CFI (cfiCond615) Function ZDP_IncomingData
          CFI (cfiCond615) Conditional ??CrossCallReturnLabel_293
          CFI (cfiCond615) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond615) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond615) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond615) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond615) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond615) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond615) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond615) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond615) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond615) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond615) CFA_SP SP+-2
          CFI (cfiCond615) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond616 Using cfiCommon0
          CFI (cfiCond616) Function ZDP_IncomingData
          CFI (cfiCond616) Conditional ??CrossCallReturnLabel_294
          CFI (cfiCond616) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond616) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond616) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond616) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond616) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond616) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond616) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond616) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond616) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond616) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond616) CFA_SP SP+-2
          CFI (cfiCond616) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond617 Using cfiCommon0
          CFI (cfiCond617) Function ZDP_IncomingData
          CFI (cfiCond617) Conditional ??CrossCallReturnLabel_295
          CFI (cfiCond617) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond617) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond617) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond617) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond617) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond617) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond617) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond617) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond617) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond617) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond617) CFA_SP SP+-2
          CFI (cfiCond617) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond618 Using cfiCommon0
          CFI (cfiCond618) Function ZDP_IEEEAddrReq
          CFI (cfiCond618) Conditional ??CrossCallReturnLabel_281
          CFI (cfiCond618) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond618) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond618) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond618) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond618) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond618) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond618) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond618) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond618) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond618) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond618) CFA_SP SP+-2
          CFI (cfiCond618) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond619 Using cfiCommon0
          CFI (cfiCond619) Function ZDP_MatchDescReq
          CFI (cfiCond619) Conditional ??CrossCallReturnLabel_282
          CFI (cfiCond619) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond619) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond619) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond619) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond619) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond619) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond619) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond619) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond619) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond619) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond619) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond619) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond619) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond619) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond619) CFA_SP SP+-2
          CFI (cfiCond619) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond620 Using cfiCommon0
          CFI (cfiCond620) Function ZDP_ServerDiscReq
          CFI (cfiCond620) Conditional ??CrossCallReturnLabel_283
          CFI (cfiCond620) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond620) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond620) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond620) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond620) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond620) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond620) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond620) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond620) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond620) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond620) CFA_SP SP+-2
          CFI (cfiCond620) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond621 Using cfiCommon0
          CFI (cfiCond621) Function ZDP_SimpleDescMsg
          CFI (cfiCond621) Conditional ??CrossCallReturnLabel_284
          CFI (cfiCond621) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond621) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond621) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond621) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond621) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond621) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond621) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond621) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond621) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond621) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond621) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond621) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond621) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond621) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond621) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond621) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond621) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond621) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond621) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond621) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond621) CFA_SP SP+-2
          CFI (cfiCond621) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker622 Using cfiCommon1
          CFI (cfiPicker622) NoFunction
          CFI (cfiPicker622) Picker
        LCALL     ??Subroutine133_0 & 0xFFFF
??CrossCallReturnLabel_301:
        MOV       R1,A
        RET
          CFI EndBlock cfiCond607
          CFI EndBlock cfiCond608
          CFI EndBlock cfiCond609
          CFI EndBlock cfiCond610
          CFI EndBlock cfiCond611
          CFI EndBlock cfiCond612
          CFI EndBlock cfiCond613
          CFI EndBlock cfiCond614
          CFI EndBlock cfiCond615
          CFI EndBlock cfiCond616
          CFI EndBlock cfiCond617
          CFI EndBlock cfiCond618
          CFI EndBlock cfiCond619
          CFI EndBlock cfiCond620
          CFI EndBlock cfiCond621
          CFI EndBlock cfiPicker622

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine87:
          CFI Block cfiCond623 Using cfiCommon0
          CFI Function ZDP_UserDescSet
          CFI Conditional ??CrossCallReturnLabel_296
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond624 Using cfiCommon0
          CFI (cfiCond624) Function ZDP_UserDescRsp
          CFI (cfiCond624) Conditional ??CrossCallReturnLabel_297
          CFI (cfiCond624) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond624) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond624) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond624) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond624) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond624) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond624) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond624) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond624) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond624) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond624) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond624) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond624) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond624) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond624) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond624) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond624) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond624) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond624) CFA_SP SP+-2
          CFI (cfiCond624) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker625 Using cfiCommon1
          CFI (cfiPicker625) NoFunction
          CFI (cfiPicker625) Picker
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
          CFI EndBlock cfiCond623
          CFI EndBlock cfiCond624
          CFI EndBlock cfiPicker625
        REQUIRE ??Subroutine132_0
        ; // Fall through to label ??Subroutine132_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine132_0:
          CFI Block cfiCond626 Using cfiCommon0
          CFI Function ZDP_DeviceAnnce
          CFI Conditional ??CrossCallReturnLabel_302
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond627 Using cfiCommon0
          CFI (cfiCond627) Function ZDP_UserDescSet
          CFI (cfiCond627) Conditional ??CrossCallReturnLabel_296
          CFI (cfiCond627) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond627) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond627) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond627) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond627) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond627) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond627) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond627) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond627) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond627) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond627) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond627) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond627) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond627) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond627) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond627) CFA_SP SP+-2
          CFI (cfiCond627) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond628 Using cfiCommon0
          CFI (cfiCond628) Function ZDP_UserDescRsp
          CFI (cfiCond628) Conditional ??CrossCallReturnLabel_297
          CFI (cfiCond628) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond628) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond628) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond628) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond628) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond628) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond628) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond628) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond628) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond628) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond628) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond628) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond628) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond628) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond628) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond628) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond628) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond628) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond628) CFA_SP SP+-2
          CFI (cfiCond628) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker629 Using cfiCommon1
          CFI (cfiPicker629) NoFunction
          CFI (cfiPicker629) Picker
        MOV       DPTR,#ZDP_TmpBuf
          CFI EndBlock cfiCond626
          CFI EndBlock cfiCond627
          CFI EndBlock cfiCond628
          CFI EndBlock cfiPicker629
        REQUIRE ??Subroutine133_0
        ; // Fall through to label ??Subroutine133_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine133_0:
          CFI Block cfiCond630 Using cfiCommon0
          CFI Function ZDP_UserDescSet
          CFI Conditional ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_63
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond631 Using cfiCommon0
          CFI (cfiCond631) Function ZDP_NodeDescMsg
          CFI (cfiCond631) Conditional ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_64
          CFI (cfiCond631) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond631) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond631) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond631) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond631) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond631) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond631) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond631) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond631) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond631) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond631) CFA_SP SP+-4
          CFI (cfiCond631) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond632 Using cfiCommon0
          CFI (cfiCond632) Function ZDP_PowerDescMsg
          CFI (cfiCond632) Conditional ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_65
          CFI (cfiCond632) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond632) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond632) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond632) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond632) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond632) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond632) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond632) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond632) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond632) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond632) CFA_SP SP+-4
          CFI (cfiCond632) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond633 Using cfiCommon0
          CFI (cfiCond633) Function ZDP_UserDescRsp
          CFI (cfiCond633) Conditional ??CrossCallReturnLabel_298
          CFI (cfiCond633) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond633) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond633) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond633) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond633) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond633) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond633) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond633) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond633) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond633) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond633) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond633) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond633) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond633) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond633) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond633) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond633) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond633) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond633) CFA_SP SP+-2
          CFI (cfiCond633) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond634 Using cfiCommon0
          CFI (cfiCond634) Function ZDO_RegisterForZDOMsg
          CFI (cfiCond634) Conditional ??CrossCallReturnLabel_299
          CFI (cfiCond634) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond634) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond634) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond634) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond634) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond634) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond634) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond634) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond634) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond634) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond634) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond634) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond634) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond634) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond634) CFA_SP SP+-2
          CFI (cfiCond634) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond635 Using cfiCommon0
          CFI (cfiCond635) Function ZDP_IEEEAddrReq
          CFI (cfiCond635) Conditional ??CrossCallReturnLabel_301, ??CrossCallReturnLabel_281
          CFI (cfiCond635) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond635) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond635) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond635) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond635) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond635) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond635) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond635) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond635) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond635) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond635) CFA_SP SP+-4
          CFI (cfiCond635) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond636 Using cfiCommon0
          CFI (cfiCond636) Function ZDP_MatchDescReq
          CFI (cfiCond636) Conditional ??CrossCallReturnLabel_301, ??CrossCallReturnLabel_282
          CFI (cfiCond636) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond636) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond636) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond636) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond636) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond636) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond636) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond636) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond636) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond636) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond636) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond636) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond636) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond636) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond636) CFA_SP SP+-4
          CFI (cfiCond636) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond637 Using cfiCommon0
          CFI (cfiCond637) Function ZDP_ServerDiscReq
          CFI (cfiCond637) Conditional ??CrossCallReturnLabel_301, ??CrossCallReturnLabel_283
          CFI (cfiCond637) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond637) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond637) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond637) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond637) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond637) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond637) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond637) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond637) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond637) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond637) CFA_SP SP+-4
          CFI (cfiCond637) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond638 Using cfiCommon0
          CFI (cfiCond638) Function ZDP_SimpleDescMsg
          CFI (cfiCond638) Conditional ??CrossCallReturnLabel_301, ??CrossCallReturnLabel_284
          CFI (cfiCond638) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond638) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond638) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond638) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond638) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond638) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond638) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond638) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond638) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond638) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond638) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond638) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond638) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond638) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond638) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond638) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond638) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond638) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond638) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond638) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond638) CFA_SP SP+-4
          CFI (cfiCond638) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond639 Using cfiCommon0
          CFI (cfiCond639) Function ZDP_SendData
          CFI (cfiCond639) Conditional ??CrossCallReturnLabel_301, ??CrossCallReturnLabel_285
          CFI (cfiCond639) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond639) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond639) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond639) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond639) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond639) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond639) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond639) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond639) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond639) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond639) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond639) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond639) CFA_SP SP+-4
          CFI (cfiCond639) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond640 Using cfiCommon0
          CFI (cfiCond640) Function ZDP_NwkAddrReq
          CFI (cfiCond640) Conditional ??CrossCallReturnLabel_301, ??CrossCallReturnLabel_286
          CFI (cfiCond640) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond640) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond640) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond640) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond640) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond640) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond640) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond640) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond640) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond640) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond640) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond640) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond640) CFA_SP SP+-4
          CFI (cfiCond640) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond641 Using cfiCommon0
          CFI (cfiCond641) Function zdpProcessAddrReq
          CFI (cfiCond641) Conditional ??CrossCallReturnLabel_301, ??CrossCallReturnLabel_287
          CFI (cfiCond641) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond641) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond641) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond641) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond641) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond641) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond641) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond641) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond641) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond641) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond641) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond641) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond641) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond641) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond641) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond641) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond641) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond641) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond641) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond641) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond641) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond641) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond641) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond641) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond641) CFA_SP SP+-4
          CFI (cfiCond641) CFA_XSP16 add(XSP16, 46)
          CFI Block cfiCond642 Using cfiCommon0
          CFI (cfiCond642) Function ZDP_GenericRsp
          CFI (cfiCond642) Conditional ??CrossCallReturnLabel_301, ??CrossCallReturnLabel_288
          CFI (cfiCond642) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond642) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond642) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond642) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond642) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond642) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond642) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond642) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond642) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond642) CFA_SP SP+-4
          CFI (cfiCond642) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond643 Using cfiCommon0
          CFI (cfiCond643) Function ZDP_EndDeviceBindReq
          CFI (cfiCond643) Conditional ??CrossCallReturnLabel_301, ??CrossCallReturnLabel_289
          CFI (cfiCond643) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond643) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond643) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond643) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond643) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond643) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond643) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond643) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond643) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond643) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond643) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond643) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond643) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond643) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond643) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond643) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond643) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond643) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond643) CFA_SP SP+-4
          CFI (cfiCond643) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond644 Using cfiCommon0
          CFI (cfiCond644) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond644) Conditional ??CrossCallReturnLabel_301, ??CrossCallReturnLabel_290
          CFI (cfiCond644) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond644) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond644) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond644) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond644) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond644) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond644) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond644) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond644) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond644) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond644) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond644) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond644) CFA_SP SP+-4
          CFI (cfiCond644) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond645 Using cfiCommon0
          CFI (cfiCond645) Function ZDO_SendMsgCBs
          CFI (cfiCond645) Conditional ??CrossCallReturnLabel_301, ??CrossCallReturnLabel_291
          CFI (cfiCond645) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond645) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond645) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond645) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond645) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond645) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond645) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond645) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond645) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond645) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond645) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond645) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond645) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond645) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond645) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond645) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond645) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond645) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond645) CFA_SP SP+-4
          CFI (cfiCond645) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond646 Using cfiCommon0
          CFI (cfiCond646) Function ZDP_IncomingData
          CFI (cfiCond646) Conditional ??CrossCallReturnLabel_301, ??CrossCallReturnLabel_292
          CFI (cfiCond646) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond646) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond646) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond646) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond646) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond646) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond646) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond646) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond646) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond646) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond646) CFA_SP SP+-4
          CFI (cfiCond646) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond647 Using cfiCommon0
          CFI (cfiCond647) Function ZDP_IncomingData
          CFI (cfiCond647) Conditional ??CrossCallReturnLabel_301, ??CrossCallReturnLabel_293
          CFI (cfiCond647) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond647) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond647) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond647) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond647) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond647) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond647) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond647) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond647) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond647) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond647) CFA_SP SP+-4
          CFI (cfiCond647) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond648 Using cfiCommon0
          CFI (cfiCond648) Function ZDP_IncomingData
          CFI (cfiCond648) Conditional ??CrossCallReturnLabel_301, ??CrossCallReturnLabel_294
          CFI (cfiCond648) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond648) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond648) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond648) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond648) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond648) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond648) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond648) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond648) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond648) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond648) CFA_SP SP+-4
          CFI (cfiCond648) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond649 Using cfiCommon0
          CFI (cfiCond649) Function ZDP_IncomingData
          CFI (cfiCond649) Conditional ??CrossCallReturnLabel_301, ??CrossCallReturnLabel_295
          CFI (cfiCond649) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond649) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond649) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond649) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond649) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond649) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond649) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond649) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond649) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond649) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond649) CFA_SP SP+-4
          CFI (cfiCond649) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond650 Using cfiCommon0
          CFI (cfiCond650) Function ZDP_DeviceAnnce
          CFI (cfiCond650) Conditional ??CrossCallReturnLabel_302
          CFI (cfiCond650) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond650) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond650) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond650) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond650) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond650) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond650) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond650) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond650) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond650) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond650) CFA_SP SP+-2
          CFI (cfiCond650) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond651 Using cfiCommon0
          CFI (cfiCond651) Function ZDP_UserDescSet
          CFI (cfiCond651) Conditional ??CrossCallReturnLabel_296
          CFI (cfiCond651) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond651) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond651) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond651) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond651) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond651) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond651) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond651) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond651) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond651) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond651) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond651) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond651) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond651) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond651) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond651) CFA_SP SP+-2
          CFI (cfiCond651) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond652 Using cfiCommon0
          CFI (cfiCond652) Function ZDP_UserDescRsp
          CFI (cfiCond652) Conditional ??CrossCallReturnLabel_297
          CFI (cfiCond652) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond652) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond652) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond652) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond652) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond652) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond652) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond652) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond652) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond652) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond652) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond652) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond652) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond652) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond652) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond652) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond652) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond652) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond652) CFA_SP SP+-2
          CFI (cfiCond652) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker653 Using cfiCommon1
          CFI (cfiPicker653) NoFunction
          CFI (cfiPicker653) Picker
        MOVX      A,@DPTR
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond630
          CFI EndBlock cfiCond631
          CFI EndBlock cfiCond632
          CFI EndBlock cfiCond633
          CFI EndBlock cfiCond634
          CFI EndBlock cfiCond635
          CFI EndBlock cfiCond636
          CFI EndBlock cfiCond637
          CFI EndBlock cfiCond638
          CFI EndBlock cfiCond639
          CFI EndBlock cfiCond640
          CFI EndBlock cfiCond641
          CFI EndBlock cfiCond642
          CFI EndBlock cfiCond643
          CFI EndBlock cfiCond644
          CFI EndBlock cfiCond645
          CFI EndBlock cfiCond646
          CFI EndBlock cfiCond647
          CFI EndBlock cfiCond648
          CFI EndBlock cfiCond649
          CFI EndBlock cfiCond650
          CFI EndBlock cfiCond651
          CFI EndBlock cfiCond652
          CFI EndBlock cfiPicker653

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine57:
          CFI Block cfiCond654 Using cfiCommon0
          CFI Function ZDP_ParentAnnce
          CFI Conditional ??CrossCallReturnLabel_307
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond655 Using cfiCommon0
          CFI (cfiCond655) Function ZDP_BindUnbindReq
          CFI (cfiCond655) Conditional ??CrossCallReturnLabel_308
          CFI (cfiCond655) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond655) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond655) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond655) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond655) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond655) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond655) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond655) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond655) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond655) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond655) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond655) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond655) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond655) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond655) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond655) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond655) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond655) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond655) CFA_SP SP+-2
          CFI (cfiCond655) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker656 Using cfiCommon1
          CFI (cfiPicker656) NoFunction
          CFI (cfiPicker656) Picker
        MOV       DPTR,#ZDP_TmpBuf
          CFI EndBlock cfiCond654
          CFI EndBlock cfiCond655
          CFI EndBlock cfiPicker656
        REQUIRE ??Subroutine134_0
        ; // Fall through to label ??Subroutine134_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine134_0:
          CFI Block cfiCond657 Using cfiCommon0
          CFI Function zdpProcessAddrReq
          CFI Conditional ??CrossCallReturnLabel_303
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 46)
          CFI Block cfiCond658 Using cfiCommon0
          CFI (cfiCond658) Function ZDO_RegisterForZDOMsg
          CFI (cfiCond658) Conditional ??CrossCallReturnLabel_304
          CFI (cfiCond658) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond658) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond658) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond658) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond658) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond658) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond658) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond658) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond658) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond658) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond658) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond658) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond658) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond658) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond658) CFA_SP SP+-2
          CFI (cfiCond658) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond659 Using cfiCommon0
          CFI (cfiCond659) Function ZDO_RemoveRegisteredCB
          CFI (cfiCond659) Conditional ??CrossCallReturnLabel_305
          CFI (cfiCond659) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond659) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond659) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond659) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond659) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond659) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond659) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond659) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond659) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond659) CFA_SP SP+-2
          CFI (cfiCond659) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond660 Using cfiCommon0
          CFI (cfiCond660) Function ZDO_SendMsgCBs
          CFI (cfiCond660) Conditional ??CrossCallReturnLabel_306
          CFI (cfiCond660) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond660) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond660) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond660) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond660) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond660) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond660) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond660) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond660) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond660) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond660) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond660) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond660) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond660) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond660) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond660) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond660) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond660) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond660) CFA_SP SP+-2
          CFI (cfiCond660) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond661 Using cfiCommon0
          CFI (cfiCond661) Function ZDP_ParentAnnce
          CFI (cfiCond661) Conditional ??CrossCallReturnLabel_307
          CFI (cfiCond661) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond661) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond661) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond661) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond661) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond661) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond661) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond661) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond661) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond661) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond661) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond661) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond661) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond661) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond661) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond661) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond661) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond661) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond661) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond661) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond661) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond661) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond661) CFA_SP SP+-2
          CFI (cfiCond661) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond662 Using cfiCommon0
          CFI (cfiCond662) Function ZDP_BindUnbindReq
          CFI (cfiCond662) Conditional ??CrossCallReturnLabel_308
          CFI (cfiCond662) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond662) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond662) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond662) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond662) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond662) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond662) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond662) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond662) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond662) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond662) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond662) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond662) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond662) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond662) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond662) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond662) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond662) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond662) CFA_SP SP+-2
          CFI (cfiCond662) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker663 Using cfiCommon1
          CFI (cfiPicker663) NoFunction
          CFI (cfiPicker663) Picker
        MOVX      A,@DPTR
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R3,A
        RET
          CFI EndBlock cfiCond657
          CFI EndBlock cfiCond658
          CFI EndBlock cfiCond659
          CFI EndBlock cfiCond660
          CFI EndBlock cfiCond661
          CFI EndBlock cfiCond662
          CFI EndBlock cfiPicker663
// 2049 
// 2050 /*********************************************************************
// 2051  * Incoming message processor
// 2052  */
// 2053 
// 2054 /*********************************************************************
// 2055  * @fn          ZDP_IncomingData
// 2056  *
// 2057  * @brief       This function indicates the transfer of a data PDU (ASDU)
// 2058  *              from the APS sub-layer to the ZDO.
// 2059  *
// 2060  * @param       pData - Incoming Message
// 2061  *
// 2062  * @return      none
// 2063  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2064 void ZDP_IncomingData( afIncomingMSGPacket_t *pData )
ZDP_IncomingData:
          CFI Block cfiBlock664 Using cfiCommon0
          CFI Function ZDP_IncomingData
        CODE
// 2065 {
        FUNCALL ZDP_IncomingData, ZDO_SendMsgCBs
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 33, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_IncomingData, ZDApp_InMsgCB
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 33, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 23
        MOV       A,#-0x17
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 33)
// 2066   uint8 x = 0;
        MOV       R6,#0x0
// 2067   uint8 handled;
// 2068   zdoIncomingMsg_t inMsg;
// 2069 
// 2070   inMsg.srcAddr.addrMode = Addr16Bit;
        MOV       A,#0xa
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x2
        LCALL     ?Subroutine15 & 0xFFFF
// 2071   inMsg.srcAddr.addr.shortAddr = pData->srcAddr.addr.shortAddr;
??CrossCallReturnLabel_12:
        INC       DPTR
        INC       DPTR
        LCALL     ??Subroutine131_0 & 0xFFFF
??CrossCallReturnLabel_292:
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine31 & 0xFFFF
// 2072   inMsg.wasBroadcast = pData->wasBroadcast;
??CrossCallReturnLabel_43:
        MOV       A,R2
        ADD       A,#0x15
        MOV       DPL,A
        CLR       A
        ADDC      A,R3
        MOV       DPH,A
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0xb
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine15 & 0xFFFF
// 2073   inMsg.clusterID = pData->clusterId;
??CrossCallReturnLabel_13:
        LCALL     ??Subroutine131_0 & 0xFFFF
??CrossCallReturnLabel_293:
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine31 & 0xFFFF
// 2074   inMsg.SecurityUse = pData->SecurityUse;
??CrossCallReturnLabel_44:
        MOV       A,R2
        ADD       A,#0x19
        MOV       DPL,A
        CLR       A
        ADDC      A,R3
        MOV       DPH,A
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0xe
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 2075 
// 2076   inMsg.asduLen = pData->cmd.DataLength-1;
        MOV       A,R2
        ADD       A,#0x20
        MOV       DPL,A
        CLR       A
        ADDC      A,R3
        MOV       DPH,A
        MOVX      A,@DPTR
        DEC       A
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x10
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 2077   inMsg.asdu = pData->cmd.Data+1;
        MOV       A,R2
        ADD       A,#0x22
        MOV       R0,A
        CLR       A
        ADDC      A,R3
        MOV       R1,A
        MOV       DPL,R0
        MOV       DPH,A
        MOVX      A,@DPTR
        ADD       A,#0x1
        MOV       R4,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       R5,A
        MOV       A,#0x13
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R4
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R5
        LCALL     ?Subroutine103 & 0xFFFF
// 2078   inMsg.TransSeq = pData->cmd.Data[0];
??CrossCallReturnLabel_190:
        LCALL     ??Subroutine120_0 & 0xFFFF
??CrossCallReturnLabel_208:
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0xf
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 2079   inMsg.macDestAddr = pData->macDestAddr;
        MOV       A,R2
        ADD       A,#0x12
        MOV       DPL,A
        CLR       A
        ADDC      A,R3
        MOV       DPH,A
        LCALL     ??Subroutine131_0 & 0xFFFF
??CrossCallReturnLabel_294:
        MOV       A,#0x11
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine31 & 0xFFFF
// 2080   inMsg.macSrcAddr = pData->macSrcAddr;
??CrossCallReturnLabel_45:
        MOV       A,R2
        ADD       A,#0x24
        MOV       DPL,A
        CLR       A
        ADDC      A,R3
        MOV       DPH,A
        LCALL     ??Subroutine131_0 & 0xFFFF
??CrossCallReturnLabel_295:
        MOV       A,#0x15
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine31 & 0xFFFF
// 2081 
// 2082   handled = ZDO_SendMsgCBs( &inMsg );
??CrossCallReturnLabel_46:
        ; Setup parameters for call to function ZDO_SendMsgCBs
        MOV       R2,?XSP + 0
        MOV       R3,?XSP + 1
        LCALL     `??ZDO_SendMsgCBs::?relay`; Banked call to: ZDO_SendMsgCBs
        MOV       A,R1
        MOV       R4,A
        SJMP      ??ZDP_IncomingData_0
// 2083 
// 2084 #if (defined MT_ZDO_CB_FUNC)
// 2085 #if !defined MT_TASK
// 2086   if (zgZdoDirectCB)
// 2087 #endif
// 2088   {
// 2089     MT_ZdoDirectCB( pData, &inMsg );
// 2090   }
// 2091 #endif
// 2092 
// 2093   while ( zdpMsgProcs[x].clusterID != 0xFFFF )
// 2094   {
// 2095     if ( zdpMsgProcs[x].clusterID == inMsg.clusterID )
// 2096     {
// 2097       zdpMsgProcs[x].pFn( &inMsg );
// 2098       return;
// 2099     }
// 2100     x++;
??ZDP_IncomingData_1:
        INC       R6
??ZDP_IncomingData_0:
        MOV       A,R6
        MOV       ?V0,A
        MOV       ?V1,#0x0
        MOV       A,#0x2
        MOV       R0,#?V0
        LCALL     ?S_SHL
        MOV       A,#zdpMsgProcs & 0xff
        ADD       A,?V0
        MOV       R0,A
        MOV       A,#(zdpMsgProcs >> 8) & 0xff
        ADDC      A,?V1
        MOV       R1,A
        MOV       DPL,R0
        MOV       DPH,A
        CLR       A
        MOVC      A,@A+DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x1
        MOVC      A,@A+DPTR
        MOV       DPH,A
        POP       DPL
          CFI CFA_SP SP+0
        MOV       R2,DPL
        MOV       R3,DPH
        MOV       A,#-0x1
        XRL       A,R2
        JNZ       ??ZDP_IncomingData_2
        MOV       A,#-0x1
        XRL       A,R3
??ZDP_IncomingData_2:
        JZ        ??ZDP_IncomingData_3
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        XRL       A,R2
        JNZ       ??ZDP_IncomingData_4
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R3
??ZDP_IncomingData_4:
        JNZ       ??ZDP_IncomingData_1
        ; Setup parameters for indirect call
        MOV       R2,?XSP + 0
        MOV       R3,?XSP + 1
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        CLR       A
        MOVC      A,@A+DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x1
        MOVC      A,@A+DPTR
        MOV       DPH,A
        POP       DPL
          CFI CFA_SP SP+0
        LCALL     ?CALL_IND
        SJMP      ??ZDP_IncomingData_5
// 2101   }
// 2102 
// 2103   // Handle unhandled messages
// 2104   if ( !handled )
??ZDP_IncomingData_3:
        MOV       A,R4
        JNZ       ??ZDP_IncomingData_5
// 2105     ZDApp_InMsgCB( &inMsg );
        ; Setup parameters for call to function ZDApp_InMsgCB
        MOV       R2,?XSP + 0
        MOV       R3,?XSP + 1
        LCALL     `??ZDApp_InMsgCB::?relay`; Banked call to: ZDApp_InMsgCB
// 2106 }
??ZDP_IncomingData_5:
        MOV       A,#0x17
        LJMP      ??Subroutine110_0 & 0xFFFF
          CFI EndBlock cfiBlock664

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine15:
          CFI Block cfiCond665 Using cfiCommon0
          CFI Function ZDP_MgmtNwkUpdateNotify
          CFI Conditional ??CrossCallReturnLabel_11
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond666 Using cfiCommon0
          CFI (cfiCond666) Function ZDP_IncomingData
          CFI (cfiCond666) Conditional ??CrossCallReturnLabel_12
          CFI (cfiCond666) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond666) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond666) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond666) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond666) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond666) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond666) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond666) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond666) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond666) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond666) CFA_SP SP+-2
          CFI (cfiCond666) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond667 Using cfiCommon0
          CFI (cfiCond667) Function ZDP_IncomingData
          CFI (cfiCond667) Conditional ??CrossCallReturnLabel_13
          CFI (cfiCond667) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond667) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond667) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond667) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond667) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond667) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond667) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond667) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond667) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond667) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond667) CFA_SP SP+-2
          CFI (cfiCond667) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker668 Using cfiCommon1
          CFI (cfiPicker668) NoFunction
          CFI (cfiPicker668) Picker
        LCALL     ?Subroutine95 & 0xFFFF
??CrossCallReturnLabel_153:
        INC       DPTR
        RET
          CFI EndBlock cfiCond665
          CFI EndBlock cfiCond666
          CFI EndBlock cfiCond667
          CFI EndBlock cfiPicker668

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for ZDP_TmpBuf>`:
        DATA16
        DW ZDP_Buf + 1H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_a:
        DD 10

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??fillAndSend::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    fillAndSend

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_SendData::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_SendData

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_NWKAddrOfInterestReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_NWKAddrOfInterestReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_NwkAddrReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_NwkAddrReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_IEEEAddrReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_IEEEAddrReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MatchDescReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MatchDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_SimpleDescReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_SimpleDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_UserDescSet::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_UserDescSet

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_ServerDiscReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_ServerDiscReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_DeviceAnnce::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_DeviceAnnce

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_ParentAnnce::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_ParentAnnce

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zdpProcessAddrReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zdpProcessAddrReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_NodeDescMsg::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_NodeDescMsg

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_PowerDescMsg::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_PowerDescMsg

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_SimpleDescMsg::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_SimpleDescMsg

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_EPRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_EPRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_UserDescRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_UserDescRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_ServerDiscRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_ServerDiscRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_GenericRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_GenericRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_EndDeviceBindReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_EndDeviceBindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_BindUnbindReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_BindUnbindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtNwkDiscReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtNwkDiscReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtDirectJoinReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtDirectJoinReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtPermitJoinReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtPermitJoinReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtLeaveReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtLeaveReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtNwkUpdateReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtNwkUpdateReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtNwkDiscRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtNwkDiscRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtLqiRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtLqiRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtRtgRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtRtgRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtBindRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtBindRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtNwkUpdateNotify::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtNwkUpdateNotify

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_RegisterForZDOMsg::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_RegisterForZDOMsg

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_RemoveRegisteredCB::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_RemoveRegisteredCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_SendMsgCBs::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_SendMsgCBs

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_IncomingData::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_IncomingData

        END
// 2107 
// 2108 /*********************************************************************
// 2109 *********************************************************************/
// 
// 7 407 bytes in segment BANKED_CODE
//   210 bytes in segment BANK_RELAYS
//    81 bytes in segment CODE_C
//     2 bytes in segment XDATA_I
//     2 bytes in segment XDATA_ID
//     4 bytes in segment XDATA_ROM_C
//    85 bytes in segment XDATA_Z
// 
//   293 bytes of CODE     memory
//     0 bytes of CONST    memory (+ 4 bytes shared)
// 7 407 bytes of HUGECODE memory
//    87 bytes of XDATA    memory
//
//Errors: none
//Warnings: none
