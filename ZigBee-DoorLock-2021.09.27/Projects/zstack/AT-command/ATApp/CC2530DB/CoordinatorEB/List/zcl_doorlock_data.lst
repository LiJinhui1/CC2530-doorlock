###############################################################################
#
# IAR C/C++ Compiler V10.30.1.6000 for 8051               23/Nov/2021  10:55:04
# Copyright 2004-2018 IAR Systems AB.
# PC-locked license - IAR Embedded Workbench for 8051
#
#    Core               =  plain
#    Code model         =  banked
#    Data model         =  large
#    Calling convention =  xdata reentrant
#    Constant location  =  data_rom
#    Dptr setup         =  1,16
#                          
#    Source file        =  
#        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\Source\ZCL\zcl_doorlock_data.c
#    Command line       =  
#        -f C:\Users\ADMINI~1\AppData\Local\Temp\EWCEAE.tmp
#        (F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\Source\ZCL\zcl_doorlock_data.c
#        -D ZIGBEEPRO -D INTER_PAN -D DISABLE_GREENPOWER_BASIC_PROXY -D
#        HAL_UART=TRUE -D HAL_UART_ISR=1 -D HAL_UART_DMA=0 -D
#        HAL_UART_ISR_RX_MAX=100 -D SECURE=1 -D TC_LINKKEY_JOIN -D NV_INIT -D
#        NV_RESTORE -D xZTOOL_P1 -D xMT_TASK -D xMT_APP_FUNC -D xMT_SYS_FUNC -D
#        xMT_ZDO_FUNC -D xMT_ZDO_MGMT -D xMT_APP_CNF_FUNC -D LEGACY_LCD_DEBUG
#        -D LCD_SUPPORTED=DEBUG -D MULTICAST_ENABLED=FALSE -D ZCL_READ -D
#        ZCL_WRITE -D ZCL_DISCOVER -D ZCL_BASIC -D ZCL_IDENTIFY -D ZCL_SCENES
#        -D ZCL_GROUPS -D ZCL_REPORT_CONFIGURING_DEVICE -D
#        ZCL_REPORT_DESTINATION_DEVICE -lC
#        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\CoordinatorEB\List
#        -lA
#        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\CoordinatorEB\List
#        --diag_suppress Pe001,Pa010 -o
#        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\CoordinatorEB\Obj
#        -e --debug --core=plain --dptr=16,1 --data_model=large
#        --code_model=banked --calling_convention=xdata_reentrant
#        --place_constants=data_rom --nr_virtual_regs 16 -f
#        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wCoord.cfg
#        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRUE
#        -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8 -DMAC_CFG_RX_MAX=5
#        -DZDO_COORDINATOR -DRTR_NWK) -f
#        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg
#        (-DZIGBEEPRO -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
#        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0xFFFF
#        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
#        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
#        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
#        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
#        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
#        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
#        -DAPS_MAX_GROUPS=10 -DMAX_RTG_ENTRIES=15 -DNWK_MAX_BINDING_ENTRIES=4
#        -DMAX_BINDING_CLUSTER_IDS=4 -DDEFAULT_KEY={0} -DMAC_MAX_FRAME_SIZE=116
#        -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const __code"
#        -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=300
#        -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100 -DREJOIN_POLL_RATE=440
#        -DREJOIN_BACKOFF=900000 -DREJOIN_SCAN=900000) -f
#        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cfg
#        -I
#        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\
#        -I
#        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\Source\
#        -I
#        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\Source\ZCL\
#        -I
#        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\Source\UserAPI\
#        -I
#        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\Source\Controller\
#        -I
#        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\ZMain\TI2530DB\
#        -I
#        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\hal\include\
#        -I
#        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\
#        -I
#        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\mac\include\
#        -I
#        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\mac\high_level\
#        -I
#        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\
#        -I
#        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\
#        -I
#        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\mt\
#        -I
#        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\osal\include\
#        -I
#        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\services\saddr\
#        -I
#        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\services\sdata\
#        -I
#        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\stack\af\
#        -I
#        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\stack\bdb\
#        -I
#        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\stack\gp\
#        -I
#        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\stack\nwk\
#        -I
#        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\stack\sapi\
#        -I
#        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\stack\sec\
#        -I
#        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\stack\sys\
#        -I
#        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\stack\zcl\
#        -I
#        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\stack\zdo\
#        -I
#        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\zmac\
#        -I
#        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\..\..\..\..\..\Components\zmac\f8w\
#        -Ohz --require_prototypes)
#    Locale             =  Chinese (Simplified)_CHN.936
#    List file          =  
#        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\CoordinatorEB\List\zcl_doorlock_data.lst
#    Object file        =  
#        F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\CC2530DB\CoordinatorEB\Obj\zcl_doorlock_data.r51
#
###############################################################################

F:\2workspace\doorlock-CC2530\ZigBee-DoorLock-2021.09.27\Projects\zstack\AT-command\ATApp\Source\ZCL\zcl_doorlock_data.c
      1          /**************************************************************************************************
      2            Filename:       zcl_doorlock_data.c
      3            Author:         Yang Wang
      4          
      5            Revised:        $Date: 2014-05-12 13:14:02 -0700 (Mon, 12 May 2014) $
      6            Revision:       $Revision: 38502 $
      7          
      8            Description:    Zigbee Cluster Library - sample device application.
      9          
     10            Copyright 2006-2014 Texas Instruments Incorporated. All rights reserved.
     11          
     12            IMPORTANT: Your use of this Software is limited to those specific rights
     13            granted under the terms of a software license agreement between the user
     14            who downloaded the software, his/her employer (which must be your employer)
     15            and Texas Instruments Incorporated (the "License").  You may not use this
     16            Software unless you agree to abide by the terms of the License. The License
     17            limits your use, and you acknowledge, that the Software may not be modified,
     18            copied or distributed unless embedded on a Texas Instruments microcontroller
     19            or used solely and exclusively in conjunction with a Texas Instruments radio
     20            frequency transceiver, which is integrated into your product.  Other than for
     21            the foregoing purpose, you may not use, reproduce, copy, prepare derivative
     22            works of, modify, distribute, perform, display or sell this Software and/or
     23            its documentation for any purpose.
     24          
     25            YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
     26            PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
     27            INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
     28            NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
     29            TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
     30            NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
     31            LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
     32            INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
     33            OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
     34            OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
     35            (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
     36          
     37            Should you have any questions regarding your right to use this Software,
     38            contact Texas Instruments Incorporated at www.TI.com.
     39          **************************************************************************************************/
     40          
     41          /*********************************************************************
     42           * INCLUDES
     43           */
     44          #include "ZComDef.h"
     45          #include "OSAL.h"
     46          #include "AF.h"
     47          #include "ZDConfig.h"
     48          
     49          #include "zcl.h"
     50          #include "zcl_general.h"
     51          #include "zcl_closures.h"
     52          #include "zcl_ha.h"
     53          
     54          #include "zcl_doorlock.h"
     55          
     56          /*********************************************************************
     57           * CONSTANTS
     58           */
     59          
     60          #define DOORLOCK_DEVICE_VERSION     0
     61          #define DOORLOCK_FLAGS              0
     62          
     63          #define DOORLOCK_ZCLVERSION         2
     64          #define DOORLOCK_APPVERSION         2
     65          #define DOORLOCK_STACKVERSION       1
     66          #define DOORLOCK_HWVERSION          1
     67          
     68          #define MUFC_LENTH        64
     69          #define MODE_LENTH        64
     70          #define DATE_LENTH        32
     71          /*********************************************************************
     72           * TYPEDEFS
     73           */
     74          
     75          /*********************************************************************
     76           * MACROS
     77           */
     78          
     79          /*********************************************************************
     80           * GLOBAL VARIABLES
     81           */
     82          
     83          // Global attributes
     84          const uint16 zclDoorLock_clusterRevision_all = 0x0001;
     85          
     86          // Basic Cluster
     87          #ifdef ZCL_BASIC
     88          const uint8 zclDoorLock_ZCLVersion = DOORLOCK_ZCLVERSION;
     89          const uint8 zclDoorLock_APPVersion = DOORLOCK_APPVERSION;
     90          const uint8 zclDoorLock_StackVersion = DOORLOCK_STACKVERSION;
     91          const uint8 zclDoorLock_HWRevision[] = { 9, 'D','L','O','C','K','0','4','A','4' };
     92          const uint8 zclDoorLock_ManufacturerName[] = { 9, 'B','a','i','y','a','T','e','c','h' };
     93          const uint8 zclDoorLock_ModelId[] = { 13, 'Z', 'N', 'M', 'S', '-', 'T', 'I', '-', 'Z', 'B', '-', '1', 'A' };
     94          const uint8 zclDoorLock_DateCode[] = { 8, '2','0','2','1','0','9','2','7' };
     95          const uint8 zclDoorLock_PowerSource = POWER_SOURCE_MAINS_1_PHASE;
     96          const uint8 zclDoorLock_SWBuildID[] = {14, '1', '.', '4', '.', '0', '.', '2', '0', '2', '1', '0', '9', '2', '7'};
     97          
     98          //__root const CODE uint8 zclDoorLock_ManufacturerName_Flash[MUFC_LENTH] @ 0x7C000 = { 9, 'B','a','i','y','a','T','e','c','h' };
     99          //__root const CODE uint8 zclDoorLock_ModelId_Flash[MODE_LENTH] @ 0x7C040 = { 13,'B','Y','-','Z','N','M','S','-','Z','B','1','-','A'};
    100          //__root const CODE uint8 zclDoorLock_DateCode_Flash[DATE_LENTH]  @ 0x7C080 = { 16, '2','0','1','9','0','4','1','9',' ',' ',' ',' ',' ',' ',' ',' '};
    101          //__root const CODE uint8 zclDoorLock_HWRevision_Flash @ 0x7C0A0 = DOORLOCK_HWVERSION;
    102          #endif
    103          
    104          // Identify Cluster
    105          uint16 zclDoorLock_IdentifyTime;
    106          
    107          // Doorlock Cluster
    108          uint8 zclDoorLock_LockState; 
    109          uint8 zclDoorLock_LockType = CLOSURES_LOCK_TYPE_DEADBOLT; 
                                              ^
Error[Pe020]: identifier "CLOSURES_LOCK_TYPE_DEADBOLT" is undefined
    110          bool zclDoorLock_ActuatorEnabled = TRUE; 
    111          bool zclDoorLock_SendPinOta = FALSE; 
    112          bool zclDoorLock_RequirePinForRfOperation = TRUE; 
    113          
    114          uint16 zclDoorLock_KeypadOperationEventMask;
    115          uint16 zclDoorLock_RFOperationEventMask;
    116          uint16 zclDoorLock_ManualOperationEventMask;
    117          uint16 zclDoorLock_RFIDOperationEventMask;
    118          
    119          #if ZCL_DISCOVER
    120          CONST zclCommandRec_t zclDoorLock_Cmds[] =
    121          {
    122          #ifdef ZCL_BASIC
    123          {
    124            ZCL_CLUSTER_ID_GEN_BASIC,
    125            COMMAND_BASIC_RESET_FACT_DEFAULT,
    126            CMD_DIR_SERVER_RECEIVED
    127          }
    128          #endif
    129          
    130          #ifdef ZCL_IDENTIFY
    131            ,{
    132              ZCL_CLUSTER_ID_GEN_IDENTIFY,
    133              COMMAND_IDENTIFY,
    134              CMD_DIR_SERVER_RECEIVED
    135            },
    136            {
    137              ZCL_CLUSTER_ID_GEN_IDENTIFY,
    138              COMMAND_IDENTIFY_QUERY,
    139              CMD_DIR_SERVER_RECEIVED
    140            }
    141          #endif // ZCL_IDENTIFY
    142          };
    143          
    144          CONST uint8 zclCmdsArraySize = ( sizeof(zclDoorLock_Cmds) / sizeof(zclDoorLock_Cmds[0]) );
    145          #endif // ZCL_DISCOVER
    146          
    147          /*********************************************************************
    148           * ATTRIBUTE DEFINITIONS - Uses REAL cluster IDs
    149           */
    150          CONST zclAttrRec_t zclDoorLock_Attrs[] =
    151          {
    152          #ifdef ZCL_BASIC
    153            // *** General Basic Cluster Attributes ***
    154            {
    155              ZCL_CLUSTER_ID_GEN_BASIC,   
    156              { // Attribute record
    157                ATTRID_BASIC_ZCL_VERSION,       
    158                ZCL_DATATYPE_UINT8,               
    159                ACCESS_CONTROL_READ,             
    160                (void *)&zclDoorLock_ZCLVersion 
    161              }
    162            },
    163            {
    164              ZCL_CLUSTER_ID_GEN_BASIC,
    165              {  // Attribute record
    166                ATTRID_BASIC_APP_VERSION,
    167                ZCL_DATATYPE_UINT8,
    168                ACCESS_CONTROL_READ,
    169                (void *)&zclDoorLock_APPVersion
    170              }
    171            },
    172            {
    173              ZCL_CLUSTER_ID_GEN_BASIC,
    174              { // Attribute record
    175                ATTRID_BASIC_STACK_VERSION,
    176                ZCL_DATATYPE_UINT8,
    177                ACCESS_CONTROL_READ,
    178                (void *)&zclDoorLock_StackVersion
    179              }
    180            },
    181            {
    182              ZCL_CLUSTER_ID_GEN_BASIC,
    183              {  // Attribute record
    184                ATTRID_BASIC_HW_VERSION,
    185                ZCL_DATATYPE_CHAR_STR,
    186                ACCESS_CONTROL_READ,
    187                (void *)&zclDoorLock_HWRevision
    188              }
    189            },
    190            {
    191              ZCL_CLUSTER_ID_GEN_BASIC,
    192              { // Attribute record
    193                ATTRID_BASIC_MANUFACTURER_NAME,
    194                ZCL_DATATYPE_CHAR_STR,
    195                ACCESS_CONTROL_READ,
    196                (void *)zclDoorLock_ManufacturerName
    197              }
    198            },
    199            {
    200              ZCL_CLUSTER_ID_GEN_BASIC,
    201              { // Attribute record
    202                ATTRID_BASIC_MODEL_ID,
    203                ZCL_DATATYPE_CHAR_STR,
    204                ACCESS_CONTROL_READ,
    205                (void *)zclDoorLock_ModelId
    206              }
    207            },
    208            {
    209              ZCL_CLUSTER_ID_GEN_BASIC,
    210              { // Attribute record
    211                ATTRID_BASIC_DATE_CODE,
    212                ZCL_DATATYPE_CHAR_STR,
    213                ACCESS_CONTROL_READ,
    214                (void *)zclDoorLock_DateCode
    215              }
    216            },
    217            {
    218              ZCL_CLUSTER_ID_GEN_BASIC,
    219              { // Attribute record
    220                ATTRID_BASIC_POWER_SOURCE,
    221                ZCL_DATATYPE_ENUM8,
    222                ACCESS_CONTROL_READ,
    223                (void *)&zclDoorLock_PowerSource
    224              }
    225            },
    226            {
    227              ZCL_CLUSTER_ID_GEN_BASIC,
    228              { // Attribute record
    229                ATTRID_BASIC_SW_BUILD_ID,
    230                ZCL_DATATYPE_CHAR_STR,
    231                ACCESS_CONTROL_READ,
    232                (void *)zclDoorLock_SWBuildID
    233              }
    234            },
    235            {
    236              ZCL_CLUSTER_ID_GEN_BASIC,
    237              {  // Attribute record
    238                ATTRID_CLUSTER_REVISION,
    239                ZCL_DATATYPE_UINT16,
    240                ACCESS_CONTROL_READ | ACCESS_GLOBAL,
    241                (void *)&zclDoorLock_clusterRevision_all
    242              }
    243            },
    244          #endif
    245          
    246          #ifdef ZCL_IDENTIFY
    247            // *** Identify Cluster Attribute ***
    248            {
    249              ZCL_CLUSTER_ID_GEN_IDENTIFY,
    250              { // Attribute record
    251                ATTRID_IDENTIFY_TIME,
    252                ZCL_DATATYPE_UINT16,
    253                (ACCESS_CONTROL_READ | ACCESS_CONTROL_WRITE),
    254                (void *)&zclDoorLock_IdentifyTime
    255              }
    256            },
    257            {
    258              ZCL_CLUSTER_ID_GEN_IDENTIFY,
    259              {  // Attribute record
    260                ATTRID_CLUSTER_REVISION,
    261                ZCL_DATATYPE_UINT16,
    262                ACCESS_CONTROL_READ | ACCESS_GLOBAL,
    263                (void *)&zclDoorLock_clusterRevision_all
    264              }
    265            },
    266          #endif // ZCL_IDENTIFY
    267          
    268          #ifdef ZCL_DOORLOCK
    269            // *** Door Lock Cluster Attributes ***
    270            //Basic Information Attribute Set
    271            {
    272              ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
    273              { // Attribute record
    274                ATTRID_CLOSURES_LOCK_STATE,
    275                ZCL_DATATYPE_ENUM8,
    276                (ACCESS_CONTROL_READ | ACCESS_REPORTABLE),
    277                (void *)&zclDoorLock_LockState
    278              }
    279            },
    280            {
    281              ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
    282              { // Attribute record
    283                ATTRID_CLOSURES_LOCK_TYPE,
    284                ZCL_DATATYPE_ENUM8,
    285                ACCESS_CONTROL_READ,
    286                (void *)&zclDoorLock_LockType
    287              }
    288            },
    289            {
    290              ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
    291              { // Attribute record
    292                ATTRID_CLOSURES_ACTUATOR_ENABLED,
    293                ZCL_DATATYPE_BOOLEAN,
    294                ACCESS_CONTROL_READ,
    295                (void *)&zclDoorLock_ActuatorEnabled
    296              }
    297            },
    298            //User, PIN, Schedule, Log Information Attribute Set
    299            //Operational Settings Attribute Set
    300            //Security Settings Attribute Set
    301            {
    302              ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
    303              { // Attribute record
    304                ATTRID_DOORLOCK_SEND_PIN_OTA,
    305                ZCL_DATATYPE_BOOLEAN,
    306                ACCESS_CONTROL_READ,                
    307                (void *)&zclDoorLock_SendPinOta
    308              }
    309            },
    310            {
    311              ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
    312              { // Attribute record
    313                ATTRID_DOORLOCK_REQUIRE_PIN_FOR_RF_OPERATION,
    314                ZCL_DATATYPE_BOOLEAN,
    315                ACCESS_CONTROL_READ,                   
    316                (void *)&zclDoorLock_RequirePinForRfOperation
    317              }
    318            },
    319            //Alarm and Event Masks Attribute Set
    320            {
    321              ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
    322              { // Attribute record
    323                ATTRID_DOORLOCK_KEYPAD_OPERATION_EVENT_MASK,
    324                ZCL_DATATYPE_BITMAP16,
    325                ACCESS_CONTROL_READ,
    326                (void *)&zclDoorLock_KeypadOperationEventMask
    327              }
    328            },
    329            {
    330              ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
    331              { // Attribute record
    332                ATTRID_DOORLOCK_RF_OPERATION_EVENT_MASK,
    333                ZCL_DATATYPE_BITMAP16,
    334                ACCESS_CONTROL_READ,
    335                (void *)&zclDoorLock_RFOperationEventMask
    336              }
    337            },
    338            {
    339              ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
    340              { // Attribute record
    341                ATTRID_DOORLOCK_MANUAL_OPERATION_EVENT_MASK,
    342                ZCL_DATATYPE_BITMAP16,
    343                ACCESS_CONTROL_READ,
    344                (void *)&zclDoorLock_ManualOperationEventMask
    345              }
    346            },
    347            {
    348              ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
    349              { // Attribute record
    350                ATTRID_DOORLOCK_RFID_OPERATION_EVENT_MASK,
    351                ZCL_DATATYPE_BITMAP16,
    352                ACCESS_CONTROL_READ,
    353                (void *)&zclDoorLock_RFIDOperationEventMask
    354              }
    355            },
    356            //Global Attributes
    357            {
    358              ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK,
    359              {  // Attribute record
    360                ATTRID_CLUSTER_REVISION,
    361                ZCL_DATATYPE_UINT16,
    362                ACCESS_CONTROL_READ | ACCESS_GLOBAL,
    363                (void *)&zclDoorLock_clusterRevision_all
    364              }
    365            }
    366          #endif // ZCL_DOORLOCK
    367          };
    368          
    369          uint8 CONST zclDoorLock_NumAttributes = ( sizeof(zclDoorLock_Attrs) / sizeof(zclDoorLock_Attrs[0]) );
    370          
    371          /*********************************************************************
    372           * SIMPLE DESCRIPTOR
    373           */
    374          // This is the Cluster ID List and should be filled with Application
    375          // specific cluster IDs.
    376          const cId_t DoorLock_InClusterList[] =
    377          {
    378            ZCL_CLUSTER_ID_GEN_BASIC,
    379            ZCL_CLUSTER_ID_GEN_IDENTIFY,
    380            ZCL_CLUSTER_ID_CLOSURES_DOOR_LOCK
    381          };
    382          #define DOORLOCK_MAX_INCLUSTERS   (sizeof(DoorLock_InClusterList) / sizeof(DoorLock_InClusterList[0]))
    383          
    384          SimpleDescriptionFormat_t DoorLock_SimpleDesc =
    385          {
    386            DOORLOCK_ENDPOINT,                      //  int Endpoint;
    387            ZCL_HA_PROFILE_ID,                      //  uint16 AppProfId[2];
    388            ZCL_HA_DEVICEID_HOME_GATEWAY,           //  uint16 AppDeviceId[2];
    389            DOORLOCK_DEVICE_VERSION,                //  int   AppDevVer:4;
    390            DOORLOCK_FLAGS,                         //  int   AppFlags:4;
    391            DOORLOCK_MAX_INCLUSTERS,                //  byte  AppNumInClusters;
    392            (cId_t *)DoorLock_InClusterList,        //  byte *pAppInClusterList;
    393            0,                                      //  byte  AppNumInClusters;
    394            NULL                                    //  byte *pAppInClusterList;
    395          };
    396          
    397          /*********************************************************************
    398           * GLOBAL FUNCTIONS
    399           */
    400          
    401          /*********************************************************************
    402           * LOCAL FUNCTIONS
    403           */
    404          
    405          void zclDoorLock_ResetAttributesToDefaultValues(void)
    406          {
    407          #ifdef ZCL_IDENTIFY
    408            zclDoorLock_IdentifyTime = 0;
    409          #endif
    410          
    411            zclDoorLock_LockState = CLOSURES_LOCK_STATE_LOCKED;
                                           ^
Error[Pe020]: identifier "CLOSURES_LOCK_STATE_LOCKED" is undefined
    412          
    413            zclDoorLock_KeypadOperationEventMask = 0x0004;//0b 0000 0000 0000 0100
    414            zclDoorLock_RFOperationEventMask     = 0x0004;//0b 0000 0000 0000 0100
    415            zclDoorLock_ManualOperationEventMask = 0x0004;//0b 0000 0000 0000 0100
    416            zclDoorLock_RFIDOperationEventMask   = 0x0004;//0b 0000 0000 0000 0100
    417          }
    418          
    419          /****************************************************************************
    420          ****************************************************************************/

Errors: 2
Warnings: none
